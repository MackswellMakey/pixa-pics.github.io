(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{805:function($,n,e){"use strict";$.exports={png_quant:function(n,$,e,i,r){var a=5<arguments.length&&void 0!==arguments[5]?arguments[5]:null,s=new Function("return async function(dataurl, options) {\n        \n            /**\n * Facade for pngquant lib which handles mounting of input file and exposing output file\n * @param  {object}   file     Arraybuffer of image data[png]\n * @param  {object}   options  command line options to be passed to pngquant exec\n * @param  {function} printF   Custom print function to handle stdout logs\n * @return {object}            Object containing processed png image data in 'data' key\n */\n\nfunction pngquant(file, options, printF) {\n\t/* Wrapper around pngquant exec */\n\n\t// This is to handle the case when we call the function without any argument in order to save it\n\t// from google clojure compiler which removes this :p\n\tif(typeof file === 'undefined')\n\t\treturn;\n\n\tvar stdout = \"\";\n\tvar stderr = \"\";\n\n\t/* Default arguments to append -new.png to input file name */\n\tvar args = ['--ext','-new.png'];\n\n\t/* Create command line options to passed using input 'options' object */\n\tfor (var key in options) {\n\t\tif (!options.hasOwnProperty(key)) continue;\n\t\t/* Prepend -- to option key name */\n\t\tif (options[key]) {\n\t\t\targs.push(\"--\" + key);\n\t\t\targs.push(options[key]);\n\t\t}\n\t}\n\n\t/**\n\t * We'll mount input file at MEMFS at input.png to ease up the things since\n\t * only 1 image will be processed at a time\n\t */\n\targs.push(\"/input.png\");\n\n\t/* Creating top level module which will be used by pngqauntjs */\n\tvar Module = {\n\t\t\"print\": printF,\n\t\t\"printErr\": printF,\n\n\t\t/* Mounting input file at input.png at root location */\n\t\t\"preRun\": [function() {\n\t\t\tFS.writeFile(\"/input.png\", file, {\n\t\t\t\tencoding: \"binary\"\n\t\t\t});\n\t\t}],\n\t\t\"arguments\": args,\n\t\t\"ENVIRONMENT\": \"SHELL\" // maximum compatibility?\n\t};\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it, and do the work to get that through\n// closure compiler if necessary. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to do an eval in order to handle the closure compiler\n// case, where this code here is minified but Module was defined\n// elsewhere (e.g. case 4 above). We also need to check if Module\n// already exists (e.g. case 3 above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module;\nif (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nfor (var key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\n// The environment setup code below is customized to use Module.\n// *** Environment setup code ***\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\nif (Module['ENVIRONMENT']) {\n  if (Module['ENVIRONMENT'] === 'WEB') {\n    ENVIRONMENT_IS_WEB = true;\n  } else if (Module['ENVIRONMENT'] === 'WORKER') {\n    ENVIRONMENT_IS_WORKER = true;\n  } else if (Module['ENVIRONMENT'] === 'NODE') {\n    ENVIRONMENT_IS_NODE = true;\n  } else if (Module['ENVIRONMENT'] === 'SHELL') {\n    ENVIRONMENT_IS_SHELL = true;\n  } else {\n    throw new Error('The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');\n  }\n} else {\n  ENVIRONMENT_IS_WEB = typeof window === 'object';\n  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n}\n\n\nif (ENVIRONMENT_IS_NODE) {\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  if (!Module['print']) Module['print'] = console.log;\n  if (!Module['printErr']) Module['printErr'] = console.warn;\n\n  var nodeFS;\n  var nodePath;\n\n  Module['read'] = function read(filename, binary) {\n    if (!nodeFS) nodeFS = require('fs');\n    if (!nodePath) nodePath = require('path');\n    filename = nodePath['normalize'](filename);\n    var ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  Module['readBinary'] = function readBinary(filename) {\n    var ret = Module['read'](filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  Module['load'] = function load(f) {\n    globalEval(read(f));\n  };\n\n  if (!Module['thisProgram']) {\n    if (process['argv'].length > 1) {\n      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');\n    } else {\n      Module['thisProgram'] = 'unknown-program';\n    }\n  }\n\n  Module['arguments'] = process['argv'].slice(2);\n\n  if (typeof module !== 'undefined') {\n    module['exports'] = Module;\n  }\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n}\nelse if (ENVIRONMENT_IS_SHELL) {\n  if (!Module['print']) Module['print'] = print;\n  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm\n\n  if (typeof read != 'undefined') {\n    Module['read'] = read;\n  } else {\n    Module['read'] = function read() { throw 'no read() available' };\n  }\n\n  Module['readBinary'] = function readBinary(f) {\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    var data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    Module['arguments'] = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n}\nelse if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  Module['read'] = function read(url) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  };\n\n  Module['readAsync'] = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n      } else {\n        onerror();\n      }\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  if (typeof arguments != 'undefined') {\n    Module['arguments'] = arguments;\n  }\n\n  if (typeof console !== 'undefined') {\n    if (!Module['print']) Module['print'] = function print(x) {\n      console.log(x);\n    };\n    if (!Module['printErr']) Module['printErr'] = function printErr(x) {\n      console.warn(x);\n    };\n  } else {\n    // Probably a worker, and without console.log. We can do very little here...\n    var TRY_USE_DUMP = false;\n    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== \"undefined\") ? (function(x) {\n      dump(x);\n    }) : (function(x) {\n      // self.postMessage(x); // enable this if you want stdout to be sent as messages\n    }));\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    Module['load'] = importScripts;\n  }\n\n  if (typeof Module['setWindowTitle'] === 'undefined') {\n    Module['setWindowTitle'] = function(title) { document.title = title };\n  }\n}\nelse {\n  // Unreachable because SHELL is dependant on the others\n  throw 'Unknown runtime environment. Where are we?';\n}\n\nfunction globalEval(x) {\n  eval.call(null, x);\n}\nif (!Module['load'] && Module['read']) {\n  Module['load'] = function load(f) {\n    globalEval(Module['read'](f));\n  };\n}\nif (!Module['print']) {\n  Module['print'] = function(){};\n}\nif (!Module['printErr']) {\n  Module['printErr'] = Module['print'];\n}\nif (!Module['arguments']) {\n  Module['arguments'] = [];\n}\nif (!Module['thisProgram']) {\n  Module['thisProgram'] = './this.program';\n}\n\n// *** Environment setup code ***\n\n// Closure helpers\nModule.print = Module['print'];\nModule.printErr = Module['printErr'];\n\n// Callbacks\nModule['preRun'] = [];\nModule['postRun'] = [];\n\n// Merge back in the overrides\nfor (var key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = undefined;\n\n\n\n// {{PREAMBLE_ADDITIONS}}\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n//========================================\n// Runtime code shared with compiler\n//========================================\n\nvar Runtime = {\n  setTempRet0: function (value) {\n    tempRet0 = value;\n  },\n  getTempRet0: function () {\n    return tempRet0;\n  },\n  stackSave: function () {\n    return STACKTOP;\n  },\n  stackRestore: function (stackTop) {\n    STACKTOP = stackTop;\n  },\n  getNativeTypeSize: function (type) {\n    switch (type) {\n      case 'i1': case 'i8': return 1;\n      case 'i16': return 2;\n      case 'i32': return 4;\n      case 'i64': return 8;\n      case 'float': return 4;\n      case 'double': return 8;\n      default: {\n        if (type[type.length-1] === '*') {\n          return Runtime.QUANTUM_SIZE; // A pointer\n        } else if (type[0] === 'i') {\n          var bits = parseInt(type.substr(1));\n          assert(bits % 8 === 0);\n          return bits/8;\n        } else {\n          return 0;\n        }\n      }\n    }\n  },\n  getNativeFieldSize: function (type) {\n    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);\n  },\n  STACK_ALIGN: 16,\n  prepVararg: function (ptr, type) {\n    if (type === 'double' || type === 'i64') {\n      // move so the load is aligned\n      if (ptr & 7) {\n        assert((ptr & 7) === 4);\n        ptr += 4;\n      }\n    } else {\n      assert((ptr & 3) === 0);\n    }\n    return ptr;\n  },\n  getAlignSize: function (type, size, vararg) {\n    // we align i64s and doubles on 64-bit boundaries, unlike x86\n    if (!vararg && (type == 'i64' || type == 'double')) return 8;\n    if (!type) return Math.min(size, 8); // align structures internally to 64 bits\n    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);\n  },\n  dynCall: function (sig, ptr, args) {\n    if (args && args.length) {\n      assert(args.length == sig.length-1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig '' + sig + ''');\n      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n    } else {\n      assert(sig.length == 1);\n      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig '' + sig + ''');\n      return Module['dynCall_' + sig].call(null, ptr);\n    }\n  },\n  functionPointers: [],\n  addFunction: function (func) {\n    for (var i = 0; i < Runtime.functionPointers.length; i++) {\n      if (!Runtime.functionPointers[i]) {\n        Runtime.functionPointers[i] = func;\n        return 2*(1 + i);\n      }\n    }\n    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n  },\n  removeFunction: function (index) {\n    Runtime.functionPointers[(index-2)/2] = null;\n  },\n  warnOnce: function (text) {\n    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};\n    if (!Runtime.warnOnce.shown[text]) {\n      Runtime.warnOnce.shown[text] = 1;\n      Module.printErr(text);\n    }\n  },\n  funcWrappers: {},\n  getFuncWrapper: function (func, sig) {\n    assert(sig);\n    if (!Runtime.funcWrappers[sig]) {\n      Runtime.funcWrappers[sig] = {};\n    }\n    var sigCache = Runtime.funcWrappers[sig];\n    if (!sigCache[func]) {\n      // optimize away arguments usage in common cases\n      if (sig.length === 1) {\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func);\n        };\n      } else if (sig.length === 2) {\n        sigCache[func] = function dynCall_wrapper(arg) {\n          return Runtime.dynCall(sig, func, [arg]);\n        };\n      } else {\n        // general case\n        sigCache[func] = function dynCall_wrapper() {\n          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));\n        };\n      }\n    }\n    return sigCache[func];\n  },\n  getCompilerSetting: function (name) {\n    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';\n  },\n  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },\n  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },\n  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},\n  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },\n  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },\n  GLOBAL_BASE: 8,\n  QUANTUM_SIZE: 4,\n  __dummy__: 0\n}\n\n\n\nModule[\"Runtime\"] = Runtime;\n\n\n\n//========================================\n// Runtime essentials\n//========================================\n\nvar ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()\nvar EXITSTATUS = 0;\n\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\nvar globalScope = this;\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  if (!func) {\n    try { func = eval('_' + ident); } catch(e) {}\n  }\n  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');\n  return func;\n}\n\nvar cwrap, ccall;\n(function(){\n  var JSfuncs = {\n    // Helpers for cwrap -- it can't refer to Runtime directly because it might\n    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find\n    // out what the minified function name is.\n    'stackSave': function() {\n      Runtime.stackSave()\n    },\n    'stackRestore': function() {\n      Runtime.stackRestore()\n    },\n    // type conversion from js to c\n    'arrayToC' : function(arr) {\n      var ret = Runtime.stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    },\n    'stringToC' : function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'\n        var len = (str.length << 2) + 1;\n        ret = Runtime.stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    }\n  };\n  // For fast lookup of conversion functions\n  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};\n\n  // C calling interface.\n  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {\n    var func = getCFunc(ident);\n    var cArgs = [];\n    var stack = 0;\n    assert(returnType !== 'array', 'Return type should not be \"array\".');\n    if (args) {\n      for (var i = 0; i < args.length; i++) {\n        var converter = toC[argTypes[i]];\n        if (converter) {\n          if (stack === 0) stack = Runtime.stackSave();\n          cArgs[i] = converter(args[i]);\n        } else {\n          cArgs[i] = args[i];\n        }\n      }\n    }\n    var ret = func.apply(null, cArgs);\n    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {\n      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');\n    }\n    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');\n    if (returnType === 'string') ret = Pointer_stringify(ret);\n    if (stack !== 0) {\n      if (opts && opts.async) {\n        EmterpreterAsync.asyncFinalizers.push(function() {\n          Runtime.stackRestore(stack);\n        });\n        return;\n      }\n      Runtime.stackRestore(stack);\n    }\n    return ret;\n  }\n\n  var sourceRegex = /^functions*[a-zA-Z$_0-9]*s*(([^)]*))s*{s*([^*]*?)[s;]*(?:returns*(.*?)[;s]*)?}$/;\n  function parseJSFunc(jsfunc) {\n    // Match the body and the return value of a javascript function source\n    var parsed = jsfunc.toString().match(sourceRegex).slice(1);\n    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}\n  }\n\n  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file\n  var JSsource = null;\n  function ensureJSsource() {\n    if (!JSsource) {\n      JSsource = {};\n      for (var fun in JSfuncs) {\n        if (JSfuncs.hasOwnProperty(fun)) {\n          // Elements of toCsource are arrays of three items:\n          // the code, and the return value\n          JSsource[fun] = parseJSFunc(JSfuncs[fun]);\n        }\n      }\n    }\n  }\n\n  cwrap = function cwrap(ident, returnType, argTypes) {\n    argTypes = argTypes || [];\n    var cfunc = getCFunc(ident);\n    // When the function takes numbers and returns a number, we can just return\n    // the original function\n    var numericArgs = argTypes.every(function(type){ return type === 'number'});\n    var numericRet = (returnType !== 'string');\n    if ( numericRet && numericArgs) {\n      return cfunc;\n    }\n    // Creation of the arguments list ([\"$1\",\"$2\",...,\"$nargs\"])\n    var argNames = argTypes.map(function(x,i){return '$'+i});\n    var funcstr = \"(function(\" + argNames.join(',') + \") {\";\n    var nargs = argTypes.length;\n    if (!numericArgs) {\n      // Generate the code needed to convert the arguments from javascript\n      // values to pointers\n      ensureJSsource();\n      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';\n      for (var i = 0; i < nargs; i++) {\n        var arg = argNames[i], type = argTypes[i];\n        if (type === 'number') continue;\n        var convertCode = JSsource[type + 'ToC']; // [code, return]\n        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';\n        funcstr += convertCode.body + ';';\n        funcstr += arg + '=(' + convertCode.returnValue + ');';\n      }\n    }\n\n    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore\n    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;\n    // Call the function\n    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';\n    if (!numericRet) { // Return type can only by 'string' or 'number'\n      // Convert the result to a string\n      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;\n      funcstr += 'ret = ' + strgfy + '(ret);';\n    }\n    funcstr += \"if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }\";\n    if (!numericArgs) {\n      // If we had a stack, restore it\n      ensureJSsource();\n      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';\n    }\n    funcstr += 'return ret})';\n    return eval(funcstr);\n  };\n})();\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\n\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\nModule[\"setValue\"] = setValue;\n\n\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for setValue: ' + type);\n    }\n  return null;\n}\nModule[\"getValue\"] = getValue;\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_STATIC = 2; // Cannot be freed\nvar ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 4; // Do not allocate\nModule[\"ALLOC_NORMAL\"] = ALLOC_NORMAL;\nModule[\"ALLOC_STACK\"] = ALLOC_STACK;\nModule[\"ALLOC_STATIC\"] = ALLOC_STATIC;\nModule[\"ALLOC_DYNAMIC\"] = ALLOC_DYNAMIC;\nModule[\"ALLOC_NONE\"] = ALLOC_NONE;\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var ptr = ret, stop;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(slab, ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    if (typeof curr === 'function') {\n      curr = Runtime.getFunctionIndex(curr);\n    }\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n    assert(type, 'Must know what type to store in allocate!');\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = Runtime.getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\nModule[\"allocate\"] = allocate;\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!staticSealed) return Runtime.staticAlloc(size);\n  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);\n  return _malloc(size);\n}\nModule[\"getMemory\"] = getMemory;\n\nfunction Pointer_stringify(ptr, /* optional */ length) {\n  if (length === 0 || !ptr) return '';\n  // TODO: use TextDecoder\n  // Find the length, and check for UTF while doing so\n  var hasUtf = 0;\n  var t;\n  var i = 0;\n  while (1) {\n    assert(ptr + i < TOTAL_MEMORY);\n    t = HEAPU8[(((ptr)+(i))>>0)];\n    hasUtf |= t;\n    if (t == 0 && !length) break;\n    i++;\n    if (length && i == length) break;\n  }\n  if (!length) length = i;\n\n  var ret = '';\n\n  if (hasUtf < 128) {\n    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack\n    var curr;\n    while (length > 0) {\n      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\n      ret = ret ? ret + curr : curr;\n      ptr += MAX_CHUNK;\n      length -= MAX_CHUNK;\n    }\n    return ret;\n  }\n  return Module['UTF8ToString'](ptr);\n}\nModule[\"Pointer_stringify\"] = Pointer_stringify;\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAP8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\nModule[\"AsciiToString\"] = AsciiToString;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\nModule[\"stringToAscii\"] = stringToAscii;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\nfunction UTF8ArrayToString(u8Array, idx) {\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  while (u8Array[endPtr]) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var u0, u1, u2, u3, u4, u5;\n\n    var str = '';\n    while (1) {\n      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n      u0 = u8Array[idx++];\n      if (!u0) return str;\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u3 = u8Array[idx++] & 63;\n        if ((u0 & 0xF8) == 0xF0) {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;\n        } else {\n          u4 = u8Array[idx++] & 63;\n          if ((u0 & 0xFC) == 0xF8) {\n            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;\n          } else {\n            u5 = u8Array[idx++] & 63;\n            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;\n          }\n        }\n      }\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n}\nModule[\"UTF8ArrayToString\"] = UTF8ArrayToString;\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction UTF8ToString(ptr) {\n  return UTF8ArrayToString(HEAPU8,ptr);\n}\nModule[\"UTF8ToString\"] = UTF8ToString;\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x1FFFFF) {\n      if (outIdx + 3 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0x3FFFFFF) {\n      if (outIdx + 4 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF8 | (u >> 24);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 5 >= endIdx) break;\n      outU8Array[outIdx++] = 0xFC | (u >> 30);\n      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\nModule[\"stringToUTF8Array\"] = stringToUTF8Array;\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\nModule[\"stringToUTF8\"] = stringToUTF8;\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) {\n      ++len;\n    } else if (u <= 0x7FF) {\n      len += 2;\n    } else if (u <= 0xFFFF) {\n      len += 3;\n    } else if (u <= 0x1FFFFF) {\n      len += 4;\n    } else if (u <= 0x3FFFFFF) {\n      len += 5;\n    } else {\n      len += 6;\n    }\n  }\n  return len;\n}\nModule[\"lengthBytesUTF8\"] = lengthBytesUTF8;\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\n\nfunction UTF32ToString(ptr) {\n  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n\nfunction demangle(func) {\n  var hasLibcxxabi = !!Module['___cxa_demangle'];\n  if (hasLibcxxabi) {\n    try {\n      var s = func.substr(1);\n      var len = lengthBytesUTF8(s)+1;\n      var buf = _malloc(len);\n      stringToUTF8(s, buf, len);\n      var status = _malloc(4);\n      var ret = Module['___cxa_demangle'](buf, 0, 0, status);\n      if (getValue(status, 'i32') === 0 && ret) {\n        return Pointer_stringify(ret);\n      }\n      // otherwise, libcxxabi failed\n    } catch(e) {\n      // ignore problems here\n    } finally {\n      if (buf) _free(buf);\n      if (status) _free(status);\n      if (ret) _free(ret);\n    }\n    // failure when using libcxxabi, don't demangle\n    return func;\n  }\n  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\n  return func;\n}\n\nfunction demangleAll(text) {\n  return text.replace(/__Z[wd_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });\n}\n\nfunction jsStackTrace() {\n  var err = new Error();\n  if (!err.stack) {\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n    // so try that as a special-case.\n    try {\n      throw new Error(0);\n    } catch(e) {\n      err = e;\n    }\n    if (!err.stack) {\n      return '(no stack trace available)';\n    }\n  }\n  return err.stack.toString();\n}\n\nfunction stackTrace() {\n  var js = jsStackTrace();\n  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();\n  return demangleAll(js);\n}\nModule[\"stackTrace\"] = stackTrace;\n\n// Memory management\n\nvar PAGE_SIZE = 4096;\n\nfunction alignMemoryPage(x) {\n  if (x % 4096 > 0) {\n    x += (4096 - (x % 4096));\n  }\n  return x;\n}\n\nvar HEAP;\nvar buffer;\nvar HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBuffer(buf) {\n  Module['buffer'] = buffer = buf;\n}\n\nfunction updateGlobalBufferViews() {\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\n}\n\nvar STATIC_BASE, STATICTOP, staticSealed; // static area\nvar STACK_BASE, STACKTOP, STACK_MAX; // stack area\nvar DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk\n\n  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;\n  staticSealed = false;\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  assert((STACK_MAX & 3) == 0);\n  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;\n  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;\n}\n\nfunction checkStackCookie() {\n  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));\n  }\n  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.\n  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';\n}\n\nfunction abortStackOverflow(allocSize) {\n  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - asm.stackSave() + allocSize) + ' bytes available!');\n}\n\nfunction abortOnCannotGrowMemory() {\n  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\n}\n\n\nfunction enlargeMemory() {\n  abortOnCannotGrowMemory();\n}\n\n\nvar TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;\nvar TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 335544323;\n\nvar WASM_PAGE_SIZE = 64 * 1024;\n\nvar totalMemory = WASM_PAGE_SIZE;\nwhile (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {\n  if (totalMemory < 16*1024*1024) {\n    totalMemory *= 2;\n  } else {\n    totalMemory += 16*1024*1024;\n  }\n}\nif (totalMemory !== TOTAL_MEMORY) {\n  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');\n  TOTAL_MEMORY = totalMemory;\n}\n\n// Initialize the runtime's memory\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),\n       'JS engine does not provide full typed array support');\n\n\n\n// Use a provided buffer, if there is one, or else allocate a new one\nif (Module['buffer']) {\n  buffer = Module['buffer'];\n  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);\n} else {\n  // Use a WebAssembly memory where available\n  {\n    buffer = new ArrayBuffer(TOTAL_MEMORY);\n  }\n  assert(buffer.byteLength === TOTAL_MEMORY);\n}\nupdateGlobalBufferViews();\n\n\nfunction getTotalMemory() {\n  return TOTAL_MEMORY;\n}\n\n// Endianness check (note: assumes compiler arch was little-endian)\n  HEAP32[0] = 0x63736d65; /* 'emsc' */\nHEAP16[1] = 0x6373;\nif (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';\n\nModule['HEAP'] = HEAP;\nModule['buffer'] = buffer;\nModule['HEAP8'] = HEAP8;\nModule['HEAP16'] = HEAP16;\nModule['HEAP32'] = HEAP32;\nModule['HEAPU8'] = HEAPU8;\nModule['HEAPU16'] = HEAPU16;\nModule['HEAPU32'] = HEAPU32;\nModule['HEAPF32'] = HEAPF32;\nModule['HEAPF64'] = HEAPF64;\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Runtime.dynCall('v', func);\n      } else {\n        Runtime.dynCall('vi', func, [callback.arg]);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the runtime has exited\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n  // compatibility - merge in anything from Module['preRun'] at this time\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction ensureInitRuntime() {\n  checkStackCookie();\n  if (runtimeInitialized) return;\n  runtimeInitialized = true;\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  checkStackCookie();\n  callRuntimeCallbacks(__ATEXIT__);\n  runtimeExited = true;\n}\n\nfunction postRun() {\n  checkStackCookie();\n  // compatibility - merge in anything from Module['postRun'] at this time\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\nModule[\"addOnPreRun\"] = addOnPreRun;\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\nModule[\"addOnInit\"] = addOnInit;\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\nModule[\"addOnPreMain\"] = addOnPreMain;\n\nfunction addOnExit(cb) {\n  __ATEXIT__.unshift(cb);\n}\nModule[\"addOnExit\"] = addOnExit;\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\nModule[\"addOnPostRun\"] = addOnPostRun;\n\n// Tools\n\n\nfunction intArrayFromString(stringy, dontAddNull, length /* optional */) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\nModule[\"intArrayFromString\"] = intArrayFromString;\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\nModule[\"intArrayToString\"] = intArrayToString;\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var lastChar, end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\nModule[\"writeStringToMemory\"] = writeStringToMemory;\n\nfunction writeArrayToMemory(array, buffer) {\n  HEAP8.set(array, buffer);    \n}\nModule[\"writeArrayToMemory\"] = writeArrayToMemory;\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\nModule[\"writeAsciiToMemory\"] = writeAsciiToMemory;\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )\nif (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {\n  var ah  = a >>> 16;\n  var al = a & 0xffff;\n  var bh  = b >>> 16;\n  var bl = b & 0xffff;\n  return (al*bl + ((ah*bl + al*bh) << 16))|0;\n};\nMath.imul = Math['imul'];\n\n\nif (!Math['clz32']) Math['clz32'] = function(x) {\n  x = x >>> 0;\n  for (var i = 0; i < 32; i++) {\n    if (x & (1 << (31 - i))) return i;\n  }\n  return 32;\n};\nMath.clz32 = Math['clz32']\n\nif (!Math['trunc']) Math['trunc'] = function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n};\nMath.trunc = Math['trunc'];\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// PRE_RUN_ADDITIONS (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            Module.printErr('still waiting on run dependencies:');\n          }\n          Module.printErr('dependency: ' + dep);\n        }\n        if (shown) {\n          Module.printErr('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    Module.printErr('warning: run dependency added without ID');\n  }\n}\nModule[\"addRunDependency\"] = addRunDependency;\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    Module.printErr('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\nModule[\"removeRunDependency\"] = removeRunDependency;\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\n\nvar memoryInitializer = null;\n\n\n\n\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\nSTATIC_BASE = 8;\n\nSTATICTOP = STATIC_BASE + 33952;\n  /* global initializers */  __ATINIT__.push();\n  \n\n/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,66,69,0,0,70,69,0,0,80,69,0,0,86,69,0,0,96,69,0,0,70,69,0,0,103,69,0,0,86,69,0,0,112,69,0,0,86,69,0,0,121,69,0,0,128,69,0,0,136,69,0,0,145,69,0,0,156,69,0,0,165,69,0,0,175,69,0,0,182,69,0,0,190,69,0,0,182,69,0,0,201,69,0,0,165,69,0,0,210,69,0,0,216,69,0,0,223,69,0,0,232,69,0,0,242,69,0,0,247,69,0,0,253,69,0,0,4,70,0,0,186,68,0,0,0,0,0,0,0,0,0,0,118,0,0,0,194,68,0,0,0,0,0,0,0,0,0,0,113,0,0,0,200,68,0,0,0,0,0,0,0,0,0,0,102,0,0,0,206,68,0,0,0,0,0,0,0,0,0,0,4,0,0,0,215,68,0,0,2,0,0,0,0,0,0,0,1,0,0,0,221,68,0,0,0,0,0,0,0,0,0,0,2,0,0,0,229,68,0,0,0,0,0,0,0,0,0,0,2,0,0,0,234,68,0,0,0,0,0,0,0,0,0,0,5,0,0,0,240,68,0,0,0,0,0,0,0,0,0,0,6,0,0,0,249,68,0,0,1,0,0,0,0,0,0,0,3,0,0,0,253,68,0,0,0,0,0,0,0,0,0,0,9,0,0,0,12,69,0,0,1,0,0,0,0,0,0,0,111,0,0,0,19,69,0,0,1,0,0,0,0,0,0,0,115,0,0,0,25,69,0,0,1,0,0,0,0,0,0,0,81,0,0,0,33,69,0,0,1,0,0,0,0,0,0,0,8,0,0,0,43,69,0,0,0,0,0,0,0,0,0,0,10,0,0,0,49,69,0,0,1,0,0,0,0,0,0,0,7,0,0,0,53,69,0,0,0,0,0,0,0,0,0,0,86,0,0,0,61,69,0,0,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,232,128,0,0,48,117,0,0,96,234,0,0,152,58,0,0,112,23,0,0,38,122,0,0,132,128,0,0,23,161,0,0,16,83,0,0,141,7,0,0,174,139,0,0,93,23,1,0,143,46,0,0,128,70,0,0,51,28,0,0,77,115,1,0,246,217,63,10,185,114,135,59,232,11,0,0,222,61,248,41,174,85,242,175,228,250,66,120,13,57,131,202,1,0,0,0,225,229,9,73,33,187,126,66,236,11,0,0,55,214,91,201,59,138,93,233,153,143,243,13,137,3,50,193,1,0,1,0,161,68,33,253,174,216,111,48,60,238,0,0,120,51,102,252,107,136,226,55,131,233,114,253,184,241,40,130,1,0,0,0,210,53,156,32,18,120,239,187,32,238,0,0,191,42,86,52,6,205,76,153,33,87,44,109,93,140,214,208,1,0,0,0,98,215,84,160,206,41,81,93,208,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,251,243,132,247,82,165,46,24,72,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,252,243,152,3,109,82,158,242,72,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,240,240,240,240,204,204,204,204,170,170,170,170,0,255,0,255,240,240,240,240,204,204,204,204,0,0,255,255,0,255,0,255,240,240,240,240,15,15,15,15,51,51,51,51,85,85,85,85,0,255,0,255,15,15,15,15,51,51,51,51,0,0,255,255,0,255,0,255,15,15,15,15,1,1,1,1,16,16,16,16,17,17,17,17,68,68,68,68,85,85,85,85,170,170,170,170,3,0,3,0,0,3,0,3,3,3,3,3,48,48,48,48,51,51,51,51,204,204,204,204,15,0,0,0,0,0,15,0,15,0,15,0,0,15,0,15,15,15,15,15,240,240,240,240,128,128,128,128,8,8,8,8,136,136,136,136,34,34,34,34,170,170,170,170,85,85,85,85,192,0,192,0,0,192,0,192,192,192,192,192,12,12,12,12,204,204,204,204,51,51,51,51,240,0,0,0,0,0,240,0,240,0,240,0,0,240,0,240,240,240,240,240,15,15,15,15,0,0,0,0,150,48,7,119,44,97,14,238,186,81,9,153,25,196,109,7,143,244,106,112,53,165,99,233,163,149,100,158,50,136,219,14,164,184,220,121,30,233,213,224,136,217,210,151,43,76,182,9,189,124,177,126,7,45,184,231,145,29,191,144,100,16,183,29,242,32,176,106,72,113,185,243,222,65,190,132,125,212,218,26,235,228,221,109,81,181,212,244,199,133,211,131,86,152,108,19,192,168,107,100,122,249,98,253,236,201,101,138,79,92,1,20,217,108,6,99,99,61,15,250,245,13,8,141,200,32,110,59,94,16,105,76,228,65,96,213,114,113,103,162,209,228,3,60,71,212,4,75,253,133,13,210,107,181,10,165,250,168,181,53,108,152,178,66,214,201,187,219,64,249,188,172,227,108,216,50,117,92,223,69,207,13,214,220,89,61,209,171,172,48,217,38,58,0,222,81,128,81,215,200,22,97,208,191,181,244,180,33,35,196,179,86,153,149,186,207,15,165,189,184,158,184,2,40,8,136,5,95,178,217,12,198,36,233,11,177,135,124,111,47,17,76,104,88,171,29,97,193,61,45,102,182,144,65,220,118,6,113,219,1,188,32,210,152,42,16,213,239,137,133,177,113,31,181,182,6,165,228,191,159,51,212,184,232,162,201,7,120,52,249,0,15,142,168,9,150,24,152,14,225,187,13,106,127,45,61,109,8,151,108,100,145,1,92,99,230,244,81,107,107,98,97,108,28,216,48,101,133,78,0,98,242,237,149,6,108,123,165,1,27,193,244,8,130,87,196,15,245,198,217,176,101,80,233,183,18,234,184,190,139,124,136,185,252,223,29,221,98,73,45,218,21,243,124,211,140,101,76,212,251,88,97,178,77,206,81,181,58,116,0,188,163,226,48,187,212,65,165,223,74,215,149,216,61,109,196,209,164,251,244,214,211,106,233,105,67,252,217,110,52,70,136,103,173,208,184,96,218,115,45,4,68,229,29,3,51,95,76,10,170,201,124,13,221,60,113,5,80,170,65,2,39,16,16,11,190,134,32,12,201,37,181,104,87,179,133,111,32,9,212,102,185,159,228,97,206,14,249,222,94,152,201,217,41,34,152,208,176,180,168,215,199,23,61,179,89,129,13,180,46,59,92,189,183,173,108,186,192,32,131,184,237,182,179,191,154,12,226,182,3,154,210,177,116,57,71,213,234,175,119,210,157,21,38,219,4,131,22,220,115,18,11,99,227,132,59,100,148,62,106,109,13,168,90,106,122,11,207,14,228,157,255,9,147,39,174,0,10,177,158,7,125,68,147,15,240,210,163,8,135,104,242,1,30,254,194,6,105,93,87,98,247,203,103,101,128,113,54,108,25,231,6,107,110,118,27,212,254,224,43,211,137,90,122,218,16,204,74,221,103,111,223,185,249,249,239,190,142,67,190,183,23,213,142,176,96,232,163,214,214,126,147,209,161,196,194,216,56,82,242,223,79,241,103,187,209,103,87,188,166,221,6,181,63,75,54,178,72,218,43,13,216,76,27,10,175,246,74,3,54,96,122,4,65,195,239,96,223,85,223,103,168,239,142,110,49,121,190,105,70,140,179,97,203,26,131,102,188,160,210,111,37,54,226,104,82,149,119,12,204,3,71,11,187,185,22,2,34,47,38,5,85,190,59,186,197,40,11,189,178,146,90,180,43,4,106,179,92,167,255,215,194,49,207,208,181,139,158,217,44,29,174,222,91,176,194,100,155,38,242,99,236,156,163,106,117,10,147,109,2,169,6,9,156,63,54,14,235,133,103,7,114,19,87,0,5,130,74,191,149,20,122,184,226,174,43,177,123,56,27,182,12,155,142,210,146,13,190,213,229,183,239,220,124,33,223,219,11,212,210,211,134,66,226,212,241,248,179,221,104,110,131,218,31,205,22,190,129,91,38,185,246,225,119,176,111,119,71,183,24,230,90,8,136,112,106,15,255,202,59,6,102,92,11,1,17,255,158,101,143,105,174,98,248,211,255,107,97,69,207,108,22,120,226,10,160,238,210,13,215,84,131,4,78,194,179,3,57,97,38,103,167,247,22,96,208,77,71,105,73,219,119,110,62,74,106,209,174,220,90,214,217,102,11,223,64,240,59,216,55,83,174,188,169,197,158,187,222,127,207,178,71,233,255,181,48,28,242,189,189,138,194,186,202,48,147,179,83,166,163,180,36,5,54,208,186,147,6,215,205,41,87,222,84,191,103,217,35,46,122,102,179,184,74,97,196,2,27,104,93,148,43,111,42,55,190,11,180,161,142,12,195,27,223,5,90,141,239,2,45,0,0,0,0,65,49,27,25,130,98,54,50,195,83,45,43,4,197,108,100,69,244,119,125,134,167,90,86,199,150,65,79,8,138,217,200,73,187,194,209,138,232,239,250,203,217,244,227,12,79,181,172,77,126,174,181,142,45,131,158,207,28,152,135,81,18,194,74,16,35,217,83,211,112,244,120,146,65,239,97,85,215,174,46,20,230,181,55,215,181,152,28,150,132,131,5,89,152,27,130,24,169,0,155,219,250,45,176,154,203,54,169,93,93,119,230,28,108,108,255,223,63,65,212,158,14,90,205,162,36,132,149,227,21,159,140,32,70,178,167,97,119,169,190,166,225,232,241,231,208,243,232,36,131,222,195,101,178,197,218,170,174,93,93,235,159,70,68,40,204,107,111,105,253,112,118,174,107,49,57,239,90,42,32,44,9,7,11,109,56,28,18,243,54,70,223,178,7,93,198,113,84,112,237,48,101,107,244,247,243,42,187,182,194,49,162,117,145,28,137,52,160,7,144,251,188,159,23,186,141,132,14,121,222,169,37,56,239,178,60,255,121,243,115,190,72,232,106,125,27,197,65,60,42,222,88,5,79,121,240,68,126,98,233,135,45,79,194,198,28,84,219,1,138,21,148,64,187,14,141,131,232,35,166,194,217,56,191,13,197,160,56,76,244,187,33,143,167,150,10,206,150,141,19,9,0,204,92,72,49,215,69,139,98,250,110,202,83,225,119,84,93,187,186,21,108,160,163,214,63,141,136,151,14,150,145,80,152,215,222,17,169,204,199,210,250,225,236,147,203,250,245,92,215,98,114,29,230,121,107,222,181,84,64,159,132,79,89,88,18,14,22,25,35,21,15,218,112,56,36,155,65,35,61,167,107,253,101,230,90,230,124,37,9,203,87,100,56,208,78,163,174,145,1,226,159,138,24,33,204,167,51,96,253,188,42,175,225,36,173,238,208,63,180,45,131,18,159,108,178,9,134,171,36,72,201,234,21,83,208,41,70,126,251,104,119,101,226,246,121,63,47,183,72,36,54,116,27,9,29,53,42,18,4,242,188,83,75,179,141,72,82,112,222,101,121,49,239,126,96,254,243,230,231,191,194,253,254,124,145,208,213,61,160,203,204,250,54,138,131,187,7,145,154,120,84,188,177,57,101,167,168,75,152,131,59,10,169,152,34,201,250,181,9,136,203,174,16,79,93,239,95,14,108,244,70,205,63,217,109,140,14,194,116,67,18,90,243,2,35,65,234,193,112,108,193,128,65,119,216,71,215,54,151,6,230,45,142,197,181,0,165,132,132,27,188,26,138,65,113,91,187,90,104,152,232,119,67,217,217,108,90,30,79,45,21,95,126,54,12,156,45,27,39,221,28,0,62,18,0,152,185,83,49,131,160,144,98,174,139,209,83,181,146,22,197,244,221,87,244,239,196,148,167,194,239,213,150,217,246,233,188,7,174,168,141,28,183,107,222,49,156,42,239,42,133,237,121,107,202,172,72,112,211,111,27,93,248,46,42,70,225,225,54,222,102,160,7,197,127,99,84,232,84,34,101,243,77,229,243,178,2,164,194,169,27,103,145,132,48,38,160,159,41,184,174,197,228,249,159,222,253,58,204,243,214,123,253,232,207,188,107,169,128,253,90,178,153,62,9,159,178,127,56,132,171,176,36,28,44,241,21,7,53,50,70,42,30,115,119,49,7,180,225,112,72,245,208,107,81,54,131,70,122,119,178,93,99,78,215,250,203,15,230,225,210,204,181,204,249,141,132,215,224,74,18,150,175,11,35,141,182,200,112,160,157,137,65,187,132,70,93,35,3,7,108,56,26,196,63,21,49,133,14,14,40,66,152,79,103,3,169,84,126,192,250,121,85,129,203,98,76,31,197,56,129,94,244,35,152,157,167,14,179,220,150,21,170,27,0,84,229,90,49,79,252,153,98,98,215,216,83,121,206,23,79,225,73,86,126,250,80,149,45,215,123,212,28,204,98,19,138,141,45,82,187,150,52,145,232,187,31,208,217,160,6,236,243,126,94,173,194,101,71,110,145,72,108,47,160,83,117,232,54,18,58,169,7,9,35,106,84,36,8,43,101,63,17,228,121,167,150,165,72,188,143,102,27,145,164,39,42,138,189,224,188,203,242,161,141,208,235,98,222,253,192,35,239,230,217,189,225,188,20,252,208,167,13,63,131,138,38,126,178,145,63,185,36,208,112,248,21,203,105,59,70,230,66,122,119,253,91,181,107,101,220,244,90,126,197,55,9,83,238,118,56,72,247,177,174,9,184,240,159,18,161,51,204,63,138,114,253,36,147,0,0,0,0,55,106,194,1,110,212,132,3,89,190,70,2,220,168,9,7,235,194,203,6,178,124,141,4,133,22,79,5,184,81,19,14,143,59,209,15,214,133,151,13,225,239,85,12,100,249,26,9,83,147,216,8,10,45,158,10,61,71,92,11,112,163,38,28,71,201,228,29,30,119,162,31,41,29,96,30,172,11,47,27,155,97,237,26,194,223,171,24,245,181,105,25,200,242,53,18,255,152,247,19,166,38,177,17,145,76,115,16,20,90,60,21,35,48,254,20,122,142,184,22,77,228,122,23,224,70,77,56,215,44,143,57,142,146,201,59,185,248,11,58,60,238,68,63,11,132,134,62,82,58,192,60,101,80,2,61,88,23,94,54,111,125,156,55,54,195,218,53,1,169,24,52,132,191,87,49,179,213,149,48,234,107,211,50,221,1,17,51,144,229,107,36,167,143,169,37,254,49,239,39,201,91,45,38,76,77,98,35,123,39,160,34,34,153,230,32,21,243,36,33,40,180,120,42,31,222,186,43,70,96,252,41,113,10,62,40,244,28,113,45,195,118,179,44,154,200,245,46,173,162,55,47,192,141,154,112,247,231,88,113,174,89,30,115,153,51,220,114,28,37,147,119,43,79,81,118,114,241,23,116,69,155,213,117,120,220,137,126,79,182,75,127,22,8,13,125,33,98,207,124,164,116,128,121,147,30,66,120,202,160,4,122,253,202,198,123,176,46,188,108,135,68,126,109,222,250,56,111,233,144,250,110,108,134,181,107,91,236,119,106,2,82,49,104,53,56,243,105,8,127,175,98,63,21,109,99,102,171,43,97,81,193,233,96,212,215,166,101,227,189,100,100,186,3,34,102,141,105,224,103,32,203,215,72,23,161,21,73,78,31,83,75,121,117,145,74,252,99,222,79,203,9,28,78,146,183,90,76,165,221,152,77,152,154,196,70,175,240,6,71,246,78,64,69,193,36,130,68,68,50,205,65,115,88,15,64,42,230,73,66,29,140,139,67,80,104,241,84,103,2,51,85,62,188,117,87,9,214,183,86,140,192,248,83,187,170,58,82,226,20,124,80,213,126,190,81,232,57,226,90,223,83,32,91,134,237,102,89,177,135,164,88,52,145,235,93,3,251,41,92,90,69,111,94,109,47,173,95,128,27,53,225,183,113,247,224,238,207,177,226,217,165,115,227,92,179,60,230,107,217,254,231,50,103,184,229,5,13,122,228,56,74,38,239,15,32,228,238,86,158,162,236,97,244,96,237,228,226,47,232,211,136,237,233,138,54,171,235,189,92,105,234,240,184,19,253,199,210,209,252,158,108,151,254,169,6,85,255,44,16,26,250,27,122,216,251,66,196,158,249,117,174,92,248,72,233,0,243,127,131,194,242,38,61,132,240,17,87,70,241,148,65,9,244,163,43,203,245,250,149,141,247,205,255,79,246,96,93,120,217,87,55,186,216,14,137,252,218,57,227,62,219,188,245,113,222,139,159,179,223,210,33,245,221,229,75,55,220,216,12,107,215,239,102,169,214,182,216,239,212,129,178,45,213,4,164,98,208,51,206,160,209,106,112,230,211,93,26,36,210,16,254,94,197,39,148,156,196,126,42,218,198,73,64,24,199,204,86,87,194,251,60,149,195,162,130,211,193,149,232,17,192,168,175,77,203,159,197,143,202,198,123,201,200,241,17,11,201,116,7,68,204,67,109,134,205,26,211,192,207,45,185,2,206,64,150,175,145,119,252,109,144,46,66,43,146,25,40,233,147,156,62,166,150,171,84,100,151,242,234,34,149,197,128,224,148,248,199,188,159,207,173,126,158,150,19,56,156,161,121,250,157,36,111,181,152,19,5,119,153,74,187,49,155,125,209,243,154,48,53,137,141,7,95,75,140,94,225,13,142,105,139,207,143,236,157,128,138,219,247,66,139,130,73,4,137,181,35,198,136,136,100,154,131,191,14,88,130,230,176,30,128,209,218,220,129,84,204,147,132,99,166,81,133,58,24,23,135,13,114,213,134,160,208,226,169,151,186,32,168,206,4,102,170,249,110,164,171,124,120,235,174,75,18,41,175,18,172,111,173,37,198,173,172,24,129,241,167,47,235,51,166,118,85,117,164,65,63,183,165,196,41,248,160,243,67,58,161,170,253,124,163,157,151,190,162,208,115,196,181,231,25,6,180,190,167,64,182,137,205,130,183,12,219,205,178,59,177,15,179,98,15,73,177,85,101,139,176,104,34,215,187,95,72,21,186,6,246,83,184,49,156,145,185,180,138,222,188,131,224,28,189,218,94,90,191,237,52,152,190,0,0,0,0,101,103,188,184,139,200,9,170,238,175,181,18,87,151,98,143,50,240,222,55,220,95,107,37,185,56,215,157,239,40,180,197,138,79,8,125,100,224,189,111,1,135,1,215,184,191,214,74,221,216,106,242,51,119,223,224,86,16,99,88,159,87,25,80,250,48,165,232,20,159,16,250,113,248,172,66,200,192,123,223,173,167,199,103,67,8,114,117,38,111,206,205,112,127,173,149,21,24,17,45,251,183,164,63,158,208,24,135,39,232,207,26,66,143,115,162,172,32,198,176,201,71,122,8,62,175,50,160,91,200,142,24,181,103,59,10,208,0,135,178,105,56,80,47,12,95,236,151,226,240,89,133,135,151,229,61,209,135,134,101,180,224,58,221,90,79,143,207,63,40,51,119,134,16,228,234,227,119,88,82,13,216,237,64,104,191,81,248,161,248,43,240,196,159,151,72,42,48,34,90,79,87,158,226,246,111,73,127,147,8,245,199,125,167,64,213,24,192,252,109,78,208,159,53,43,183,35,141,197,24,150,159,160,127,42,39,25,71,253,186,124,32,65,2,146,143,244,16,247,232,72,168,61,88,20,155,88,63,168,35,182,144,29,49,211,247,161,137,106,207,118,20,15,168,202,172,225,7,127,190,132,96,195,6,210,112,160,94,183,23,28,230,89,184,169,244,60,223,21,76,133,231,194,209,224,128,126,105,14,47,203,123,107,72,119,195,162,15,13,203,199,104,177,115,41,199,4,97,76,160,184,217,245,152,111,68,144,255,211,252,126,80,102,238,27,55,218,86,77,39,185,14,40,64,5,182,198,239,176,164,163,136,12,28,26,176,219,129,127,215,103,57,145,120,210,43,244,31,110,147,3,247,38,59,102,144,154,131,136,63,47,145,237,88,147,41,84,96,68,180,49,7,248,12,223,168,77,30,186,207,241,166,236,223,146,254,137,184,46,70,103,23,155,84,2,112,39,236,187,72,240,113,222,47,76,201,48,128,249,219,85,231,69,99,156,160,63,107,249,199,131,211,23,104,54,193,114,15,138,121,203,55,93,228,174,80,225,92,64,255,84,78,37,152,232,246,115,136,139,174,22,239,55,22,248,64,130,4,157,39,62,188,36,31,233,33,65,120,85,153,175,215,224,139,202,176,92,51,59,182,89,237,94,209,229,85,176,126,80,71,213,25,236,255,108,33,59,98,9,70,135,218,231,233,50,200,130,142,142,112,212,158,237,40,177,249,81,144,95,86,228,130,58,49,88,58,131,9,143,167,230,110,51,31,8,193,134,13,109,166,58,181,164,225,64,189,193,134,252,5,47,41,73,23,74,78,245,175,243,118,34,50,150,17,158,138,120,190,43,152,29,217,151,32,75,201,244,120,46,174,72,192,192,1,253,210,165,102,65,106,28,94,150,247,121,57,42,79,151,150,159,93,242,241,35,229,5,25,107,77,96,126,215,245,142,209,98,231,235,182,222,95,82,142,9,194,55,233,181,122,217,70,0,104,188,33,188,208,234,49,223,136,143,86,99,48,97,249,214,34,4,158,106,154,189,166,189,7,216,193,1,191,54,110,180,173,83,9,8,21,154,78,114,29,255,41,206,165,17,134,123,183,116,225,199,15,205,217,16,146,168,190,172,42,70,17,25,56,35,118,165,128,117,102,198,216,16,1,122,96,254,174,207,114,155,201,115,202,34,241,164,87,71,150,24,239,169,57,173,253,204,94,17,69,6,238,77,118,99,137,241,206,141,38,68,220,232,65,248,100,81,121,47,249,52,30,147,65,218,177,38,83,191,214,154,235,233,198,249,179,140,161,69,11,98,14,240,25,7,105,76,161,190,81,155,60,219,54,39,132,53,153,146,150,80,254,46,46,153,185,84,38,252,222,232,158,18,113,93,140,119,22,225,52,206,46,54,169,171,73,138,17,69,230,63,3,32,129,131,187,118,145,224,227,19,246,92,91,253,89,233,73,152,62,85,241,33,6,130,108,68,97,62,212,170,206,139,198,207,169,55,126,56,65,127,214,93,38,195,110,179,137,118,124,214,238,202,196,111,214,29,89,10,177,161,225,228,30,20,243,129,121,168,75,215,105,203,19,178,14,119,171,92,161,194,185,57,198,126,1,128,254,169,156,229,153,21,36,11,54,160,54,110,81,28,142,167,22,102,134,194,113,218,62,44,222,111,44,73,185,211,148,240,129,4,9,149,230,184,177,123,73,13,163,30,46,177,27,72,62,210,67,45,89,110,251,195,246,219,233,166,145,103,81,31,169,176,204,122,206,12,116,148,97,185,102,241,6,5,222,0,0,0,0,119,7,48,150,238,14,97,44,153,9,81,186,7,109,196,25,112,106,244,143,233,99,165,53,158,100,149,163,14,219,136,50,121,220,184,164,224,213,233,30,151,210,217,136,9,182,76,43,126,177,124,189,231,184,45,7,144,191,29,145,29,183,16,100,106,176,32,242,243,185,113,72,132,190,65,222,26,218,212,125,109,221,228,235,244,212,181,81,131,211,133,199,19,108,152,86,100,107,168,192,253,98,249,122,138,101,201,236,20,1,92,79,99,6,108,217,250,15,61,99,141,8,13,245,59,110,32,200,76,105,16,94,213,96,65,228,162,103,113,114,60,3,228,209,75,4,212,71,210,13,133,253,165,10,181,107,53,181,168,250,66,178,152,108,219,187,201,214,172,188,249,64,50,216,108,227,69,223,92,117,220,214,13,207,171,209,61,89,38,217,48,172,81,222,0,58,200,215,81,128,191,208,97,22,33,180,244,181,86,179,196,35,207,186,149,153,184,189,165,15,40,2,184,158,95,5,136,8,198,12,217,178,177,11,233,36,47,111,124,135,88,104,76,17,193,97,29,171,182,102,45,61,118,220,65,144,1,219,113,6,152,210,32,188,239,213,16,42,113,177,133,137,6,182,181,31,159,191,228,165,232,184,212,51,120,7,201,162,15,0,249,52,150,9,168,142,225,14,152,24,127,106,13,187,8,109,61,45,145,100,108,151,230,99,92,1,107,107,81,244,28,108,97,98,133,101,48,216,242,98,0,78,108,6,149,237,27,1,165,123,130,8,244,193,245,15,196,87,101,176,217,198,18,183,233,80,139,190,184,234,252,185,136,124,98,221,29,223,21,218,45,73,140,211,124,243,251,212,76,101,77,178,97,88,58,181,81,206,163,188,0,116,212,187,48,226,74,223,165,65,61,216,149,215,164,209,196,109,211,214,244,251,67,105,233,106,52,110,217,252,173,103,136,70,218,96,184,208,68,4,45,115,51,3,29,229,170,10,76,95,221,13,124,201,80,5,113,60,39,2,65,170,190,11,16,16,201,12,32,134,87,104,181,37,32,111,133,179,185,102,212,9,206,97,228,159,94,222,249,14,41,217,201,152,176,208,152,34,199,215,168,180,89,179,61,23,46,180,13,129,183,189,92,59,192,186,108,173,237,184,131,32,154,191,179,182,3,182,226,12,116,177,210,154,234,213,71,57,157,210,119,175,4,219,38,21,115,220,22,131,227,99,11,18,148,100,59,132,13,109,106,62,122,106,90,168,228,14,207,11,147,9,255,157,10,0,174,39,125,7,158,177,240,15,147,68,135,8,163,210,30,1,242,104,105,6,194,254,247,98,87,93,128,101,103,203,25,108,54,113,110,107,6,231,254,212,27,118,137,211,43,224,16,218,122,90,103,221,74,204,249,185,223,111,142,190,239,249,23,183,190,67,96,176,142,213,214,214,163,232,161,209,147,126,56,216,194,196,79,223,242,82,209,187,103,241,166,188,87,103,63,181,6,221,72,178,54,75,216,13,43,218,175,10,27,76,54,3,74,246,65,4,122,96,223,96,239,195,168,103,223,85,49,110,142,239,70,105,190,121,203,97,179,140,188,102,131,26,37,111,210,160,82,104,226,54,204,12,119,149,187,11,71,3,34,2,22,185,85,5,38,47,197,186,59,190,178,189,11,40,43,180,90,146,92,179,106,4,194,215,255,167,181,208,207,49,44,217,158,139,91,222,174,29,155,100,194,176,236,99,242,38,117,106,163,156,2,109,147,10,156,9,6,169,235,14,54,63,114,7,103,133,5,0,87,19,149,191,74,130,226,184,122,20,123,177,43,174,12,182,27,56,146,210,142,155,229,213,190,13,124,220,239,183,11,219,223,33,134,211,210,212,241,212,226,66,104,221,179,248,31,218,131,110,129,190,22,205,246,185,38,91,111,176,119,225,24,183,71,119,136,8,90,230,255,15,106,112,102,6,59,202,17,1,11,92,143,101,158,255,248,98,174,105,97,107,255,211,22,108,207,69,160,10,226,120,215,13,210,238,78,4,131,84,57,3,179,194,167,103,38,97,208,96,22,247,73,105,71,77,62,110,119,219,174,209,106,74,217,214,90,220,64,223,11,102,55,216,59,240,169,188,174,83,222,187,158,197,71,178,207,127,48,181,255,233,189,189,242,28,202,186,194,138,83,179,147,48,36,180,163,166,186,208,54,5,205,215,6,147,84,222,87,41,35,217,103,191,179,102,122,46,196,97,74,184,93,104,27,2,42,111,43,148,180,11,190,55,195,12,142,161,90,5,223,27,45,2,239,141,0,0,0,0,25,27,49,65,50,54,98,130,43,45,83,195,100,108,197,4,125,119,244,69,86,90,167,134,79,65,150,199,200,217,138,8,209,194,187,73,250,239,232,138,227,244,217,203,172,181,79,12,181,174,126,77,158,131,45,142,135,152,28,207,74,194,18,81,83,217,35,16,120,244,112,211,97,239,65,146,46,174,215,85,55,181,230,20,28,152,181,215,5,131,132,150,130,27,152,89,155,0,169,24,176,45,250,219,169,54,203,154,230,119,93,93,255,108,108,28,212,65,63,223,205,90,14,158,149,132,36,162,140,159,21,227,167,178,70,32,190,169,119,97,241,232,225,166,232,243,208,231,195,222,131,36,218,197,178,101,93,93,174,170,68,70,159,235,111,107,204,40,118,112,253,105,57,49,107,174,32,42,90,239,11,7,9,44,18,28,56,109,223,70,54,243,198,93,7,178,237,112,84,113,244,107,101,48,187,42,243,247,162,49,194,182,137,28,145,117,144,7,160,52,23,159,188,251,14,132,141,186,37,169,222,121,60,178,239,56,115,243,121,255,106,232,72,190,65,197,27,125,88,222,42,60,240,121,79,5,233,98,126,68,194,79,45,135,219,84,28,198,148,21,138,1,141,14,187,64,166,35,232,131,191,56,217,194,56,160,197,13,33,187,244,76,10,150,167,143,19,141,150,206,92,204,0,9,69,215,49,72,110,250,98,139,119,225,83,202,186,187,93,84,163,160,108,21,136,141,63,214,145,150,14,151,222,215,152,80,199,204,169,17,236,225,250,210,245,250,203,147,114,98,215,92,107,121,230,29,64,84,181,222,89,79,132,159,22,14,18,88,15,21,35,25,36,56,112,218,61,35,65,155,101,253,107,167,124,230,90,230,87,203,9,37,78,208,56,100,1,145,174,163,24,138,159,226,51,167,204,33,42,188,253,96,173,36,225,175,180,63,208,238,159,18,131,45,134,9,178,108,201,72,36,171,208,83,21,234,251,126,70,41,226,101,119,104,47,63,121,246,54,36,72,183,29,9,27,116,4,18,42,53,75,83,188,242,82,72,141,179,121,101,222,112,96,126,239,49,231,230,243,254,254,253,194,191,213,208,145,124,204,203,160,61,131,138,54,250,154,145,7,187,177,188,84,120,168,167,101,57,59,131,152,75,34,152,169,10,9,181,250,201,16,174,203,136,95,239,93,79,70,244,108,14,109,217,63,205,116,194,14,140,243,90,18,67,234,65,35,2,193,108,112,193,216,119,65,128,151,54,215,71,142,45,230,6,165,0,181,197,188,27,132,132,113,65,138,26,104,90,187,91,67,119,232,152,90,108,217,217,21,45,79,30,12,54,126,95,39,27,45,156,62,0,28,221,185,152,0,18,160,131,49,83,139,174,98,144,146,181,83,209,221,244,197,22,196,239,244,87,239,194,167,148,246,217,150,213,174,7,188,233,183,28,141,168,156,49,222,107,133,42,239,42,202,107,121,237,211,112,72,172,248,93,27,111,225,70,42,46,102,222,54,225,127,197,7,160,84,232,84,99,77,243,101,34,2,178,243,229,27,169,194,164,48,132,145,103,41,159,160,38,228,197,174,184,253,222,159,249,214,243,204,58,207,232,253,123,128,169,107,188,153,178,90,253,178,159,9,62,171,132,56,127,44,28,36,176,53,7,21,241,30,42,70,50,7,49,119,115,72,112,225,180,81,107,208,245,122,70,131,54,99,93,178,119,203,250,215,78,210,225,230,15,249,204,181,204,224,215,132,141,175,150,18,74,182,141,35,11,157,160,112,200,132,187,65,137,3,35,93,70,26,56,108,7,49,21,63,196,40,14,14,133,103,79,152,66,126,84,169,3,85,121,250,192,76,98,203,129,129,56,197,31,152,35,244,94,179,14,167,157,170,21,150,220,229,84,0,27,252,79,49,90,215,98,98,153,206,121,83,216,73,225,79,23,80,250,126,86,123,215,45,149,98,204,28,212,45,141,138,19,52,150,187,82,31,187,232,145,6,160,217,208,94,126,243,236,71,101,194,173,108,72,145,110,117,83,160,47,58,18,54,232,35,9,7,169,8,36,84,106,17,63,101,43,150,167,121,228,143,188,72,165,164,145,27,102,189,138,42,39,242,203,188,224,235,208,141,161,192,253,222,98,217,230,239,35,20,188,225,189,13,167,208,252,38,138,131,63,63,145,178,126,112,208,36,185,105,203,21,248,66,230,70,59,91,253,119,122,220,101,107,181,197,126,90,244,238,83,9,55,247,72,56,118,184,9,174,177,161,18,159,240,138,63,204,51,147,36,253,114,0,0,0,0,1,194,106,55,3,132,212,110,2,70,190,89,7,9,168,220,6,203,194,235,4,141,124,178,5,79,22,133,14,19,81,184,15,209,59,143,13,151,133,214,12,85,239,225,9,26,249,100,8,216,147,83,10,158,45,10,11,92,71,61,28,38,163,112,29,228,201,71,31,162,119,30,30,96,29,41,27,47,11,172,26,237,97,155,24,171,223,194,25,105,181,245,18,53,242,200,19,247,152,255,17,177,38,166,16,115,76,145,21,60,90,20,20,254,48,35,22,184,142,122,23,122,228,77,56,77,70,224,57,143,44,215,59,201,146,142,58,11,248,185,63,68,238,60,62,134,132,11,60,192,58,82,61,2,80,101,54,94,23,88,55,156,125,111,53,218,195,54,52,24,169,1,49,87,191,132,48,149,213,179,50,211,107,234,51,17,1,221,36,107,229,144,37,169,143,167,39,239,49,254,38,45,91,201,35,98,77,76,34,160,39,123,32,230,153,34,33,36,243,21,42,120,180,40,43,186,222,31,41,252,96,70,40,62,10,113,45,113,28,244,44,179,118,195,46,245,200,154,47,55,162,173,112,154,141,192,113,88,231,247,115,30,89,174,114,220,51,153,119,147,37,28,118,81,79,43,116,23,241,114,117,213,155,69,126,137,220,120,127,75,182,79,125,13,8,22,124,207,98,33,121,128,116,164,120,66,30,147,122,4,160,202,123,198,202,253,108,188,46,176,109,126,68,135,111,56,250,222,110,250,144,233,107,181,134,108,106,119,236,91,104,49,82,2,105,243,56,53,98,175,127,8,99,109,21,63,97,43,171,102,96,233,193,81,101,166,215,212,100,100,189,227,102,34,3,186,103,224,105,141,72,215,203,32,73,21,161,23,75,83,31,78,74,145,117,121,79,222,99,252,78,28,9,203,76,90,183,146,77,152,221,165,70,196,154,152,71,6,240,175,69,64,78,246,68,130,36,193,65,205,50,68,64,15,88,115,66,73,230,42,67,139,140,29,84,241,104,80,85,51,2,103,87,117,188,62,86,183,214,9,83,248,192,140,82,58,170,187,80,124,20,226,81,190,126,213,90,226,57,232,91,32,83,223,89,102,237,134,88,164,135,177,93,235,145,52,92,41,251,3,94,111,69,90,95,173,47,109,225,53,27,128,224,247,113,183,226,177,207,238,227,115,165,217,230,60,179,92,231,254,217,107,229,184,103,50,228,122,13,5,239,38,74,56,238,228,32,15,236,162,158,86,237,96,244,97,232,47,226,228,233,237,136,211,235,171,54,138,234,105,92,189,253,19,184,240,252,209,210,199,254,151,108,158,255,85,6,169,250,26,16,44,251,216,122,27,249,158,196,66,248,92,174,117,243,0,233,72,242,194,131,127,240,132,61,38,241,70,87,17,244,9,65,148,245,203,43,163,247,141,149,250,246,79,255,205,217,120,93,96,216,186,55,87,218,252,137,14,219,62,227,57,222,113,245,188,223,179,159,139,221,245,33,210,220,55,75,229,215,107,12,216,214,169,102,239,212,239,216,182,213,45,178,129,208,98,164,4,209,160,206,51,211,230,112,106,210,36,26,93,197,94,254,16,196,156,148,39,198,218,42,126,199,24,64,73,194,87,86,204,195,149,60,251,193,211,130,162,192,17,232,149,203,77,175,168,202,143,197,159,200,201,123,198,201,11,17,241,204,68,7,116,205,134,109,67,207,192,211,26,206,2,185,45,145,175,150,64,144,109,252,119,146,43,66,46,147,233,40,25,150,166,62,156,151,100,84,171,149,34,234,242,148,224,128,197,159,188,199,248,158,126,173,207,156,56,19,150,157,250,121,161,152,181,111,36,153,119,5,19,155,49,187,74,154,243,209,125,141,137,53,48,140,75,95,7,142,13,225,94,143,207,139,105,138,128,157,236,139,66,247,219,137,4,73,130,136,198,35,181,131,154,100,136,130,88,14,191,128,30,176,230,129,220,218,209,132,147,204,84,133,81,166,99,135,23,24,58,134,213,114,13,169,226,208,160,168,32,186,151,170,102,4,206,171,164,110,249,174,235,120,124,175,41,18,75,173,111,172,18,172,173,198,37,167,241,129,24,166,51,235,47,164,117,85,118,165,183,63,65,160,248,41,196,161,58,67,243,163,124,253,170,162,190,151,157,181,196,115,208,180,6,25,231,182,64,167,190,183,130,205,137,178,205,219,12,179,15,177,59,177,73,15,98,176,139,101,85,187,215,34,104,186,21,72,95,184,83,246,6,185,145,156,49,188,222,138,180,189,28,224,131,191,90,94,218,190,152,52,237,0,0,0,0,184,188,103,101,170,9,200,139,18,181,175,238,143,98,151,87,55,222,240,50,37,107,95,220,157,215,56,185,197,180,40,239,125,8,79,138,111,189,224,100,215,1,135,1,74,214,191,184,242,106,216,221,224,223,119,51,88,99,16,86,80,25,87,159,232,165,48,250,250,16,159,20,66,172,248,113,223,123,192,200,103,199,167,173,117,114,8,67,205,206,111,38,149,173,127,112,45,17,24,21,63,164,183,251,135,24,208,158,26,207,232,39,162,115,143,66,176,198,32,172,8,122,71,201,160,50,175,62,24,142,200,91,10,59,103,181,178,135,0,208,47,80,56,105,151,236,95,12,133,89,240,226,61,229,151,135,101,134,135,209,221,58,224,180,207,143,79,90,119,51,40,63,234,228,16,134,82,88,119,227,64,237,216,13,248,81,191,104,240,43,248,161,72,151,159,196,90,34,48,42,226,158,87,79,127,73,111,246,199,245,8,147,213,64,167,125,109,252,192,24,53,159,208,78,141,35,183,43,159,150,24,197,39,42,127,160,186,253,71,25,2,65,32,124,16,244,143,146,168,72,232,247,155,20,88,61,35,168,63,88,49,29,144,182,137,161,247,211,20,118,207,106,172,202,168,15,190,127,7,225,6,195,96,132,94,160,112,210,230,28,23,183,244,169,184,89,76,21,223,60,209,194,231,133,105,126,128,224,123,203,47,14,195,119,72,107,203,13,15,162,115,177,104,199,97,4,199,41,217,184,160,76,68,111,152,245,252,211,255,144,238,102,80,126,86,218,55,27,14,185,39,77,182,5,64,40,164,176,239,198,28,12,136,163,129,219,176,26,57,103,215,127,43,210,120,145,147,110,31,244,59,38,247,3,131,154,144,102,145,47,63,136,41,147,88,237,180,68,96,84,12,248,7,49,30,77,168,223,166,241,207,186,254,146,223,236,70,46,184,137,84,155,23,103,236,39,112,2,113,240,72,187,201,76,47,222,219,249,128,48,99,69,231,85,107,63,160,156,211,131,199,249,193,54,104,23,121,138,15,114,228,93,55,203,92,225,80,174,78,84,255,64,246,232,152,37,174,139,136,115,22,55,239,22,4,130,64,248,188,62,39,157,33,233,31,36,153,85,120,65,139,224,215,175,51,92,176,202,237,89,182,59,85,229,209,94,71,80,126,176,255,236,25,213,98,59,33,108,218,135,70,9,200,50,233,231,112,142,142,130,40,237,158,212,144,81,249,177,130,228,86,95,58,88,49,58,167,143,9,131,31,51,110,230,13,134,193,8,181,58,166,109,189,64,225,164,5,252,134,193,23,73,41,47,175,245,78,74,50,34,118,243,138,158,17,150,152,43,190,120,32,151,217,29,120,244,201,75,192,72,174,46,210,253,1,192,106,65,102,165,247,150,94,28,79,42,57,121,93,159,150,151,229,35,241,242,77,107,25,5,245,215,126,96,231,98,209,142,95,222,182,235,194,9,142,82,122,181,233,55,104,0,70,217,208,188,33,188,136,223,49,234,48,99,86,143,34,214,249,97,154,106,158,4,7,189,166,189,191,1,193,216,173,180,110,54,21,8,9,83,29,114,78,154,165,206,41,255,183,123,134,17,15,199,225,116,146,16,217,205,42,172,190,168,56,25,17,70,128,165,118,35,216,198,102,117,96,122,1,16,114,207,174,254,202,115,201,155,87,164,241,34,239,24,150,71,253,173,57,169,69,17,94,204,118,77,238,6,206,241,137,99,220,68,38,141,100,248,65,232,249,47,121,81,65,147,30,52,83,38,177,218,235,154,214,191,179,249,198,233,11,69,161,140,25,240,14,98,161,76,105,7,60,155,81,190,132,39,54,219,150,146,153,53,46,46,254,80,38,84,185,153,158,232,222,252,140,93,113,18,52,225,22,119,169,54,46,206,17,138,73,171,3,63,230,69,187,131,129,32,227,224,145,118,91,92,246,19,73,233,89,253,241,85,62,152,108,130,6,33,212,62,97,68,198,139,206,170,126,55,169,207,214,127,65,56,110,195,38,93,124,118,137,179,196,202,238,214,89,29,214,111,225,161,177,10,243,20,30,228,75,168,121,129,19,203,105,215,171,119,14,178,185,194,161,92,1,126,198,57,156,169,254,128,36,21,153,229,54,160,54,11,142,28,81,110,134,102,22,167,62,218,113,194,44,111,222,44,148,211,185,73,9,4,129,240,177,184,230,149,163,13,73,123,27,177,46,30,67,210,62,72,251,110,89,45,233,219,246,195,81,103,145,166,204,176,169,31,116,12,206,122,102,185,97,148,222,5,6,241,0,0,0,0,0,0,0,0,1,0,0,0,4,0,4,0,8,0,4,0,2,0,0,0,4,0,5,0,16,0,8,0,2,0,0,0,4,0,6,0,32,0,32,0,2,0,0,0,4,0,4,0,16,0,16,0,3,0,0,0,8,0,16,0,32,0,32,0,3,0,0,0,8,0,16,0,128,0,128,0,3,0,0,0,8,0,32,0,128,0,0,1,3,0,0,0,32,0,128,0,2,1,0,4,3,0,0,0,32,0,2,1,2,1,0,16,3,0,0,0,222,51,0,0,112,37,0,0,1,1,0,0,30,1,0,0,15,0,0,0,102,51,0,0,248,36,0,0,0,0,0,0,30,0,0,0,15,0,0,0,0,0,0,0,172,36,0,0,0,0,0,0,19,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,14,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,28,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,0,128,0,0,0,192,0,0,0,0,1,0,0,128,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,194,110,0,0,210,110,0,0,124,124,0,0,221,110,0,0,232,110,0,0,245,110,0,0,0,111,0,0,20,111,0,0,33,111,0,0,124,124,0,0,1,0,0,0,1,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,208,39,0,0,9,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,133,124,0,0,0,4], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE);\n/* memory initializer */ allocate([255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,40,0,0,5,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,6,0,0,0,141,128,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,40,0,0,188,40,0,0,5,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,6,0,0,0,149,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,95,112,137,0,255,9,47,15,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,192,0,16,7,10,0,0,8,96,0,0,8,32,0,0,9,160,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,224,0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,144,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,208,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,176,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,240,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,200,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,168,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,232,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,152,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,216,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,184,0,0,8,12,0,0,8,140,0,0,8,76,0,0,9,248,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,7,35,0,0,8,114,0,0,8,50,0,0,9,196,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,164,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,228,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,148,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,212,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,180,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,244,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,204,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,172,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,236,0,16,7,9,0,0,8,94,0,0,8,30,0,0,9,156,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,220,0,18,7,27,0,0,8,110,0,0,8,46,0,0,9,188,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,252,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,194,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,162,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,226,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,146,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,210,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,178,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,242,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,202,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,170,0,0,8,5,0,0,8,133,0,0,8,69,0,0,9,234,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,154,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,218,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,186,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,250,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,198,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,166,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,230,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,150,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,214,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,182,0,0,8,11,0,0,8,139,0,0,8,75,0,0,9,246,0,16,7,5,0,0,8,87,0,0,8,23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,206,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,174,0,0,8,7,0,0,8,135,0,0,8,71,0,0,9,238,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,158,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,222,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,190,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,254,0,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,193,0,16,7,10,0,0,8,96,0,0,8,32,0,0,9,161,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,225,0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,145,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,209,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,177,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,241,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,201,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,169,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,233,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,153,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,217,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,185,0,0,8,12,0,0,8,140,0,0,8,76,0,0,9,249,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,7,35,0,0,8,114,0,0,8,50,0,0,9,197,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,165,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,229,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,149,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,213,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,181,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,245,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,205,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,173,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,237,0,16,7,9,0,0,8,94,0,0,8,30,0,0,9,157,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,221,0,18,7,27,0,0,8,110,0,0,8,46,0,0,9,189,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,253,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,195,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,163,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,227,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,147,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,211,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,179,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,243,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,203,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,171,0,0,8,5,0,0,8,133,0,0,8,69,0,0,9,235,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,155,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,219,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,187,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,251,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,199,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,167,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,231,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,151,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,215,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,183,0,0,8,11,0,0,8,139,0,0,8,75,0,0,9,247,0,16,7,5,0,0,8,87,0,0,8,23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,207,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,175,0,0,8,7,0,0,8,135,0,0,8,71,0,0,9,239,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,159,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,223,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,191,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,255,0,16,5,1,0,23,5,1,1,19,5,17,0,27,5,1,16,17,5,5,0,25,5,1,4,21,5,65,0,29,5,1,64,16,5,3,0,24,5,1,2,20,5,33,0,28,5,1,32,18,5,9,0,26,5,1,8,22,5,129,0,64,5,0,0,16,5,2,0,23,5,129,1,19,5,25,0,27,5,1,24,17,5,7,0,25,5,1,6,21,5,97,0,29,5,1,96,16,5,4,0,24,5,1,3,20,5,49,0,28,5,1,48,18,5,13,0,26,5,1,12,22,5,193,0,64,5,0,0,16,0,17,0,18,0,0,0,8,0,7,0,9,0,6,0,10,0,5,0,11,0,4,0,12,0,3,0,13,0,2,0,14,0,1,0,15,0,1,0,2,0,3,0,4,0,5,0,7,0,9,0,13,0,17,0,25,0,33,0,49,0,65,0,97,0,129,0,193,0,1,1,129,1,1,2,1,3,1,4,1,6,1,8,1,12,1,16,1,24,1,32,1,48,1,64,1,96,0,0,0,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,13,0,15,0,17,0,19,0,23,0,27,0,31,0,35,0,43,0,51,0,59,0,67,0,83,0,99,0,115,0,131,0,163,0,195,0,227,0,2,1,0,0,0,0,16,0,16,0,16,0,16,0,17,0,17,0,18,0,18,0,19,0,19,0,20,0,20,0,21,0,21,0,22,0,22,0,23,0,23,0,24,0,24,0,25,0,25,0,26,0,26,0,27,0,27,0,28,0,28,0,29,0,29,0,64,0,64,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,17,0,17,0,17,0,17,0,18,0,18,0,18,0,18,0,19,0,19,0,19,0,19,0,20,0,20,0,20,0,20,0,21,0,21,0,21,0,21,0,16,0,72,0,78,0,0,0,5,0,16,0,5,0,8,0,5,0,24,0,5,0,4,0,5,0,20,0,5,0,12,0,5,0,28,0,5,0,2,0,5,0,18,0,5,0,10,0,5,0,26,0,5,0,6,0,5,0,22,0,5,0,14,0,5,0,30,0,5,0,1,0,5,0,17,0,5,0,9,0,5,0,25,0,5,0,5,0,5,0,21,0,5,0,13,0,5,0,29,0,5,0,3,0,5,0,19,0,5,0,11,0,5,0,27,0,5,0,7,0,5,0,23,0,5,0,12,0,8,0,140,0,8,0,76,0,8,0,204,0,8,0,44,0,8,0,172,0,8,0,108,0,8,0,236,0,8,0,28,0,8,0,156,0,8,0,92,0,8,0,220,0,8,0,60,0,8,0,188,0,8,0,124,0,8,0,252,0,8,0,2,0,8,0,130,0,8,0,66,0,8,0,194,0,8,0,34,0,8,0,162,0,8,0,98,0,8,0,226,0,8,0,18,0,8,0,146,0,8,0,82,0,8,0,210,0,8,0,50,0,8,0,178,0,8,0,114,0,8,0,242,0,8,0,10,0,8,0,138,0,8,0,74,0,8,0,202,0,8,0,42,0,8,0,170,0,8,0,106,0,8,0,234,0,8,0,26,0,8,0,154,0,8,0,90,0,8,0,218,0,8,0,58,0,8,0,186,0,8,0,122,0,8,0,250,0,8,0,6,0,8,0,134,0,8,0,70,0,8,0,198,0,8,0,38,0,8,0,166,0,8,0,102,0,8,0,230,0,8,0,22,0,8,0,150,0,8,0,86,0,8,0,214,0,8,0,54,0,8,0,182,0,8,0,118,0,8,0,246,0,8,0,14,0,8,0,142,0,8,0,78,0,8,0,206,0,8,0,46,0,8,0,174,0,8,0,110,0,8,0,238,0,8,0,30,0,8,0,158,0,8,0,94,0,8,0,222,0,8,0,62,0,8,0,190,0,8,0,126,0,8,0,254,0,8,0,1,0,8,0,129,0,8,0,65,0,8,0,193,0,8,0,33,0,8,0,161,0,8,0,97,0,8,0,225,0,8,0,17,0,8,0,145,0,8,0,81,0,8,0,209,0,8,0,49,0,8,0,177,0,8,0,113,0,8,0,241,0,8,0,9,0,8,0,137,0,8,0,73,0,8,0,201,0,8,0,41,0,8,0,169,0,8,0,105,0,8,0,233,0,8,0,25,0,8,0,153,0,8,0,89,0,8,0,217,0,8,0,57,0,8,0,185,0,8,0,121,0,8,0,249,0,8,0,5,0,8,0,133,0,8,0,69,0,8,0,197,0,8,0,37,0,8,0,165,0,8,0,101,0,8,0,229,0,8,0,21,0,8,0,149,0,8,0,85,0,8,0,213,0,8,0,53,0,8,0,181,0,8,0,117,0,8,0,245,0,8,0,13,0,8,0,141,0,8,0,77,0,8,0,205,0,8,0,45,0,8,0,173,0,8,0,109,0,8,0,237,0,8,0,29,0,8,0,157,0,8,0,93,0,8,0,221,0,8,0,61,0,8,0,189,0,8,0,125,0,8,0,253,0,8,0,19,0,9,0,19,1,9,0,147,0,9,0,147,1,9,0,83,0,9,0,83,1,9,0,211,0,9,0,211,1,9,0,51,0,9,0,51,1,9,0,179,0,9,0,179,1,9,0,115,0,9,0,115,1,9,0,243,0,9,0,243,1,9,0,11,0,9,0,11,1,9,0,139,0,9,0,139,1,9,0,75,0,9,0,75,1,9,0,203,0,9,0,203,1,9,0,43,0,9,0,43,1,9,0,171,0,9,0,171,1,9,0,107,0,9,0,107,1,9,0,235,0,9,0,235,1,9,0,27,0,9,0,27,1,9,0,155,0,9,0,155,1,9,0,91,0,9,0,91,1,9,0,219,0,9,0,219,1,9,0,59,0,9,0,59,1,9,0,187,0,9,0,187,1,9,0,123,0,9,0,123,1,9,0,251,0,9,0,251,1,9,0,7,0,9,0,7,1,9,0,135,0,9,0,135,1,9,0,71,0,9,0,71,1,9,0,199,0,9,0,199,1,9,0,39,0,9,0,39,1,9,0,167,0,9,0,167,1,9,0,103,0,9,0,103,1,9,0,231,0,9,0,231,1,9,0,23,0,9,0,23,1,9,0,151,0,9,0,151,1,9,0,87,0,9,0,87,1,9,0,215,0,9,0,215,1,9,0,55,0,9,0,55,1,9,0,183,0,9,0,183,1,9,0,119,0,9,0,119,1,9,0,247,0,9,0,247,1,9,0,15,0,9,0,15,1,9,0,143,0,9,0,143,1,9,0,79,0,9,0,79,1,9,0,207,0,9,0,207,1,9,0,47,0,9,0,47,1,9,0,175,0,9,0,175,1,9,0,111,0,9,0,111,1,9,0,239,0,9,0,239,1,9,0,31,0,9,0,31,1,9,0,159,0,9,0,159,1,9,0,95,0,9,0,95,1,9,0,223,0,9,0,223,1,9,0,63,0,9,0,63,1,9,0,191,0,9,0,191,1,9,0,127,0,9,0,127,1,9,0,255,0,9,0,255,1,9,0,0,0,7,0,64,0,7,0,32,0,7,0,96,0,7,0,16,0,7,0,80,0,7,0,48,0,7,0,112,0,7,0,8,0,7,0,72,0,7,0,40,0,7,0,104,0,7,0,24,0,7,0,88,0,7,0,56,0,7,0,120,0,7,0,4,0,7,0,68,0,7,0,36,0,7,0,100,0,7,0,20,0,7,0,84,0,7,0,52,0,7,0,116,0,7,0,3,0,8,0,131,0,8,0,67,0,8,0,195,0,8,0,35,0,8,0,163,0,8,0,99,0,8,0,227,0,8,0,83,83,69,45,99,97,112,97,98,108,101,32,67,80,85,32,105,115,32,114,101,113,117,105,114,101,100,32,102,111,114,32,116,104,105,115,32,98,117,105,108,100,46,10,0,32,32,119,97,114,110,105,110,103,58,32,111,112,116,105,111,110,32,39,37,115,39,32,104,97,115,32,98,101,101,110,32,114,101,112,108,97,99,101,100,32,119,105,116,104,32,39,37,115,39,46,10,0,86,118,113,102,104,115,58,81,58,111,58,0,45,45,102,108,111,121,100,32,97,114,103,117,109,101,110,116,32,109,117,115,116,32,98,101,32,105,110,32,48,46,46,49,32,114,97,110,103,101,10,0,45,45,111,117,116,112,117,116,32,111,112,116,105,111,110,32,99,97,110,32,98,101,32,117,115,101,100,32,111,110,108,121,32,111,110,99,101,10,0,45,0,32,32,119,97,114,110,105,110,103,58,32,116,104,101,32,119,111,114,107,97,114,111,117,110,100,32,102,111,114,32,73,69,54,32,105,115,32,100,101,112,114,101,99,97,116,101,100,10,0,83,112,101,101,100,32,115,104,111,117,108,100,32,98,101,32,98,101,116,119,101,101,110,32,49,32,40,115,108,111,119,41,32,97,110,100,32,49,49,32,40,102,97,115,116,41,46,10,0,81,117,97,108,105,116,121,32,115,104,111,117,108,100,32,98,101,32,105,110,32,102,111,114,109,97,116,32,109,105,110,45,109,97,120,32,119,104,101,114,101,32,109,105,110,32,97,110,100,32,109,97,120,32,97,114,101,32,110,117,109,98,101,114,115,32,105,110,32,114,97,110,103,101,32,48,45,49,48,48,46,10,0,80,111,115,116,101,114,105,122,97,116,105,111,110,32,115,104,111,117,108,100,32,98,101,32,110,117,109,98,101,114,32,111,102,32,98,105,116,115,32,105,110,32,114,97,110,103,101,32,48,45,52,46,10,0,32,32,101,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,108,111,97,100,32,37,115,0,32,32,101,114,114,111,114,58,32,117,110,97,98,108,101,32,116,111,32,114,101,97,100,32,99,111,108,111,114,115,32,102,114,111,109,32,37,115,0,112,110,103,113,117,97,110,116,44,32,37,115,44,32,98,121,32,75,111,114,110,101,108,32,76,101,115,105,110,115,107,105,44,32,71,114,101,103,32,82,111,101,108,111,102,115,46,10,0,50,46,57,46,48,32,40,77,97,114,99,104,32,50,48,49,55,41,0,117,115,97,103,101,58,32,32,112,110,103,113,117,97,110,116,32,91,111,112,116,105,111,110,115,93,32,91,110,99,111,108,111,114,115,93,32,45,45,32,112,110,103,102,105,108,101,32,91,112,110,103,102,105,108,101,32,46,46,46,93,10,32,32,32,32,32,32,32,32,112,110,103,113,117,97,110,116,32,91,111,112,116,105,111,110,115,93,32,91,110,99,111,108,111,114,115,93,32,45,32,62,115,116,100,111,117,116,32,60,115,116,100,105,110,10,10,111,112,116,105,111,110,115,58,10,32,32,45,45,102,111,114,99,101,32,32,32,32,32,32,32,32,32,32,32,111,118,101,114,119,114,105,116,101,32,101,120,105,115,116,105,110,103,32,111,117,116,112,117,116,32,102,105,108,101,115,32,40,115,121,110,111,110,121,109,58,32,45,102,41,10,32,32,45,45,115,107,105,112,45,105,102,45,108,97,114,103,101,114,32,32,111,110,108,121,32,115,97,118,101,32,99,111,110,118,101,114,116,101,100,32,102,105,108,101,115,32,105,102,32,116,104,101,121,39,114,101,32,115,109,97,108,108,101,114,32,116,104,97,110,32,111,114,105,103,105,110,97,108,10,32,32,45,45,111,117,116,112,117,116,32,102,105,108,101,32,32,32,32,32,100,101,115,116,105,110,97,116,105,111,110,32,102,105,108,101,32,112,97,116,104,32,116,111,32,117,115,101,32,105,110,115,116,101,97,100,32,111,102,32,45,45,101,120,116,32,40,115,121,110,111,110,121,109,58,32,45,111,41,10,32,32,45,45,101,120,116,32,110,101,119,46,112,110,103,32,32,32,32,32,115,101,116,32,99,117,115,116,111,109,32,115,117,102,102,105,120,47,101,120,116,101,110,115,105,111,110,32,102,111,114,32,111,117,116,112,117,116,32,102,105,108,101,110,97,109,101,115,10,32,32,45,45,113,117,97,108,105,116,121,32,109,105,110,45,109,97,120,32,100,111,110,39,116,32,115,97,118,101,32,98,101,108,111,119,32,109,105,110,44,32,117,115,101,32,102,101,119,101,114,32,99,111,108,111,114,115,32,98,101,108,111,119,32,109,97,120,32,40,48,45,49,48,48,41,10,32,32,45,45,115,112,101,101,100,32,78,32,32,32,32,32,32,32,32,32,115,112,101,101,100,47,113,117,97,108,105,116,121,32,116,114,97,100,101,45,111,102,102,46,32,49,61,115,108,111,119,44,32,51,61,100,101,102,97,117,108,116,44,32,49,49,61,102,97,115,116,32,38,32,114,111,117,103,104,10,32,32,45,45,110,111,102,115,32,32,32,32,32,32,32,32,32,32,32,32,100,105,115,97,98,108,101,32,70,108,111,121,100,45,83,116,101,105,110,98,101,114,103,32,100,105,116,104,101,114,105,110,103,10,32,32,45,45,112,111,115,116,101,114,105,122,101,32,78,32,32,32,32,32,111,117,116,112,117,116,32,108,111,119,101,114,45,112,114,101,99,105,115,105,111,110,32,99,111,108,111,114,32,40,101,46,103,46,32,102,111,114,32,65,82,71,66,52,52,52,52,32,111,117,116,112,117,116,41,10,32,32,45,45,115,116,114,105,112,32,32,32,32,32,32,32,32,32,32,32,114,101,109,111,118,101,32,111,112,116,105,111,110,97,108,32,109,101,116,97,100,97,116,97,32,40,100,101,102,97,117,108,116,32,111,110,32,77,97,99,41,10,32,32,45,45,118,101,114,98,111,115,101,32,32,32,32,32,32,32,32,32,112,114,105,110,116,32,115,116,97,116,117,115,32,109,101,115,115,97,103,101,115,32,40,115,121,110,111,110,121,109,58,32,45,118,41,10,10,81,117,97,110,116,105,122,101,115,32,111,110,101,32,111,114,32,109,111,114,101,32,51,50,45,98,105,116,32,82,71,66,65,32,80,78,71,115,32,116,111,32,56,45,98,105,116,32,40,111,114,32,115,109,97,108,108,101,114,41,32,82,71,66,65,45,112,97,108,101,116,116,101,46,10,84,104,101,32,111,117,116,112,117,116,32,102,105,108,101,110,97,109,101,32,105,115,32,116,104,101,32,115,97,109,101,32,97,115,32,116,104,101,32,105,110,112,117,116,32,110,97,109,101,32,101,120,99,101,112,116,32,116,104,97,116,10,105,116,32,101,110,100,115,32,105,110,32,34,45,102,115,56,46,112,110,103,34,44,32,34,45,111,114,56,46,112,110,103,34,32,111,114,32,121,111,117,114,32,99,117,115,116,111,109,32,101,120,116,101,110,115,105,111,110,32,40,117,110,108,101,115,115,32,116,104,101,10,105,110,112,117,116,32,105,115,32,115,116,100,105,110,44,32,105,110,32,119,104,105,99,104,32,99,97,115,101,32,116,104,101,32,113,117,97,110,116,105,122,101,100,32,105,109,97,103,101,32,119,105,108,108,32,103,111,32,116,111,32,115,116,100,111,117,116,41,46,10,73,102,32,121,111,117,32,112,97,115,115,32,116,104,101,32,115,112,101,99,105,97,108,32,111,117,116,112,117,116,32,112,97,116,104,32,34,45,34,32,97,110,100,32,97,32,115,105,110,103,108,101,32,105,110,112,117,116,32,102,105,108,101,44,32,116,104,97,116,32,102,105,108,101,10,119,105,108,108,32,98,101,32,112,114,111,99,101,115,115,101,100,32,97,110,100,32,116,104,101,32,113,117,97,110,116,105,122,101,100,32,105,109,97,103,101,32,119,105,108,108,32,103,111,32,116,111,32,115,116,100,111,117,116,46,10,84,104,101,32,100,101,102,97,117,108,116,32,98,101,104,97,118,105,111,114,32,105,102,32,116,104,101,32,111,117,116,112,117,116,32,102,105,108,101,32,101,120,105,115,116,115,32,105,115,32,116,111,32,115,107,105,112,32,116,104,101,32,99,111,110,118,101,114,115,105,111,110,59,10,117,115,101,32,45,45,102,111,114,99,101,32,116,111,32,111,118,101,114,119,114,105,116,101,46,32,83,101,101,32,109,97,110,32,112,97,103,101,32,102,111,114,32,102,117,108,108,32,108,105,115,116,32,111,102,32,111,112,116,105,111,110,115,46,10,0,78,111,32,105,110,112,117,116,32,102,105,108,101,115,32,115,112,101,99,105,102,105,101,100,46,10,0,78,117,109,98,101,114,32,111,102,32,99,111,108,111,114,115,32,109,117,115,116,32,98,101,32,98,101,116,119,101,101,110,32,50,32,97,110,100,32,50,53,54,46,10,0,45,45,101,120,116,32,97,110,100,32,45,45,111,117,116,112,117,116,32,111,112,116,105,111,110,115,32,99,97,110,39,116,32,98,101,32,117,115,101,100,32,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,101,10,0,45,105,101,45,102,115,56,46,112,110,103,0,45,105,101,45,111,114,56,46,112,110,103,0,79,110,108,121,32,111,110,101,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,97,108,108,111,119,101,100,32,119,104,101,110,32,45,45,111,117,116,112,117,116,32,105,115,32,117,115,101,100,10,0,115,116,100,105,110,0,114,98,0,32,32,101,114,114,111,114,58,32,39,37,115,39,32,101,120,105,115,116,115,59,32,110,111,116,32,111,118,101,114,119,114,105,116,105,110,103,10,0,79,110,108,121,32,111,110,101,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,97,108,108,111,119,101,100,32,119,104,101,110,32,117,115,105,110,103,32,116,104,101,32,115,112,101,99,105,97,108,32,111,117,116,112,117,116,32,112,97,116,104,32,34,45,34,32,116,111,32,119,114,105,116,101,32,116,111,32,115,116,100,111,117,116,10,0,46,112,110,103,0,46,80,78,71,0,115,0,84,104,101,114,101,32,119,101,114,101,32,101,114,114,111,114,115,32,113,117,97,110,116,105,122,105,110,103,32,37,100,32,102,105,108,101,37,115,32,111,117,116,32,111,102,32,97,32,116,111,116,97,108,32,111,102,32,37,100,32,102,105,108,101,37,115,46,0,83,107,105,112,112,101,100,32,37,100,32,102,105,108,101,37,115,32,111,117,116,32,111,102,32,97,32,116,111,116,97,108,32,111,102,32,37,100,32,102,105,108,101,37,115,46,0,81,117,97,110,116,105,122,101,100,32,37,100,32,105,109,97,103,101,37,115,46,0,37,115,58,0,32,32,114,101,97,100,32,37,108,117,75,66,32,102,105,108,101,0,32,32,117,115,101,100,32,101,109,98,101,100,100,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,116,111,32,116,114,97,110,115,102,111,114,109,32,105,109,97,103,101,32,116,111,32,115,82,71,66,32,99,111,108,111,114,115,112,97,99,101,0,32,32,117,115,101,100,32,103,65,77,65,32,97,110,100,32,99,72,82,77,32,99,104,117,110,107,115,32,116,111,32,116,114,97,110,115,102,111,114,109,32,105,109,97,103,101,32,116,111,32,115,82,71,66,32,99,111,108,111,114,115,112,97,99,101,0,32,32,119,97,114,110,105,110,103,58,32,105,103,110,111,114,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,105,110,32,71,82,65,89,32,99,111,108,111,114,115,112,97,99,101,0,32,32,112,97,115,115,105,110,103,32,115,82,71,66,32,116,97,103,32,102,114,111,109,32,116,104,101,32,105,110,112,117,116,0,32,32,99,111,110,118,101,114,116,101,100,32,105,109,97,103,101,32,102,114,111,109,32,103,97,109,109,97,32,37,50,46,49,102,32,116,111,32,103,97,109,109,97,32,50,46,50,0,32,32,109,97,112,112,101,100,32,105,109,97,103,101,32,116,111,32,110,101,119,32,99,111,108,111,114,115,46,46,46,77,83,69,61,37,46,51,102,32,40,81,61,37,100,41,0,32,32,102,105,108,101,32,101,120,99,101,101,100,101,100,32,101,120,112,101,99,116,101,100,32,115,105,122,101,32,111,102,32,37,108,117,75,66,0,32,32,99,111,112,105,101,100,32,37,100,75,66,32,111,102,32,97,100,100,105,116,105,111,110,97,108,32,80,78,71,32,109,101,116,97,100,97,116,97,0,32,32,119,114,105,116,105,110,103,32,37,100,45,99,111,108,111,114,32,105,109,97,103,101,32,116,111,32,115,116,100,111,117,116,0,32,32,119,114,105,116,105,110,103,32,116,114,117,101,99,111,108,111,114,32,105,109,97,103,101,32,116,111,32,115,116,100,111,117,116,0,46,116,109,112,0,119,98,0,32,32,101,114,114,111,114,58,32,99,97,110,110,111,116,32,111,112,101,110,32,39,37,115,39,32,102,111,114,32,119,114,105,116,105,110,103,10,0,32,32,119,114,105,116,105,110,103,32,37,100,45,99,111,108,111,114,32,105,109,97,103,101,32,97,115,32,37,115,0,32,32,119,114,105,116,105,110,103,32,116,114,117,101,99,111,108,111,114,32,105,109,97,103,101,32,97,115,32,37,115,0,115,116,100,111,117,116,0,32,32,101,114,114,111,114,58,32,102,97,105,108,101,100,32,119,114,105,116,105,110,103,32,105,109,97,103,101,32,116,111,32,37,115,32,40,37,100,41,10,0,37,115,10,0,32,32,101,114,114,111,114,58,32,99,97,110,110,111,116,32,111,112,101,110,32,37,115,32,102,111,114,32,114,101,97,100,105,110,103,10,0,102,114,111,109,32,115,116,100,105,110,0,32,32,101,114,114,111,114,58,32,99,97,110,110,111,116,32,100,101,99,111,100,101,32,105,109,97,103,101,32,37,115,10,0,118,101,114,98,111,115,101,0,113,117,105,101,116,0,102,111,114,99,101,0,110,111,45,102,111,114,99,101,0,102,108,111,121,100,0,111,114,100,101,114,101,100,0,110,111,102,115,0,105,101,98,117,103,0,116,114,97,110,115,98,117,103,0,101,120,116,0,115,107,105,112,45,105,102,45,108,97,114,103,101,114,0,111,117,116,112,117,116,0,115,112,101,101,100,0,113,117,97,108,105,116,121,0,112,111,115,116,101,114,105,122,101,0,115,116,114,105,112,0,109,97,112,0,118,101,114,115,105,111,110,0,104,101,108,112,0,45,102,115,0,45,45,102,108,111,121,100,61,49,0,45,110,111,102,115,0,45,45,111,114,100,101,114,101,100,0,45,102,108,111,121,100,0,45,110,111,102,108,111,121,100,0,45,111,114,100,101,114,101,100,0,45,102,111,114,99,101,0,45,45,102,111,114,99,101,0,45,110,111,102,111,114,99,101,0,45,45,110,111,45,102,111,114,99,101,0,45,118,101,114,98,111,115,101,0,45,45,118,101,114,98,111,115,101,0,45,113,117,105,101,116,0,45,45,113,117,105,101,116,0,45,110,111,118,101,114,98,111,115,101,0,45,110,111,113,117,105,101,116,0,45,104,101,108,112,0,45,45,104,101,108,112,0,45,118,101,114,115,105,111,110,0,45,45,118,101,114,115,105,111,110,0,45,101,120,116,0,45,45,101,120,116,0,45,115,112,101,101,100,0,45,45,115,112,101,101,100,0,32,32,32,67,111,109,112,105,108,101,100,32,119,105,116,104,32,110,111,32,115,117,112,112,111,114,116,32,102,111,114,32,99,111,108,111,114,32,112,114,111,102,105,108,101,115,46,32,85,115,105,110,103,32,108,105,98,112,110,103,32,37,115,46,10,0,49,46,54,46,50,48,0,112,72,89,115,0,105,84,88,116,0,116,69,88,116,0,122,84,88,116,0,112,110,103,113,117,97,110,116,32,114,101,97,100,112,110,103,58,32,32,105,103,110,111,114,101,100,32,111,117,116,45,111,102,45,114,97,110,103,101,32,103,97,109,109,97,32,37,102,10,0,112,110,103,113,117,97,110,116,32,114,101,97,100,112,110,103,58,32,32,117,110,97,98,108,101,32,116,111,32,97,108,108,111,99,97,116,101,32,105,109,97,103,101,32,100,97,116,97,10,0,82,101,97,100,32,101,114,114,111,114,0,105,67,67,80,0,99,72,82,77,0,103,65,77,65,0,32,32,101,114,114,111,114,58,32,37,115,32,40,108,105,98,112,110,103,32,102,97,105,108,101,100,41,10,0,32,32,108,105,98,112,110,103,32,119,97,114,110,105,110,103,58,32,37,115,10,0,102,114,101,101,0,37,115,32,117,115,101,100,32,97,102,116,101,114,32,98,101,105,110,103,32,102,114,101,101,100,0,108,105,113,95,97,116,116,114,0,108,105,113,95,114,101,115,117,108,116,0,108,105,113,95,114,101,109,97,112,112,105,110,103,95,114,101,115,117,108,116,0,108,105,113,95,105,109,97,103,101,0,32,32,101,114,114,111,114,58,32,37,115,0,119,105,100,116,104,32,97,110,100,32,104,101,105,103,104,116,32,109,117,115,116,32,98,101,32,62,32,48,0,105,109,97,103,101,32,116,111,111,32,108,97,114,103,101,0,103,97,109,109,97,32,109,117,115,116,32,98,101,32,62,61,32,48,32,97,110,100,32,60,61,32,49,32,40,116,114,121,32,49,47,103,97,109,109,97,32,105,110,115,116,101,97,100,41,0,109,105,115,115,105,110,103,32,114,111,119,32,100,97,116,97,0,32,32,99,111,110,115,101,114,118,105,110,103,32,109,101,109,111,114,121,0,32,32,87,111,114,107,105,110,103,32,97,114,111,117,110,100,32,73,69,54,32,98,117,103,32,98,121,32,109,97,107,105,110,103,32,105,109,97,103,101,32,108,101,115,115,32,116,114,97,110,115,112,97,114,101,110,116,46,46,46,0,105,110,118,97,108,105,100,32,114,111,119,32,112,111,105,110,116,101,114,115,0,108,105,113,95,104,105,115,116,111,103,114,97,109,0,32,32,109,97,100,101,32,104,105,115,116,111,103,114,97,109,46,46,46,37,100,32,99,111,108,111,114,115,32,102,111,117,110,100,0,32,32,115,101,108,101,99,116,105,110,103,32,99,111,108,111,114,115,46,46,46,37,100,37,37,0,32,32,109,111,118,105,110,103,32,99,111,108,111,114,109,97,112,32,116,111,119,97,114,100,115,32,108,111,99,97,108,32,109,105,110,105,109,117,109,0,32,32,105,109,97,103,101,32,100,101,103,114,97,100,97,116,105,111,110,32,77,83,69,61,37,46,51,102,32,40,81,61,37,100,41,32,101,120,99,101,101,100,101,100,32,108,105,109,105,116,32,111,102,32,37,46,51,102,32,40,37,100,41,0,121,0,105,101,115,0,32,32,101,108,105,109,105,110,97,116,101,100,32,111,112,97,113,117,101,32,116,82,78,83,45,99,104,117,110,107,32,101,110,116,114,105,101,115,46,46,46,37,100,32,101,110,116,114,37,115,32,116,114,97,110,115,112,97,114,101,110,116,0,32,32,116,111,111,32,109,97,110,121,32,99,111,108,111,114,115,33,32,83,99,97,108,105,110,103,32,99,111,108,111,114,115,32,116,111,32,105,109,112,114,111,118,101,32,99,108,117,115,116,101,114,105,110,103,46,46,46,32,37,100,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,117,110,100,101,102,105,110,101,100,0,108,105,98,112,110,103,32,101,114,114,111,114,58,32,37,115,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,97,108,108,111,99,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,97,114,114,97,121,32,114,101,97,108,108,111,99,0,108,105,98,112,110,103,32,119,97,114,110,105,110,103,58,32,37,115,0,105,110,99,111,110,115,105,115,116,101,110,116,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,105,110,118,97,108,105,100,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,99,104,101,99,107,105,110,103,32,99,104,114,111,109,97,116,105,99,105,116,105,101,115,0,102,105,120,101,100,32,112,111,105,110,116,32,111,118,101,114,102,108,111,119,32,105,110,32,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,108,105,98,112,110,103,32,101,115,116,105,109,97,116,101,0,103,97,109,109,97,32,118,97,108,117,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,103,97,109,109,97,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,112,110,103,95,115,101,116,95,103,65,77,65,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,115,105,122,101,44,32,104,73,83,84,32,97,108,108,111,99,97,116,105,111,110,32,115,107,105,112,112,101,100,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,104,73,83,84,32,99,104,117,110,107,32,100,97,116,97,0,73,109,97,103,101,32,119,105,100,116,104,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,119,105,100,116,104,32,105,110,32,73,72,68,82,0,73,109,97,103,101,32,119,105,100,116,104,32,105,115,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,116,104,105,115,32,97,114,99,104,105,116,101,99,116,117,114,101,0,73,109,97,103,101,32,119,105,100,116,104,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,73,109,97,103,101,32,104,101,105,103,104,116,32,105,115,32,122,101,114,111,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,104,101,105,103,104,116,32,105,110,32,73,72,68,82,0,73,109,97,103,101,32,104,101,105,103,104,116,32,101,120,99,101,101,100,115,32,117,115,101,114,32,108,105,109,105,116,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,99,111,108,111,114,32,116,121,112,101,47,98,105,116,32,100,101,112,116,104,32,99,111,109,98,105,110,97,116,105,111,110,32,105,110,32,73,72,68,82,0,85,110,107,110,111,119,110,32,105,110,116,101,114,108,97,99,101,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,85,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,85,110,107,110,111,119,110,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,102,105,108,116,101,114,32,109,101,116,104,111,100,32,105,110,32,73,72,68,82,0,73,110,118,97,108,105,100,32,73,72,68,82,32,100,97,116,97,0,73,110,118,97,108,105,100,32,112,67,65,76,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,73,110,118,97,108,105,100,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,73,110,118,97,108,105,100,32,102,111,114,109,97,116,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,117,114,112,111,115,101,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,117,110,105,116,115,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,115,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,102,111,114,32,112,67,65,76,32,112,97,114,97,109,101,116,101,114,0,73,110,118,97,108,105,100,32,115,67,65,76,32,117,110,105,116,0,73,110,118,97,108,105,100,32,115,67,65,76,32,119,105,100,116,104,0,73,110,118,97,108,105,100,32,115,67,65,76,32,104,101,105,103,104,116,0,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,32,119,104,105,108,101,32,112,114,111,99,101,115,115,105,110,103,32,115,67,65,76,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,32,108,101,110,103,116,104,0,73,110,118,97,108,105,100,32,112,97,108,101,116,116,101,0,115,82,71,66,0,105,110,118,97,108,105,100,32,115,82,71,66,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,105,110,99,111,110,115,105,115,116,101,110,116,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,115,0,100,117,112,108,105,99,97,116,101,32,115,82,71,66,32,105,110,102,111,114,109,97,116,105,111,110,32,105,103,110,111,114,101,100,0,99,72,82,77,32,99,104,117,110,107,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,115,82,71,66,0,112,114,111,102,105,108,101,32,39,0,39,58,32,0,104,58,32,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,0,107,110,111,119,110,32,105,110,99,111,114,114,101,99,116,32,115,82,71,66,32,112,114,111,102,105,108,101,0,111,117,116,45,111,102,45,100,97,116,101,32,115,82,71,66,32,112,114,111,102,105,108,101,32,119,105,116,104,32,110,111,32,115,105,103,110,97,116,117,114,101,0,78,111,116,32,114,101,99,111,103,110,105,122,105,110,103,32,107,110,111,119,110,32,115,82,71,66,32,112,114,111,102,105,108,101,32,116,104,97,116,32,104,97,115,32,98,101,101,110,32,101,100,105,116,101,100,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,115,116,97,114,116,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,52,0,73,67,67,32,112,114,111,102,105,108,101,32,116,97,103,32,111,117,116,115,105,100,101,32,112,114,111,102,105,108,101,0,108,101,110,103,116,104,32,100,111,101,115,32,110,111,116,32,109,97,116], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+10260);\n/* memory initializer */ allocate([99,104,32,112,114,111,102,105,108,101,0,105,110,118,97,108,105,100,32,108,101,110,103,116,104,0,116,97,103,32,99,111,117,110,116,32,116,111,111,32,108,97,114,103,101,0,105,110,118,97,108,105,100,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,0,105,110,116,101,110,116,32,111,117,116,115,105,100,101,32,100,101,102,105,110,101,100,32,114,97,110,103,101,0,105,110,118,97,108,105,100,32,115,105,103,110,97,116,117,114,101,0,0,0,246,214,0,1,0,0,0,0,211,45,80,67,83,32,105,108,108,117,109,105,110,97,110,116,32,105,115,32,110,111,116,32,68,53,48,0,82,71,66,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,71,114,97,121,32,99,111,108,111,114,32,115,112,97,99,101,32,110,111,116,32,112,101,114,109,105,116,116,101,100,32,111,110,32,82,71,66,32,80,78,71,0,105,110,118,97,108,105,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,111,108,111,114,32,115,112,97,99,101,0,105,110,118,97,108,105,100,32,101,109,98,101,100,100,101,100,32,65,98,115,116,114,97,99,116,32,73,67,67,32,112,114,111,102,105,108,101,0,117,110,101,120,112,101,99,116,101,100,32,68,101,118,105,99,101,76,105,110,107,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,101,120,112,101,99,116,101,100,32,78,97,109,101,100,67,111,108,111,114,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,114,101,99,111,103,110,105,122,101,100,32,73,67,67,32,112,114,111,102,105,108,101,32,99,108,97,115,115,0,117,110,101,120,112,101,99,116,101,100,32,73,67,67,32,80,67,83,32,101,110,99,111,100,105,110,103,0,116,111,111,32,109,97,110,121,32,116,101,120,116,32,99,104,117,110,107,115,0,116,101,120,116,32,99,111,109,112,114,101,115,115,105,111,110,32,109,111,100,101,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,116,101,120,116,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,73,103,110,111,114,105,110,103,32,105,110,118,97,108,105,100,32,116,105,109,101,32,118,97,108,117,101,0,116,82,78,83,32,99,104,117,110,107,32,104,97,115,32,111,117,116,45,111,102,45,114,97,110,103,101,32,115,97,109,112,108,101,115,32,102,111,114,32,98,105,116,95,100,101,112,116,104,0,116,111,111,32,109,97,110,121,32,115,80,76,84,32,99,104,117,110,107,115,0,112,110,103,95,115,101,116,95,115,80,76,84,58,32,105,110,118,97,108,105,100,32,115,80,76,84,0,115,80,76,84,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,116,111,111,32,109,97,110,121,32,117,110,107,110,111,119,110,32,99,104,117,110,107,115,0,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,32,110,111,119,32,101,120,112,101,99,116,115,32,97,32,118,97,108,105,100,32,108,111,99,97,116,105,111,110,0,105,110,118,97,108,105,100,32,108,111,99,97,116,105,111,110,32,105,110,32,112,110,103,95,115,101,116,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,117,110,107,110,111,119,110,32,99,104,117,110,107,58,32,111,117,116,32,111,102,32,109,101,109,111,114,121,0,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,58,32,105,110,118,97,108,105,100,32,107,101,101,112,0,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,58,32,110,111,32,99,104,117,110,107,32,108,105,115,116,0,98,75,71,68,0,99,72,82,77,0,103,65,77,65,0,104,73,83,84,0,105,67,67,80,0,105,84,88,116,0,111,70,70,115,0,112,67,65,76,0,112,72,89,115,0,115,66,73,84,0,115,67,65,76,0,115,80,76,84,0,115,84,69,82,0,115,82,71,66,0,116,69,88,116,0,116,73,77,69,0,122,84,88,116,0,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,58,32,116,111,111,32,109,97,110,121,32,99,104,117,110,107,115,0,0,64,128,192,16,80,144,208,32,96,160,224,48,112,176,240,4,68,132,196,20,84,148,212,36,100,164,228,52,116,180,244,8,72,136,200,24,88,152,216,40,104,168,232,56,120,184,248,12,76,140,204,28,92,156,220,44,108,172,236,60,124,188,252,1,65,129,193,17,81,145,209,33,97,161,225,49,113,177,241,5,69,133,197,21,85,149,213,37,101,165,229,53,117,181,245,9,73,137,201,25,89,153,217,41,105,169,233,57,121,185,249,13,77,141,205,29,93,157,221,45,109,173,237,61,125,189,253,2,66,130,194,18,82,146,210,34,98,162,226,50,114,178,242,6,70,134,198,22,86,150,214,38,102,166,230,54,118,182,246,10,74,138,202,26,90,154,218,42,106,170,234,58,122,186,250,14,78,142,206,30,94,158,222,46,110,174,238,62,126,190,254,3,67,131,195,19,83,147,211,35,99,163,227,51,115,179,243,7,71,135,199,23,87,151,215,39,103,167,231,55,119,183,247,11,75,139,203,27,91,155,219,43,107,171,235,59,123,187,251,15,79,143,207,31,95,159,223,47,111,175,239,63,127,191,255,0,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,1,17,33,49,65,81,97,113,129,145,161,177,193,209,225,241,2,18,34,50,66,82,98,114,130,146,162,178,194,210,226,242,3,19,35,51,67,83,99,115,131,147,163,179,195,211,227,243,4,20,36,52,68,84,100,116,132,148,164,180,196,212,228,244,5,21,37,53,69,85,101,117,133,149,165,181,197,213,229,245,6,22,38,54,70,86,102,118,134,150,166,182,198,214,230,246,7,23,39,55,71,87,103,119,135,151,167,183,199,215,231,247,8,24,40,56,72,88,104,120,136,152,168,184,200,216,232,248,9,25,41,57,73,89,105,121,137,153,169,185,201,217,233,249,10,26,42,58,74,90,106,122,138,154,170,186,202,218,234,250,11,27,43,59,75,91,107,123,139,155,171,187,203,219,235,251,12,28,44,60,76,92,108,124,140,156,172,188,204,220,236,252,13,29,45,61,77,93,109,125,141,157,173,189,205,221,237,253,14,30,46,62,78,94,110,126,142,158,174,190,206,222,238,254,15,31,47,63,79,95,111,127,143,159,175,191,207,223,239,255,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255,67,97,108,108,32,116,111,32,78,85,76,76,32,119,114,105,116,101,32,102,117,110,99,116,105,111,110,0,108,101,110,103,116,104,32,101,120,99,101,101,100,115,32,80,78,71,32,109,97,120,105,109,117,109,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,102,111,114,32,103,114,97,121,115,99,97,108,101,32,105,109,97,103,101,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,102,111,114,32,82,71,66,32,105,109,97,103,101,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,102,111,114,32,112,97,108,101,116,116,101,100,32,105,109,97,103,101,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,102,111,114,32,103,114,97,121,115,99,97,108,101,43,97,108,112,104,97,32,105,109,97,103,101,0,73,110,118,97,108,105,100,32,98,105,116,32,100,101,112,116,104,32,102,111,114,32,82,71,66,65,32,105,109,97,103,101,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,99,111,108,111,114,32,116,121,112,101,32,115,112,101,99,105,102,105,101,100,0,73,110,118,97,108,105,100,32,99,111,109,112,114,101,115,115,105,111,110,32,116,121,112,101,32,115,112,101,99,105,102,105,101,100,0,73,110,118,97,108,105,100,32,102,105,108,116,101,114,32,116,121,112,101,32,115,112,101,99,105,102,105,101,100,0,73,110,118,97,108,105,100,32,105,110,116,101,114,108,97,99,101,32,116,121,112,101,32,115,112,101,99,105,102,105,101,100,0,73,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,99,111,108,111,114,115,32,105,110,32,112,97,108,101,116,116,101,0,73,103,110,111,114,105,110,103,32,114,101,113,117,101,115,116,32,116,111,32,119,114,105,116,101,32,97,32,80,76,84,69,32,99,104,117,110,107,32,105,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,90,95,79,75,32,111,110,32,90,95,70,73,78,73,83,72,32,119,105,116,104,32,111,117,116,112,117,116,32,115,112,97,99,101,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,32,99,111,100,101,0,117,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,76,90,32,115,116,114,101,97,109,0,109,105,115,115,105,110,103,32,76,90,32,100,105,99,116,105,111,110,97,114,121,0,122,108,105,98,32,73,79,32,101,114,114,111,114,0,98,97,100,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,122,108,105,98,0,100,97,109,97,103,101,100,32,76,90,32,115,116,114,101,97,109,0,117,110,115,117,112,112,111,114,116,101,100,32,122,108,105,98,32,118,101,114,115,105,111,110,0,117,110,101,120,112,101,99,116,101,100,32,122,108,105,98,32,114,101,116,117,114,110,0,105,110,32,117,115,101,32,98,121,32,73,68,65,84,0,100,101,102,108,97,116,101,69,110,100,32,102,97,105,108,101,100,32,40,105,103,110,111,114,101,100,41,0,73,110,118,97,108,105,100,32,115,82,71,66,32,114,101,110,100,101,114,105,110,103,32,105,110,116,101,110,116,32,115,112,101,99,105,102,105,101,100,0,78,111,32,112,114,111,102,105,108,101,32,102,111,114,32,105,67,67,80,32,99,104,117,110,107,0,73,67,67,32,112,114,111,102,105,108,101,32,116,111,111,32,115,104,111,114,116,0,73,67,67,32,112,114,111,102,105,108,101,32,108,101,110,103,116,104,32,105,110,118,97,108,105,100,32,40,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,52,41,0,105,67,67,80,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,101,114,114,111,114,32,119,114,105,116,105,110,103,32,97,110,99,105,108,108,97,114,121,32,99,104,117,110,107,101,100,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,32,116,111,111,32,108,111,110,103,0,107,101,121,119,111,114,100,32,116,114,117,110,99,97,116,101,100,0,107,101,121,119,111,114,100,32,34,64,49,34,58,32,98,97,100,32,99,104,97,114,97,99,116,101,114,32,39,48,120,64,50,39,0,49,50,51,52,53,54,55,56,57,0,115,80,76,84,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,73,110,118,97,108,105,100,32,115,66,73,84,32,100,101,112,116,104,32,115,112,101,99,105,102,105,101,100,0,73,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,116,114,97,110,115,112,97,114,101,110,116,32,99,111,108,111,114,115,32,115,112,101,99,105,102,105,101,100,0,73,103,110,111,114,105,110,103,32,97,116,116,101,109,112,116,32,116,111,32,119,114,105,116,101,32,116,82,78,83,32,99,104,117,110,107,32,111,117,116,45,111,102,45,114,97,110,103,101,32,102,111,114,32,98,105,116,95,100,101,112,116,104,0,73,103,110,111,114,105,110,103,32,97,116,116,101,109,112,116,32,116,111,32,119,114,105,116,101,32,49,54,45,98,105,116,32,116,82,78,83,32,99,104,117,110,107,32,119,104,101,110,32,98,105,116,95,100,101,112,116,104,32,105,115,32,56,0,67,97,110,39,116,32,119,114,105,116,101,32,116,82,78,83,32,119,105,116,104,32,97,110,32,97,108,112,104,97,32,99,104,97,110,110,101,108,0,73,110,118,97,108,105,100,32,98,97,99,107,103,114,111,117,110,100,32,112,97,108,101,116,116,101,32,105,110,100,101,120,0,73,103,110,111,114,105,110,103,32,97,116,116,101,109,112,116,32,116,111,32,119,114,105,116,101,32,49,54,45,98,105,116,32,98,75,71,68,32,99,104,117,110,107,32,119,104,101,110,32,98,105,116,95,100,101,112,116,104,32,105,115,32,56,0,73,103,110,111,114,105,110,103,32,97,116,116,101,109,112,116,32,116,111,32,119,114,105,116,101,32,98,75,71,68,32,99,104,117,110,107,32,111,117,116,45,111,102,45,114,97,110,103,101,32,102,111,114,32,98,105,116,95,100,101,112,116,104,0,73,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,104,105,115,116,111,103,114,97,109,32,101,110,116,114,105,101,115,32,115,112,101,99,105,102,105,101,100,0,116,69,88,116,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,116,69,88,116,58,32,116,101,120,116,32,116,111,111,32,108,111,110,103,0,122,84,88,116,58,32,105,110,118,97,108,105,100,32,99,111,109,112,114,101,115,115,105,111,110,32,116,121,112,101,0,122,84,88,116,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,105,84,88,116,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,105,84,88,116,58,32,105,110,118,97,108,105,100,32,99,111,109,112,114,101,115,115,105,111,110,0,105,84,88,116,58,32,117,110,99,111,109,112,114,101,115,115,101,100,32,116,101,120,116,32,116,111,111,32,108,111,110,103,0,85,110,114,101,99,111,103,110,105,122,101,100,32,117,110,105,116,32,116,121,112,101,32,102,111,114,32,111,70,70,115,32,99,104,117,110,107,0,85,110,114,101,99,111,103,110,105,122,101,100,32,101,113,117,97,116,105,111,110,32,116,121,112,101,32,102,111,114,32,112,67,65,76,32,99,104,117,110,107,0,112,67,65,76,58,32,105,110,118,97,108,105,100,32,107,101,121,119,111,114,100,0,67,97,110,39,116,32,119,114,105,116,101,32,115,67,65,76,32,40,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,41,0,85,110,114,101,99,111,103,110,105,122,101,100,32,117,110,105,116,32,116,121,112,101,32,102,111,114,32,112,72,89,115,32,99,104,117,110,107,0,73,110,118,97,108,105,100,32,116,105,109,101,32,115,112,101,99,105,102,105,101,100,32,102,111,114,32,116,73,77,69,32,99,104,117,110,107,0,82,101,97,100,32,69,114,114,111,114,0,80,111,116,101,110,116,105,97,108,32,111,118,101,114,102,108,111,119,32,105,110,32,112,110,103,95,122,97,108,108,111,99,40,41,0,49,46,54,46,49,55,0,65,112,112,108,105,99,97,116,105,111,110,32,98,117,105,108,116,32,119,105,116,104,32,108,105,98,112,110,103,45,0,32,98,117,116,32,114,117,110,110,105,110,103,32,119,105,116,104,32,0,77,105,115,115,105,110,103,32,73,72,68,82,32,98,101,102,111,114,101,32,73,68,65,84,0,77,105,115,115,105,110,103,32,80,76,84,69,32,98,101,102,111,114,101,32,73,68,65,84,0,84,111,111,32,109,97,110,121,32,73,68,65,84,115,32,102,111,117,110,100,0,110,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,0,109,105,115,115,105,110,103,32,73,72,68,82,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,114,101,97,100,32,99,104,117,110,107,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,116,114,117,110,99,97,116,101,100,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,105,110,102,111,0,98,97,100,32,107,101,121,119,111,114,100,0,122,115,116,114,101,97,109,32,117,110,99,108,97,105,109,101,100,0,101,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,32,117,115,105,110,103,32,122,115,116,114,101,97,109,0,49,46,50,46,56,0,67,97,108,108,32,116,111,32,78,85,76,76,32,114,101,97,100,32,102,117,110,99,116,105,111,110,0,67,82,67,32,101,114,114,111,114,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,116,121,112,101,0,111,117,116,32,111,102,32,112,108,97,99,101,0,100,117,112,108,105,99,97,116,101,0,105,110,118,97,108,105,100,0,105,110,118,97,108,105,100,32,119,105,116,104,32,97,108,112,104,97,32,99,104,97,110,110,101,108,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,32,116,111,32,112,114,111,99,101,115,115,32,116,101,120,116,32,99,104,117,110,107,0,78,111,32,115,112,97,99,101,32,105,110,32,99,104,117,110,107,32,99,97,99,104,101,32,102,111,114,32,115,80,76,84,0,109,97,108,102,111,114,109,101,100,32,115,80,76,84,32,99,104,117,110,107,0,115,80,76,84,32,99,104,117,110,107,32,104,97,115,32,98,97,100,32,108,101,110,103,116,104,0,115,80,76,84,32,99,104,117,110,107,32,116,111,111,32,108,111,110,103,0,115,80,76,84,32,99,104,117,110,107,32,114,101,113,117,105,114,101,115,32,116,111,111,32,109,117,99,104,32,109,101,109,111,114,121,0,116,111,111,32,115,104,111,114,116,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,116,111,111,32,109,97,110,121,32,112,114,111,102,105,108,101,115,0,105,110,118,97,108,105,100,32,117,110,105,116,0,98,97,100,32,119,105,100,116,104,32,102,111,114,109,97,116,0,110,111,110,45,112,111,115,105,116,105,118,101,32,119,105,100,116,104,0,98,97,100,32,104,101,105,103,104,116,32,102,111,114,109,97,116,0,110,111,110,45,112,111,115,105,116,105,118,101,32,104,101,105,103,104,116,0,105,110,118,97,108,105,100,32,112,97,114,97,109,101,116,101,114,32,99,111,117,110,116,0,117,110,114,101,99,111,103,110,105,122,101,100,32,101,113,117,97,116,105,111,110,32,116,121,112,101,0,105,110,118,97,108,105,100,32,100,97,116,97,0,105,110,118,97,108,105,100,32,118,97,108,117,101,115,0,105,110,118,97,108,105,100,32,105,110,100,101,120,0,105,103,110,111,114,101,100,32,105,110,32,103,114,97,121,115,99,97,108,101,32,80,78,71,0,116,82,78,83,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,104,73,83,84,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,98,75,71,68,32,109,117,115,116,32,98,101,32,97,102,116,101,114,0,101,114,114,111,114,32,105,110,32,117,115,101,114,32,99,104,117,110,107,0,83,97,118,105,110,103,32,117,110,107,110,111,119,110,32,99,104,117,110,107,58,0,102,111,114,99,105,110,103,32,115,97,118,101,32,111,102,32,97,110,32,117,110,104,97,110,100,108,101,100,32,99,104,117,110,107,59,32,112,108,101,97,115,101,32,99,97,108,108,32,112,110,103,95,115,101,116,95,107,101,101,112,95,117,110,107,110,111,119,110,95,99,104,117,110,107,115,0,117,110,104,97,110,100,108,101,100,32,99,114,105,116,105,99,97,108,32,99,104,117,110,107,0,117,110,107,110,111,119,110,32,99,104,117,110,107,32,101,120,99,101,101,100,115,32,109,101,109,111,114,121,32,108,105,109,105,116,115,0,80,78,71,32,117,110,115,105,103,110,101,100,32,105,110,116,101,103,101,114,32,111,117,116,32,111,102,32,114,97,110,103,101,0,105,110,118,97,108,105,100,32,99,104,117,110,107,32,116,121,112,101,0,78,111,116,32,97,32,80,78,71,32,102,105,108,101,0,80,78,71,32,102,105,108,101,32,99,111,114,114,117,112,116,101,100,32,98,121,32,65,83,67,73,73,32,99,111,110,118,101,114,115,105,111,110,0,137,80,78,71,13,10,26,10,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,47,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,58,32,100,117,112,108,105,99,97,116,101,32,99,97,108,108,0,80,97,108,101,116,116,101,32,105,115,32,78,85,76,76,32,105,110,32,105,110,100,101,120,101,100,32,105,109,97,103,101,0,8,8,4,4,2,2,1,0,4,0,2,0,1,0,82,111,119,32,104,97,115,32,116,111,111,32,109,97,110,121,32,98,121,116,101,115,32,116,111,32,97,108,108,111,99,97,116,101,32,105,110,32,109,101,109,111,114,121,0,108,105,98,112,110,103,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,103,97,109,109,97,43,98,97,99,107,103,114,111,117,110,100,43,114,103,98,95,116,111,95,103,114,97,121,0,105,110,118,97,108,105,100,32,98,97,99,107,103,114,111,117,110,100,32,103,97,109,109,97,32,116,121,112,101,0,103,97,109,109,97,32,116,97,98,108,101,32,98,101,105,110,103,32,114,101,98,117,105,108,116,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,32,99,111,101,102,102,105,99,105,101,110,116,115,0,105,110,116,101,114,110,97,108,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,32,99,72,82,77,45,62,88,89,90,0,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,47,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,58,32,100,117,112,108,105,99,97,116,101,32,99,97,108,108,0,73,110,118,97,108,105,100,32,97,116,116,101,109,112,116,32,116,111,32,114,101,97,100,32,114,111,119,32,100,97,116,97,0,98,97,100,32,97,100,97,112,116,105,118,101,32,102,105,108,116,101,114,32,118,97,108,117,101,0,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,111,118,101,114,102,108,111,119,0,105,110,116,101,114,110,97,108,32,115,101,113,117,101,110,116,105,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,78,85,76,76,32,114,111,119,32,98,117,102,102,101,114,0,85,110,105,110,105,116,105,97,108,105,122,101,100,32,114,111,119,0,112,110,103,95,100,111,95,114,103,98,95,116,111,95,103,114,97,121,32,102,111,117,110,100,32,110,111,110,103,114,97,121,32,112,105,120,101,108,0,112,110,103,95,100,111,95,101,110,99,111,100,101,95,97,108,112,104,97,58,32,117,110,101,120,112,101,99,116,101,100,32,99,97,108,108,0,112,110,103,95,100,111,95,113,117,97,110,116,105,122,101,32,114,101,116,117,114,110,101,100,32,114,111,119,98,121,116,101,115,61,48,0,78,111,116,32,101,110,111,117,103,104,32,105,109,97,103,101,32,100,97,116,97,0,69,120,116,114,97,32,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,84,111,111,32,109,117,99,104,32,105,109,97,103,101,32,100,97,116,97,0,8,8,8,4,4,2,2,0,0,4,0,2,0,1,105,110,116,101,114,110,97,108,32,114,111,119,32,108,111,103,105,99,32,101,114,114,111,114,0,105,110,116,101,114,110,97,108,32,114,111,119,32,115,105,122,101,32,99,97,108,99,117,108,97,116,105,111,110,32,101,114,114,111,114,0,105,110,116,101,114,110,97,108,32,114,111,119,32,119,105,100,116,104,32,101,114,114,111,114,0,105,110,118,97,108,105,100,32,117,115,101,114,32,116,114,97,110,115,102,111,114,109,32,112,105,120,101,108,32,100,101,112,116,104,0,73,110,116,101,114,108,97,99,101,32,104,97,110,100,108,105,110,103,32,115,104,111,117,108,100,32,98,101,32,116,117,114,110,101,100,32,111,110,32,119,104,101,110,32,117,115,105,110,103,32,112,110,103,95,114,101,97,100,95,105,109,97,103,101,0,82,101,97,100,32,112,97,108,101,116,116,101,32,105,110,100,101,120,32,101,120,99,101,101,100,105,110,103,32,110,117,109,95,112,97,108,101,116,116,101,0,105,110,118,97,108,105,100,32,97,102,116,101,114,32,112,110,103,95,115,116,97,114,116,95,114,101,97,100,95,105,109,97,103,101,32,111,114,32,112,110,103,95,114,101,97,100,95,117,112,100,97,116,101,95,105,110,102,111,0,112,110,103,95,115,101,116,95,102,105,108,108,101,114,32,105,115,32,105,110,118,97,108,105,100,32,102,111,114,32,108,111,119,32,98,105,116,32,100,101,112,116,104,32,103,114,97,121,32,111,117,116,112,117,116,0,112,110,103,95,115,101,116,95,102,105,108,108,101,114,58,32,105,110,97,112,112,114,111,112,114,105,97,116,101,32,99,111,108,111,114,32,116,121,112,101,0,87,114,105,116,101,32,69,114,114,111,114,0,67,97,110,39,116,32,115,101,116,32,98,111,116,104,32,114,101,97,100,95,100,97,116,97,95,102,110,32,97,110,100,32,119,114,105,116,101,95,100,97,116,97,95,102,110,32,105,110,32,116,104,101,32,115,97,109,101,32,115,116,114,117,99,116,117,114,101,0,77,78,71,32,102,101,97,116,117,114,101,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,97,32,80,78,71,32,100,97,116,97,115,116,114,101,97,109,0,112,114,111,102,105,108,101,32,109,97,116,99,104,101,115,32,115,82,71,66,32,98,117,116,32,119,114,105,116,105,110,103,32,105,67,67,80,32,105,110,115,116,101,97,100,0,87,114,105,116,105,110,103,32,122,101,114,111,45,108,101,110,103,116,104,32,117,110,107,110,111,119,110,32,99,104,117,110,107,0,86,97,108,105,100,32,112,97,108,101,116,116,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,112,97,108,101,116,116,101,100,32,105,109,97,103,101,115,0,78,111,32,73,68,65,84,115,32,119,114,105,116,116,101,110,32,105,110,116,111,32,102,105,108,101,0,87,114,111,116,101,32,112,97,108,101,116,116,101,32,105,110,100,101,120,32,101,120,99,101,101,100,105,110,103,32,110,117,109,95,112,97,108,101,116,116,101,0,112,110,103,95,119,114,105,116,101,95,105,110,102,111,32,119,97,115,32,110,101,118,101,114,32,99,97,108,108,101,100,32,98,101,102,111,114,101,32,112,110,103,95,119,114,105,116,101,95,114,111,119,0,105,110,116,101,114,110,97,108,32,119,114,105,116,101,32,116,114,97,110,115,102,111,114,109,32,108,111,103,105,99,32,101,114,114,111,114,0,85,110,107,110,111,119,110,32,114,111,119,32,102,105,108,116,101,114,32,102,111,114,32,109,101,116,104,111,100,32,48,0,67,97,110,39,116,32,97,100,100,32,85,112,32,102,105,108,116,101,114,32,97,102,116,101,114,32,115,116,97,114,116,105,110,103,0,67,97,110,39,116,32,97,100,100,32,65,118,101,114,97,103,101,32,102,105,108,116,101,114,32,97,102,116,101,114,32,115,116,97,114,116,105,110,103,0,67,97,110,39,116,32,97,100,100,32,80,97,101,116,104,32,102,105,108,116,101,114,32,97,102,116,101,114,32,115,116,97,114,116,105,110,103,0,85,110,107,110,111,119,110,32,99,117,115,116,111,109,32,102,105,108,116,101,114,32,109,101,116,104,111,100,0,105,110,99,111,114,114,101,99,116,32,104,101,97,100,101,114,32,99,104,101,99,107,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,105,110,118,97,108,105,100,32,119,105,110,100,111,119,32,115,105,122,101,0,117,110,107,110,111,119,110,32,104,101,97,100,101,114,32,102,108,97,103,115,32,115,101,116,0,104,101,97,100,101,114,32,99,114,99,32,109,105,115,109,97,116,99,104,0,105,110,118,97,108,105,100,32,98,108,111,99,107,32,116,121,112,101,0,105,110,118,97,108,105,100,32,115,116,111,114,101,100,32,98,108,111,99,107,32,108,101,110,103,116,104,115,0,116,111,111,32,109,97,110,121,32,108,101,110,103,116,104,32,111,114,32,100,105,115,116,97,110,99,101,32,115,121,109,98,111,108,115,0,105,110,118,97,108,105,100,32,99,111,100,101,32,108,101,110,103,116,104,115,32,115,101,116,0,105,110,118,97,108,105,100,32,98,105,116,32,108,101,110,103,116,104,32,114,101,112,101,97,116,0,105,110,118,97,108,105,100,32,99,111,100,101,32,45,45,32,109,105,115,115,105,110,103,32,101,110,100,45,111,102,45,98,108,111,99,107,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,115,32,115,101,116,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,115,32,115,101,116,0,105,110,99,111,114,114,101,99,116,32,100,97,116,97,32,99,104,101,99,107,0,105,110,99,111,114,114,101,99,116,32,108,101,110,103,116,104,32,99,104,101,99,107,0,0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15,110,101,101,100,32,100,105,99,116,105,111,110,97,114,121,0,115,116,114,101,97,109,32,101,110,100,0,102,105,108,101,32,101,114,114,111,114,0,115,116,114,101,97,109,32,101,114,114,111,114,0,100,97,116,97,32,101,114,114,111,114,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,98,117,102,102,101,114,32,101,114,114,111,114,0,105,110,99,111,109,112,97,116,105,98,108,101,32,118,101,114,115,105,111,110,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,78,65,78,0,46,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+20500);\n/* memory initializer */ allocate([32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,110,97,110,0,114,119,97,0,58,32,105,108,108,101,103,97,108,32,111,112,116,105,111,110,58,32,0,10,0,58,32,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,58,32,0], \"i8\", ALLOC_NONE, Runtime.GLOBAL_BASE+30740);\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = STATICTOP; STATICTOP += 16;\n\nassert(tempDoublePtr % 8 == 0);\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n}\n\nfunction copyTempDouble(ptr) {\n\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n\n}\n\n// {{PRE_LIBRARY}}\n\n\n   \n  Module[\"_i64Subtract\"] = _i64Subtract;\n\n   \n  Module[\"_i64Add\"] = _i64Add;\n\n   \n  Module[\"_memset\"] = _memset;\n\n   \n  Module[\"_bitshift64Shl\"] = _bitshift64Shl;\n\n  function _abort() {\n      Module['abort']();\n    }\n\n  function ___lock() {}\n\n  function ___unlock() {}\n\n  var _llvm_pow_f32=Math_pow;\n\n  function _llvm_stackrestore(p) {\n      var self = _llvm_stacksave;\n      var ret = self.LLVM_SAVEDSTACKS[p];\n      self.LLVM_SAVEDSTACKS.splice(p, 1);\n      Runtime.stackRestore(ret);\n    }\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n      return dest;\n    } \n  Module[\"_memcpy\"] = _memcpy;\n\n  \n  function _realloc() { throw 'bad' }\n  Module[\"_realloc\"] = _realloc; \n  Module[\"_saveSetjmp\"] = _saveSetjmp;\n\n   \n  Module[\"_memmove\"] = _memmove;\n\n  \n  \n  \n  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};\n  \n  var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      else Module.printErr('failed to set errno from JS');\n      return value;\n    }\n  \n  var PATH={splitPath:function (filename) {\n        var splitPathRe = /^(/?|)([sS]*?)((?:.{1,2}|[^/]+?|)(.[^./]*|))(?:[/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function (parts, allowAboveRoot) {\n        // if the path tries to go above the root, 'up' ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up--; up) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function (path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function (path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function (path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function (path) {\n        return PATH.splitPath(path)[3];\n      },join:function () {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function (l, r) {\n        return PATH.normalize(l + '/' + r);\n      },resolve:function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path !== 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === '/';\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {\n          return !!p;\n        }), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },relative:function (from, to) {\n        from = PATH.resolve(from).substr(1);\n        to = PATH.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      }};\n  \n  var TTY={ttys:[],init:function () {\n        // https://github.com/kripken/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process['stdin']['setEncoding']('utf8');\n        // }\n      },shutdown:function () {\n        // https://github.com/kripken/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process['stdin']['pause']();\n        // }\n      },register:function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },stream_ops:{open:function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },close:function (stream) {\n          // flush any pending line data\n          stream.tty.ops.flush(stream.tty);\n        },flush:function (stream) {\n          stream.tty.ops.flush(stream.tty);\n        },read:function (stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(ERRNO_CODES.EIO);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },write:function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);\n          }\n          for (var i = 0; i < length; i++) {\n            try {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            } catch (e) {\n              throw new FS.ErrnoError(ERRNO_CODES.EIO);\n            }\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }},default_tty_ops:{get_char:function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              // we will read data by chunks of BUFSIZE\n              var BUFSIZE = 256;\n              var buf = new Buffer(BUFSIZE);\n              var bytesRead = 0;\n  \n              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion\n  \n              var fd = process.stdin.fd;\n              if (isPosixPlatform) {\n                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)\n                var usingDevice = false;\n                try {\n                  fd = fs.openSync('/dev/stdin', 'r');\n                  usingDevice = true;\n                } catch (e) {}\n              }\n  \n              try {\n                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);\n              } catch(e) {\n                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,\n                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.\n                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;\n                else throw e;\n              }\n  \n              if (usingDevice) { fs.closeSync(fd); }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString('utf-8');\n              } else {\n                result = null;\n              }\n  \n            } else if (typeof window != 'undefined' &&\n              typeof window.prompt == 'function') {\n              // Browser.\n              result = window.prompt('Input: ');  // returns null on cancel\n              if (result !== null) {\n                result += '\n';\n              }\n            } else if (typeof readline == 'function') {\n              // Command line.\n              result = readline();\n              if (result !== null) {\n                result += '\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },put_char:function (tty, val) {\n          if (val === null || val === 10) {\n            Module['print'](UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },flush:function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            Module['print'](UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }},default_tty1_ops:{put_char:function (tty, val) {\n          if (val === null || val === 10) {\n            Module['printErr'](UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },flush:function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            Module['printErr'](UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }}};\n  \n  var MEMFS={ops_table:null,mount:function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },createNode:function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },getFileDataAsRegularArray:function (node) {\n        if (node.contents && node.contents.subarray) {\n          var arr = [];\n          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);\n          return arr; // Returns a copy of the original data.\n        }\n        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.\n      },getFileDataAsTypedArray:function (node) {\n        if (!node.contents) return new Uint8Array;\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },expandFileStorage:function (node, newCapacity) {\n        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file\n        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to\n        // increase the size.\n        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {\n          node.contents = MEMFS.getFileDataAsRegularArray(node);\n          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.\n        }\n  \n        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n          // avoid overshooting the allocation cap by a very large margin.\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);\n          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n          return;\n        }\n        // Not using a typed array to back the file storage. Use a standard JS array instead.\n        if (!node.contents && newCapacity > 0) node.contents = [];\n        while (node.contents.length < newCapacity) node.contents.push(0);\n      },resizeFileStorage:function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n          return;\n        }\n        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n          return;\n        }\n        // Backing with a JS array.\n        if (!node.contents) node.contents = [];\n        if (node.contents.length > newSize) node.contents.length = newSize;\n        else while (node.contents.length < newSize) node.contents.push(0);\n        node.usedBytes = newSize;\n      },node_ops:{getattr:function (node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },setattr:function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },lookup:function (parent, name) {\n          throw FS.genericErrors[ERRNO_CODES.ENOENT];\n        },mknod:function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },rename:function (old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        },unlink:function (parent, name) {\n          delete parent.contents[name];\n        },rmdir:function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);\n          }\n          delete parent.contents[name];\n        },readdir:function (node) {\n          var entries = ['.', '..']\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },symlink:function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },readlink:function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return node.link;\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          assert(size >= 0);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },write:function (stream, buffer, offset, length, position, canOwn) {\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.\n          else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position+length);\n          return length;\n        },llseek:function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return position;\n        },allocate:function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },mmap:function (stream, buffer, offset, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if ( !(flags & 2) &&\n                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {\n            // We can't emulate MAP_SHARED when the file is not backed by the buffer\n            // we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < stream.node.usedBytes) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = _malloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);\n            }\n            buffer.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },msync:function (stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n          }\n          if (mmapFlags & 2) {\n            // MAP_PRIVATE calls need not to be synced back to underlying fs\n            return 0;\n          }\n  \n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        }}};\n  \n  var IDBFS={dbs:{},indexedDB:function () {\n        if (typeof indexedDB !== 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        assert(ret, 'IDBFS used, but indexedDB not supported');\n        return ret;\n      },DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:function (mount) {\n        // reuse all of the core MEMFS functionality\n        return MEMFS.mount.apply(null, arguments);\n      },syncfs:function (mount, populate, callback) {\n        IDBFS.getLocalSet(mount, function(err, local) {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, function(err, remote) {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },getDB:function (name, callback) {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = function(e) {\n          var db = e.target.result;\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = function() {\n          db = req.result;\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },getLocalSet:function (mount, callback) {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return function(p) {\n            return PATH.join2(root, p);\n          }\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { timestamp: stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },getRemoteSet:function (mount, callback) {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, function(err, db) {\n          if (err) return callback(err);\n  \n          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n          transaction.onerror = function(e) {\n            callback(this.error);\n            e.preventDefault();\n          };\n  \n          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          var index = store.index('timestamp');\n  \n          index.openKeyCursor().onsuccess = function(event) {\n            var cursor = event.target.result;\n  \n            if (!cursor) {\n              return callback(null, { type: 'remote', db: db, entries: entries });\n            }\n  \n            entries[cursor.primaryKey] = { timestamp: cursor.key };\n  \n            cursor.continue();\n          };\n        });\n      },loadLocalEntry:function (path, callback) {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { timestamp: stat.mtime, mode: stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },storeLocalEntry:function (path, entry, callback) {\n        try {\n          if (FS.isDir(entry.mode)) {\n            FS.mkdir(path, entry.mode);\n          } else if (FS.isFile(entry.mode)) {\n            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry.mode);\n          FS.utime(path, entry.timestamp, entry.timestamp);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },removeLocalEntry:function (path, callback) {\n        try {\n          var lookup = FS.lookupPath(path);\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },loadRemoteEntry:function (store, path, callback) {\n        var req = store.get(path);\n        req.onsuccess = function(event) { callback(null, event.target.result); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },storeRemoteEntry:function (store, path, entry, callback) {\n        var req = store.put(entry, path);\n        req.onsuccess = function() { callback(null); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },removeRemoteEntry:function (store, path, callback) {\n        var req = store.delete(path);\n        req.onsuccess = function() { callback(null); };\n        req.onerror = function(e) {\n          callback(this.error);\n          e.preventDefault();\n        };\n      },reconcile:function (src, dst, callback) {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach(function (key) {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e.timestamp > e2.timestamp) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach(function (key) {\n          var e = dst.entries[key];\n          var e2 = src.entries[key];\n          if (!e2) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var completed = 0;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err) {\n            if (!done.errored) {\n              done.errored = true;\n              return callback(err);\n            }\n            return;\n          }\n          if (++completed >= total) {\n            return callback(null);\n          }\n        };\n  \n        transaction.onerror = function(e) {\n          done(this.error);\n          e.preventDefault();\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach(function (path) {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, function (err, entry) {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, function (err, entry) {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach(function(path) {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      }};\n  \n  var NODEFS={isWindows:false,staticInit:function () {\n        NODEFS.isWindows = !!process.platform.match(/^win/);\n      },mount:function (mount) {\n        assert(ENVIRONMENT_IS_NODE);\n        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);\n      },createNode:function (parent, name, mode, dev) {\n        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var node = FS.createNode(parent, name, mode);\n        node.node_ops = NODEFS.node_ops;\n        node.stream_ops = NODEFS.stream_ops;\n        return node;\n      },getMode:function (path) {\n        var stat;\n        try {\n          stat = fs.lstatSync(path);\n          if (NODEFS.isWindows) {\n            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so\n            // propagate write bits to execute bits.\n            stat.mode = stat.mode | ((stat.mode & 146) >> 1);\n          }\n        } catch (e) {\n          if (!e.code) throw e;\n          throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n        }\n        return stat.mode;\n      },realPath:function (node) {\n        var parts = [];\n        while (node.parent !== node) {\n          parts.push(node.name);\n          node = node.parent;\n        }\n        parts.push(node.mount.opts.root);\n        parts.reverse();\n        return PATH.join.apply(null, parts);\n      },flagsToPermissionStringMap:{0:\"r\",1:\"r+\",2:\"r+\",64:\"r\",65:\"r+\",66:\"r+\",129:\"rx+\",193:\"rx+\",514:\"w+\",577:\"w\",578:\"w+\",705:\"wx\",706:\"wx+\",1024:\"a\",1025:\"a\",1026:\"a+\",1089:\"a\",1090:\"a+\",1153:\"ax\",1154:\"ax+\",1217:\"ax\",1218:\"ax+\",4096:\"rs\",4098:\"rs+\"},flagsToPermissionString:function (flags) {\n        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.\n        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.\n        if (flags in NODEFS.flagsToPermissionStringMap) {\n          return NODEFS.flagsToPermissionStringMap[flags];\n        } else {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n      },node_ops:{getattr:function (node) {\n          var path = NODEFS.realPath(node);\n          var stat;\n          try {\n            stat = fs.lstatSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.\n          // See http://support.microsoft.com/kb/140365\n          if (NODEFS.isWindows && !stat.blksize) {\n            stat.blksize = 4096;\n          }\n          if (NODEFS.isWindows && !stat.blocks) {\n            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;\n          }\n          return {\n            dev: stat.dev,\n            ino: stat.ino,\n            mode: stat.mode,\n            nlink: stat.nlink,\n            uid: stat.uid,\n            gid: stat.gid,\n            rdev: stat.rdev,\n            size: stat.size,\n            atime: stat.atime,\n            mtime: stat.mtime,\n            ctime: stat.ctime,\n            blksize: stat.blksize,\n            blocks: stat.blocks\n          };\n        },setattr:function (node, attr) {\n          var path = NODEFS.realPath(node);\n          try {\n            if (attr.mode !== undefined) {\n              fs.chmodSync(path, attr.mode);\n              // update the common node structure mode as well\n              node.mode = attr.mode;\n            }\n            if (attr.timestamp !== undefined) {\n              var date = new Date(attr.timestamp);\n              fs.utimesSync(path, date, date);\n            }\n            if (attr.size !== undefined) {\n              fs.truncateSync(path, attr.size);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },lookup:function (parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          var mode = NODEFS.getMode(path);\n          return NODEFS.createNode(parent, name, mode);\n        },mknod:function (parent, name, mode, dev) {\n          var node = NODEFS.createNode(parent, name, mode, dev);\n          // create the backing node for this in the fs root as well\n          var path = NODEFS.realPath(node);\n          try {\n            if (FS.isDir(node.mode)) {\n              fs.mkdirSync(path, node.mode);\n            } else {\n              fs.writeFileSync(path, '', { mode: node.mode });\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          return node;\n        },rename:function (oldNode, newDir, newName) {\n          var oldPath = NODEFS.realPath(oldNode);\n          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);\n          try {\n            fs.renameSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },unlink:function (parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          try {\n            fs.unlinkSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },rmdir:function (parent, name) {\n          var path = PATH.join2(NODEFS.realPath(parent), name);\n          try {\n            fs.rmdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },readdir:function (node) {\n          var path = NODEFS.realPath(node);\n          try {\n            return fs.readdirSync(path);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },symlink:function (parent, newName, oldPath) {\n          var newPath = PATH.join2(NODEFS.realPath(parent), newName);\n          try {\n            fs.symlinkSync(oldPath, newPath);\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },readlink:function (node) {\n          var path = NODEFS.realPath(node);\n          try {\n            path = fs.readlinkSync(path);\n            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);\n            return path;\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        }},stream_ops:{open:function (stream) {\n          var path = NODEFS.realPath(stream.node);\n          try {\n            if (FS.isFile(stream.node.mode)) {\n              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },close:function (stream) {\n          try {\n            if (FS.isFile(stream.node.mode) && stream.nfd) {\n              fs.closeSync(stream.nfd);\n            }\n          } catch (e) {\n            if (!e.code) throw e;\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n        },read:function (stream, buffer, offset, length, position) {\n          if (length === 0) return 0; // node errors on 0 length reads\n          // FIXME this is terrible.\n          var nbuffer = new Buffer(length);\n          var res;\n          try {\n            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          if (res > 0) {\n            for (var i = 0; i < res; i++) {\n              buffer[offset + i] = nbuffer[i];\n            }\n          }\n          return res;\n        },write:function (stream, buffer, offset, length, position) {\n          // FIXME this is terrible.\n          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));\n          var res;\n          try {\n            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);\n          } catch (e) {\n            throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n          }\n          return res;\n        },llseek:function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              try {\n                var stat = fs.fstatSync(stream.nfd);\n                position += stat.size;\n              } catch (e) {\n                throw new FS.ErrnoError(ERRNO_CODES[e.code]);\n              }\n            }\n          }\n  \n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n  \n          return position;\n        }}};\n  \n  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {\n        assert(ENVIRONMENT_IS_WORKER);\n        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();\n        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);\n        var createdParents = {};\n        function ensureParent(path) {\n          // return the parent node, creating subdirs as necessary\n          var parts = path.split('/');\n          var parent = root;\n          for (var i = 0; i < parts.length-1; i++) {\n            var curr = parts.slice(0, i+1).join('/');\n            // Issue 4254: Using curr as a node name will prevent the node\n            // from being found in FS.nameTable when FS.open is called on\n            // a path which holds a child of this node,\n            // given that all FS functions assume node names\n            // are just their corresponding parts within their given path,\n            // rather than incremental aggregates which include their parent's\n            // directories.\n            if (!createdParents[curr]) {\n              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);\n            }\n            parent = createdParents[curr];\n          }\n          return parent;\n        }\n        function base(path) {\n          var parts = path.split('/');\n          return parts[parts.length-1];\n        }\n        // We also accept FileList here, by using Array.prototype\n        Array.prototype.forEach.call(mount.opts[\"files\"] || [], function(file) {\n          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);\n        });\n        (mount.opts[\"blobs\"] || []).forEach(function(obj) {\n          WORKERFS.createNode(ensureParent(obj[\"name\"]), base(obj[\"name\"]), WORKERFS.FILE_MODE, 0, obj[\"data\"]);\n        });\n        (mount.opts[\"packages\"] || []).forEach(function(pack) {\n          pack['metadata'].files.forEach(function(file) {\n            var name = file.filename.substr(1); // remove initial slash\n            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));\n          });\n        });\n        return root;\n      },createNode:function (parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = WORKERFS.node_ops;\n        node.stream_ops = WORKERFS.stream_ops;\n        node.timestamp = (mtime || new Date).getTime();\n        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);\n        if (mode === WORKERFS.FILE_MODE) {\n          node.size = contents.size;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },node_ops:{getattr:function (node) {\n          return {\n            dev: 1,\n            ino: undefined,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: undefined,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },setattr:function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },lookup:function (parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        },mknod:function (parent, name, mode, dev) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },rename:function (oldNode, newDir, newName) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },unlink:function (parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },rmdir:function (parent, name) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },readdir:function (node) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },symlink:function (parent, newName, oldPath) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        },readlink:function (node) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }},stream_ops:{read:function (stream, buffer, offset, length, position) {\n          if (position >= stream.node.size) return 0;\n          var chunk = stream.node.contents.slice(position, position + length);\n          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);\n          buffer.set(new Uint8Array(ab), offset);\n          return chunk.size;\n        },write:function (stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(ERRNO_CODES.EIO);\n        },llseek:function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {  // SEEK_CUR.\n            position += stream.position;\n          } else if (whence === 2) {  // SEEK_END.\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n          }\n          return position;\n        }}};\n  \n  var _stdin=STATICTOP; STATICTOP += 16;;\n  \n  var _stdout=STATICTOP; STATICTOP += 16;;\n  \n  var _stderr=STATICTOP; STATICTOP += 16;;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {\n        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();\n        return ___setErrNo(e.errno);\n      },lookupPath:function (path, opts) {\n        path = PATH.resolve(FS.cwd(), path);\n        opts = opts || {};\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);\n        }\n  \n        // split the path\n        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), false);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },getPath:function (node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },hashName:function (parentid, name) {\n        var hash = 0;\n  \n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },hashAddNode:function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },hashRemoveNode:function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },lookupNode:function (parent, name) {\n        var err = FS.mayLookup(parent);\n        if (err) {\n          throw new FS.ErrnoError(err, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },createNode:function (parent, name, mode, rdev) {\n        if (!FS.FSNode) {\n          FS.FSNode = function(parent, name, mode, rdev) {\n            if (!parent) {\n              parent = this;  // root node sets parent to itself\n            }\n            this.parent = parent;\n            this.mount = parent.mount;\n            this.mounted = null;\n            this.id = FS.nextInode++;\n            this.name = name;\n            this.mode = mode;\n            this.node_ops = {};\n            this.stream_ops = {};\n            this.rdev = rdev;\n          };\n  \n          FS.FSNode.prototype = {};\n  \n          // compatibility\n          var readMode = 292 | 73;\n          var writeMode = 146;\n  \n          // NOTE we must use Object.defineProperties instead of individual calls to\n          // Object.defineProperty in order to make closure compiler happy\n          Object.defineProperties(FS.FSNode.prototype, {\n            read: {\n              get: function() { return (this.mode & readMode) === readMode; },\n              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }\n            },\n            write: {\n              get: function() { return (this.mode & writeMode) === writeMode; },\n              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }\n            },\n            isFolder: {\n              get: function() { return FS.isDir(this.mode); }\n            },\n            isDevice: {\n              get: function() { return FS.isChrdev(this.mode); }\n            }\n          });\n        }\n  \n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },destroyNode:function (node) {\n        FS.hashRemoveNode(node);\n      },isRoot:function (node) {\n        return node === node.parent;\n      },isMountpoint:function (node) {\n        return !!node.mounted;\n      },isFile:function (mode) {\n        return (mode & 61440) === 32768;\n      },isDir:function (mode) {\n        return (mode & 61440) === 16384;\n      },isLink:function (mode) {\n        return (mode & 61440) === 40960;\n      },isChrdev:function (mode) {\n        return (mode & 61440) === 8192;\n      },isBlkdev:function (mode) {\n        return (mode & 61440) === 24576;\n      },isFIFO:function (mode) {\n        return (mode & 61440) === 4096;\n      },isSocket:function (mode) {\n        return (mode & 49152) === 49152;\n      },flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function (str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },flagsToPermissionString:function (flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },nodePermissions:function (node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {\n          return ERRNO_CODES.EACCES;\n        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {\n          return ERRNO_CODES.EACCES;\n        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {\n          return ERRNO_CODES.EACCES;\n        }\n        return 0;\n      },mayLookup:function (dir) {\n        var err = FS.nodePermissions(dir, 'x');\n        if (err) return err;\n        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;\n        return 0;\n      },mayCreate:function (dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return ERRNO_CODES.EEXIST;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },mayDelete:function (dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var err = FS.nodePermissions(dir, 'wx');\n        if (err) {\n          return err;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return ERRNO_CODES.ENOTDIR;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return ERRNO_CODES.EBUSY;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return ERRNO_CODES.EISDIR;\n          }\n        }\n        return 0;\n      },mayOpen:function (node, flags) {\n        if (!node) {\n          return ERRNO_CODES.ENOENT;\n        }\n        if (FS.isLink(node.mode)) {\n          return ERRNO_CODES.ELOOP;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return ERRNO_CODES.EISDIR;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);\n      },getStream:function (fd) {\n        return FS.streams[fd];\n      },createStream:function (stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function(){};\n          FS.FSStream.prototype = {};\n          // compatibility\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function() { return this.node; },\n              set: function(val) { this.node = val; }\n            },\n            isRead: {\n              get: function() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              get: function() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              get: function() { return (this.flags & 1024); }\n            }\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },closeStream:function (fd) {\n        FS.streams[fd] = null;\n      },chrdev_stream_ops:{open:function (stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },llseek:function () {\n          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);\n        }},major:function (dev) {\n        return ((dev) >> 8);\n      },minor:function (dev) {\n        return ((dev) & 0xff);\n      },makedev:function (ma, mi) {\n        return ((ma) << 8 | (mi));\n      },registerDevice:function (dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },getDevice:function (dev) {\n        return FS.devices[dev];\n      },getMounts:function (mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },syncfs:function (populate, callback) {\n        if (typeof(populate) === 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(err) {\n          assert(FS.syncFSRequests > 0);\n          FS.syncFSRequests--;\n          return callback(err);\n        }\n  \n        function done(err) {\n          if (err) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(err);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },mount:function (type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);\n          }\n        }\n  \n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },unmount:function (mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.indexOf(current.mount) !== -1) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        assert(idx !== -1);\n        node.mount.mounts.splice(idx, 1);\n      },lookup:function (parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },mknod:function (path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var err = FS.mayCreate(parent, name);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },create:function (path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },mkdir:function (path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },mkdirTree:function (path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != ERRNO_CODES.EEXIST) throw e;\n          }\n        }\n      },mkdev:function (path, mode, dev) {\n        if (typeof(dev) === 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },symlink:function (oldpath, newpath) {\n        if (!PATH.resolve(oldpath)) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        var newname = PATH.basename(newpath);\n        var err = FS.mayCreate(parent, newname);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },rename:function (old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n        try {\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n        } catch (e) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n        }\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var err = FS.mayDelete(old_dir, old_name, isdir);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        err = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          err = FS.nodePermissions(old_dir, 'w');\n          if (err) {\n            throw new FS.ErrnoError(err);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['willMovePath']) {\n            FS.trackingDelegate['willMovePath'](old_path, new_path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n        try {\n          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \" + e.message);\n        }\n      },rmdir:function (path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var err = FS.mayDelete(parent, name, true);\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readdir:function (path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);\n        }\n        return node.node_ops.readdir(node);\n      },unlink:function (path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var err = FS.mayDelete(parent, name, false);\n        if (err) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(err);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);\n        }\n        try {\n          if (FS.trackingDelegate['willDeletePath']) {\n            FS.trackingDelegate['willDeletePath'](path);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n        try {\n          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \" + e.message);\n        }\n      },readlink:function (path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },stat:function (path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        return node.node_ops.getattr(node);\n      },lstat:function (path) {\n        return FS.stat(path, true);\n      },chmod:function (path, mode, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },lchmod:function (path, mode) {\n        FS.chmod(path, mode, true);\n      },fchmod:function (fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        FS.chmod(stream.node, mode);\n      },chown:function (path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },lchown:function (path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },fchown:function (fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        FS.chown(stream.node, uid, gid);\n      },truncate:function (path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var node;\n        if (typeof path === 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(ERRNO_CODES.EPERM);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var err = FS.nodePermissions(node, 'w');\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },ftruncate:function (fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        FS.truncate(stream.node, len);\n      },utime:function (path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },open:function (path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path === 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var err = FS.mayOpen(node, flags);\n          if (err) {\n            throw new FS.ErrnoError(err);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512)) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n            Module['printErr']('read file: ' + path);\n          }\n        }\n        try {\n          if (FS.trackingDelegate['onOpenFile']) {\n            var trackingFlags = 0;\n            if ((flags & 2097155) !== 1) {\n              trackingFlags |= FS.tracking.openFlags.READ;\n            }\n            if ((flags & 2097155) !== 0) {\n              trackingFlags |= FS.tracking.openFlags.WRITE;\n            }\n            FS.trackingDelegate['onOpenFile'](path, trackingFlags);\n          }\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \" + e.message);\n        }\n        return stream;\n      },close:function (stream) {\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n      },llseek:function (stream, offset, whence) {\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },read:function (stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        var seeking = true;\n        if (typeof position === 'undefined') {\n          position = stream.position;\n          seeking = false;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },write:function (stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        if (stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = true;\n        if (typeof position === 'undefined') {\n          position = stream.position;\n          seeking = false;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        try {\n          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);\n        } catch(e) {\n          console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \" + e.message);\n        }\n        return bytesWritten;\n      },allocate:function (stream, offset, length) {\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },mmap:function (stream, buffer, offset, length, position, prot, flags) {\n        // TODO if PROT is PROT_WRITE, make sure we have write access\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(ERRNO_CODES.EACCES);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);\n        }\n        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);\n      },msync:function (stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },munmap:function (stream) {\n        return 0;\n      },ioctl:function (stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },readFile:function (path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'r';\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },writeFile:function (path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 'w';\n        opts.encoding = opts.encoding || 'utf8';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (opts.encoding === 'utf8') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);\n        } else if (opts.encoding === 'binary') {\n          FS.write(stream, data, 0, data.length, 0, opts.canOwn);\n        }\n        FS.close(stream);\n      },cwd:function () {\n        return FS.currentPath;\n      },chdir:function (path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);\n        }\n        var err = FS.nodePermissions(lookup.node, 'x');\n        if (err) {\n          throw new FS.ErrnoError(err);\n        }\n        FS.currentPath = lookup.path;\n      },createDefaultDirectories:function () {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },createDefaultDevices:function () {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function() { return 0; },\n          write: function(stream, buffer, offset, length, pos) { return length; }\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using Module['printErr']\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        var random_device;\n        if (typeof crypto !== 'undefined') {\n          // for modern web browsers\n          var randomBuffer = new Uint8Array(1);\n          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };\n        } else if (ENVIRONMENT_IS_NODE) {\n          // for nodejs\n          random_device = function() { return require('crypto').randomBytes(1)[0]; };\n        } else {\n          // default for ES5 platforms\n          random_device = function() { return (Math.random()*256)|0; };\n        }\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },createSpecialDirectories:function () {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount: function() {\n            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup: function(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: function() { return stream.path } }\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },createStandardStreams:function () {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 'r');\n        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');\n  \n        var stdout = FS.open('/dev/stdout', 'w');\n        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');\n  \n        var stderr = FS.open('/dev/stderr', 'w');\n        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');\n      },ensureErrnoError:function () {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          //Module.printErr(stackTrace()); // useful for debugging\n          this.node = node;\n          this.setErrno = function(errno) {\n            this.errno = errno;\n            for (var key in ERRNO_CODES) {\n              if (ERRNO_CODES[key] === errno) {\n                this.code = key;\n                break;\n              }\n            }\n          };\n          this.setErrno(errno);\n          this.message = ERRNO_MESSAGES[errno];\n          if (this.stack) this.stack = demangleAll(this.stack);\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [ERRNO_CODES.ENOENT].forEach(function(code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },staticInit:function () {\n        FS.ensureErrnoError();\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n          'NODEFS': NODEFS,\n          'WORKERFS': WORKERFS,\n        };\n      },init:function (input, output, error) {\n        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');\n        FS.init.initialized = true;\n  \n        FS.ensureErrnoError();\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },quit:function () {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        var fflush = Module['_fflush'];\n        if (fflush) fflush(0);\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },getMode:function (canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },joinPath:function (parts, forceRelative) {\n        var path = PATH.join.apply(null, parts);\n        if (forceRelative && path[0] == '/') path = path.substr(1);\n        return path;\n      },absolutePath:function (relative, base) {\n        return PATH.resolve(base, relative);\n      },standardizePath:function (path) {\n        return PATH.normalize(path);\n      },findObject:function (path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          ___setErrNo(ret.error);\n          return null;\n        }\n      },analyzePath:function (path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },createFolder:function (parent, name, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.mkdir(path, mode);\n      },createPath:function (parent, path, canRead, canWrite) {\n        parent = typeof parent === 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },createFile:function (parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data === 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 'w');\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },createDevice:function (parent, name, input, output) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open: function(stream) {\n            stream.seekable = false;\n          },\n          close: function(stream) {\n            // flush any pending line data\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(ERRNO_CODES.EIO);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: function(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(ERRNO_CODES.EIO);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },createLink:function (parent, name, target, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);\n        return FS.symlink(target, path);\n      },forceLoadFile:function (obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        var success = true;\n        if (typeof XMLHttpRequest !== 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (Module['read']) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(Module['read'](obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            success = false;\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n        if (!success) ___setErrNo(ERRNO_CODES.EIO);\n        return success;\n      },createLazyFile:function (parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        }\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        }\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (function(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || '', true);\n            }\n          });\n          var lazyArray = this;\n          lazyArray.setDataGetter(function(chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof(lazyArray.chunks[chunkNum]) === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            console.log(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        }\n        if (typeof XMLHttpRequest !== 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function() {\n                if(!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function(key) {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            if (!FS.forceLoadFile(node)) {\n              throw new FS.ErrnoError(ERRNO_CODES.EIO);\n            }\n            return fn.apply(null, arguments);\n          };\n        });\n        // use a custom read function\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          if (!FS.forceLoadFile(node)) {\n            throw new FS.ErrnoError(ERRNO_CODES.EIO);\n          }\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          assert(size >= 0);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init(); // XXX perhaps this method should move onto Browser?\n        // TODO we should allow people to just pass in a complete filename instead\n        // of parent and name being that we just join them anyways\n        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          var handled = false;\n          Module['preloadPlugins'].forEach(function(plugin) {\n            if (handled) return;\n            if (plugin['canHandle'](fullname)) {\n              plugin['handle'](byteArray, fullname, finish, function() {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          Browser.asyncLoad(url, function(byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },indexedDB:function () {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },DB_NAME:function () {\n        return 'EM_FS_' + window.location.pathname;\n      },DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function (paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          console.log('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };\n            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },loadFilesFromDB:function (paths, onload, onerror) {\n        onload = onload || function(){};\n        onerror = onerror || function(){};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror; // no database to load from\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch(e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0, fail = 0, total = paths.length;\n          function finish() {\n            if (fail == 0) onload(); else onerror();\n          }\n          paths.forEach(function(path) {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {\n        if (path[0] !== '/') {\n          // relative path\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n            dir = dirstream.path;\n          }\n          path = PATH.join2(dir, path);\n        }\n        return path;\n      },doStat:function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -ERRNO_CODES.ENOTDIR;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)]=stat.dev;\n        HEAP32[(((buf)+(4))>>2)]=0;\n        HEAP32[(((buf)+(8))>>2)]=stat.ino;\n        HEAP32[(((buf)+(12))>>2)]=stat.mode;\n        HEAP32[(((buf)+(16))>>2)]=stat.nlink;\n        HEAP32[(((buf)+(20))>>2)]=stat.uid;\n        HEAP32[(((buf)+(24))>>2)]=stat.gid;\n        HEAP32[(((buf)+(28))>>2)]=stat.rdev;\n        HEAP32[(((buf)+(32))>>2)]=0;\n        HEAP32[(((buf)+(36))>>2)]=stat.size;\n        HEAP32[(((buf)+(40))>>2)]=4096;\n        HEAP32[(((buf)+(44))>>2)]=stat.blocks;\n        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(52))>>2)]=0;\n        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(60))>>2)]=0;\n        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;\n        HEAP32[(((buf)+(68))>>2)]=0;\n        HEAP32[(((buf)+(72))>>2)]=stat.ino;\n        return 0;\n      },doMsync:function (addr, stream, len, flags) {\n        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));\n        FS.msync(stream, buffer, 0, len, flags);\n      },doMkdir:function (path, mode) {\n        // remove a trailing slash, if one - /a/b/ has basename of '', but\n        // we want to create b in the context of this function\n        path = PATH.normalize(path);\n        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },doMknod:function (path, mode, dev) {\n        // we don't want this in the JS API as it uses mknod to create all nodes.\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n          default: return -ERRNO_CODES.EINVAL;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n      },doReadlink:function (path, buf, bufsize) {\n        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;\n        var ret = FS.readlink(path);\n  \n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf+len];\n        stringToUTF8(ret, buf, bufsize+1);\n        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n        HEAP8[buf+len] = endChar;\n  \n        return len;\n      },doAccess:function (path, amode) {\n        if (amode & ~7) {\n          // need a valid mode\n          return -ERRNO_CODES.EINVAL;\n        }\n        var node;\n        var lookup = FS.lookupPath(path, { follow: true });\n        node = lookup.node;\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\n          return -ERRNO_CODES.EACCES;\n        }\n        return 0;\n      },doDup:function (path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },doReadv:function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.read(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break; // nothing more to read\n        }\n        return ret;\n      },doWritev:function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[(((iov)+(i*8))>>2)];\n          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n          var curr = FS.write(stream, HEAP8,ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n        return ret;\n      },varargs:0,get:function (varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function () {\n        var ret = Pointer_stringify(SYSCALLS.get());\n        return ret;\n      },getStreamFromFD:function () {\n        var stream = FS.getStream(SYSCALLS.get());\n        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        return stream;\n      },getSocketFromFD:function () {\n        var socket = SOCKFS.getSocket(SYSCALLS.get());\n        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);\n        return socket;\n      },getSocketAddress:function (allowNull) {\n        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();\n        if (allowNull && addrp === 0) return null;\n        var info = __read_sockaddr(addrp, addrlen);\n        if (info.errno) throw new FS.ErrnoError(info.errno);\n        info.addr = DNS.lookup_addr(info.addr) || info.addr;\n        return info;\n      },get64:function () {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);\n        else assert(high === -1);\n        return low;\n      },getZero:function () {\n        assert(SYSCALLS.get() === 0);\n      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();\n      switch (op) {\n        case 21505: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0;\n        }\n        case 21506: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          var argp = SYSCALLS.get();\n          HEAP32[((argp)>>2)]=0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -ERRNO_CODES.ENOTTY;\n          return -ERRNO_CODES.EINVAL; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.get();\n          return FS.ioctl(stream, op, argp);\n        }\n        default: abort('bad ioctl syscall ' + op);\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n   \n  Module[\"_bitshift64Lshr\"] = _bitshift64Lshr;\n\n  function ___syscall38(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // rename\n      var old_path = SYSCALLS.getStr(), new_path = SYSCALLS.getStr();\n      FS.rename(old_path, new_path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n   \n  Module[\"_testSetjmp\"] = _testSetjmp;function _longjmp(env, value) {\n      asm['setThrew'](env, value || 1);\n      throw 'longjmp';\n    }\n\n  function _pthread_cleanup_push(routine, arg) {\n      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })\n      _pthread_cleanup_push.level = __ATEXIT__.length;\n    }\n\n  function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // unlink\n      var path = SYSCALLS.getStr();\n      FS.unlink(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function _pthread_cleanup_pop() {\n      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');\n      __ATEXIT__.pop();\n      _pthread_cleanup_push.level = __ATEXIT__.length;\n    }\n\n  function _emscripten_longjmp(env, value) {\n      _longjmp(env, value);\n    }\n\n  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // open\n      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO\n      var stream = FS.open(pathname, flags, mode);\n      return stream.fd;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall4(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // write\n      var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();\n      return FS.write(stream, HEAP8,buf, count);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // close\n      var stream = SYSCALLS.getStreamFromFD();\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  \n  \n  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], \"i8\", ALLOC_STATIC); \n  Module[\"_llvm_cttz_i32\"] = _llvm_cttz_i32; \n  Module[\"___udivmoddi4\"] = ___udivmoddi4; \n  Module[\"___udivdi3\"] = ___udivdi3;\n\n  \n   \n  Module[\"___muldsi3\"] = ___muldsi3; \n  Module[\"___muldi3\"] = ___muldi3;\n\n  var _llvm_pow_f64=Math_pow;\n\n   \n  Module[\"_sbrk\"] = _sbrk;\n\n\n  function _llvm_stacksave() {\n      var self = _llvm_stacksave;\n      if (!self.LLVM_SAVEDSTACKS) {\n        self.LLVM_SAVEDSTACKS = [];\n      }\n      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());\n      return self.LLVM_SAVEDSTACKS.length-1;\n    }\n\n   \n  Module[\"___uremdi3\"] = ___uremdi3;\n\n   \n  Module[\"_llvm_bswap_i32\"] = _llvm_bswap_i32;\n\n   \n  Module[\"_pthread_self\"] = _pthread_self;\n\n  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // llseek\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\n      var offset = offset_low;\n      assert(offset_high === 0);\n      FS.llseek(stream, offset, whence);\n      HEAP32[((result)>>2)]=stream.position;\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // writev\n      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      return SYSCALLS.doWritev(stream, iov, iovcnt);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // fcntl64\n      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -ERRNO_CODES.EINVAL;\n          }\n          var newStream;\n          newStream = FS.open(stream.path, stream.flags, 0, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12:\n        case 12: {\n          var arg = SYSCALLS.get();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)]=2;\n          return 0;\n        }\n        case 13:\n        case 14:\n        case 13:\n        case 14:\n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.\n          ___setErrNo(ERRNO_CODES.EINVAL);\n          return -1;\n        default: {\n          return -ERRNO_CODES.EINVAL;\n        }\n      }\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // readv\n      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\n      return SYSCALLS.doReadv(stream, iov, iovcnt);\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\nFS.staticInit();__ATINIT__.unshift(function() { if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module[\"FS_createFolder\"] = FS.createFolder;Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createLink\"] = FS.createLink;Module[\"FS_createDevice\"] = FS.createDevice;Module[\"FS_unlink\"] = FS.unlink;;\n__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });;\nif (ENVIRONMENT_IS_NODE) { var fs = require(\"fs\"); var NODEJS_PATH = require(\"path\"); NODEFS.staticInit(); };\nDYNAMICTOP_PTR = allocate(1, \"i32\", ALLOC_STATIC);\n\nSTACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);\n\nSTACK_MAX = STACK_BASE + TOTAL_STACK;\n\nDYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\nstaticSealed = true; // seal the static portion of memory\n\nassert(DYNAMIC_BASE < TOTAL_MEMORY, \"TOTAL_MEMORY not big enough for stack\");\n\n\n\nfunction nullFunc_vi(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vid(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiiiiiiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_vii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_ii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_idi(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'idi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iiiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_iii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction nullFunc_viiii(x) { Module[\"printErr\"](\"Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)\");  Module[\"printErr\"](\"Build with ASSERTIONS=2 for more info.\");abort(x) }\n\nfunction invoke_vi(index,a1) {\n  try {\n    Module[\"dynCall_vi\"](index,a1);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  try {\n    return Module[\"dynCall_iiii\"](index,a1,a2,a3);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_vid(index,a1,a2) {\n  try {\n    Module[\"dynCall_vid\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  try {\n    return Module[\"dynCall_iiiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  try {\n    Module[\"dynCall_vii\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  try {\n    return Module[\"dynCall_ii\"](index,a1);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  try {\n    Module[\"dynCall_viii\"](index,a1,a2,a3);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_idi(index,a1,a2) {\n  try {\n    return Module[\"dynCall_idi\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  try {\n    return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  try {\n    return Module[\"dynCall_iii\"](index,a1,a2);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  try {\n    Module[\"dynCall_viiii\"](index,a1,a2,a3,a4);\n  } catch(e) {\n    if (typeof e !== 'number' && e !== 'longjmp') throw e;\n    asm[\"setThrew\"](1, 0);\n  }\n}\n\nModule.asmGlobalArg = { \"Math\": Math, \"Int8Array\": Int8Array, \"Int16Array\": Int16Array, \"Int32Array\": Int32Array, \"Uint8Array\": Uint8Array, \"Uint16Array\": Uint16Array, \"Uint32Array\": Uint32Array, \"Float32Array\": Float32Array, \"Float64Array\": Float64Array, \"NaN\": NaN, \"Infinity\": Infinity };\n\nModule.asmLibraryArg = { \"abort\": abort, \"assert\": assert, \"enlargeMemory\": enlargeMemory, \"getTotalMemory\": getTotalMemory, \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory, \"abortStackOverflow\": abortStackOverflow, \"nullFunc_vi\": nullFunc_vi, \"nullFunc_iiii\": nullFunc_iiii, \"nullFunc_vid\": nullFunc_vid, \"nullFunc_iiiiiiiiii\": nullFunc_iiiiiiiiii, \"nullFunc_vii\": nullFunc_vii, \"nullFunc_ii\": nullFunc_ii, \"nullFunc_viii\": nullFunc_viii, \"nullFunc_idi\": nullFunc_idi, \"nullFunc_iiiii\": nullFunc_iiiii, \"nullFunc_iii\": nullFunc_iii, \"nullFunc_viiii\": nullFunc_viiii, \"invoke_vi\": invoke_vi, \"invoke_iiii\": invoke_iiii, \"invoke_vid\": invoke_vid, \"invoke_iiiiiiiiii\": invoke_iiiiiiiiii, \"invoke_vii\": invoke_vii, \"invoke_ii\": invoke_ii, \"invoke_viii\": invoke_viii, \"invoke_idi\": invoke_idi, \"invoke_iiiii\": invoke_iiiii, \"invoke_iii\": invoke_iii, \"invoke_viiii\": invoke_viiii, \"_pthread_cleanup_pop\": _pthread_cleanup_pop, \"___syscall221\": ___syscall221, \"_llvm_pow_f64\": _llvm_pow_f64, \"_abort\": _abort, \"_pthread_cleanup_push\": _pthread_cleanup_push, \"_llvm_stackrestore\": _llvm_stackrestore, \"_longjmp\": _longjmp, \"___setErrNo\": ___setErrNo, \"_llvm_pow_f32\": _llvm_pow_f32, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"_llvm_stacksave\": _llvm_stacksave, \"___syscall54\": ___syscall54, \"___unlock\": ___unlock, \"___syscall38\": ___syscall38, \"___syscall10\": ___syscall10, \"___lock\": ___lock, \"___syscall6\": ___syscall6, \"___syscall5\": ___syscall5, \"___syscall4\": ___syscall4, \"_emscripten_longjmp\": _emscripten_longjmp, \"___syscall140\": ___syscall140, \"___syscall145\": ___syscall145, \"___syscall146\": ___syscall146, \"STACKTOP\": STACKTOP, \"STACK_MAX\": STACK_MAX, \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR, \"tempDoublePtr\": tempDoublePtr, \"ABORT\": ABORT, \"cttz_i8\": cttz_i8 };\n// EMSCRIPTEN_START_ASM\nvar asm = (function(global, env, buffer) {\n  'almost asm';\n  \n  \n  var HEAP8 = new global.Int8Array(buffer);\n  var HEAP16 = new global.Int16Array(buffer);\n  var HEAP32 = new global.Int32Array(buffer);\n  var HEAPU8 = new global.Uint8Array(buffer);\n  var HEAPU16 = new global.Uint16Array(buffer);\n  var HEAPU32 = new global.Uint32Array(buffer);\n  var HEAPF32 = new global.Float32Array(buffer);\n  var HEAPF64 = new global.Float64Array(buffer);\n\n\n  var STACKTOP=env.STACKTOP|0;\n  var STACK_MAX=env.STACK_MAX|0;\n  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;\n  var tempDoublePtr=env.tempDoublePtr|0;\n  var ABORT=env.ABORT|0;\n  var cttz_i8=env.cttz_i8|0;\n\n  var __THREW__ = 0;\n  var threwValue = 0;\n  var setjmpId = 0;\n  var undef = 0;\n  var nan = global.NaN, inf = global.Infinity;\n  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;\n  var tempRet0 = 0;\n\n  var Math_floor=global.Math.floor;\n  var Math_abs=global.Math.abs;\n  var Math_sqrt=global.Math.sqrt;\n  var Math_pow=global.Math.pow;\n  var Math_cos=global.Math.cos;\n  var Math_sin=global.Math.sin;\n  var Math_tan=global.Math.tan;\n  var Math_acos=global.Math.acos;\n  var Math_asin=global.Math.asin;\n  var Math_atan=global.Math.atan;\n  var Math_atan2=global.Math.atan2;\n  var Math_exp=global.Math.exp;\n  var Math_log=global.Math.log;\n  var Math_ceil=global.Math.ceil;\n  var Math_imul=global.Math.imul;\n  var Math_min=global.Math.min;\n  var Math_max=global.Math.max;\n  var Math_clz32=global.Math.clz32;\n  var abort=env.abort;\n  var assert=env.assert;\n  var enlargeMemory=env.enlargeMemory;\n  var getTotalMemory=env.getTotalMemory;\n  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;\n  var abortStackOverflow=env.abortStackOverflow;\n  var nullFunc_vi=env.nullFunc_vi;\n  var nullFunc_iiii=env.nullFunc_iiii;\n  var nullFunc_vid=env.nullFunc_vid;\n  var nullFunc_iiiiiiiiii=env.nullFunc_iiiiiiiiii;\n  var nullFunc_vii=env.nullFunc_vii;\n  var nullFunc_ii=env.nullFunc_ii;\n  var nullFunc_viii=env.nullFunc_viii;\n  var nullFunc_idi=env.nullFunc_idi;\n  var nullFunc_iiiii=env.nullFunc_iiiii;\n  var nullFunc_iii=env.nullFunc_iii;\n  var nullFunc_viiii=env.nullFunc_viiii;\n  var invoke_vi=env.invoke_vi;\n  var invoke_iiii=env.invoke_iiii;\n  var invoke_vid=env.invoke_vid;\n  var invoke_iiiiiiiiii=env.invoke_iiiiiiiiii;\n  var invoke_vii=env.invoke_vii;\n  var invoke_ii=env.invoke_ii;\n  var invoke_viii=env.invoke_viii;\n  var invoke_idi=env.invoke_idi;\n  var invoke_iiiii=env.invoke_iiiii;\n  var invoke_iii=env.invoke_iii;\n  var invoke_viiii=env.invoke_viiii;\n  var _pthread_cleanup_pop=env._pthread_cleanup_pop;\n  var ___syscall221=env.___syscall221;\n  var _llvm_pow_f64=env._llvm_pow_f64;\n  var _abort=env._abort;\n  var _pthread_cleanup_push=env._pthread_cleanup_push;\n  var _llvm_stackrestore=env._llvm_stackrestore;\n  var _longjmp=env._longjmp;\n  var ___setErrNo=env.___setErrNo;\n  var _llvm_pow_f32=env._llvm_pow_f32;\n  var _emscripten_memcpy_big=env._emscripten_memcpy_big;\n  var _llvm_stacksave=env._llvm_stacksave;\n  var ___syscall54=env.___syscall54;\n  var ___unlock=env.___unlock;\n  var ___syscall38=env.___syscall38;\n  var ___syscall10=env.___syscall10;\n  var ___lock=env.___lock;\n  var ___syscall6=env.___syscall6;\n  var ___syscall5=env.___syscall5;\n  var ___syscall4=env.___syscall4;\n  var _emscripten_longjmp=env._emscripten_longjmp;\n  var ___syscall140=env.___syscall140;\n  var ___syscall145=env.___syscall145;\n  var ___syscall146=env.___syscall146;\n  var tempFloat = 0.0;\n\n// EMSCRIPTEN_START_FUNCS\n\nfunction stackAlloc(size) {\n  size = size|0;\n  var ret = 0;\n  ret = STACKTOP;\n  STACKTOP = (STACKTOP + size)|0;\n  STACKTOP = (STACKTOP + 15)&-16;\n  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);\n\n  return ret|0;\n}\nfunction stackSave() {\n  return STACKTOP|0;\n}\nfunction stackRestore(top) {\n  top = top|0;\n  STACKTOP = top;\n}\nfunction establishStackSpace(stackBase, stackMax) {\n  stackBase = stackBase|0;\n  stackMax = stackMax|0;\n  STACKTOP = stackBase;\n  STACK_MAX = stackMax;\n}\n\nfunction setThrew(threw, value) {\n  threw = threw|0;\n  value = value|0;\n  if ((__THREW__|0) == 0) {\n    __THREW__ = threw;\n    threwValue = value;\n  }\n}\n\nfunction setTempRet0(value) {\n  value = value|0;\n  tempRet0 = value;\n}\nfunction getTempRet0() {\n  return tempRet0|0;\n}\n\nfunction _main($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0131 = 0, $$0137202 = 0, $$0137202$us = 0, $$0141$lcssa = 0, $$0141$lcssa247 = 0, $$0141$lcssa247249 = 0, $$0141201 = 0, $$0141201$us = 0, $$0143 = 0, $$0145206 = 0, $$0146$lcssa = 0, $$0146$lcssa246250 = 0, $$0146200 = 0, $$0146200$us = 0, $$0148$lcssa245251 = 0, $$0149 = 0, $$0150$lcssa = 0, $$0150$lcssa244252 = 0, $$0150198 = 0;\n var $$0150198$us = 0, $$0152 = 0, $$0152$phi = 0, $$0154 = 0, $$0154$phi = 0, $$01921$i = 0, $$020$i = 0, $$1132$ph = 0, $$1134 = 0, $$1134$us241243 = 0, $$1142 = 0, $$1142$us = 0, $$1144 = 0, $$1147 = 0, $$1147$us = 0, $$1151 = 0, $$1151$us = 0, $$1169 = 0, $$133$i = 0, $$135$i = 0;\n var $$2156 = 0, $$6 = 0, $$9 = 0, $$byval_copy = 0, $$cast$i = 0, $$not = 0, $$pre236 = 0, $$pre237 = 0, $$pre239 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;\n var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;\n var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;\n var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;\n var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;\n var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;\n var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;\n var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;\n var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;\n var $51$phi = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;\n var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;\n var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond235 = 0, $not$or$cond3$i = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0;\n var $or$cond$i = 0, $or$cond157 = 0, $or$cond4 = 0, $or$cond6 = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer2 = 0, $vararg_buffer20 = 0, $vararg_buffer26 = 0, $vararg_buffer32 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr30 = 0;\n var $vararg_ptr31 = 0, $vararg_ptr35 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 384|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(384|0);\n $$byval_copy = sp + 372|0;\n $vararg_buffer32 = sp + 288|0;\n $vararg_buffer26 = sp + 272|0;\n $vararg_buffer20 = sp + 256|0;\n $vararg_buffer17 = sp + 248|0;\n $vararg_buffer14 = sp + 240|0;\n $vararg_buffer11 = sp + 232|0;\n $vararg_buffer8 = sp + 224|0;\n $vararg_buffer5 = sp + 216|0;\n $vararg_buffer2 = sp + 208|0;\n $vararg_buffer = sp + 200|0;\n $2 = sp + 368|0;\n $3 = sp + 336|0;\n $4 = sp;\n $5 = sp + 328|0;\n $6 = sp + 296|0;\n ;HEAP32[$3>>2]=HEAP32[8>>2]|0;HEAP32[$3+4>>2]=HEAP32[8+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[8+8>>2]|0;HEAP32[$3+12>>2]=HEAP32[8+12>>2]|0;HEAP32[$3+16>>2]=HEAP32[8+16>>2]|0;HEAP32[$3+20>>2]=HEAP32[8+20>>2]|0;HEAP32[$3+24>>2]=HEAP32[8+24>>2]|0;HEAP32[$3+28>>2]=HEAP32[8+28>>2]|0;\n $7 = (_liq_attr_create()|0);\n HEAP32[$3>>2] = $7;\n $8 = ($7|0)==(0|0);\n if ($8) {\n  $9 = HEAP32[2606]|0;\n  (_fwrite(14430,44,1,$9)|0);\n  $$9 = 18;\n  STACKTOP = sp;return ($$9|0);\n }\n $10 = ($0>>>0)>(1);\n $11 = HEAP32[2606]|0;\n L5: do {\n  if ($10) {\n   $$01921$i = 1;\n   while(1) {\n    $12 = (($1) + ($$01921$i<<2)|0);\n    $13 = HEAP32[$12>>2]|0;\n    $14 = HEAP8[$13>>0]|0;\n    $15 = ($14<<24>>24)==(45);\n    if ($15) {\n     $16 = ((($13)) + 1|0);\n     $17 = HEAP8[$16>>0]|0;\n     $18 = ($17<<24>>24)==(45);\n     if ($18) {\n      break L5;\n     }\n     $$020$i = 0;$21 = $13;\n     while(1) {\n      $19 = (40 + ($$020$i<<3)|0);\n      $20 = HEAP32[$19>>2]|0;\n      $22 = (_strcmp($20,$21)|0);\n      $23 = ($22|0)==(0);\n      if ($23) {\n       $24 = (((40 + ($$020$i<<3)|0)) + 4|0);\n       $25 = HEAP32[$24>>2]|0;\n       HEAP32[$vararg_buffer>>2] = $20;\n       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n       HEAP32[$vararg_ptr1>>2] = $25;\n       (_fprintf($11,14475,$vararg_buffer)|0);\n       $$cast$i = $25;\n       HEAP32[$12>>2] = $$cast$i;\n       $223 = $25;\n      } else {\n       $223 = $21;\n      }\n      $26 = (($$020$i) + 1)|0;\n      $exitcond$i = ($26|0)==(15);\n      if ($exitcond$i) {\n       break;\n      } else {\n       $$020$i = $26;$21 = $223;\n      }\n     }\n    }\n    $27 = (($$01921$i) + 1)|0;\n    $28 = ($27>>>0)<($0>>>0);\n    if ($28) {\n     $$01921$i = $27;\n    } else {\n     break;\n    }\n   }\n  }\n } while(0);\n $29 = ((($3)) + 28|0);\n $30 = ((($3)) + 16|0);\n $31 = ((($3)) + 22|0);\n $32 = ((($3)) + 21|0);\n $33 = ((($3)) + 26|0);\n $34 = ((($3)) + 23|0);\n $35 = ((($3)) + 25|0);\n $36 = ((($3)) + 27|0);\n $37 = ((($3)) + 4|0);\n $$0152 = 0;$$0154 = 0;$51 = $7;\n L18: while(1) {\n  $38 = (_getopt_long($0,$1,14528,160,0)|0);\n  do {\n   switch ($38|0) {\n   case 104:  {\n    label = 57;\n    break L18;\n    break;\n   }\n   case 86:  {\n    label = 58;\n    break L18;\n    break;\n   }\n   case -1:  {\n    $$pre236 = $51;\n    label = 60;\n    break L18;\n    break;\n   }\n   case 118:  {\n    HEAP8[$29>>0] = 1;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 113:  {\n    HEAP8[$29>>0] = 0;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 1:  {\n    $39 = HEAP32[7830]|0;\n    $40 = ($39|0)==(0|0);\n    if ($40) {\n     $43 = 1.0;\n    } else {\n     $41 = (+_atof($39));\n     $43 = $41;\n    }\n    $42 = $43;\n    HEAPF32[$30>>2] = $42;\n    $44 = $42 < 0.0;\n    $45 = $42 > 1.0;\n    $or$cond157 = $44 | $45;\n    if ($or$cond157) {\n     label = 18;\n     break L18;\n    } else {\n     $224 = $51;\n    }\n    break;\n   }\n   case 2:  {\n    HEAPF32[$30>>2] = 0.0;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 102:  {\n    HEAP8[$31>>0] = 1;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 4:  {\n    HEAP8[$31>>0] = 0;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 3:  {\n    $46 = HEAP32[7830]|0;\n    $51$phi = $51;$$0152$phi = $$0152;$$0154 = $46;$51 = $51$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 111:  {\n    $47 = ($$0152|0)==(0|0);\n    if (!($47)) {\n     label = 24;\n     break L18;\n    }\n    $48 = HEAP32[7830]|0;\n    $49 = (_strcmp($48,14619)|0);\n    $50 = ($49|0)==(0);\n    if (!($50)) {\n     $51$phi = $51;$$0154$phi = $$0154;$$0152 = $48;$51 = $51$phi;$$0154 = $$0154$phi;\n     continue L18;\n    }\n    HEAP8[$32>>0] = 1;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152 = 0;$51 = $51$phi;$$0154 = $$0154$phi;\n    continue L18;\n    break;\n   }\n   case 5:  {\n    (_liq_set_min_opacity($51,238)|0);\n    (_fwrite(14621,48,1,$11)|0);\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 6:  {\n    _liq_set_last_index_transparent($51,1);\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 9:  {\n    HEAP8[$33>>0] = 1;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 115:  {\n    $52 = HEAP32[7830]|0;\n    $53 = (_atoi($52)|0);\n    $54 = ($53|0)>(9);\n    if ($54) {\n     HEAP8[$34>>0] = 1;\n     $55 = ($53|0)==(11);\n     if ($55) {\n      HEAPF32[$30>>2] = 0.0;\n      $$0149 = 10;\n     } else {\n      $$0149 = $53;\n     }\n    } else {\n     $$0149 = $53;\n    }\n    $56 = (_liq_set_speed($51,$$0149)|0);\n    $57 = ($56|0)==(0);\n    if ($57) {\n     $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n     continue L18;\n    } else {\n     label = 34;\n     break L18;\n    }\n    break;\n   }\n   case 81:  {\n    $58 = HEAP32[7830]|0;\n    $59 = (_strtol($58,$2,10)|0);\n    $60 = HEAP32[$2>>2]|0;\n    $61 = ($60|0)==($58|0);\n    if ($61) {\n     label = 43;\n     break L18;\n    }\n    $62 = HEAP8[$60>>0]|0;\n    $63 = ($62<<24>>24)==(0);\n    $64 = ($59|0)<(0);\n    $or$cond$i = $64 & $63;\n    do {\n     if ($or$cond$i) {\n      $65 = (0 - ($59))|0;\n      $$133$i = 0;$$135$i = $65;\n     } else {\n      if ($63) {\n       $66 = ($59*9)|0;\n       $67 = (($66|0) / 10)&-1;\n       $$133$i = $67;$$135$i = $59;\n       break;\n      }\n      $68 = ($62<<24>>24)==(45);\n      if ($68) {\n       $69 = ((($60)) + 1|0);\n       $70 = HEAP8[$69>>0]|0;\n       $71 = ($70<<24>>24)==(0);\n       if ($71) {\n        $$133$i = $59;$$135$i = 100;\n        break;\n       }\n      }\n      $72 = (_strtol($60,$2,10)|0);\n      $73 = HEAP32[$2>>2]|0;\n      $74 = (0 - ($72))|0;\n      $notlhs$i = ($60|0)!=($73|0);\n      $notrhs$i = ($72|0)<(1);\n      $not$or$cond3$i = $notrhs$i & $notlhs$i;\n      if ($not$or$cond3$i) {\n       $$133$i = $59;$$135$i = $74;\n      } else {\n       label = 43;\n       break L18;\n      }\n     }\n    } while(0);\n    $75 = ($$133$i|0)>(0);\n    $76 = $75&1;\n    HEAP8[$35>>0] = $76;\n    $77 = (_liq_set_quality($51,$$133$i,$$135$i)|0);\n    $78 = ($77|0)==(0);\n    if ($78) {\n     $224 = $51;\n    } else {\n     label = 45;\n     break L18;\n    }\n    break;\n   }\n   case 8:  {\n    $79 = HEAP32[7830]|0;\n    $80 = (_atoi($79)|0);\n    $81 = (_liq_set_min_posterization($51,$80)|0);\n    $82 = ($81|0)==(0);\n    if ($82) {\n     $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n     continue L18;\n    } else {\n     label = 47;\n     break L18;\n    }\n    break;\n   }\n   case 10:  {\n    HEAP8[$36>>0] = 1;\n    $51$phi = $51;$$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $51$phi;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n    continue L18;\n    break;\n   }\n   case 7:  {\n    _memset(($4|0),0,200)|0;\n    $83 = HEAP32[7830]|0;\n    $84 = (_read_image($51,$83,0,$4,$37,1,1,0)|0);\n    $85 = ($84|0)==(0);\n    if (!($85)) {\n     label = 50;\n     break L18;\n    }\n    $87 = HEAP32[$3>>2]|0;\n    $88 = HEAP32[$37>>2]|0;\n    $89 = (_liq_quantize_image($87,$88)|0);\n    $90 = (_liq_get_palette($89)|0);\n    $91 = ($90|0)==(0|0);\n    if ($91) {\n     label = 53;\n     break L18;\n    }\n    $92 = HEAP32[$90>>2]|0;\n    $93 = ($92|0)==(0);\n    if (!($93)) {\n     $$0145206 = 0;\n     while(1) {\n      $95 = (((($90)) + 4|0) + ($$0145206<<2)|0);\n      ;HEAP8[$$byval_copy>>0]=HEAP8[$95>>0]|0;HEAP8[$$byval_copy+1>>0]=HEAP8[$95+1>>0]|0;HEAP8[$$byval_copy+2>>0]=HEAP8[$95+2>>0]|0;HEAP8[$$byval_copy+3>>0]=HEAP8[$95+3>>0]|0;\n      (_liq_image_add_fixed_color($88,$$byval_copy)|0);\n      $96 = (($$0145206) + 1)|0;\n      $97 = HEAP32[$90>>2]|0;\n      $98 = ($96>>>0)<($97>>>0);\n      if ($98) {\n       $$0145206 = $96;\n      } else {\n       break;\n      }\n     }\n    }\n    _liq_result_destroy($89);\n    $224 = $87;\n    break;\n   }\n   default: {\n    $$9 = 4;\n    label = 127;\n    break L18;\n   }\n   }\n  } while(0);\n  $100 = ($38|0)==(-1);\n  if ($100) {\n   $$pre236 = $224;\n   label = 60;\n   break;\n  } else {\n   $$0154$phi = $$0154;$$0152$phi = $$0152;$51 = $224;$$0154 = $$0154$phi;$$0152 = $$0152$phi;\n  }\n }\n switch (label|0) {\n  case 18: {\n   (_fwrite(14540,39,1,$11)|0);\n   $$9 = 4;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 24: {\n   (_fwrite(14580,38,1,$11)|0);\n   $$9 = 4;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 34: {\n   (_fwrite(14670,48,1,$11)|0);\n   $$9 = 4;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 43: {\n   label = 45;\n   break;\n  }\n  case 47: {\n   (_fwrite(14802,53,1,$11)|0);\n   $$9 = 4;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 50: {\n   $86 = HEAP32[7830]|0;\n   HEAP32[$vararg_buffer2>>2] = $86;\n   (_fprintf($11,14856,$vararg_buffer2)|0);\n   label = 55;\n   break;\n  }\n  case 53: {\n   $94 = HEAP32[7830]|0;\n   HEAP32[$vararg_buffer5>>2] = $94;\n   (_fprintf($11,14883,$vararg_buffer5)|0);\n   label = 55;\n   break;\n  }\n  case 57: {\n   $99 = HEAP32[2576]|0;\n   HEAP32[$vararg_buffer8>>2] = 14971;\n   (_fprintf($99,14922,$vararg_buffer8)|0);\n   _rwpng_version_info($99);\n   (_fputc(10,$99)|0);\n   (_fwrite(14990,1379,1,$99)|0);\n   $$9 = 0;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 58: {\n   (_puts(14971)|0);\n   $$9 = 0;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 60: {\n   $101 = HEAP32[2494]|0;\n   $102 = ($101|0)<($0|0);\n   if (!($102)) {\n    $103 = ($101|0)>(1);\n    if ($103) {\n     (_fwrite(16370,26,1,$11)|0);\n    } else {\n     HEAP32[$vararg_buffer11>>2] = 14971;\n     (_fprintf($11,14922,$vararg_buffer11)|0);\n     _rwpng_version_info($11);\n     (_fputc(10,$11)|0);\n    }\n    (_fwrite(14990,1379,1,$11)|0);\n    $$9 = 1;\n    STACKTOP = sp;return ($$9|0);\n   }\n   $104 = HEAP8[$29>>0]|0;\n   $105 = ($104<<24>>24)==(0);\n   if (!($105)) {\n    _liq_set_log_callback($$pre236,10,0);\n    $106 = ((($3)) + 8|0);\n    HEAP32[$106>>2] = 10;\n   }\n   $107 = (($1) + ($101<<2)|0);\n   $108 = HEAP32[$107>>2]|0;\n   $109 = (_strtoul($108,$5,10)|0);\n   $110 = HEAP32[$5>>2]|0;\n   $111 = HEAP32[$107>>2]|0;\n   $112 = ($110|0)==($111|0);\n   do {\n    if ($112) {\n     $$0143 = $101;\n     label = 72;\n    } else {\n     $113 = HEAP8[$110>>0]|0;\n     $114 = ($113<<24>>24)==(0);\n     if ($114) {\n      $115 = (_liq_set_max_colors($$pre236,$109)|0);\n      $116 = ($115|0)==(0);\n      if ($116) {\n       $117 = (($101) + 1)|0;\n       $$0143 = $117;\n       label = 72;\n       break;\n      } else {\n       (_fwrite(16397,44,1,$11)|0);\n       $$6 = 4;\n       break;\n      }\n     } else {\n      $$0143 = $101;\n      label = 72;\n     }\n    }\n   } while(0);\n   do {\n    if ((label|0) == 72) {\n     $118 = ($$0154|0)!=(0|0);\n     $119 = ($$0152|0)!=(0|0);\n     $or$cond = $118 & $119;\n     if ($or$cond) {\n      (_fwrite(16442,58,1,$11)|0);\n      $$6 = 4;\n      break;\n     }\n     $120 = ($$0154|0)==(0|0);\n     if ($120) {\n      $121 = +HEAPF32[$30>>2];\n      $122 = $121 > 0.0;\n      $123 = $122 ? 16501 : 16513;\n      $124 = ((($3)) + 24|0);\n      $125 = HEAP8[$124>>0]|0;\n      $126 = ($125<<24>>24)==(0);\n      $127 = ((($123)) + 3|0);\n      $$ = $126 ? $127 : $123;\n      $$2156 = $$;\n     } else {\n      $$2156 = $$0154;\n     }\n     $128 = ($$0143|0)==($0|0);\n     $$pre239 = (($0) + -1)|0;\n     if ($128) {\n      label = 79;\n     } else {\n      $129 = ($$0143|0)==($$pre239|0);\n      if ($129) {\n       $130 = (($1) + ($$0143<<2)|0);\n       $131 = HEAP32[$130>>2]|0;\n       $132 = (_strcmp($131,14619)|0);\n       $133 = ($132|0)==(0);\n       if ($133) {\n        label = 79;\n       } else {\n        $$1144 = $$0143;\n       }\n      } else {\n       $$1144 = $$0143;\n      }\n     }\n     if ((label|0) == 79) {\n      $134 = ((($3)) + 20|0);\n      HEAP8[$134>>0] = 1;\n      $135 = $119&1;\n      $136 = $135 ^ 1;\n      HEAP8[$32>>0] = $136;\n      $$1144 = $$pre239;\n     }\n     $137 = (($0) - ($$1144))|0;\n     $138 = ($137|0)!=(1);\n     $or$cond4 = $119 & $138;\n     if ($or$cond4) {\n      (_fwrite(16525,53,1,$11)|0);\n      $$6 = 4;\n      break;\n     }\n     $139 = HEAP8[$32>>0]|0;\n     $140 = ($139<<24>>24)==(0);\n     if (!($140)) {\n      $141 = ((($3)) + 20|0);\n      $142 = HEAP8[$141>>0]|0;\n      $$not = ($142<<24>>24)==(0);\n      $or$cond6 = $138 & $$not;\n      if ($or$cond6) {\n       (_fwrite(16627,89,1,$11)|0);\n       $$6 = 4;\n       break;\n      }\n     }\n     $143 = ($137|0)>(0);\n     if ($143) {\n      $144 = ((($6)) + 20|0);\n      $145 = ((($6)) + 22|0);\n      L110: do {\n       if ($119) {\n        $$0137202$us = 0;$$0141201$us = 0;$$0146200$us = 0;$$0150198$us = 0;\n        while(1) {\n         ;HEAP32[$6>>2]=HEAP32[$3>>2]|0;HEAP32[$6+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$3+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$3+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$3+20>>2]|0;HEAP32[$6+24>>2]=HEAP32[$3+24>>2]|0;HEAP32[$6+28>>2]=HEAP32[$3+28>>2]|0;\n         $146 = (_liq_attr_copy($$pre236)|0);\n         HEAP32[$6>>2] = $146;\n         $147 = HEAP32[$144>>2]|0;\n         $148 = $147&65535;\n         $149 = $147&255;\n         $150 = ($149<<24>>24)==(0);\n         $151 = ($148&65535) >>> 8;\n         $152 = $151&255;\n         $153 = $147 >>> 16;\n         $154 = $153&255;\n         if ($150) {\n          $155 = (($$0137202$us) + ($$1144))|0;\n          $156 = (($1) + ($155<<2)|0);\n          $157 = HEAP32[$156>>2]|0;\n          $163 = $157;\n         } else {\n          $163 = 16579;\n         }\n         $158 = $152 | $154;\n         $159 = ($158<<24>>24)==(0);\n         do {\n          if ($159) {\n           $160 = (_fopen($$0152,16585)|0);\n           $161 = ($160|0)==(0|0);\n           if ($161) {\n            label = 93;\n            break;\n           }\n           (_fclose($160)|0);\n           HEAP32[$vararg_buffer14>>2] = $$0152;\n           (_fprintf($11,16588,$vararg_buffer14)|0);\n           $162 = HEAP32[$6>>2]|0;\n           _liq_attr_destroy($162);\n           $$1134$us241243 = 15;\n           label = 95;\n          } else {\n           label = 93;\n          }\n         } while(0);\n         do {\n          if ((label|0) == 93) {\n           label = 0;\n           $164 = (_pngquant_file($163,$$0152,$6)|0);\n           $165 = HEAP32[$6>>2]|0;\n           _liq_attr_destroy($165);\n           $166 = ($164|0)==(0);\n           if ($166) {\n            $$1142$us = $$0141201$us;$$1147$us = $$0146200$us;$$1151$us = $$0150198$us;\n            break;\n           }\n           $167 = $164 | 1;\n           $168 = ($167|0)==(99);\n           if (!($168)) {\n            $$1134$us241243 = $164;\n            label = 95;\n            break;\n           }\n           $170 = (($$0146200$us) + 1)|0;\n           $$1142$us = $$0141201$us;$$1147$us = $170;$$1151$us = $164;\n          }\n         } while(0);\n         if ((label|0) == 95) {\n          label = 0;\n          $169 = (($$0141201$us) + 1)|0;\n          $$1142$us = $169;$$1147$us = $$0146200$us;$$1151$us = $$1134$us241243;\n         }\n         $171 = (($$0137202$us) + 1)|0;\n         $exitcond = ($171|0)==($137|0);\n         if ($exitcond) {\n          $$0141$lcssa = $$1142$us;$$0146$lcssa = $$1147$us;$$0150$lcssa = $$1151$us;\n          break;\n         } else {\n          $$0137202$us = $171;$$0141201$us = $$1142$us;$$0146200$us = $$1147$us;$$0150198$us = $$1151$us;\n         }\n        }\n       } else {\n        $$0137202 = 0;$$0141201 = 0;$$0146200 = 0;$$0150198 = 0;$173 = $$pre236;\n        while(1) {\n         ;HEAP32[$6>>2]=HEAP32[$3>>2]|0;HEAP32[$6+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$3+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$3+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$3+20>>2]|0;HEAP32[$6+24>>2]=HEAP32[$3+24>>2]|0;HEAP32[$6+28>>2]=HEAP32[$3+28>>2]|0;\n         $174 = (_liq_attr_copy($173)|0);\n         HEAP32[$6>>2] = $174;\n         $175 = HEAP16[$144>>1]|0;\n         $176 = $175&255;\n         $177 = ($176<<24>>24)==(0);\n         if ($177) {\n          $178 = (($$0137202) + ($$1144))|0;\n          $179 = (($1) + ($178<<2)|0);\n          $180 = HEAP32[$179>>2]|0;\n          $182 = $180;\n         } else {\n          $182 = 16579;\n         }\n         $181 = ($175&65535)<(256);\n         do {\n          if ($181) {\n           $183 = (_strlen($182)|0);\n           $184 = (_strlen($$2156)|0);\n           $185 = (($183) + 5)|0;\n           $186 = (($185) + ($184))|0;\n           $187 = (_malloc($186)|0);\n           $188 = ($187|0)==(0|0);\n           L135: do {\n            if ($188) {\n             $$0131 = 0;\n            } else {\n             (_strncpy($187,$182,$183)|0);\n             $189 = (($187) + ($183)|0);\n             $190 = ((($189)) + -4|0);\n             $191 = (_strncmp($190,16717,4)|0);\n             $192 = ($191|0)==(0);\n             do {\n              if (!($192)) {\n               $193 = (_strncmp($190,16722,4)|0);\n               $194 = ($193|0)==(0);\n               if ($194) {\n                break;\n               }\n               (_strcpy($189,$$2156)|0);\n               $$0131 = $187;\n               break L135;\n              }\n             } while(0);\n             (_strcpy($190,$$2156)|0);\n             $$0131 = $187;\n            }\n           } while(0);\n           $195 = HEAP8[$145>>0]|0;\n           $196 = ($195<<24>>24)==(0);\n           if (!($196)) {\n            $$1132$ph = $$0131;\n            label = 111;\n            break;\n           }\n           $197 = (_fopen($$0131,16585)|0);\n           $198 = ($197|0)==(0|0);\n           if ($198) {\n            $$1132$ph = $$0131;\n            label = 111;\n            break;\n           }\n           (_fclose($197)|0);\n           HEAP32[$vararg_buffer17>>2] = $$0131;\n           (_fprintf($11,16588,$vararg_buffer17)|0);\n           $$1134 = 15;$$1169 = $$0131;\n          } else {\n           $$1132$ph = 0;\n           label = 111;\n          }\n         } while(0);\n         if ((label|0) == 111) {\n          label = 0;\n          $199 = (_pngquant_file($182,$$1132$ph,$6)|0);\n          $$1134 = $199;$$1169 = $$1132$ph;\n         }\n         _free($$1169);\n         $200 = HEAP32[$6>>2]|0;\n         _liq_attr_destroy($200);\n         $201 = ($$1134|0)==(0);\n         do {\n          if ($201) {\n           $$1142 = $$0141201;$$1147 = $$0146200;$$1151 = $$0150198;\n          } else {\n           $202 = $$1134 | 1;\n           $203 = ($202|0)==(99);\n           if ($203) {\n            $204 = (($$0146200) + 1)|0;\n            $$1142 = $$0141201;$$1147 = $204;$$1151 = $$1134;\n            break;\n           } else {\n            $205 = (($$0141201) + 1)|0;\n            $$1142 = $205;$$1147 = $$0146200;$$1151 = $$1134;\n            break;\n           }\n          }\n         } while(0);\n         $206 = (($$0137202) + 1)|0;\n         $exitcond235 = ($206|0)==($137|0);\n         if ($exitcond235) {\n          $$0141$lcssa = $$1142;$$0146$lcssa = $$1147;$$0150$lcssa = $$1151;\n          break L110;\n         }\n         $$pre237 = HEAP32[$3>>2]|0;\n         $$0137202 = $206;$$0141201 = $$1142;$$0146200 = $$1147;$$0150198 = $$1151;$173 = $$pre237;\n        }\n       }\n      } while(0);\n      $172 = ($$0141$lcssa|0)==(0);\n      if ($172) {\n       $$0141$lcssa247 = 0;\n      } else {\n       $207 = ($$0141$lcssa|0)==(1);\n       $208 = $207 ? 31868 : 16727;\n       $209 = ($137|0)==(1);\n       $210 = $209 ? 31868 : 16727;\n       HEAP32[$vararg_buffer20>>2] = $$0141$lcssa;\n       $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);\n       HEAP32[$vararg_ptr23>>2] = $208;\n       $vararg_ptr24 = ((($vararg_buffer20)) + 8|0);\n       HEAP32[$vararg_ptr24>>2] = $137;\n       $vararg_ptr25 = ((($vararg_buffer20)) + 12|0);\n       HEAP32[$vararg_ptr25>>2] = $210;\n       _verbose_printf($3,16729,$vararg_buffer20);\n       $$0141$lcssa247 = $$0141$lcssa;\n      }\n      $211 = ($$0146$lcssa|0)==(0);\n      if ($211) {\n       $$0141$lcssa247249 = $$0141$lcssa247;$$0146$lcssa246250 = 0;$$0148$lcssa245251 = $137;$$0150$lcssa244252 = $$0150$lcssa;\n      } else {\n       $212 = ($$0146$lcssa|0)==(1);\n       $213 = $212 ? 31868 : 16727;\n       $214 = ($137|0)==(1);\n       $215 = $214 ? 31868 : 16727;\n       HEAP32[$vararg_buffer26>>2] = $$0146$lcssa;\n       $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);\n       HEAP32[$vararg_ptr29>>2] = $213;\n       $vararg_ptr30 = ((($vararg_buffer26)) + 8|0);\n       HEAP32[$vararg_ptr30>>2] = $137;\n       $vararg_ptr31 = ((($vararg_buffer26)) + 12|0);\n       HEAP32[$vararg_ptr31>>2] = $215;\n       _verbose_printf($3,16797,$vararg_buffer26);\n       $$0141$lcssa247249 = $$0141$lcssa247;$$0146$lcssa246250 = $$0146$lcssa;$$0148$lcssa245251 = $137;$$0150$lcssa244252 = $$0150$lcssa;\n      }\n     } else {\n      $$0141$lcssa247249 = 0;$$0146$lcssa246250 = 0;$$0148$lcssa245251 = 0;$$0150$lcssa244252 = 0;\n     }\n     $216 = $$0141$lcssa247249 | $$0146$lcssa246250;\n     $217 = ($216|0)==(0);\n     if ($217) {\n      $218 = ($$0148$lcssa245251|0)==(1);\n      $219 = $218 ? 31868 : 16727;\n      HEAP32[$vararg_buffer32>>2] = $$0148$lcssa245251;\n      $vararg_ptr35 = ((($vararg_buffer32)) + 4|0);\n      HEAP32[$vararg_ptr35>>2] = $219;\n      _verbose_printf($3,16844,$vararg_buffer32);\n     }\n     $220 = HEAP32[$37>>2]|0;\n     $221 = ($220|0)==(0|0);\n     if (!($221)) {\n      _liq_image_destroy($220);\n     }\n     $222 = HEAP32[$3>>2]|0;\n     _liq_attr_destroy($222);\n     $$6 = $$0150$lcssa244252;\n    }\n   } while(0);\n   $$9 = $$6;\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n  case 127: {\n   STACKTOP = sp;return ($$9|0);\n   break;\n  }\n }\n if ((label|0) == 45) {\n  (_fwrite(14719,82,1,$11)|0);\n  $$9 = 4;\n  STACKTOP = sp;return ($$9|0);\n }\n else if ((label|0) == 55) {\n  $$9 = 4;\n  STACKTOP = sp;return ($$9|0);\n }\n return (0)|0;\n}\nfunction _read_image($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$0$i = 0, $$1 = 0, $$mux = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $8 = 0, $9 = 0, $brmerge = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer1 = sp + 8|0;\n $vararg_buffer = sp;\n $8 = ($2|0)!=(0);\n do {\n  if ($8) {\n   $9 = HEAP32[2547]|0;\n   $10 = $6&1;\n   $11 = $7&1;\n   $12 = (_rwpng_read_image24($9,$3,$10,$11)|0);\n   $19 = $12;\n  } else {\n   $13 = (_fopen($1,16585)|0);\n   $14 = ($13|0)==(0|0);\n   if (!($14)) {\n    $16 = $6&1;\n    $17 = $7&1;\n    $18 = (_rwpng_read_image24($13,$3,$16,$17)|0);\n    (_fclose($13)|0);\n    $19 = $18;\n    break;\n   }\n   $15 = HEAP32[2606]|0;\n   HEAP32[$vararg_buffer>>2] = $1;\n   (_fprintf($15,17513,$vararg_buffer)|0);\n   $$1 = 2;\n   STACKTOP = sp;return ($$1|0);\n  }\n } while(0);\n $20 = ($19|0)==(0);\n if (!($20)) {\n  $21 = HEAP32[2606]|0;\n  if ($8) {\n   $25 = 17550;\n  } else {\n   $22 = (_strrchr($1,47)|0);\n   $23 = ($22|0)==(0|0);\n   $24 = ((($22)) + 1|0);\n   $$0$i = $23 ? $1 : $24;\n   $25 = $$0$i;\n  }\n  HEAP32[$vararg_buffer1>>2] = $25;\n  (_fprintf($21,17561,$vararg_buffer1)|0);\n  $$1 = $19;\n  STACKTOP = sp;return ($$1|0);\n }\n $26 = ((($3)) + 176|0);\n $27 = HEAP32[$26>>2]|0;\n $28 = ((($3)) + 156|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ((($3)) + 160|0);\n $31 = HEAP32[$30>>2]|0;\n $32 = ((($3)) + 168|0);\n $33 = +HEAPF64[$32>>3];\n $34 = (_liq_image_create_rgba_rows($0,$27,$29,$31,$33)|0);\n HEAP32[$4>>2] = $34;\n $35 = ($34|0)==(0|0);\n $brmerge = $35 | $5;\n $$mux = $35 ? 17 : 0;\n if ($brmerge) {\n  $$1 = $$mux;\n  STACKTOP = sp;return ($$1|0);\n }\n $36 = (_liq_image_set_memory_ownership($34,12)|0);\n $37 = ($36|0)==(0);\n if (!($37)) {\n  $$1 = 17;\n  STACKTOP = sp;return ($$1|0);\n }\n HEAP32[$26>>2] = 0;\n $38 = ((($3)) + 180|0);\n HEAP32[$38>>2] = 0;\n $$1 = 0;\n STACKTOP = sp;return ($$1|0);\n}\nfunction _log_callback($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $3 = HEAP32[2606]|0;\n HEAP32[$vararg_buffer>>2] = $1;\n (_fprintf($3,17509,$vararg_buffer)|0);\n STACKTOP = sp;return;\n}\nfunction _pngquant_file($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$014$i = 0, $$166 = 0.0, $$2 = 0, $$3$ph = 0, $$5 = 0, $$5$ = 0, $$7 = 0, $$not74 = 0, $$pre = 0, $$pre$i$pre = 0, $$pre32$i$pre = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$01$0$$sroa_idx$i = 0, $$sroa$01$0$copyload$i = 0, $$sroa$2$0$$sroa_idx$i = 0, $$sroa$3$0$$sroa_idx$i = 0, $$sroa$4$0$$sroa_idx$i = 0, $$sroa$42$0$$sroa_idx$i = 0, $$sroa$42$0$copyload$i = 0;\n var $$sroa$5$0$$sroa_idx$i = 0, $$sroa$5$0$copyload$i = 0, $$sroa$6$0$$sroa_idx$i = 0, $$sroa$6$0$copyload$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0, $113 = 0;\n var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;\n var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $brmerge$not = 0, $or$cond = 0;\n var $or$cond$i = 0, $phitmp = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer4 = 0, $vararg_buffer6 = 0, $vararg_buffer8 = 0, $vararg_ptr18 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1536|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1536|0);\n $vararg_buffer22 = sp + 1512|0;\n $vararg_buffer19 = sp + 1504|0;\n $vararg_buffer15 = sp + 1488|0;\n $vararg_buffer12 = sp + 1480|0;\n $vararg_buffer10 = sp + 1472|0;\n $vararg_buffer8 = sp + 1464|0;\n $vararg_buffer6 = sp + 1456|0;\n $vararg_buffer4 = sp + 1448|0;\n $vararg_buffer1 = sp + 1440|0;\n $vararg_buffer = sp + 1432|0;\n $3 = sp + 1520|0;\n $4 = sp + 1232|0;\n $5 = sp;\n $6 = sp + 1516|0;\n HEAP32[$vararg_buffer>>2] = $0;\n _verbose_printf($2,16866,$vararg_buffer);\n HEAP32[$3>>2] = 0;\n _memset(($4|0),0,200)|0;\n $7 = ((($2)) + 26|0);\n $8 = HEAP16[$7>>1]|0;\n $9 = $8&255;\n $10 = ($9<<24>>24)==(0);\n if ($10) {\n  $11 = ((($2)) + 21|0);\n  $12 = HEAP8[$11>>0]|0;\n  $13 = ($12<<24>>24)==(0);\n  if ($13) {\n   $25 = 0;\n  } else {\n   $14 = ((($2)) + 25|0);\n   $15 = HEAP8[$14>>0]|0;\n   $16 = ($15<<24>>24)!=(0);\n   $25 = $16;\n  }\n } else {\n  $25 = 1;\n }\n $17 = HEAP32[$2>>2]|0;\n $18 = ((($2)) + 20|0);\n $19 = HEAP8[$18>>0]|0;\n $20 = $19&255;\n $21 = ($8&65535)>(255);\n $22 = ((($2)) + 28|0);\n $23 = HEAP8[$22>>0]|0;\n $24 = ($23<<24>>24)!=(0);\n $26 = (_read_image($17,$0,$20,$4,$3,$25,$21,$24)|0);\n _memset(($5|0),0,1232)|0;\n $27 = ($26|0)==(0);\n L5: do {\n  if ($27) {\n   $28 = ((($4)) + 164|0);\n   $29 = HEAP32[$28>>2]|0;\n   $30 = (($29) + 1023)|0;\n   $31 = $30 >>> 10;\n   HEAP32[$vararg_buffer1>>2] = $31;\n   _verbose_printf($2,16870,$vararg_buffer1);\n   $32 = ((($4)) + 188|0);\n   $33 = HEAP32[$32>>2]|0;\n   switch ($33|0) {\n   case 2:  {\n    _verbose_printf($2,16888,$vararg_buffer4);\n    break;\n   }\n   case 4:  {\n    _verbose_printf($2,16954,$vararg_buffer6);\n    break;\n   }\n   case 3:  {\n    _verbose_printf($2,17020,$vararg_buffer8);\n    break;\n   }\n   case 6:  {\n    break;\n   }\n   case 1:  {\n    _verbose_printf($2,17070,$vararg_buffer10);\n    break;\n   }\n   default: {\n    $34 = ((($4)) + 168|0);\n    $35 = +HEAPF64[$34>>3];\n    $36 = $35 != 0.45455000000000001;\n    if ($36) {\n     $37 = 1.0 / $35;\n     HEAPF64[$vararg_buffer12>>3] = $37;\n     _verbose_printf($2,17104,$vararg_buffer12);\n    }\n   }\n   }\n   $38 = ((($2)) + 4|0);\n   $39 = HEAP32[$38>>2]|0;\n   $40 = ($39|0)==(0|0);\n   $41 = HEAP32[$3>>2]|0;\n   $42 = $40 ? $41 : $39;\n   $43 = HEAP32[$2>>2]|0;\n   $44 = (_liq_image_quantize($42,$43,$6)|0);\n   switch ($44|0) {\n   case 0:  {\n    $45 = HEAP32[$6>>2]|0;\n    (_liq_set_output_gamma($45,0.45455000000000001)|0);\n    $46 = HEAP32[$6>>2]|0;\n    $47 = ((($2)) + 16|0);\n    $48 = +HEAPF32[$47>>2];\n    (_liq_set_dithering_level($46,$48)|0);\n    $49 = HEAP32[$6>>2]|0;\n    $50 = ((($4)) + 192|0);\n    $51 = HEAP32[$50>>2]|0;\n    $52 = (_liq_image_get_width($41)|0);\n    $53 = ((($5)) + 156|0);\n    HEAP32[$53>>2] = $52;\n    $54 = (_liq_image_get_height($41)|0);\n    $55 = ((($5)) + 160|0);\n    HEAP32[$55>>2] = $54;\n    $56 = (+_liq_get_output_gamma($49));\n    $57 = ((($5)) + 176|0);\n    HEAPF64[$57>>3] = $56;\n    $58 = ((($5)) + 1224|0);\n    HEAP32[$58>>2] = $51;\n    $59 = HEAP32[$55>>2]|0;\n    $60 = HEAP32[$53>>2]|0;\n    $61 = Math_imul($60, $59)|0;\n    $62 = (_malloc($61)|0);\n    $63 = ((($5)) + 188|0);\n    HEAP32[$63>>2] = $62;\n    $64 = $59 << 2;\n    $65 = (_malloc($64)|0);\n    $66 = ((($5)) + 184|0);\n    HEAP32[$66>>2] = $65;\n    $67 = ($62|0)==(0|0);\n    $68 = ($65|0)==(0|0);\n    $or$cond$i = $67 | $68;\n    if ($or$cond$i) {\n     $$166 = 90.0;$$2 = 17;\n    } else {\n     $69 = ($59|0)==(0);\n     if ($69) {\n      $85 = $41;\n     } else {\n      HEAP32[$65>>2] = $62;\n      $70 = ($59|0)==(1);\n      if ($70) {\n       $85 = $41;\n      } else {\n       $71 = (($62) + ($60)|0);\n       $72 = ((($65)) + 4|0);\n       HEAP32[$72>>2] = $71;\n       $73 = ($59>>>0)>(2);\n       if ($73) {\n        $75 = 2;\n        while(1) {\n         $$pre$i$pre = HEAP32[$63>>2]|0;\n         $$pre32$i$pre = HEAP32[$66>>2]|0;\n         $74 = Math_imul($75, $60)|0;\n         $76 = (($$pre$i$pre) + ($74)|0);\n         $77 = (($$pre32$i$pre) + ($75<<2)|0);\n         HEAP32[$77>>2] = $76;\n         $78 = (($75) + 1)|0;\n         $79 = ($78>>>0)<($59>>>0);\n         if ($79) {\n          $75 = $78;\n         } else {\n          break;\n         }\n        }\n       }\n       $$pre = HEAP32[$3>>2]|0;\n       $85 = $$pre;\n      }\n     }\n     $80 = (_liq_get_palette($49)|0);\n     $81 = HEAP32[$80>>2]|0;\n     $82 = ((($5)) + 196|0);\n     HEAP32[$82>>2] = $81;\n     $83 = HEAP32[$6>>2]|0;\n     $84 = HEAP32[$66>>2]|0;\n     $86 = (_liq_write_remapped_image_rows($83,$85,$84)|0);\n     $87 = ($86|0)==(0);\n     $$ = $87 ? 0 : 17;\n     $88 = HEAP32[$6>>2]|0;\n     $89 = (_liq_get_palette($88)|0);\n     $90 = HEAP32[$89>>2]|0;\n     HEAP32[$82>>2] = $90;\n     $91 = ($90|0)==(0);\n     if (!($91)) {\n      $$014$i = 0;\n      while(1) {\n       $$sroa$01$0$$sroa_idx$i = (((($89)) + 4|0) + ($$014$i<<2)|0);\n       $$sroa$01$0$copyload$i = HEAP8[$$sroa$01$0$$sroa_idx$i>>0]|0;\n       $$sroa$42$0$$sroa_idx$i = (((((($89)) + 4|0) + ($$014$i<<2)|0)) + 1|0);\n       $$sroa$42$0$copyload$i = HEAP8[$$sroa$42$0$$sroa_idx$i>>0]|0;\n       $$sroa$5$0$$sroa_idx$i = (((((($89)) + 4|0) + ($$014$i<<2)|0)) + 2|0);\n       $$sroa$5$0$copyload$i = HEAP8[$$sroa$5$0$$sroa_idx$i>>0]|0;\n       $$sroa$6$0$$sroa_idx$i = (((((($89)) + 4|0) + ($$014$i<<2)|0)) + 3|0);\n       $$sroa$6$0$copyload$i = HEAP8[$$sroa$6$0$$sroa_idx$i>>0]|0;\n       $$sroa$0$0$$sroa_idx$i = (((($5)) + 200|0) + ($$014$i<<2)|0);\n       HEAP8[$$sroa$0$0$$sroa_idx$i>>0] = $$sroa$01$0$copyload$i;\n       $$sroa$2$0$$sroa_idx$i = (((((($5)) + 200|0) + ($$014$i<<2)|0)) + 1|0);\n       HEAP8[$$sroa$2$0$$sroa_idx$i>>0] = $$sroa$42$0$copyload$i;\n       $$sroa$3$0$$sroa_idx$i = (((((($5)) + 200|0) + ($$014$i<<2)|0)) + 2|0);\n       HEAP8[$$sroa$3$0$$sroa_idx$i>>0] = $$sroa$5$0$copyload$i;\n       $$sroa$4$0$$sroa_idx$i = (((((($5)) + 200|0) + ($$014$i<<2)|0)) + 3|0);\n       HEAP8[$$sroa$4$0$$sroa_idx$i>>0] = $$sroa$6$0$copyload$i;\n       $92 = (($$014$i) + 1)|0;\n       $93 = HEAP32[$89>>2]|0;\n       $94 = ($92>>>0)<($93>>>0);\n       if ($94) {\n        $$014$i = $92;\n       } else {\n        break;\n       }\n      }\n     }\n     $95 = HEAP32[$6>>2]|0;\n     $96 = (+_liq_get_quantization_error($95));\n     $97 = !($96 >= 0.0);\n     if ($97) {\n      $$166 = 90.0;$$2 = $$;\n     } else {\n      $98 = HEAP32[$6>>2]|0;\n      $99 = (_liq_get_quantization_quality($98)|0);\n      HEAPF64[$vararg_buffer15>>3] = $96;\n      $vararg_ptr18 = ((($vararg_buffer15)) + 8|0);\n      HEAP32[$vararg_ptr18>>2] = $99;\n      _verbose_printf($2,17152,$vararg_buffer15);\n      $phitmp = (+($99|0));\n      $$166 = $phitmp;$$2 = $$;\n     }\n    }\n    $100 = HEAP32[$6>>2]|0;\n    _liq_result_destroy($100);\n    $101 = ($$2|0)==(0);\n    if (!($101)) {\n     $$5 = $$2;\n     break L5;\n    }\n    $102 = HEAP8[$7>>0]|0;\n    $103 = ($102<<24>>24)==(0);\n    if (!($103)) {\n     $104 = $$166 / 100.0;\n     $105 = (+Math_pow((+$104),1.5));\n     $106 = HEAP32[$28>>2]|0;\n     $107 = (($106) + -1)|0;\n     $108 = (+($107>>>0));\n     $109 = $105 < 0.5;\n     $110 = $109 ? 0.5 : $105;\n     $111 = $110 * $108;\n     $112 = (~~(($111))>>>0);\n     $113 = ((($5)) + 164|0);\n     HEAP32[$113>>2] = $112;\n    }\n    $114 = ((($2)) + 23|0);\n    $115 = HEAP8[$114>>0]|0;\n    $116 = ((($5)) + 1228|0);\n    HEAP8[$116>>0] = $115;\n    $117 = ((($4)) + 184|0);\n    $118 = HEAP32[$117>>2]|0;\n    $119 = ((($5)) + 192|0);\n    HEAP32[$119>>2] = $118;\n    HEAP32[$117>>2] = 0;\n    $120 = (_write_image($5,0,$1,$2)|0);\n    switch ($120|0) {\n    case 98:  {\n     $121 = ((($5)) + 164|0);\n     $122 = HEAP32[$121>>2]|0;\n     $123 = $122 >>> 10;\n     HEAP32[$vararg_buffer19>>2] = $123;\n     _verbose_printf($2,17199,$vararg_buffer19);\n     $$5 = 98;\n     break L5;\n     break;\n    }\n    case 0:  {\n     break;\n    }\n    default: {\n     $$5 = $120;\n     break L5;\n    }\n    }\n    $124 = ((($5)) + 168|0);\n    $125 = HEAP32[$124>>2]|0;\n    $126 = ($125|0)==(0);\n    if ($126) {\n     $$5 = 0;\n     break L5;\n    }\n    $127 = (($125) + 999)|0;\n    $128 = (($127|0) / 1000)&-1;\n    HEAP32[$vararg_buffer22>>2] = $128;\n    _verbose_printf($2,17238,$vararg_buffer22);\n    $$5 = 0;\n    break L5;\n    break;\n   }\n   case 99:  {\n    $$3$ph = 99;\n    break;\n   }\n   default: {\n    $$3$ph = 4;\n   }\n   }\n   $$5 = $$3$ph;\n  } else {\n   $$5 = $26;\n  }\n } while(0);\n $129 = ((($2)) + 21|0);\n $130 = HEAP8[$129>>0]|0;\n $$not74 = ($130<<24>>24)!=(0);\n $brmerge$not = $25 & $$not74;\n $131 = $$5 | 1;\n $132 = ($131|0)==(99);\n $or$cond = $132 & $brmerge$not;\n if ($or$cond) {\n  $133 = (_write_image(0,$4,$1,$2)|0);\n  $134 = ($133|0)==(0);\n  $$5$ = $134 ? $$5 : $133;\n  $$7 = $$5$;\n } else {\n  $$7 = $$5;\n }\n $135 = HEAP32[$3>>2]|0;\n $136 = ($135|0)==(0|0);\n if ($136) {\n  _rwpng_free_image24($4);\n  _rwpng_free_image8($5);\n  STACKTOP = sp;return ($$7|0);\n }\n _liq_image_destroy($135);\n _rwpng_free_image24($4);\n _rwpng_free_image8($5);\n STACKTOP = sp;return ($$7|0);\n}\nfunction _verbose_printf($0,$1,$varargs) {\n $0 = $0|0;\n $1 = $1|0;\n $varargs = $varargs|0;\n var $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = ((($0)) + 8|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  STACKTOP = sp;return;\n }\n HEAP32[$2>>2] = $varargs;\n $6 = (_vsnprintf(0,0,$1,$2)|0);\n $7 = (($6) + 1)|0;\n $8 = (_llvm_stacksave()|0);\n $$alloca_mul = $7;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n HEAP32[$2>>2] = $varargs;\n (_vsnprintf($9,$7,$1,$2)|0);\n $10 = HEAP32[$3>>2]|0;\n $11 = HEAP32[$0>>2]|0;\n $12 = ((($0)) + 12|0);\n $13 = HEAP32[$12>>2]|0;\n FUNCTION_TABLE_viii[$10 & 127]($11,$9,$13);\n _llvm_stackrestore(($8|0));\n STACKTOP = sp;return;\n}\nfunction _write_image($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$0$i42 = 0, $$0$i43 = 0, $$039 = 0, $$039$ph = 0, $$03946 = 0, $$040 = 0, $$040$ph = 0, $$04045 = 0, $$041 = 0, $$1$ph = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, $vararg_ptr16 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $vararg_buffer13 = sp + 40|0;\n $vararg_buffer10 = sp + 32|0;\n $vararg_buffer6 = sp + 24|0;\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer1 = sp + 8|0;\n $vararg_buffer = sp;\n $4 = ((($3)) + 21|0);\n $5 = HEAP8[$4>>0]|0;\n $6 = ($5<<24>>24)==(0);\n do {\n  if ($6) {\n   $11 = (_strlen($2)|0);\n   $12 = (($11) + 5)|0;\n   $13 = (_malloc($12)|0);\n   $14 = ($13|0)==(0|0);\n   if ($14) {\n    $$041 = 17;\n    STACKTOP = sp;return ($$041|0);\n   }\n   (_strcpy($13,$2)|0);\n   $15 = (($13) + ($11)|0);\n   ;HEAP8[$15>>0]=HEAP8[17350>>0]|0;HEAP8[$15+1>>0]=HEAP8[17350+1>>0]|0;HEAP8[$15+2>>0]=HEAP8[17350+2>>0]|0;HEAP8[$15+3>>0]=HEAP8[17350+3>>0]|0;HEAP8[$15+4>>0]=HEAP8[17350+4>>0]|0;\n   $16 = (_fopen($13,17355)|0);\n   $17 = ($16|0)==(0|0);\n   if ($17) {\n    $18 = HEAP32[2606]|0;\n    HEAP32[$vararg_buffer3>>2] = $13;\n    (_fprintf($18,17358,$vararg_buffer3)|0);\n    _free($13);\n    $$041 = 16;\n    STACKTOP = sp;return ($$041|0);\n   }\n   $19 = ($0|0)==(0|0);\n   if ($19) {\n    $25 = (_strrchr($2,47)|0);\n    $26 = ($25|0)==(0|0);\n    $27 = ((($25)) + 1|0);\n    $$0$i43 = $26 ? $2 : $27;\n    HEAP32[$vararg_buffer10>>2] = $$0$i43;\n    _verbose_printf($3,17428,$vararg_buffer10);\n    $$039$ph = $13;$$040$ph = $16;\n    label = 12;\n    break;\n   } else {\n    $20 = ((($0)) + 196|0);\n    $21 = HEAP32[$20>>2]|0;\n    $22 = (_strrchr($2,47)|0);\n    $23 = ($22|0)==(0|0);\n    $24 = ((($22)) + 1|0);\n    $$0$i42 = $23 ? $2 : $24;\n    HEAP32[$vararg_buffer6>>2] = $21;\n    $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);\n    HEAP32[$vararg_ptr9>>2] = $$0$i42;\n    _verbose_printf($3,17397,$vararg_buffer6);\n    $$039 = $13;$$040 = $16;\n    label = 11;\n    break;\n   }\n  } else {\n   $7 = HEAP32[2576]|0;\n   $8 = ($0|0)==(0|0);\n   if ($8) {\n    _verbose_printf($3,17314,$vararg_buffer1);\n    $$039$ph = 0;$$040$ph = $7;\n    label = 12;\n    break;\n   } else {\n    $9 = ((($0)) + 196|0);\n    $10 = HEAP32[$9>>2]|0;\n    HEAP32[$vararg_buffer>>2] = $10;\n    _verbose_printf($3,17279,$vararg_buffer);\n    $$039 = 0;$$040 = $7;\n    label = 11;\n    break;\n   }\n  }\n } while(0);\n if ((label|0) == 11) {\n  $28 = (_rwpng_write_image8($$040,$0)|0);\n  $$0 = $28;$$03946 = $$039;$$04045 = $$040;\n }\n else if ((label|0) == 12) {\n  $29 = (_rwpng_write_image24($$040$ph,$1)|0);\n  $$0 = $29;$$03946 = $$039$ph;$$04045 = $$040$ph;\n }\n $30 = HEAP8[$4>>0]|0;\n $31 = ($30<<24>>24)==(0);\n if ($31) {\n  (_fclose($$04045)|0);\n  $32 = ($$0|0)==(0);\n  if ($32) {\n   $33 = (_rename($$03946,$2)|0);\n   $34 = ($33|0)==(0);\n   if ($34) {\n    _free($$03946);\n    $$041 = 0;\n    STACKTOP = sp;return ($$041|0);\n   } else {\n    $$1$ph = 16;\n   }\n  } else {\n   $$1$ph = $$0;\n  }\n  (_unlink($$03946)|0);\n  $$2 = $$1$ph;\n } else {\n  $$2 = $$0;\n }\n _free($$03946);\n switch ($$2|0) {\n case 0: case 98:  {\n  $$041 = $$2;\n  STACKTOP = sp;return ($$041|0);\n  break;\n }\n default: {\n }\n }\n $35 = HEAP32[2606]|0;\n $36 = HEAP8[$4>>0]|0;\n $37 = ($36<<24>>24)!=(0);\n $38 = $37 ? 17460 : $2;\n HEAP32[$vararg_buffer13>>2] = $38;\n $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);\n HEAP32[$vararg_ptr16>>2] = $$2;\n (_fprintf($35,17467,$vararg_buffer13)|0);\n $$041 = $$2;\n STACKTOP = sp;return ($$041|0);\n}\nfunction _rwpng_version_info($0) {\n $0 = $0|0;\n var $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $1 = (_png_get_header_ver(0)|0);\n HEAP32[$vararg_buffer>>2] = $1;\n (_fprintf($0,17932,$vararg_buffer)|0);\n STACKTOP = sp;return;\n}\nfunction _rwpng_free_image24($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 176|0);\n $2 = HEAP32[$1>>2]|0;\n _free($2);\n HEAP32[$1>>2] = 0;\n $3 = ((($0)) + 180|0);\n $4 = HEAP32[$3>>2]|0;\n _free($4);\n HEAP32[$3>>2] = 0;\n $5 = ((($0)) + 184|0);\n $6 = HEAP32[$5>>2]|0;\n _rwpng_free_chunks($6);\n HEAP32[$5>>2] = 0;\n return;\n}\nfunction _rwpng_free_chunks($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n } else {\n  $2 = HEAP32[$0>>2]|0;\n  _rwpng_free_chunks($2);\n  $3 = ((($0)) + 4|0);\n  $4 = HEAP32[$3>>2]|0;\n  _free($4);\n  _free($0);\n  return;\n }\n}\nfunction _rwpng_free_image8($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 188|0);\n $2 = HEAP32[$1>>2]|0;\n _free($2);\n HEAP32[$1>>2] = 0;\n $3 = ((($0)) + 184|0);\n $4 = HEAP32[$3>>2]|0;\n _free($4);\n HEAP32[$3>>2] = 0;\n $5 = ((($0)) + 192|0);\n $6 = HEAP32[$5>>2]|0;\n _rwpng_free_chunks($6);\n HEAP32[$5>>2] = 0;\n return;\n}\nfunction _rwpng_read_image24($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = (_rwpng_read_image24_libpng($0,$1,$2,$3)|0);\n return ($4|0);\n}\nfunction _rwpng_read_image24_libpng($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0$reg2mem142$0 = 0, $$01$i$reg2mem$0 = 0, $$017$i$reg2mem144$0 = 0, $$1$reg2mem$0 = 0, $$reg2mem146$0 = 0.0, $$reg2mem148$0 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;\n var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;\n var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;\n var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;\n var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $cond = 0, $cond155 = 0, $cond156 = 0, $cond157 = 0, $cond158 = 0, $cond159 = 0, $cond160 = 0, $cond161 = 0, $cond162 = 0, $cond163 = 0, $cond164 = 0, $cond165 = 0, $cond166 = 0, $cond167 = 0, $cond168 = 0, $cond169 = 0, $cond170 = 0, $cond171 = 0, $cond172 = 0;\n var $cond173 = 0, $cond174 = 0, $cond175 = 0, $cond176 = 0, $cond177 = 0, $cond178 = 0, $cond179 = 0, $cond180 = 0, $cond181 = 0, $cond182 = 0, $cond183 = 0, $exitcond$i = 0, $or$cond = 0, $vararg_buffer = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $vararg_buffer = sp + 8|0;\n _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;\n $4 = sp + 36|0;\n $5 = sp + 32|0;\n $6 = sp + 28|0;\n $7 = sp + 24|0;\n $8 = sp + 16|0;\n $9 = sp;\n HEAP32[$4>>2] = 0;\n HEAP32[$5>>2] = 0;\n $10 = ($3|0)!=(0);\n $11 = $10 ? 12 : 11;\n __THREW__ = 0;\n $12 = (invoke_iiiii(13,(17998|0),($1|0),(14|0),($11|0))|0);\n $13 = __THREW__; __THREW__ = 0;\n if ((($13|0) != 0) & ((threwValue|0) != 0)) { $14 = _testSetjmp(HEAP32[$13>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($14|0) == 0) { _longjmp($13|0, threwValue|0); } tempRet0 = (threwValue); } else { $14 = -1; };\n $15 = tempRet0;\n $cond = ($14|0)==(1);\n do {\n  if ($cond) {\n   $$reg2mem148$0 = $15;\n  } else {\n   HEAP32[$4>>2] = $12;\n   $16 = ($12|0)==(0|0);\n   if ($16) {\n    $$1$reg2mem$0 = 24;\n    _free(_setjmpTable|0);\n    STACKTOP = sp;return ($$1$reg2mem$0|0);\n   }\n   __THREW__ = 0;\n   $17 = (invoke_ii(15,($12|0))|0);\n   $18 = __THREW__; __THREW__ = 0;\n   if ((($18|0) != 0) & ((threwValue|0) != 0)) { $19 = _testSetjmp(HEAP32[$18>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($19|0) == 0) { _longjmp($18|0, threwValue|0); } tempRet0 = (threwValue); } else { $19 = -1; };\n   $20 = tempRet0;\n   $cond155 = ($19|0)==(1);\n   if ($cond155) {\n    $$reg2mem148$0 = $20;\n   } else {\n    HEAP32[$5>>2] = $17;\n    $21 = ($17|0)==(0|0);\n    if (!($21)) {\n     _setjmpTable = _saveSetjmp($1,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;\n     __THREW__ = 0;\n     $25 = __THREW__; __THREW__ = 0;\n     if ((($25|0) != 0) & ((threwValue|0) != 0)) { $26 = _testSetjmp(HEAP32[$25>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($26|0) == 0) { _longjmp($25|0, threwValue|0); } tempRet0 = (threwValue); } else { $26 = -1; };\n     $27 = tempRet0;\n     $cond156 = ($26|0)==(1);\n     if ($cond156) {\n      $$reg2mem148$0 = $27;\n      break;\n     }\n     $$reg2mem148$0 = 0;\n     break;\n    }\n    __THREW__ = 0;\n    invoke_viii(16,($4|0),(0|0),(0|0));\n    $22 = __THREW__; __THREW__ = 0;\n    if ((($22|0) != 0) & ((threwValue|0) != 0)) { $23 = _testSetjmp(HEAP32[$22>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($23|0) == 0) { _longjmp($22|0, threwValue|0); } tempRet0 = (threwValue); } else { $23 = -1; };\n    $24 = tempRet0;\n    $cond157 = ($23|0)==(1);\n    if ($cond157) {\n     $$reg2mem148$0 = $24;\n    } else {\n     $$1$reg2mem$0 = 24;\n     _free(_setjmpTable|0);\n     STACKTOP = sp;return ($$1$reg2mem$0|0);\n    }\n   }\n  }\n } while(0);\n L13: while(1) {\n  $28 = ($$reg2mem148$0|0)==(0);\n  if (!($28)) {\n   __THREW__ = 0;\n   invoke_viii(16,($4|0),($5|0),(0|0));\n   $29 = __THREW__; __THREW__ = 0;\n   if ((($29|0) != 0) & ((threwValue|0) != 0)) { $30 = _testSetjmp(HEAP32[$29>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($30|0) == 0) { _longjmp($29|0, threwValue|0); } tempRet0 = (threwValue); } else { $30 = -1; };\n   $31 = tempRet0;\n   $cond158 = ($30|0)==(1);\n   if ($cond158) {\n    $$reg2mem148$0 = $31;\n    continue;\n   } else {\n    label = 11;\n    break;\n   }\n  }\n  $32 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  (invoke_iiii(17,($32|0),4,3)|0);\n  $33 = __THREW__; __THREW__ = 0;\n  if ((($33|0) != 0) & ((threwValue|0) != 0)) { $34 = _testSetjmp(HEAP32[$33>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($34|0) == 0) { _longjmp($33|0, threwValue|0); } tempRet0 = (threwValue); } else { $34 = -1; };\n  $35 = tempRet0;\n  $cond159 = ($34|0)==(1);\n  if ($cond159) {\n   $$reg2mem148$0 = $35;\n   continue;\n  }\n  $36 = ($2|0)==(0);\n  if ($36) {\n   $37 = HEAP32[$4>>2]|0;\n   __THREW__ = 0;\n   invoke_viiii(18,($37|0),2,(18005|0),4);\n   $38 = __THREW__; __THREW__ = 0;\n   if ((($38|0) != 0) & ((threwValue|0) != 0)) { $39 = _testSetjmp(HEAP32[$38>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($39|0) == 0) { _longjmp($38|0, threwValue|0); } tempRet0 = (threwValue); } else { $39 = -1; };\n   $40 = tempRet0;\n   $cond182 = ($39|0)==(1);\n   if ($cond182) {\n    $$reg2mem148$0 = $40;\n    continue;\n   }\n   $41 = HEAP32[$4>>2]|0;\n   $42 = ((($1)) + 184|0);\n   __THREW__ = 0;\n   invoke_viii(19,($41|0),($42|0),(20|0));\n   $43 = __THREW__; __THREW__ = 0;\n   if ((($43|0) != 0) & ((threwValue|0) != 0)) { $44 = _testSetjmp(HEAP32[$43>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($44|0) == 0) { _longjmp($43|0, threwValue|0); } tempRet0 = (threwValue); } else { $44 = -1; };\n   $45 = tempRet0;\n   $cond183 = ($44|0)==(1);\n   if ($cond183) {\n    $$reg2mem148$0 = $45;\n    continue;\n   }\n  }\n  HEAP32[$8>>2] = $0;\n  $46 = ((($8)) + 4|0);\n  HEAP32[$46>>2] = 0;\n  $47 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  invoke_viii(21,($47|0),($8|0),(22|0));\n  $48 = __THREW__; __THREW__ = 0;\n  if ((($48|0) != 0) & ((threwValue|0) != 0)) { $49 = _testSetjmp(HEAP32[$48>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($49|0) == 0) { _longjmp($48|0, threwValue|0); } tempRet0 = (threwValue); } else { $49 = -1; };\n  $50 = tempRet0;\n  $cond160 = ($49|0)==(1);\n  if ($cond160) {\n   $$reg2mem148$0 = $50;\n   continue;\n  }\n  $51 = HEAP32[$4>>2]|0;\n  $52 = HEAP32[$5>>2]|0;\n  __THREW__ = 0;\n  invoke_vii(23,($51|0),($52|0));\n  $53 = __THREW__; __THREW__ = 0;\n  if ((($53|0) != 0) & ((threwValue|0) != 0)) { $54 = _testSetjmp(HEAP32[$53>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($54|0) == 0) { _longjmp($53|0, threwValue|0); } tempRet0 = (threwValue); } else { $54 = -1; };\n  $55 = tempRet0;\n  $cond161 = ($54|0)==(1);\n  if ($cond161) {\n   $$reg2mem148$0 = $55;\n   continue;\n  }\n  $56 = HEAP32[$4>>2]|0;\n  $57 = HEAP32[$5>>2]|0;\n  $58 = ((($1)) + 156|0);\n  $59 = ((($1)) + 160|0);\n  __THREW__ = 0;\n  (invoke_iiiiiiiiii(24,($56|0),($57|0),($58|0),($59|0),($7|0),($6|0),(0|0),(0|0),(0|0))|0);\n  $60 = __THREW__; __THREW__ = 0;\n  if ((($60|0) != 0) & ((threwValue|0) != 0)) { $61 = _testSetjmp(HEAP32[$60>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($61|0) == 0) { _longjmp($60|0, threwValue|0); } tempRet0 = (threwValue); } else { $61 = -1; };\n  $62 = tempRet0;\n  $cond162 = ($61|0)==(1);\n  if ($cond162) {\n   $$reg2mem148$0 = $62;\n   continue;\n  }\n  $63 = HEAP32[$6>>2]|0;\n  $64 = $63 & 4;\n  $65 = ($64|0)==(0);\n  if ($65) {\n   $66 = HEAP32[$4>>2]|0;\n   __THREW__ = 0;\n   invoke_vi(25,($66|0));\n   $67 = __THREW__; __THREW__ = 0;\n   if ((($67|0) != 0) & ((threwValue|0) != 0)) { $68 = _testSetjmp(HEAP32[$67>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($68|0) == 0) { _longjmp($67|0, threwValue|0); } tempRet0 = (threwValue); } else { $68 = -1; };\n   $69 = tempRet0;\n   $cond180 = ($68|0)==(1);\n   if ($cond180) {\n    $$reg2mem148$0 = $69;\n    continue;\n   }\n   $70 = HEAP32[$4>>2]|0;\n   __THREW__ = 0;\n   invoke_viii(26,($70|0),65535,1);\n   $71 = __THREW__; __THREW__ = 0;\n   if ((($71|0) != 0) & ((threwValue|0) != 0)) { $72 = _testSetjmp(HEAP32[$71>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($72|0) == 0) { _longjmp($71|0, threwValue|0); } tempRet0 = (threwValue); } else { $72 = -1; };\n   $73 = tempRet0;\n   $cond181 = ($72|0)==(1);\n   if ($cond181) {\n    $$reg2mem148$0 = $73;\n    continue;\n   }\n  }\n  $74 = HEAP32[$7>>2]|0;\n  $75 = ($74|0)==(16);\n  if ($75) {\n   $76 = HEAP32[$4>>2]|0;\n   __THREW__ = 0;\n   invoke_vi(27,($76|0));\n   $77 = __THREW__; __THREW__ = 0;\n   if ((($77|0) != 0) & ((threwValue|0) != 0)) { $78 = _testSetjmp(HEAP32[$77>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($78|0) == 0) { _longjmp($77|0, threwValue|0); } tempRet0 = (threwValue); } else { $78 = -1; };\n   $79 = tempRet0;\n   $cond179 = ($78|0)==(1);\n   if ($cond179) {\n    $$reg2mem148$0 = $79;\n    continue;\n   }\n  }\n  $80 = HEAP32[$6>>2]|0;\n  $81 = $80 & 2;\n  $82 = ($81|0)==(0);\n  if ($82) {\n   $83 = HEAP32[$4>>2]|0;\n   __THREW__ = 0;\n   invoke_vi(28,($83|0));\n   $84 = __THREW__; __THREW__ = 0;\n   if ((($84|0) != 0) & ((threwValue|0) != 0)) { $85 = _testSetjmp(HEAP32[$84>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($85|0) == 0) { _longjmp($84|0, threwValue|0); } tempRet0 = (threwValue); } else { $85 = -1; };\n   $86 = tempRet0;\n   $cond178 = ($85|0)==(1);\n   if ($cond178) {\n    $$reg2mem148$0 = $86;\n    continue;\n   }\n  }\n  HEAPF64[$9>>3] = 0.45455000000000001;\n  $87 = HEAP32[$4>>2]|0;\n  $88 = HEAP32[$5>>2]|0;\n  __THREW__ = 0;\n  $89 = (invoke_iiii(29,($87|0),($88|0),2048)|0);\n  $90 = __THREW__; __THREW__ = 0;\n  if ((($90|0) != 0) & ((threwValue|0) != 0)) { $91 = _testSetjmp(HEAP32[$90>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($91|0) == 0) { _longjmp($90|0, threwValue|0); } tempRet0 = (threwValue); } else { $91 = -1; };\n  $92 = tempRet0;\n  $cond163 = ($91|0)==(1);\n  if ($cond163) {\n   $$reg2mem148$0 = $92;\n   continue;\n  }\n  $93 = ($89|0)==(0);\n  do {\n   if ($93) {\n    $96 = HEAP32[$4>>2]|0;\n    $97 = HEAP32[$5>>2]|0;\n    __THREW__ = 0;\n    (invoke_iiii(30,($96|0),($97|0),($9|0))|0);\n    $98 = __THREW__; __THREW__ = 0;\n    if ((($98|0) != 0) & ((threwValue|0) != 0)) { $99 = _testSetjmp(HEAP32[$98>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($99|0) == 0) { _longjmp($98|0, threwValue|0); } tempRet0 = (threwValue); } else { $99 = -1; };\n    $100 = tempRet0;\n    $cond176 = ($99|0)==(1);\n    if ($cond176) {\n     $$reg2mem148$0 = $100;\n     continue L13;\n    }\n    $101 = +HEAPF64[$9>>3];\n    $102 = $101 > 0.0;\n    $103 = $101 <= 1.0;\n    $or$cond = $102 & $103;\n    if ($or$cond) {\n     $104 = ((($1)) + 188|0);\n     HEAP32[$104>>2] = 5;\n     $105 = ((($1)) + 192|0);\n     HEAP32[$105>>2] = 5;\n     $$reg2mem146$0 = $101;\n     break;\n    }\n    $106 = HEAP32[2606]|0;\n    __THREW__ = 0;\n    HEAPF64[$vararg_buffer>>3] = $101;\n    (invoke_iiii(31,($106|0),(18025|0),($vararg_buffer|0))|0);\n    $107 = __THREW__; __THREW__ = 0;\n    if ((($107|0) != 0) & ((threwValue|0) != 0)) { $108 = _testSetjmp(HEAP32[$107>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($108|0) == 0) { _longjmp($107|0, threwValue|0); } tempRet0 = (threwValue); } else { $108 = -1; };\n    $109 = tempRet0;\n    $cond177 = ($108|0)==(1);\n    if ($cond177) {\n     $$reg2mem148$0 = $109;\n     continue L13;\n    }\n    $110 = ((($1)) + 188|0);\n    HEAP32[$110>>2] = 0;\n    $111 = ((($1)) + 192|0);\n    HEAP32[$111>>2] = 0;\n    HEAPF64[$9>>3] = 0.45455000000000001;\n    $$reg2mem146$0 = 0.45455000000000001;\n   } else {\n    $94 = ((($1)) + 188|0);\n    HEAP32[$94>>2] = 1;\n    $95 = ((($1)) + 192|0);\n    HEAP32[$95>>2] = 1;\n    $$reg2mem146$0 = 0.45455000000000001;\n   }\n  } while(0);\n  $112 = ((($1)) + 168|0);\n  HEAPF64[$112>>3] = $$reg2mem146$0;\n  $113 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  (invoke_ii(32,($113|0))|0);\n  $114 = __THREW__; __THREW__ = 0;\n  if ((($114|0) != 0) & ((threwValue|0) != 0)) { $115 = _testSetjmp(HEAP32[$114>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($115|0) == 0) { _longjmp($114|0, threwValue|0); } tempRet0 = (threwValue); } else { $115 = -1; };\n  $116 = tempRet0;\n  $cond164 = ($115|0)==(1);\n  if ($cond164) {\n   $$reg2mem148$0 = $116;\n   continue;\n  }\n  $117 = HEAP32[$4>>2]|0;\n  $118 = HEAP32[$5>>2]|0;\n  __THREW__ = 0;\n  invoke_vii(33,($117|0),($118|0));\n  $119 = __THREW__; __THREW__ = 0;\n  if ((($119|0) != 0) & ((threwValue|0) != 0)) { $120 = _testSetjmp(HEAP32[$119>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($120|0) == 0) { _longjmp($119|0, threwValue|0); } tempRet0 = (threwValue); } else { $120 = -1; };\n  $121 = tempRet0;\n  $cond165 = ($120|0)==(1);\n  if ($cond165) {\n   $$reg2mem148$0 = $121;\n   continue;\n  }\n  $122 = HEAP32[$4>>2]|0;\n  $123 = HEAP32[$5>>2]|0;\n  __THREW__ = 0;\n  $124 = (invoke_iii(34,($122|0),($123|0))|0);\n  $125 = __THREW__; __THREW__ = 0;\n  if ((($125|0) != 0) & ((threwValue|0) != 0)) { $126 = _testSetjmp(HEAP32[$125>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($126|0) == 0) { _longjmp($125|0, threwValue|0); } tempRet0 = (threwValue); } else { $126 = -1; };\n  $127 = tempRet0;\n  $cond166 = ($126|0)==(1);\n  if ($cond166) {\n   $$reg2mem148$0 = $127;\n   continue;\n  }\n  $128 = HEAP32[$59>>2]|0;\n  $129 = (2147483647 / ($128>>>0))&-1;\n  $130 = ($124>>>0)>($129>>>0);\n  if ($130) {\n   __THREW__ = 0;\n   invoke_viii(16,($4|0),($5|0),(0|0));\n   $131 = __THREW__; __THREW__ = 0;\n   if ((($131|0) != 0) & ((threwValue|0) != 0)) { $132 = _testSetjmp(HEAP32[$131>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($132|0) == 0) { _longjmp($131|0, threwValue|0); } tempRet0 = (threwValue); } else { $132 = -1; };\n   $133 = tempRet0;\n   $cond175 = ($132|0)==(1);\n   if ($cond175) {\n    $$reg2mem148$0 = $133;\n    continue;\n   } else {\n    label = 43;\n    break;\n   }\n  }\n  $134 = Math_imul($128, $124)|0;\n  __THREW__ = 0;\n  $135 = (invoke_ii(35,($134|0))|0);\n  $136 = __THREW__; __THREW__ = 0;\n  if ((($136|0) != 0) & ((threwValue|0) != 0)) { $137 = _testSetjmp(HEAP32[$136>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($137|0) == 0) { _longjmp($136|0, threwValue|0); } tempRet0 = (threwValue); } else { $137 = -1; };\n  $138 = tempRet0;\n  $cond167 = ($137|0)==(1);\n  if ($cond167) {\n   $$reg2mem148$0 = $138;\n   continue;\n  }\n  $139 = ((($1)) + 180|0);\n  HEAP32[$139>>2] = $135;\n  $140 = ($135|0)==(0|0);\n  if ($140) {\n   $141 = HEAP32[2606]|0;\n   __THREW__ = 0;\n   (invoke_iiiii(36,(18075|0),49,1,($141|0))|0);\n   $142 = __THREW__; __THREW__ = 0;\n   if ((($142|0) != 0) & ((threwValue|0) != 0)) { $143 = _testSetjmp(HEAP32[$142>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($143|0) == 0) { _longjmp($142|0, threwValue|0); } tempRet0 = (threwValue); } else { $143 = -1; };\n   $144 = tempRet0;\n   $cond173 = ($143|0)==(1);\n   if ($cond173) {\n    $$reg2mem148$0 = $144;\n    continue;\n   }\n   __THREW__ = 0;\n   invoke_viii(16,($4|0),($5|0),(0|0));\n   $145 = __THREW__; __THREW__ = 0;\n   if ((($145|0) != 0) & ((threwValue|0) != 0)) { $146 = _testSetjmp(HEAP32[$145>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($146|0) == 0) { _longjmp($145|0, threwValue|0); } tempRet0 = (threwValue); } else { $146 = -1; };\n   $147 = tempRet0;\n   $cond174 = ($146|0)==(1);\n   if ($cond174) {\n    $$reg2mem148$0 = $147;\n    continue;\n   } else {\n    label = 48;\n    break;\n   }\n  }\n  $148 = HEAP32[$5>>2]|0;\n  $149 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  $150 = (invoke_iii(34,($149|0),($148|0))|0);\n  $151 = __THREW__; __THREW__ = 0;\n  if ((($151|0) != 0) & ((threwValue|0) != 0)) { $152 = _testSetjmp(HEAP32[$151>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($152|0) == 0) { _longjmp($151|0, threwValue|0); } tempRet0 = (threwValue); } else { $152 = -1; };\n  $153 = tempRet0;\n  $cond168 = ($152|0)==(1);\n  if ($cond168) {\n   $$reg2mem148$0 = $153;\n   continue;\n  }\n  $154 = $128 << 2;\n  __THREW__ = 0;\n  $155 = (invoke_ii(35,($154|0))|0);\n  $156 = __THREW__; __THREW__ = 0;\n  if ((($156|0) != 0) & ((threwValue|0) != 0)) { $157 = _testSetjmp(HEAP32[$156>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($157|0) == 0) { _longjmp($156|0, threwValue|0); } tempRet0 = (threwValue); } else { $157 = -1; };\n  $158 = tempRet0;\n  $cond169 = ($157|0)==(1);\n  if ($cond169) {\n   $$reg2mem148$0 = $158;\n   continue;\n  }\n  $159 = ($155|0)==(0|0);\n  do {\n   if ($159) {\n    $$017$i$reg2mem144$0 = 0;\n   } else {\n    $160 = ($128|0)==(0);\n    if ($160) {\n     $$017$i$reg2mem144$0 = $155;\n     break;\n    } else {\n     $$01$i$reg2mem$0 = 0;\n    }\n    while(1) {\n     $161 = Math_imul($$01$i$reg2mem$0, $150)|0;\n     $162 = (($135) + ($161)|0);\n     $163 = (($155) + ($$01$i$reg2mem$0<<2)|0);\n     HEAP32[$163>>2] = $162;\n     $164 = (($$01$i$reg2mem$0) + 1)|0;\n     $exitcond$i = ($164|0)==($128|0);\n     if ($exitcond$i) {\n      $$017$i$reg2mem144$0 = $155;\n      break;\n     } else {\n      $$01$i$reg2mem$0 = $164;\n     }\n    }\n   }\n  } while(0);\n  $165 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  invoke_vii(37,($165|0),($$017$i$reg2mem144$0|0));\n  $166 = __THREW__; __THREW__ = 0;\n  if ((($166|0) != 0) & ((threwValue|0) != 0)) { $167 = _testSetjmp(HEAP32[$166>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($167|0) == 0) { _longjmp($166|0, threwValue|0); } tempRet0 = (threwValue); } else { $167 = -1; };\n  $168 = tempRet0;\n  $cond170 = ($167|0)==(1);\n  if ($cond170) {\n   $$reg2mem148$0 = $168;\n   continue;\n  }\n  $169 = HEAP32[$4>>2]|0;\n  __THREW__ = 0;\n  invoke_vii(38,($169|0),(0|0));\n  $170 = __THREW__; __THREW__ = 0;\n  if ((($170|0) != 0) & ((threwValue|0) != 0)) { $171 = _testSetjmp(HEAP32[$170>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($171|0) == 0) { _longjmp($170|0, threwValue|0); } tempRet0 = (threwValue); } else { $171 = -1; };\n  $172 = tempRet0;\n  $cond171 = ($171|0)==(1);\n  if ($cond171) {\n   $$reg2mem148$0 = $172;\n   continue;\n  }\n  __THREW__ = 0;\n  invoke_viii(16,($4|0),($5|0),(0|0));\n  $173 = __THREW__; __THREW__ = 0;\n  if ((($173|0) != 0) & ((threwValue|0) != 0)) { $174 = _testSetjmp(HEAP32[$173>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($174|0) == 0) { _longjmp($173|0, threwValue|0); } tempRet0 = (threwValue); } else { $174 = -1; };\n  $175 = tempRet0;\n  $cond172 = ($174|0)==(1);\n  if ($cond172) {\n   $$reg2mem148$0 = $175;\n  } else {\n   label = 57;\n   break;\n  }\n }\n if ((label|0) == 11) {\n  $$1$reg2mem$0 = 25;\n  _free(_setjmpTable|0);\n  STACKTOP = sp;return ($$1$reg2mem$0|0);\n }\n else if ((label|0) == 43) {\n  $$0$reg2mem142$0 = 24;\n }\n else if ((label|0) == 48) {\n  $$0$reg2mem142$0 = 24;\n }\n else if ((label|0) == 57) {\n  $176 = HEAP32[$46>>2]|0;\n  $177 = ((($1)) + 164|0);\n  HEAP32[$177>>2] = $176;\n  $178 = ((($1)) + 176|0);\n  HEAP32[$178>>2] = $$017$i$reg2mem144$0;\n  $$0$reg2mem142$0 = 0;\n }\n $$1$reg2mem$0 = $$0$reg2mem142$0;\n _free(_setjmpTable|0);\n STACKTOP = sp;return ($$1$reg2mem$0|0);\n}\nfunction _rwpng_warning_stderr_handler($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $2 = HEAP32[2606]|0;\n HEAP32[$vararg_buffer>>2] = $1;\n (_fprintf($2,18180,$vararg_buffer)|0);\n STACKTOP = sp;return;\n}\nfunction _rwpng_warning_silent_handler($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return;\n}\nfunction _rwpng_error_handler($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $2 = HEAP32[2606]|0;\n HEAP32[$vararg_buffer>>2] = $1;\n (_fprintf($2,18151,$vararg_buffer)|0);\n (_fflush($2)|0);\n $3 = (_png_get_error_ptr($0)|0);\n $4 = ($3|0)==(0|0);\n if ($4) {\n  _abort();\n  // unreachable;\n } else {\n  _longjmp(($3|0),1);\n  // unreachable;\n }\n}\nfunction _read_chunk_callback($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_memcmp(18136,$1,5)|0);\n $3 = ($2|0)==(0);\n if ($3) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = (_memcmp(18141,$1,5)|0);\n $5 = ($4|0)==(0);\n if ($5) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $6 = (_memcmp(18146,$1,5)|0);\n $7 = ($6|0)==(0);\n if ($7) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $8 = ((($1)) + 16|0);\n $9 = HEAP8[$8>>0]|0;\n $10 = ($9<<24>>24)==(0);\n if ($10) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $11 = (_png_get_user_chunk_ptr($0)|0);\n $12 = (_malloc(20)|0);\n $13 = ((($12)) + 12|0);\n ;HEAP32[$13>>2]=HEAP32[$1>>2]|0;HEAP8[$13+4>>0]=HEAP8[$1+4>>0]|0;\n $14 = ((($1)) + 12|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ((($12)) + 8|0);\n HEAP32[$16>>2] = $15;\n $17 = HEAP8[$8>>0]|0;\n $18 = ((($12)) + 17|0);\n HEAP8[$18>>0] = $17;\n $19 = ($15|0)==(0);\n if ($19) {\n  $20 = ((($12)) + 4|0);\n  HEAP32[$20>>2] = 0;\n } else {\n  $21 = (_malloc($15)|0);\n  $22 = ((($12)) + 4|0);\n  HEAP32[$22>>2] = $21;\n  $23 = ((($1)) + 8|0);\n  $24 = HEAP32[$23>>2]|0;\n  _memcpy(($21|0),($24|0),($15|0))|0;\n }\n $25 = HEAP32[$11>>2]|0;\n HEAP32[$12>>2] = $25;\n HEAP32[$11>>2] = $12;\n $$0 = 1;\n return ($$0|0);\n}\nfunction _user_read_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_png_get_io_ptr($0)|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (_fread($1,1,$2,$4)|0);\n $6 = ($5|0)==(0);\n if ($6) {\n  _png_error($0,18125);\n  // unreachable;\n } else {\n  $7 = ((($3)) + 4|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = (($8) + ($5))|0;\n  HEAP32[$7>>2] = $9;\n  return;\n }\n}\nfunction _rwpng_write_image8($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0 = 0, $$063 = 0, $$06471 = 0, $$065$ = 0, $$065$lcssa = 0, $$06570 = 0, $$06873 = 0, $$2 = 0, $$lcssa = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$2$0$$sroa_idx = 0, $$sroa$230$0$$sroa_idx31 = 0, $$sroa$3$0$$sroa_idx = 0, $$sroa$332$0$$sroa_idx33 = 0, $$sroa$4$0$$sroa_idx34 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);\n $2 = sp + 44|0;\n $3 = sp + 40|0;\n $4 = sp + 24|0;\n $5 = sp;\n $6 = sp + 304|0;\n $7 = sp + 48|0;\n $8 = ((($1)) + 196|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9>>>0)>(256);\n if ($10) {\n  $$2 = 4;\n  STACKTOP = sp;return ($$2|0);\n }\n $11 = ((($1)) + 1228|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12 << 24 >> 24;\n $14 = (_rwpng_write_image_init($1,$2,$3,$13)|0);\n $15 = ($14|0)==(0);\n if (!($15)) {\n  $$2 = $14;\n  STACKTOP = sp;return ($$2|0);\n }\n $16 = ((($1)) + 164|0);\n $17 = HEAP32[$16>>2]|0;\n HEAP32[$4>>2] = $0;\n $$sroa$230$0$$sroa_idx31 = ((($4)) + 4|0);\n HEAP32[$$sroa$230$0$$sroa_idx31>>2] = $17;\n $$sroa$332$0$$sroa_idx33 = ((($4)) + 8|0);\n HEAP32[$$sroa$332$0$$sroa_idx33>>2] = 0;\n $$sroa$4$0$$sroa_idx34 = ((($4)) + 12|0);\n HEAP32[$$sroa$4$0$$sroa_idx34>>2] = 0;\n $18 = HEAP32[$2>>2]|0;\n _png_set_write_fn($18,$4,39,40);\n $19 = HEAP32[$2>>2]|0;\n _png_set_filter($19,0,0);\n $20 = HEAP32[$3>>2]|0;\n $21 = HEAP32[$2>>2]|0;\n $22 = ((($1)) + 1224|0);\n $23 = HEAP32[$22>>2]|0;\n switch ($23|0) {\n case 5: case 0:  {\n  break;\n }\n default: {\n  $24 = ((($1)) + 176|0);\n  $25 = +HEAPF64[$24>>3];\n  _png_set_gAMA($21,$20,$25);\n  $26 = ($23|0)==(1);\n  if ($26) {\n   _png_set_sRGB($21,$20,0);\n  }\n }\n }\n $27 = HEAP32[$8>>2]|0;\n $28 = ($27>>>0)<(3);\n if ($28) {\n  $$063 = 1;\n } else {\n  $29 = ($27>>>0)<(5);\n  if ($29) {\n   $$063 = 2;\n  } else {\n   $30 = ($27>>>0)<(17);\n   $$ = $30 ? 4 : 8;\n   $$063 = $$;\n  }\n }\n $31 = ((($1)) + 192|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = ((($1)) + 168|0);\n HEAP32[$33>>2] = 0;\n $34 = ($32|0)==(0|0);\n if (!($34)) {\n  $35 = ((($5)) + 8|0);\n  $36 = ((($5)) + 12|0);\n  $37 = ((($5)) + 16|0);\n  $$06873 = $32;\n  while(1) {\n   ;HEAP32[$5>>2]=0|0;HEAP8[$5+4>>0]=0|0;\n   $38 = ((($$06873)) + 4|0);\n   $39 = HEAP32[$38>>2]|0;\n   HEAP32[$35>>2] = $39;\n   $40 = ((($$06873)) + 8|0);\n   $41 = HEAP32[$40>>2]|0;\n   HEAP32[$36>>2] = $41;\n   $42 = ((($$06873)) + 17|0);\n   $43 = HEAP8[$42>>0]|0;\n   HEAP8[$37>>0] = $43;\n   $44 = ((($$06873)) + 12|0);\n   ;HEAP32[$5>>2]=HEAP32[$44>>2]|0;HEAP8[$5+4>>0]=HEAP8[$44+4>>0]|0;\n   $45 = HEAP32[$2>>2]|0;\n   $46 = HEAP32[$3>>2]|0;\n   _png_set_unknown_chunks($45,$46,$5,1);\n   $47 = HEAP32[$40>>2]|0;\n   $48 = (($47) + 12)|0;\n   $49 = HEAP32[$33>>2]|0;\n   $50 = (($48) + ($49))|0;\n   HEAP32[$33>>2] = $50;\n   $51 = HEAP32[$$06873>>2]|0;\n   $52 = ($51|0)==(0|0);\n   if ($52) {\n    break;\n   } else {\n    $$06873 = $51;\n   }\n  }\n }\n $53 = HEAP32[$2>>2]|0;\n $54 = HEAP32[$3>>2]|0;\n $55 = ((($1)) + 156|0);\n $56 = HEAP32[$55>>2]|0;\n $57 = ((($1)) + 160|0);\n $58 = HEAP32[$57>>2]|0;\n _png_set_IHDR($53,$54,$56,$58,$$063,3,0,0,0);\n $59 = HEAP32[$8>>2]|0;\n $60 = ($59|0)==(0);\n if ($60) {\n  $$065$lcssa = 0;$$lcssa = 0;\n } else {\n  $$06471 = 0;$$06570 = 0;\n  while(1) {\n   $64 = (((($1)) + 200|0) + ($$06471<<2)|0);\n   $65 = HEAP8[$64>>0]|0;\n   $66 = (((((($1)) + 200|0) + ($$06471<<2)|0)) + 1|0);\n   $67 = HEAP8[$66>>0]|0;\n   $68 = (((((($1)) + 200|0) + ($$06471<<2)|0)) + 2|0);\n   $69 = HEAP8[$68>>0]|0;\n   $$sroa$0$0$$sroa_idx = (($6) + (($$06471*3)|0)|0);\n   HEAP8[$$sroa$0$0$$sroa_idx>>0] = $65;\n   $$sroa$2$0$$sroa_idx = (((($6) + (($$06471*3)|0)|0)) + 1|0);\n   HEAP8[$$sroa$2$0$$sroa_idx>>0] = $67;\n   $$sroa$3$0$$sroa_idx = (((($6) + (($$06471*3)|0)|0)) + 2|0);\n   HEAP8[$$sroa$3$0$$sroa_idx>>0] = $69;\n   $70 = (((((($1)) + 200|0) + ($$06471<<2)|0)) + 3|0);\n   $71 = HEAP8[$70>>0]|0;\n   $72 = (($7) + ($$06471)|0);\n   HEAP8[$72>>0] = $71;\n   $73 = ($71<<24>>24)==(-1);\n   $74 = (($$06471) + 1)|0;\n   $$065$ = $73 ? $$06570 : $74;\n   $75 = ($74>>>0)<($59>>>0);\n   if ($75) {\n    $$06471 = $74;$$06570 = $$065$;\n   } else {\n    $$065$lcssa = $$065$;$$lcssa = $59;\n    break;\n   }\n  }\n }\n $61 = HEAP32[$2>>2]|0;\n $62 = HEAP32[$3>>2]|0;\n _png_set_PLTE($61,$62,$6,$$lcssa);\n $63 = ($$065$lcssa|0)==(0);\n if (!($63)) {\n  $76 = HEAP32[$2>>2]|0;\n  $77 = HEAP32[$3>>2]|0;\n  _png_set_tRNS($76,$77,$7,$$065$lcssa,0);\n }\n $78 = ((($1)) + 184|0);\n $79 = HEAP32[$78>>2]|0;\n $80 = HEAP32[$2>>2]|0;\n $81 = HEAP32[$3>>2]|0;\n _png_write_info($80,$81);\n $82 = HEAP32[$2>>2]|0;\n _png_set_packing($82);\n $83 = HEAP32[$2>>2]|0;\n _png_write_image($83,$79);\n $84 = HEAP32[$2>>2]|0;\n _png_write_end($84,0);\n _png_destroy_write_struct($2,$3);\n $85 = HEAP32[$$sroa$4$0$$sroa_idx34>>2]|0;\n $86 = ($85|0)==(0);\n if ($86) {\n  $87 = HEAP32[$$sroa$230$0$$sroa_idx31>>2]|0;\n  $88 = ($87|0)!=(0);\n  $89 = HEAP32[$$sroa$332$0$$sroa_idx33>>2]|0;\n  $90 = ($89>>>0)>($87>>>0);\n  $or$cond = $88 & $90;\n  if ($or$cond) {\n   $$0 = 98;\n  } else {\n   label = 18;\n  }\n } else {\n  label = 18;\n }\n if ((label|0) == 18) {\n  $$0 = $85;\n }\n $$2 = $$0;\n STACKTOP = sp;return ($$2|0);\n}\nfunction _rwpng_write_image_init($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0$reg2mem$0 = 0, $$reg2mem29$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $cond31 = 0, $cond32 = 0, $cond33 = 0, $cond34 = 0, $cond35 = 0, $cond36 = 0;\n var _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;\n sp = STACKTOP;\n _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;\n __THREW__ = 0;\n $4 = (invoke_iiiii(41,(17998|0),($0|0),(14|0),(0|0))|0);\n $5 = __THREW__; __THREW__ = 0;\n if ((($5|0) != 0) & ((threwValue|0) != 0)) { $6 = _testSetjmp(HEAP32[$5>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($6|0) == 0) { _longjmp($5|0, threwValue|0); } tempRet0 = (threwValue); } else { $6 = -1; };\n $7 = tempRet0;\n $cond = ($6|0)==(1);\n do {\n  if ($cond) {\n   $$reg2mem29$0 = $7;\n  } else {\n   HEAP32[$1>>2] = $4;\n   $8 = ($4|0)==(0|0);\n   if ($8) {\n    $$0$reg2mem$0 = 35;\n    _free(_setjmpTable|0);\n    return ($$0$reg2mem$0|0);\n   }\n   __THREW__ = 0;\n   $9 = (invoke_ii(15,($4|0))|0);\n   $10 = __THREW__; __THREW__ = 0;\n   if ((($10|0) != 0) & ((threwValue|0) != 0)) { $11 = _testSetjmp(HEAP32[$10>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($11|0) == 0) { _longjmp($10|0, threwValue|0); } tempRet0 = (threwValue); } else { $11 = -1; };\n   $12 = tempRet0;\n   $cond31 = ($11|0)==(1);\n   if ($cond31) {\n    $$reg2mem29$0 = $12;\n   } else {\n    HEAP32[$2>>2] = $9;\n    $13 = ($9|0)==(0|0);\n    if (!($13)) {\n     _setjmpTable = _saveSetjmp($0,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;\n     __THREW__ = 0;\n     $17 = __THREW__; __THREW__ = 0;\n     if ((($17|0) != 0) & ((threwValue|0) != 0)) { $18 = _testSetjmp(HEAP32[$17>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($18|0) == 0) { _longjmp($17|0, threwValue|0); } tempRet0 = (threwValue); } else { $18 = -1; };\n     $19 = tempRet0;\n     $cond32 = ($18|0)==(1);\n     if ($cond32) {\n      $$reg2mem29$0 = $19;\n      break;\n     }\n     $$reg2mem29$0 = 0;\n     break;\n    }\n    __THREW__ = 0;\n    invoke_vii(42,($1|0),(0|0));\n    $14 = __THREW__; __THREW__ = 0;\n    if ((($14|0) != 0) & ((threwValue|0) != 0)) { $15 = _testSetjmp(HEAP32[$14>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($15|0) == 0) { _longjmp($14|0, threwValue|0); } tempRet0 = (threwValue); } else { $15 = -1; };\n    $16 = tempRet0;\n    $cond33 = ($15|0)==(1);\n    if ($cond33) {\n     $$reg2mem29$0 = $16;\n    } else {\n     $$0$reg2mem$0 = 35;\n     _free(_setjmpTable|0);\n     return ($$0$reg2mem$0|0);\n    }\n   }\n  }\n } while(0);\n while(1) {\n  $20 = ($$reg2mem29$0|0)==(0);\n  if (!($20)) {\n   __THREW__ = 0;\n   invoke_vii(42,($1|0),($2|0));\n   $21 = __THREW__; __THREW__ = 0;\n   if ((($21|0) != 0) & ((threwValue|0) != 0)) { $22 = _testSetjmp(HEAP32[$21>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($22|0) == 0) { _longjmp($21|0, threwValue|0); } tempRet0 = (threwValue); } else { $22 = -1; };\n   $23 = tempRet0;\n   $cond34 = ($22|0)==(1);\n   if ($cond34) {\n    $$reg2mem29$0 = $23;\n    continue;\n   } else {\n    label = 11;\n    break;\n   }\n  }\n  $24 = HEAP32[$1>>2]|0;\n  $25 = ($3|0)!=(0);\n  $26 = $25 ? 1 : 9;\n  __THREW__ = 0;\n  invoke_vii(43,($24|0),($26|0));\n  $27 = __THREW__; __THREW__ = 0;\n  if ((($27|0) != 0) & ((threwValue|0) != 0)) { $28 = _testSetjmp(HEAP32[$27>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($28|0) == 0) { _longjmp($27|0, threwValue|0); } tempRet0 = (threwValue); } else { $28 = -1; };\n  $29 = tempRet0;\n  $cond35 = ($28|0)==(1);\n  if ($cond35) {\n   $$reg2mem29$0 = $29;\n   continue;\n  }\n  $30 = HEAP32[$1>>2]|0;\n  $31 = $25 ? 9 : 5;\n  __THREW__ = 0;\n  invoke_vii(44,($30|0),($31|0));\n  $32 = __THREW__; __THREW__ = 0;\n  if ((($32|0) != 0) & ((threwValue|0) != 0)) { $33 = _testSetjmp(HEAP32[$32>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($33|0) == 0) { _longjmp($32|0, threwValue|0); } tempRet0 = (threwValue); } else { $33 = -1; };\n  $34 = tempRet0;\n  $cond36 = ($33|0)==(1);\n  if ($cond36) {\n   $$reg2mem29$0 = $34;\n  } else {\n   label = 14;\n   break;\n  }\n }\n if ((label|0) == 11) {\n  $$0$reg2mem$0 = 35;\n  _free(_setjmpTable|0);\n  return ($$0$reg2mem$0|0);\n }\n else if ((label|0) == 14) {\n  $$0$reg2mem$0 = 0;\n  _free(_setjmpTable|0);\n  return ($$0$reg2mem$0|0);\n }\n return (0)|0;\n}\nfunction _user_write_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_png_get_io_ptr($0)|0);\n $4 = ((($3)) + 12|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0);\n if (!($6)) {\n  return;\n }\n $7 = HEAP32[$3>>2]|0;\n $8 = (_fwrite($1,$2,1,$7)|0);\n $9 = ($8|0)==(0);\n if ($9) {\n  HEAP32[$4>>2] = 16;\n }\n $10 = ((($3)) + 8|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (($11) + ($2))|0;\n HEAP32[$10>>2] = $12;\n return;\n}\nfunction _user_flush_data($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return;\n}\nfunction _rwpng_write_image24($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$01$i = 0, $$017$i = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $exitcond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp + 4|0;\n $3 = sp;\n $4 = (_rwpng_write_image_init($1,$2,$3,0)|0);\n $5 = ($4|0)==(0);\n if (!($5)) {\n  $$0 = $4;\n  STACKTOP = sp;return ($$0|0);\n }\n $6 = HEAP32[$2>>2]|0;\n _png_init_io($6,$0);\n $7 = HEAP32[$3>>2]|0;\n $8 = HEAP32[$2>>2]|0;\n $9 = ((($1)) + 192|0);\n $10 = HEAP32[$9>>2]|0;\n switch ($10|0) {\n case 5: case 0:  {\n  break;\n }\n default: {\n  $11 = ((($1)) + 168|0);\n  $12 = +HEAPF64[$11>>3];\n  _png_set_gAMA($8,$7,$12);\n  $13 = ($10|0)==(1);\n  if ($13) {\n   _png_set_sRGB($8,$7,0);\n  }\n }\n }\n $14 = HEAP32[$2>>2]|0;\n $15 = HEAP32[$3>>2]|0;\n $16 = ((($1)) + 156|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ((($1)) + 160|0);\n $19 = HEAP32[$18>>2]|0;\n _png_set_IHDR($14,$15,$17,$19,8,6,0,0,0);\n $20 = HEAP32[$3>>2]|0;\n $21 = HEAP32[$2>>2]|0;\n $22 = ((($1)) + 180|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = HEAP32[$18>>2]|0;\n $25 = (_png_get_rowbytes($21,$20)|0);\n $26 = $24 << 2;\n $27 = (_malloc($26)|0);\n $28 = ($27|0)==(0|0);\n if ($28) {\n  $$017$i = 0;\n } else {\n  $29 = ($24|0)==(0);\n  if ($29) {\n   $$017$i = $27;\n  } else {\n   $$01$i = 0;\n   while(1) {\n    $30 = Math_imul($$01$i, $25)|0;\n    $31 = (($23) + ($30)|0);\n    $32 = (($27) + ($$01$i<<2)|0);\n    HEAP32[$32>>2] = $31;\n    $33 = (($$01$i) + 1)|0;\n    $exitcond$i = ($33|0)==($24|0);\n    if ($exitcond$i) {\n     $$017$i = $27;\n     break;\n    } else {\n     $$01$i = $33;\n    }\n   }\n  }\n }\n $34 = HEAP32[$2>>2]|0;\n $35 = HEAP32[$3>>2]|0;\n _png_write_info($34,$35);\n $36 = HEAP32[$2>>2]|0;\n _png_set_packing($36);\n $37 = HEAP32[$2>>2]|0;\n _png_write_image($37,$$017$i);\n $38 = HEAP32[$2>>2]|0;\n _png_write_end($38,0);\n _png_destroy_write_struct($2,$3);\n _free($$017$i);\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _liq_crash_if_invalid_handle_pointer_given($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3|0)==(18202|0);\n if ($4) {\n  $5 = HEAP32[2606]|0;\n  HEAP32[$vararg_buffer>>2] = $1;\n  (_fprintf($5,18207,$vararg_buffer)|0);\n  _abort();\n  // unreachable;\n }\n $6 = ($3|0)==($1|0);\n $$0 = $6;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _liq_crash_if_invalid_pointer_given($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 0;\n } else {\n  $2 = HEAP8[$0>>0]|0;\n  $$0 = 1;\n }\n return ($$0|0);\n}\nfunction _liq_set_quality($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$0$i = 0.0, $$0$i13 = 0.0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0.0;\n var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($3)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $4 = ($2>>>0)>(100);\n if ($4) {\n  $$0 = 100;\n  return ($$0|0);\n }\n $5 = ($2|0)<($1|0);\n $6 = ($1|0)<(0);\n $or$cond3 = $6 | $5;\n if ($or$cond3) {\n  $$0 = 100;\n  return ($$0|0);\n }\n switch ($2|0) {\n case 0:  {\n  $$0$i = 1.0E+20;\n  break;\n }\n case 100:  {\n  $$0$i = 0.0;\n  break;\n }\n default: {\n  $7 = (+($2|0));\n  $8 = $7 + 0.001;\n  $9 = 0.016 / $8;\n  $10 = $9 + -0.001;\n  $11 = $10 < 0.0;\n  $12 = $11 ? 0.0 : $10;\n  $13 = $7 + 210.0;\n  $14 = (+Math_pow((+$13),1.2));\n  $15 = 2.5 / $14;\n  $16 = 100.09999999999999 - $7;\n  $17 = $16 * $15;\n  $18 = $17 / 100.0;\n  $19 = $12 + $18;\n  $$0$i = $19;\n }\n }\n $20 = ((($0)) + 16|0);\n HEAPF64[$20>>3] = $$0$i;\n switch ($1|0) {\n case 0:  {\n  $$0$i13 = 1.0E+20;\n  break;\n }\n case 100:  {\n  $$0$i13 = 0.0;\n  break;\n }\n default: {\n  $21 = (+($1|0));\n  $22 = $21 + 0.001;\n  $23 = 0.016 / $22;\n  $24 = $23 + -0.001;\n  $25 = $24 < 0.0;\n  $26 = $25 ? 0.0 : $24;\n  $27 = $21 + 210.0;\n  $28 = (+Math_pow((+$27),1.2));\n  $29 = 2.5 / $28;\n  $30 = 100.09999999999999 - $21;\n  $31 = $30 * $29;\n  $32 = $31 / 100.0;\n  $33 = $26 + $32;\n  $$0$i13 = $33;\n }\n }\n $34 = ((($0)) + 24|0);\n HEAPF64[$34>>3] = $$0$i13;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_set_max_colors($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$off = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($2)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $$off = (($1) + -2)|0;\n $3 = ($$off>>>0)>(254);\n if ($3) {\n  $$0 = 100;\n  return ($$0|0);\n }\n $4 = ((($0)) + 44|0);\n HEAP32[$4>>2] = $1;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_set_min_posterization($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if ($2) {\n  $3 = ($1>>>0)>(4);\n  if ($3) {\n   $$0 = 100;\n  } else {\n   $4 = ((($0)) + 52|0);\n   HEAP32[$4>>2] = $1;\n   $$0 = 0;\n  }\n } else {\n  $$0 = 105;\n }\n return ($$0|0);\n}\nfunction _liq_set_speed($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0 = 0, $$off = 0, $$op = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($2)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $$off = (($1) + -1)|0;\n $3 = ($$off>>>0)>(9);\n if ($3) {\n  $$0 = 100;\n  return ($$0|0);\n }\n $4 = (8 - ($1))|0;\n $5 = ($4|0)>(0);\n $6 = Math_imul($4, $4)|0;\n $$op = $6 >>> 1;\n $7 = (($$op) + ($4))|0;\n $8 = $5 ? $7 : 0;\n $9 = ((($0)) + 60|0);\n HEAP32[$9>>2] = $8;\n $10 = (23 - ($1))|0;\n $11 = 1 << $10;\n $12 = (+($11|0));\n $13 = 1.0 / $12;\n $14 = ((($0)) + 32|0);\n HEAPF64[$14>>3] = $13;\n $15 = Math_imul($1, -9)|0;\n $16 = (($15) + 56)|0;\n $17 = ($16|0)>(0);\n $$ = $17 ? $16 : 0;\n $18 = ((($0)) + 64|0);\n HEAP32[$18>>2] = $$;\n $19 = (10 - ($1))|0;\n $20 = $19 << 18;\n $21 = $20 | 131072;\n $22 = ((($0)) + 48|0);\n HEAP32[$22>>2] = $21;\n $23 = ($1|0)>(7);\n $24 = $23&1;\n $25 = ((($0)) + 56|0);\n HEAP32[$25>>2] = $24;\n $26 = ($1|0)<(6);\n $27 = ((($0)) + 70|0);\n $28 = $26&1;\n HEAP8[$27>>0] = $28;\n $29 = ($1|0)<(8);\n $30 = $29 ? 1 : $28;\n $31 = ((($0)) + 69|0);\n HEAP8[$31>>0] = $30;\n $32 = $1&255;\n $33 = ((($0)) + 71|0);\n HEAP8[$33>>0] = $32;\n $34 = ($30<<24>>24)!=(0);\n $35 = $34 ? 20 : 8;\n $36 = ((($0)) + 72|0);\n $37 = ($$>>>0)<(2);\n if ($37) {\n  $38 = $35&255;\n  $39 = (($38) + 30)|0;\n  $40 = $39&255;\n  $storemerge = $40;\n } else {\n  $storemerge = $35;\n }\n HEAP8[$36>>0] = $storemerge;\n $41 = (($1) + 1)|0;\n $42 = (50 / ($41|0))&-1;\n $43 = $42&255;\n $44 = ((($0)) + 74|0);\n HEAP8[$44>>0] = $43;\n $45 = $storemerge&255;\n $46 = (100 - ($42))|0;\n $47 = (($46) - ($45))|0;\n $48 = $47&255;\n $49 = ((($0)) + 73|0);\n HEAP8[$49>>0] = $48;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_set_output_gamma($0,$1) {\n $0 = $0|0;\n $1 = +$1;\n var $$0 = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($2)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $3 = $1 <= 0.0;\n $4 = $1 >= 1.0;\n $or$cond = $3 | $4;\n if ($or$cond) {\n  $$0 = 100;\n  return ($$0|0);\n }\n $5 = ((($0)) + 12|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if (!($7)) {\n  $8 = (_liq_crash_if_invalid_handle_pointer_given($6,18253)|0);\n  if ($8) {\n   $9 = ((($6)) + 16|0);\n   $10 = HEAP32[$9>>2]|0;\n   $11 = ($10|0)==(0|0);\n   if (!($11)) {\n    _pam_freecolormap($10);\n   }\n   $12 = ((($6)) + 12|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = ($13|0)==(0|0);\n   $$pre$i = ((($6)) + 8|0);\n   if (!($14)) {\n    $15 = HEAP32[$$pre$i>>2]|0;\n    FUNCTION_TABLE_vi[$15 & 127]($13);\n   }\n   HEAP32[$6>>2] = 18202;\n   $16 = HEAP32[$$pre$i>>2]|0;\n   FUNCTION_TABLE_vi[$16 & 127]($6);\n  }\n  HEAP32[$5>>2] = 0;\n }\n $17 = ((($0)) + 1064|0);\n HEAPF64[$17>>3] = $1;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_set_min_opacity($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($2)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $3 = ($1>>>0)>(255);\n if ($3) {\n  $$0 = 100;\n  return ($$0|0);\n }\n $4 = (+($1|0));\n $5 = $4 / 255.0;\n $6 = $5;\n $7 = ((($0)) + 40|0);\n HEAPF32[$7>>2] = $6;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_set_last_index_transparent($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($2)) {\n  return;\n }\n $3 = ($1|0)!=(0);\n $4 = ((($0)) + 68|0);\n $5 = $3&1;\n HEAP8[$4>>0] = $5;\n return;\n}\nfunction _liq_set_log_callback($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($3)) {\n  return;\n }\n $4 = ((($0)) + 92|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if (!($6)) {\n  $7 = ((($0)) + 96|0);\n  $8 = HEAP32[$7>>2]|0;\n  FUNCTION_TABLE_vii[$5 & 127]($0,$8);\n }\n $9 = ((($0)) + 84|0);\n HEAP32[$9>>2] = $1;\n $10 = ((($0)) + 88|0);\n HEAP32[$10>>2] = $2;\n return;\n}\nfunction _liq_attr_create() {\n var $$1$i = 0, $$sroa$11$0$$sroa_idx12$i = 0, $$sroa$12$0$$sroa_idx13$i = 0, $$sroa$13$0$$sroa_idx14$i = 0, $$sroa$2$0$$sroa_idx2$i = 0, $$sroa$2115$0$$sroa_idx16$i = 0, $$sroa$3$0$$sroa_idx3$i = 0, $$sroa$44$0$$sroa_idx5$i = 0, $$sroa$5$0$$sroa_idx6$i = 0, $$sroa$6$0$$sroa_idx7$i = 0, $$sroa$7$0$$sroa_idx8$i = 0, $$sroa$8$0$$sroa_idx9$i = 0, $$sroa$9$0$$sroa_idx10$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;\n var $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $0 = (_malloc(120)|0);\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$1$i = 0;\n  return ($$1$i|0);\n }\n $2 = $0;\n $3 = $2 & 15;\n $4 = (16 - ($3))|0;\n $5 = (($0) + ($4)|0);\n $6 = $4 ^ 89;\n $7 = $6&255;\n $8 = ((($5)) + -1|0);\n HEAP8[$8>>0] = $7;\n $9 = ($5|0)==(0|0);\n if ($9) {\n  $$1$i = 0;\n  return ($$1$i|0);\n }\n HEAP32[$5>>2] = 18233;\n $$sroa$2$0$$sroa_idx2$i = ((($5)) + 4|0);\n HEAP32[$$sroa$2$0$$sroa_idx2$i>>2] = 45;\n $$sroa$3$0$$sroa_idx3$i = ((($5)) + 8|0);\n HEAP32[$$sroa$3$0$$sroa_idx3$i>>2] = 46;\n $$sroa$44$0$$sroa_idx5$i = ((($5)) + 16|0);\n HEAPF64[$$sroa$44$0$$sroa_idx5$i>>3] = 0.0;\n $$sroa$5$0$$sroa_idx6$i = ((($5)) + 24|0);\n HEAPF64[$$sroa$5$0$$sroa_idx6$i>>3] = 1.0E+20;\n $$sroa$6$0$$sroa_idx7$i = ((($5)) + 32|0);\n HEAPF64[$$sroa$6$0$$sroa_idx7$i>>3] = 0.0;\n $$sroa$7$0$$sroa_idx8$i = ((($5)) + 40|0);\n HEAPF32[$$sroa$7$0$$sroa_idx8$i>>2] = 1.0;\n $$sroa$8$0$$sroa_idx9$i = ((($5)) + 44|0);\n HEAP32[$$sroa$8$0$$sroa_idx9$i>>2] = 256;\n $$sroa$9$0$$sroa_idx10$i = ((($5)) + 48|0);\n $$sroa$2115$0$$sroa_idx16$i = ((($5)) + 76|0);\n ;HEAP32[$$sroa$9$0$$sroa_idx10$i>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx10$i+4>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx10$i+8>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx10$i+12>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx10$i+16>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx10$i+20>>2]=0|0;HEAP16[$$sroa$9$0$$sroa_idx10$i+24>>1]=0|0;HEAP8[$$sroa$9$0$$sroa_idx10$i+26>>0]=0|0;\n ;HEAP32[$$sroa$2115$0$$sroa_idx16$i>>2]=0|0;HEAP32[$$sroa$2115$0$$sroa_idx16$i+4>>2]=0|0;HEAP32[$$sroa$2115$0$$sroa_idx16$i+8>>2]=0|0;HEAP32[$$sroa$2115$0$$sroa_idx16$i+12>>2]=0|0;HEAP32[$$sroa$2115$0$$sroa_idx16$i+16>>2]=0|0;HEAP32[$$sroa$2115$0$$sroa_idx16$i+20>>2]=0|0;\n $10 = (_liq_crash_if_invalid_handle_pointer_given($5,18233)|0);\n if (!($10)) {\n  $$1$i = $5;\n  return ($$1$i|0);\n }\n $11 = ((($5)) + 74|0);\n $12 = ((($5)) + 73|0);\n $13 = ((($5)) + 72|0);\n $14 = ((($5)) + 71|0);\n $15 = ((($5)) + 70|0);\n $16 = ((($5)) + 69|0);\n $$sroa$13$0$$sroa_idx14$i = ((($5)) + 64|0);\n $$sroa$12$0$$sroa_idx13$i = ((($5)) + 60|0);\n $$sroa$11$0$$sroa_idx12$i = ((($5)) + 56|0);\n HEAP32[$$sroa$12$0$$sroa_idx13$i>>2] = 17;\n HEAPF64[$$sroa$6$0$$sroa_idx7$i>>3] = 9.5367431640625E-7;\n HEAP32[$$sroa$13$0$$sroa_idx14$i>>2] = 29;\n HEAP32[$$sroa$9$0$$sroa_idx10$i>>2] = 1966080;\n HEAP32[$$sroa$11$0$$sroa_idx12$i>>2] = 0;\n HEAP8[$15>>0] = 1;\n HEAP8[$16>>0] = 1;\n HEAP8[$14>>0] = 3;\n HEAP8[$13>>0] = 20;\n HEAP8[$11>>0] = 12;\n HEAP8[$12>>0] = 68;\n $$1$i = $5;\n return ($$1$i|0);\n}\nfunction _liq_aligned_malloc($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (($0) + 16)|0;\n $2 = (_malloc($1)|0);\n $3 = ($2|0)==(0|0);\n if ($3) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = $2;\n $5 = $4 & 15;\n $6 = (16 - ($5))|0;\n $7 = (($2) + ($6)|0);\n $8 = $6 ^ 89;\n $9 = $8&255;\n $10 = ((($7)) + -1|0);\n HEAP8[$10>>0] = $9;\n $$0 = $7;\n return ($$0|0);\n}\nfunction _liq_aligned_free($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + -1|0);\n $2 = HEAP8[$1>>0]|0;\n $3 = $2&255;\n $4 = $3 ^ 89;\n $5 = (0 - ($4))|0;\n $6 = (($0) + ($5)|0);\n _free($6);\n return;\n}\nfunction _liq_attr_destroy($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($1)) {\n  return;\n }\n $2 = ((($0)) + 92|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  $5 = ((($0)) + 96|0);\n  $6 = HEAP32[$5>>2]|0;\n  FUNCTION_TABLE_vii[$3 & 127]($0,$6);\n }\n HEAP32[$0>>2] = 18202;\n $7 = ((($0)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n FUNCTION_TABLE_vi[$8 & 127]($0);\n return;\n}\nfunction _liq_attr_copy($0) {\n $0 = $0|0;\n var $$1 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($1)) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = (FUNCTION_TABLE_ii[$3 & 63](104)|0);\n $5 = ($4|0)==(0|0);\n if ($5) {\n  $$1 = 0;\n  return ($$1|0);\n }\n dest=$4; src=$0; stop=dest+104|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n $$1 = $4;\n return ($$1|0);\n}\nfunction _liq_image_add_fixed_color($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$2$0$$sroa_idx5 = 0, $$sroa$3$0$$sroa_idx6 = 0, $$sroa$4$0$$sroa_idx7 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0.0;\n var $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1024|0);\n $2 = sp;\n $3 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($3)) {\n  $$0 = 105;\n  STACKTOP = sp;return ($$0|0);\n }\n $4 = ((($0)) + 4172|0);\n $5 = HEAP16[$4>>1]|0;\n $6 = ($5&65535)>(255);\n if ($6) {\n  $$0 = 106;\n  STACKTOP = sp;return ($$0|0);\n }\n $7 = ((($0)) + 24|0);\n $8 = +HEAPF64[$7>>3];\n _to_f_set_gamma($2,$8);\n $9 = HEAP16[$4>>1]|0;\n $10 = (($9) + 1)<<16>>16;\n HEAP16[$4>>1] = $10;\n $11 = $9&65535;\n $12 = HEAP8[$1>>0]|0;\n $13 = ((($1)) + 1|0);\n $14 = HEAP8[$13>>0]|0;\n $15 = ((($1)) + 2|0);\n $16 = HEAP8[$15>>0]|0;\n $17 = ((($1)) + 3|0);\n $18 = HEAP8[$17>>0]|0;\n $19 = (+($18&255));\n $20 = $19 / 255.0;\n $21 = $12&255;\n $22 = (($2) + ($21<<2)|0);\n $23 = +HEAPF32[$22>>2];\n $24 = $23 * $20;\n $25 = $14&255;\n $26 = (($2) + ($25<<2)|0);\n $27 = +HEAPF32[$26>>2];\n $28 = $20 * $27;\n $29 = $16&255;\n $30 = (($2) + ($29<<2)|0);\n $31 = +HEAPF32[$30>>2];\n $32 = $20 * $31;\n $$sroa$0$0$$sroa_idx = (((($0)) + 76|0) + ($11<<4)|0);\n HEAPF32[$$sroa$0$0$$sroa_idx>>2] = $20;\n $$sroa$2$0$$sroa_idx5 = (((((($0)) + 76|0) + ($11<<4)|0)) + 4|0);\n HEAPF32[$$sroa$2$0$$sroa_idx5>>2] = $24;\n $$sroa$3$0$$sroa_idx6 = (((((($0)) + 76|0) + ($11<<4)|0)) + 8|0);\n HEAPF32[$$sroa$3$0$$sroa_idx6>>2] = $28;\n $$sroa$4$0$$sroa_idx7 = (((((($0)) + 76|0) + ($11<<4)|0)) + 12|0);\n HEAPF32[$$sroa$4$0$$sroa_idx7>>2] = $32;\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _liq_image_set_memory_ownership($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$024 = 0, $$027 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond26 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($2)) {\n  $$024 = 105;\n  return ($$024|0);\n }\n $3 = ((($0)) + 16|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)!=(0|0);\n $6 = ($1|0)!=(0);\n $or$cond = $6 & $5;\n $7 = $1 & -13;\n $8 = ($7|0)==(0);\n $or$cond26 = $8 & $or$cond;\n if (!($or$cond26)) {\n  $$024 = 100;\n  return ($$024|0);\n }\n $9 = $1 & 4;\n $10 = ($9|0)==(0);\n do {\n  if (!($10)) {\n   $11 = ((($0)) + 4176|0);\n   $12 = HEAP8[$11>>0]|0;\n   $13 = ($12<<24>>24)==(0);\n   if ($13) {\n    $14 = ((($0)) + 4175|0);\n    HEAP8[$14>>0] = 1;\n    break;\n   } else {\n    $$024 = 100;\n    return ($$024|0);\n   }\n  }\n } while(0);\n $15 = $1 & 8;\n $16 = ($15|0)==(0);\n if ($16) {\n  $$024 = 0;\n  return ($$024|0);\n }\n $17 = ((($0)) + 4174|0);\n HEAP8[$17>>0] = 1;\n $18 = ((($0)) + 52|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($19|0)==(0|0);\n if (!($20)) {\n  $$024 = 0;\n  return ($$024|0);\n }\n $21 = HEAP32[$4>>2]|0;\n HEAP32[$18>>2] = $21;\n $22 = ((($0)) + 36|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = ($23>>>0)>(1);\n if (!($24)) {\n  $$024 = 0;\n  return ($$024|0);\n }\n $25 = $21;\n $$027 = 1;$28 = $25;\n while(1) {\n  $26 = (($4) + ($$027<<2)|0);\n  $27 = HEAP32[$26>>2]|0;\n  $29 = ($28>>>0)<($27>>>0);\n  $$ = $29 ? $28 : $27;\n  HEAP32[$18>>2] = $$;\n  $30 = (($$027) + 1)|0;\n  $31 = ($30>>>0)<($23>>>0);\n  if ($31) {\n   $$027 = $30;$28 = $$;\n  } else {\n   $$024 = 0;\n   break;\n  }\n }\n return ($$024|0);\n}\nfunction _liq_verbose_printf($0,$1,$varargs) {\n $0 = $0|0;\n $1 = $1|0;\n $varargs = $varargs|0;\n var $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = ((($0)) + 84|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  STACKTOP = sp;return;\n }\n HEAP32[$2>>2] = $varargs;\n $6 = (_vsnprintf(0,0,$1,$2)|0);\n $7 = (($6) + 1)|0;\n $8 = (_llvm_stacksave()|0);\n $$alloca_mul = $7;\n $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n HEAP32[$2>>2] = $varargs;\n (_vsnprintf($9,$7,$1,$2)|0);\n $10 = HEAP32[$3>>2]|0;\n $11 = ((($0)) + 88|0);\n $12 = HEAP32[$11>>2]|0;\n FUNCTION_TABLE_viii[$10 & 127]($0,$9,$12);\n _llvm_stackrestore(($8|0));\n STACKTOP = sp;return;\n}\nfunction _liq_image_create_internal($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = +$6;\n var $$ = 0, $$1 = 0, $$idx$val = 0, $$idx$val59 = 0, $$idx55$val = 0, $$idx55$val61 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre63 = 0, $$sroa$10$0$$sroa_idx16 = 0, $$sroa$11$0$$sroa_idx17 = 0, $$sroa$12$0$$sroa_idx = 0, $$sroa$3$0$$sroa_idx4 = 0, $$sroa$4$0$$sroa_idx5 = 0, $$sroa$5$0$$sroa_idx6 = 0, $$sroa$57$0$$sroa_idx8 = 0, $$sroa$6$0$$sroa_idx = 0, $$sroa$69$0$$sroa_idx10 = 0, $$sroa$7$0$$sroa_idx11 = 0, $$sroa$8$0$$sroa_idx12 = 0;\n var $$sroa$9$0$$sroa_idx = 0, $$sroa$914$0$$sroa_idx15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;\n var $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer1 = sp + 8|0;\n $vararg_buffer = sp;\n $7 = $6 < 0.0;\n $8 = $6 > 1.0;\n $or$cond = $7 | $8;\n if ($or$cond) {\n  $9 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n  if (!($9)) {\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n  HEAP32[$vararg_buffer>>2] = 18341;\n  _liq_verbose_printf($0,18284,$vararg_buffer);\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $10 = ($1|0)!=(0|0);\n $11 = ($2|0)!=(0|0);\n $or$cond3 = $10 | $11;\n if (!($or$cond3)) {\n  $12 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n  if (!($12)) {\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n  HEAP32[$vararg_buffer1>>2] = 18391;\n  _liq_verbose_printf($0,18284,$vararg_buffer1);\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $13 = ((($0)) + 4|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (FUNCTION_TABLE_ii[$14 & 63](4184)|0);\n $16 = ($15|0)==(0|0);\n if ($16) {\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $17 = HEAP32[$13>>2]|0;\n $18 = ((($0)) + 8|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = $6 != 0.0;\n $21 = $20 ? $6 : 0.45455000000000001;\n $22 = ((($0)) + 40|0);\n $23 = HEAP32[$22>>2]|0;\n HEAP32[$15>>2] = 18274;\n $$sroa$3$0$$sroa_idx4 = ((($15)) + 4|0);\n HEAP32[$$sroa$3$0$$sroa_idx4>>2] = $17;\n $$sroa$4$0$$sroa_idx5 = ((($15)) + 8|0);\n HEAP32[$$sroa$4$0$$sroa_idx5>>2] = $19;\n $$sroa$5$0$$sroa_idx6 = ((($15)) + 12|0);\n HEAP32[$$sroa$5$0$$sroa_idx6>>2] = 0;\n $$sroa$57$0$$sroa_idx8 = ((($15)) + 16|0);\n HEAP32[$$sroa$57$0$$sroa_idx8>>2] = $1;\n $$sroa$6$0$$sroa_idx = ((($15)) + 20|0);\n HEAP32[$$sroa$6$0$$sroa_idx>>2] = 0;\n $$sroa$69$0$$sroa_idx10 = ((($15)) + 24|0);\n HEAPF64[$$sroa$69$0$$sroa_idx10>>3] = $21;\n $$sroa$7$0$$sroa_idx11 = ((($15)) + 32|0);\n HEAP32[$$sroa$7$0$$sroa_idx11>>2] = $4;\n $$sroa$8$0$$sroa_idx12 = ((($15)) + 36|0);\n HEAP32[$$sroa$8$0$$sroa_idx12>>2] = $5;\n $$sroa$9$0$$sroa_idx = ((($15)) + 40|0);\n ;HEAP32[$$sroa$9$0$$sroa_idx>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx+4>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx+8>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx+12>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx+16>>2]=0|0;HEAP32[$$sroa$9$0$$sroa_idx+20>>2]=0|0;\n $$sroa$914$0$$sroa_idx15 = ((($15)) + 64|0);\n HEAP32[$$sroa$914$0$$sroa_idx15>>2] = $2;\n $$sroa$10$0$$sroa_idx16 = ((($15)) + 68|0);\n HEAP32[$$sroa$10$0$$sroa_idx16>>2] = $3;\n $$sroa$11$0$$sroa_idx17 = ((($15)) + 72|0);\n HEAP32[$$sroa$11$0$$sroa_idx17>>2] = $23;\n $$sroa$12$0$$sroa_idx = ((($15)) + 76|0);\n _memset(($$sroa$12$0$$sroa_idx|0),0,4108)|0;\n if ($10) {\n  $24 = +HEAPF32[$22>>2];\n  $25 = $24 < 1.0;\n  if ($25) {\n   label = 11;\n  } else {\n   $$phi$trans$insert = ((($15)) + 56|0);\n   $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n   $31 = $$pre;\n  }\n } else {\n  label = 11;\n }\n do {\n  if ((label|0) == 11) {\n   $26 = HEAP32[$13>>2]|0;\n   $27 = $4 << 2;\n   $28 = (FUNCTION_TABLE_ii[$26 & 63]($27)|0);\n   $29 = ((($15)) + 56|0);\n   HEAP32[$29>>2] = $28;\n   $30 = ($28|0)==(0|0);\n   if ($30) {\n    $$1 = 0;\n    STACKTOP = sp;return ($$1|0);\n   } else {\n    $31 = $28;\n    break;\n   }\n  }\n } while(0);\n $32 = ($31|0)==(0|0);\n if ($32) {\n  $33 = ((($0)) + 69|0);\n  $34 = HEAP8[$33>>0]|0;\n  $35 = ($34<<24>>24)==(0);\n  if ($35) {\n   $37 = ((($0)) + 70|0);\n   $38 = HEAP8[$37>>0]|0;\n   $39 = ($38<<24>>24)==(0);\n   $$idx$val = HEAP32[$$sroa$7$0$$sroa_idx11>>2]|0;\n   $$idx55$val = HEAP32[$$sroa$8$0$$sroa_idx12>>2]|0;\n   $40 = Math_imul($$idx55$val, $$idx$val)|0;\n   $$ = $39 ? 524288 : 4194304;\n   $41 = $40;$43 = $$;$62 = $$idx$val;\n  } else {\n   label = 15;\n  }\n } else {\n  label = 15;\n }\n if ((label|0) == 15) {\n  $$idx$val59 = HEAP32[$$sroa$7$0$$sroa_idx11>>2]|0;\n  $$idx55$val61 = HEAP32[$$sroa$8$0$$sroa_idx12>>2]|0;\n  $36 = Math_imul($$idx55$val61, $$idx$val59)|0;\n  $41 = $36;$43 = 4194304;$62 = $$idx$val59;\n }\n $42 = ($41>>>0)>($43>>>0);\n if ($42) {\n  $44 = ((($0)) + 84|0);\n  $45 = HEAP32[$44>>2]|0;\n  $46 = ($45|0)==(0|0);\n  if ($46) {\n   $51 = $62;\n  } else {\n   $47 = ((($0)) + 88|0);\n   $48 = HEAP32[$47>>2]|0;\n   FUNCTION_TABLE_viii[$45 & 127]($0,18408,$48);\n   $$pre63 = HEAP32[$$sroa$7$0$$sroa_idx11>>2]|0;\n   $51 = $$pre63;\n  }\n  $49 = HEAP32[$$sroa$3$0$$sroa_idx4>>2]|0;\n  $50 = $51 << 4;\n  $52 = (FUNCTION_TABLE_ii[$49 & 63]($50)|0);\n  $53 = ((($15)) + 60|0);\n  HEAP32[$53>>2] = $52;\n  $54 = ($52|0)==(0|0);\n  if ($54) {\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n }\n $55 = +HEAPF32[$$sroa$11$0$$sroa_idx17>>2];\n $56 = $55 < 1.0;\n if (!($56)) {\n  $$1 = $15;\n  STACKTOP = sp;return ($$1|0);\n }\n $57 = ((($0)) + 84|0);\n $58 = HEAP32[$57>>2]|0;\n $59 = ($58|0)==(0|0);\n if ($59) {\n  $$1 = $15;\n  STACKTOP = sp;return ($$1|0);\n }\n $60 = ((($0)) + 88|0);\n $61 = HEAP32[$60>>2]|0;\n FUNCTION_TABLE_viii[$58 & 127]($0,18428,$61);\n $$1 = $15;\n STACKTOP = sp;return ($$1|0);\n}\nfunction _liq_image_create_rgba_rows($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = +$4;\n var $$01820 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $or$cond$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer4 = sp + 16|0;\n $vararg_buffer1 = sp + 8|0;\n $vararg_buffer = sp;\n $5 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n if (!($5)) {\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $6 = ($2|0)<(1);\n $7 = ($3|0)<(1);\n $or$cond$i = $6 | $7;\n if ($or$cond$i) {\n  $8 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n  if (!($8)) {\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n  HEAP32[$vararg_buffer>>2] = 18296;\n  _liq_verbose_printf($0,18284,$vararg_buffer);\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $9 = (536870911 / ($3>>>0))&-1;\n $10 = ($9>>>0)<($2>>>0);\n $11 = ($2>>>0)>(8388607);\n $or$cond3$i = $11 | $10;\n $12 = ($3>>>0)>(536870911);\n $or$cond5$i = $12 | $or$cond3$i;\n if ($or$cond5$i) {\n  $14 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n  if (!($14)) {\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n  HEAP32[$vararg_buffer1>>2] = 18325;\n  _liq_verbose_printf($0,18284,$vararg_buffer1);\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $13 = ($3|0)>(0);\n L18: do {\n  if ($13) {\n   $$01820 = 0;\n   while(1) {\n    $17 = (($1) + ($$01820<<2)|0);\n    $18 = (_liq_crash_if_invalid_pointer_given($17)|0);\n    if (!($18)) {\n     break;\n    }\n    $19 = HEAP32[$17>>2]|0;\n    $20 = (_liq_crash_if_invalid_pointer_given($19)|0);\n    $15 = (($$01820) + 1)|0;\n    if (!($20)) {\n     break;\n    }\n    $16 = ($15|0)<($3|0);\n    if ($16) {\n     $$01820 = $15;\n    } else {\n     break L18;\n    }\n   }\n   $21 = (_liq_crash_if_invalid_handle_pointer_given($0,18233)|0);\n   if (!($21)) {\n    $$1 = 0;\n    STACKTOP = sp;return ($$1|0);\n   }\n   HEAP32[$vararg_buffer4>>2] = 18489;\n   _liq_verbose_printf($0,18284,$vararg_buffer4);\n   $$1 = 0;\n   STACKTOP = sp;return ($$1|0);\n  }\n } while(0);\n $22 = (_liq_image_create_internal($0,$1,0,0,$2,$3,$4)|0);\n $$1 = $22;\n STACKTOP = sp;return ($$1|0);\n}\nfunction _liq_executing_user_callback($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n FUNCTION_TABLE_viiii[$0 & 63]($1,$2,$3,$4);\n return;\n}\nfunction _liq_image_get_width($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($1)) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $2 = ((($0)) + 32|0);\n $3 = HEAP32[$2>>2]|0;\n $$0 = $3;\n return ($$0|0);\n}\nfunction _liq_image_get_height($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($1)) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $2 = ((($0)) + 36|0);\n $3 = HEAP32[$2>>2]|0;\n $$0 = $3;\n return ($$0|0);\n}\nfunction _liq_image_destroy($0) {\n $0 = $0|0;\n var $$0$i$i = 0, $$0$i11$i = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $or$cond$i$i = 0, $or$cond$i10$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($1)) {\n  return;\n }\n $2 = ((($0)) + 4174|0);\n $3 = HEAP16[$2>>1]|0;\n $4 = $3&255;\n $5 = ($4<<24>>24)==(0);\n $6 = ($3&65535) >>> 8;\n $7 = $6&255;\n if ($5) {\n  $17 = $7;\n } else {\n  $8 = ((($0)) + 52|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ($9|0)==(0|0);\n  if ($10) {\n   $17 = $7;\n  } else {\n   $11 = ((($0)) + 4176|0);\n   $12 = HEAP8[$11>>0]|0;\n   $13 = ($12<<24>>24)==(0);\n   $14 = ((($0)) + 8|0);\n   $15 = HEAP32[$14>>2]|0;\n   $16 = ($15|0)==(46|0);\n   $or$cond$i$i = $13 & $16;\n   $$0$i$i = $or$cond$i$i ? 47 : $15;\n   FUNCTION_TABLE_vi[$$0$i$i & 127]($9);\n   HEAP32[$8>>2] = 0;\n   $$phi$trans$insert$i = ((($0)) + 4175|0);\n   $$pre$i = HEAP8[$$phi$trans$insert$i>>0]|0;\n   $17 = $$pre$i;\n  }\n }\n $18 = ($17<<24>>24)==(0);\n if (!($18)) {\n  $19 = ((($0)) + 16|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = ($20|0)==(0|0);\n  if (!($21)) {\n   $22 = ((($0)) + 4176|0);\n   $23 = HEAP8[$22>>0]|0;\n   $24 = ($23<<24>>24)==(0);\n   $25 = ((($0)) + 8|0);\n   $26 = HEAP32[$25>>2]|0;\n   $27 = ($26|0)==(46|0);\n   $or$cond$i10$i = $24 & $27;\n   $$0$i11$i = $or$cond$i10$i ? 47 : $26;\n   FUNCTION_TABLE_vi[$$0$i11$i & 127]($20);\n   HEAP32[$19>>2] = 0;\n  }\n }\n $28 = ((($0)) + 40|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ($29|0)==(0|0);\n if (!($30)) {\n  $31 = ((($0)) + 8|0);\n  $32 = HEAP32[$31>>2]|0;\n  FUNCTION_TABLE_vi[$32 & 127]($29);\n }\n $33 = ((($0)) + 44|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ($34|0)==(0|0);\n if (!($35)) {\n  $36 = ((($0)) + 8|0);\n  $37 = HEAP32[$36>>2]|0;\n  FUNCTION_TABLE_vi[$37 & 127]($34);\n }\n $38 = ((($0)) + 48|0);\n $39 = HEAP32[$38>>2]|0;\n $40 = ($39|0)==(0|0);\n if (!($40)) {\n  $41 = ((($0)) + 8|0);\n  $42 = HEAP32[$41>>2]|0;\n  FUNCTION_TABLE_vi[$42 & 127]($39);\n }\n $43 = ((($0)) + 12|0);\n $44 = HEAP32[$43>>2]|0;\n $45 = ($44|0)==(0|0);\n if (!($45)) {\n  $46 = ((($0)) + 8|0);\n  $47 = HEAP32[$46>>2]|0;\n  FUNCTION_TABLE_vi[$47 & 127]($44);\n }\n $48 = ((($0)) + 56|0);\n $49 = HEAP32[$48>>2]|0;\n $50 = ($49|0)==(0|0);\n if (!($50)) {\n  $51 = ((($0)) + 8|0);\n  $52 = HEAP32[$51>>2]|0;\n  FUNCTION_TABLE_vi[$52 & 127]($49);\n }\n $53 = ((($0)) + 60|0);\n $54 = HEAP32[$53>>2]|0;\n $55 = ($54|0)==(0|0);\n $$pre = ((($0)) + 8|0);\n if (!($55)) {\n  $56 = HEAP32[$$pre>>2]|0;\n  FUNCTION_TABLE_vi[$56 & 127]($54);\n }\n HEAP32[$0>>2] = 18202;\n $57 = HEAP32[$$pre>>2]|0;\n FUNCTION_TABLE_vi[$57 & 127]($0);\n return;\n}\nfunction _liq_quantize_image($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = (_liq_image_quantize($1,$0,$2)|0);\n $4 = ($3|0)==(0);\n $5 = HEAP32[$2>>2]|0;\n $$0 = $4 ? $5 : 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _liq_image_quantize($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$i = 0, $$2 = 0, $$sroa$3$0$$sroa_idx1$i = 0, $$sroa$4$0$$sroa_idx2$i = 0, $$sroa$5$0$$sroa_idx$i = 0, $$sroa$54$0$$sroa_idx5$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_liq_crash_if_invalid_handle_pointer_given($1,18233)|0);\n if (!($3)) {\n  $$2 = 105;\n  return ($$2|0);\n }\n $4 = (_liq_crash_if_invalid_handle_pointer_given($0,18274)|0);\n if (!($4)) {\n  $$2 = 106;\n  return ($$2|0);\n }\n $5 = ((($0)) + 16|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if ($7) {\n  $8 = ((($0)) + 56|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ($9|0)==(0|0);\n  if ($10) {\n   $$2 = 106;\n   return ($$2|0);\n  }\n  $11 = ((($0)) + 64|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = ($12|0)==(0|0);\n  if ($13) {\n   $$2 = 106;\n   return ($$2|0);\n  }\n }\n $14 = (_liq_crash_if_invalid_handle_pointer_given($1,18233)|0);\n if (!($14)) {\n  $$2 = 101;\n  return ($$2|0);\n }\n $15 = ((($1)) + 4|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = (FUNCTION_TABLE_ii[$16 & 63](4128)|0);\n $18 = ($17|0)==(0|0);\n if ($18) {\n  $$2 = 101;\n  return ($$2|0);\n }\n $19 = HEAP32[$15>>2]|0;\n $20 = ((($1)) + 8|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = ((($1)) + 52|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = ((($1)) + 56|0);\n $25 = HEAP32[$24>>2]|0;\n $26 = ($23>>>0)>($25>>>0);\n $$$i = $26 ? $23 : $25;\n $27 = $$$i&65535;\n HEAP32[$17>>2] = 18510;\n $$sroa$3$0$$sroa_idx1$i = ((($17)) + 4|0);\n HEAP32[$$sroa$3$0$$sroa_idx1$i>>2] = $19;\n $$sroa$4$0$$sroa_idx2$i = ((($17)) + 8|0);\n HEAP32[$$sroa$4$0$$sroa_idx2$i>>2] = $21;\n $$sroa$5$0$$sroa_idx$i = ((($17)) + 12|0);\n _memset(($$sroa$5$0$$sroa_idx$i|0),0,4110)|0;\n $$sroa$54$0$$sroa_idx5$i = ((($17)) + 4122|0);\n HEAP16[$$sroa$54$0$$sroa_idx5$i>>1] = $27;\n $28 = ((($17)) + 4124|0);\n HEAP32[$28>>2] = 0;\n $29 = (_liq_histogram_add_image($17,$1,$0)|0);\n $30 = ($29|0)==(0);\n if (!($30)) {\n  $$2 = $29;\n  return ($$2|0);\n }\n $31 = (_liq_histogram_quantize_internal($17,$1,0,$2)|0);\n $32 = (_liq_crash_if_invalid_handle_pointer_given($17,18510)|0);\n if (!($32)) {\n  $$2 = $31;\n  return ($$2|0);\n }\n HEAP32[$17>>2] = 18202;\n $33 = HEAP32[$$sroa$5$0$$sroa_idx$i>>2]|0;\n _pam_freeacolorhash($33);\n $34 = HEAP32[$$sroa$4$0$$sroa_idx2$i>>2]|0;\n FUNCTION_TABLE_vi[$34 & 127]($17);\n $$2 = $31;\n return ($$2|0);\n}\nfunction _liq_histogram_add_image($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i$i = 0, $$0$i11$i = 0, $$085114$us = 0, $$087116 = 0, $$9 = 0, $$phi$trans$insert$i = 0, $$pr = 0, $$pre$i = 0, $$pre120 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;\n var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;\n var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i$i = 0, $or$cond$i10$i = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer = sp + 16|0;\n $3 = sp;\n $4 = sp + 20|0;\n $5 = (_liq_crash_if_invalid_handle_pointer_given($1,18233)|0);\n if (!($5)) {\n  $$9 = 105;\n  STACKTOP = sp;return ($$9|0);\n }\n $6 = (_liq_crash_if_invalid_handle_pointer_given($0,18510)|0);\n if (!($6)) {\n  $$9 = 105;\n  STACKTOP = sp;return ($$9|0);\n }\n $7 = (_liq_crash_if_invalid_handle_pointer_given($2,18274)|0);\n if (!($7)) {\n  $$9 = 105;\n  STACKTOP = sp;return ($$9|0);\n }\n $8 = ((($2)) + 32|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($2)) + 36|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($2)) + 40|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0|0);\n if ($14) {\n  $15 = ((($1)) + 69|0);\n  $16 = HEAP8[$15>>0]|0;\n  $17 = ($16<<24>>24)==(0);\n  if (!($17)) {\n   _contrast_maps($2);\n  }\n }\n $18 = ((($2)) + 24|0);\n $19 = +HEAPF64[$18>>3];\n $20 = ((($0)) + 16|0);\n HEAPF64[$20>>3] = $19;\n $21 = ((($2)) + 4172|0);\n $22 = HEAP16[$21>>1]|0;\n $23 = ($22<<16>>16)==(0);\n L14: do {\n  if (!($23)) {\n   $24 = ((($0)) + 4120|0);\n   $$087116 = 0;\n   while(1) {\n    $25 = (((($2)) + 76|0) + ($$087116<<4)|0);\n    dest=$3; src=$25; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));\n    $26 = HEAP16[$24>>1]|0;\n    $27 = ($26&65535)>(255);\n    if ($27) {\n     break;\n    }\n    $28 = (($26) + 1)<<16>>16;\n    $29 = $26&65535;\n    $30 = (((($0)) + 24|0) + ($29<<4)|0);\n    HEAP16[$24>>1] = $28;\n    ;HEAP32[$30>>2]=HEAP32[$3>>2]|0;HEAP32[$30+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$30+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$30+12>>2]=HEAP32[$3+12>>2]|0;\n    $31 = (($$087116) + 1)|0;\n    $32 = HEAP16[$21>>1]|0;\n    $33 = $32&65535;\n    $34 = ($31|0)<($33|0);\n    if ($34) {\n     $$087116 = $31;\n    } else {\n     break L14;\n    }\n   }\n   $$9 = 106;\n   STACKTOP = sp;return ($$9|0);\n  }\n } while(0);\n $35 = ((($1)) + 72|0);\n $36 = ((($1)) + 76|0);\n $37 = HEAP32[$36>>2]|0;\n $38 = ($37|0)==(0|0);\n if (!($38)) {\n  $39 = HEAP8[$35>>0]|0;\n  $40 = (+($39&255));\n  $41 = $40 * 0.40000000596046448;\n  $42 = ((($1)) + 80|0);\n  $43 = HEAP32[$42>>2]|0;\n  $44 = (FUNCTION_TABLE_idi[$37 & 0]($41,$43)|0);\n  $45 = ($44|0)==(0);\n  if ($45) {\n   $$9 = 102;\n   STACKTOP = sp;return ($$9|0);\n  }\n }\n $46 = ((($2)) + 16|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = ($47|0)==(0|0);\n if ($48) {\n  $141 = 0;\n } else {\n  $49 = ((($2)) + 72|0);\n  $50 = +HEAPF32[$49>>2];\n  $51 = !($50 < 1.0);\n  $141 = $51;\n }\n $52 = ((($0)) + 4124|0);\n $53 = HEAP8[$52>>0]|0;\n $54 = ($53<<24>>24)==(0);\n if ($54) {\n  $55 = ((($1)) + 48|0);\n  $56 = HEAP32[$55>>2]|0;\n  $70 = $56;\n } else {\n  $70 = -1;\n }\n $57 = ((($0)) + 12|0);\n $58 = Math_imul($11, $9)|0;\n $59 = ((($0)) + 4122|0);\n $60 = ((($1)) + 4|0);\n $61 = ((($1)) + 8|0);\n $62 = ($11|0)==(0);\n $63 = ((($1)) + 80|0);\n $$pre120 = HEAP32[$57>>2]|0;\n L32: do {\n  if ($62) {\n   $100 = ($$pre120|0)==(0|0);\n   if ($100) {\n    $101 = HEAP16[$59>>1]|0;\n    $102 = $101&65535;\n    $103 = HEAP32[$60>>2]|0;\n    $104 = HEAP32[$61>>2]|0;\n    $105 = (_pam_allocacolorhash($70,$58,$102,$103,$104)|0);\n    HEAP32[$57>>2] = $105;\n    $106 = ($105|0)==(0|0);\n    if ($106) {\n     $$9 = 101;\n     STACKTOP = sp;return ($$9|0);\n    }\n   }\n  } else {\n   $64 = $$pre120;\n   while(1) {\n    $65 = ($64|0)==(0|0);\n    if ($65) {\n     $66 = HEAP16[$59>>1]|0;\n     $67 = $66&65535;\n     $68 = HEAP32[$60>>2]|0;\n     $69 = HEAP32[$61>>2]|0;\n     $71 = (_pam_allocacolorhash($70,$58,$67,$68,$69)|0);\n     HEAP32[$57>>2] = $71;\n     $72 = ($71|0)==(0|0);\n     if ($72) {\n      $$9 = 101;\n      label = 40;\n      break;\n     } else {\n      $98 = $71;\n     }\n    } else {\n     $98 = $64;\n    }\n    L41: do {\n     if ($141) {\n      $96 = HEAP32[$46>>2]|0;\n      $97 = HEAP32[$12>>2]|0;\n      $99 = (_pam_computeacolorhash($98,$96,$9,$11,$97)|0);\n      if (!($99)) {\n       label = 23;\n      }\n     } else {\n      $$085114$us = 0;\n      while(1) {\n       $75 = (_liq_image_get_row_rgba($2,$$085114$us)|0);\n       HEAP32[$4>>2] = $75;\n       $76 = HEAP32[$57>>2]|0;\n       $77 = HEAP32[$12>>2]|0;\n       $78 = ($77|0)==(0|0);\n       $79 = Math_imul($$085114$us, $9)|0;\n       $80 = (($77) + ($79)|0);\n       $81 = $78 ? 0 : $80;\n       $82 = (_pam_computeacolorhash($76,$4,$9,1,$81)|0);\n       $73 = (($$085114$us) + 1)|0;\n       if (!($82)) {\n        label = 23;\n        break L41;\n       }\n       $74 = ($73>>>0)<($11>>>0);\n       if ($74) {\n        $$085114$us = $73;\n       } else {\n        break;\n       }\n      }\n     }\n    } while(0);\n    if ((label|0) == 23) {\n     label = 0;\n     $83 = HEAP16[$59>>1]|0;\n     $84 = (($83) + 1)<<16>>16;\n     HEAP16[$59>>1] = $84;\n     $85 = $84&65535;\n     HEAP32[$vararg_buffer>>2] = $85;\n     _liq_verbose_printf($1,18758,$vararg_buffer);\n     $86 = HEAP32[$57>>2]|0;\n     _pam_freeacolorhash($86);\n     HEAP32[$57>>2] = 0;\n     $87 = HEAP32[$36>>2]|0;\n     $88 = ($87|0)==(0|0);\n     if ($88) {\n      $64 = 0;\n      continue;\n     }\n     $89 = HEAP8[$35>>0]|0;\n     $90 = (+($89&255));\n     $91 = $90 * 0.60000002384185791;\n     $92 = HEAP32[$63>>2]|0;\n     $93 = (FUNCTION_TABLE_idi[$87 & 0]($91,$92)|0);\n     $94 = ($93|0)==(0);\n     if ($94) {\n      $$9 = 102;\n      label = 40;\n      break;\n     }\n    }\n    $$pr = HEAP32[$57>>2]|0;\n    $95 = ($$pr|0)==(0|0);\n    if ($95) {\n     $64 = 0;\n    } else {\n     break L32;\n    }\n   }\n   if ((label|0) == 40) {\n    STACKTOP = sp;return ($$9|0);\n   }\n  }\n } while(0);\n HEAP8[$52>>0] = 1;\n $107 = HEAP32[$12>>2]|0;\n $108 = ($107|0)==(0|0);\n if (!($108)) {\n  $109 = ((($2)) + 8|0);\n  $110 = HEAP32[$109>>2]|0;\n  FUNCTION_TABLE_vi[$110 & 127]($107);\n  HEAP32[$12>>2] = 0;\n }\n $111 = ((($2)) + 4174|0);\n $112 = HEAP8[$111>>0]|0;\n $113 = ($112<<24>>24)==(0);\n if ($113) {\n  $$9 = 0;\n  STACKTOP = sp;return ($$9|0);\n }\n $114 = ((($2)) + 12|0);\n $115 = HEAP32[$114>>2]|0;\n $116 = ($115|0)==(0|0);\n if ($116) {\n  $$9 = 0;\n  STACKTOP = sp;return ($$9|0);\n }\n $117 = HEAP16[$111>>1]|0;\n $118 = $117&255;\n $119 = ($118<<24>>24)==(0);\n $120 = ($117&65535) >>> 8;\n $121 = $120&255;\n if ($119) {\n  $131 = $121;\n } else {\n  $122 = ((($2)) + 52|0);\n  $123 = HEAP32[$122>>2]|0;\n  $124 = ($123|0)==(0|0);\n  if ($124) {\n   $131 = $121;\n  } else {\n   $125 = ((($2)) + 4176|0);\n   $126 = HEAP8[$125>>0]|0;\n   $127 = ($126<<24>>24)==(0);\n   $128 = ((($2)) + 8|0);\n   $129 = HEAP32[$128>>2]|0;\n   $130 = ($129|0)==(46|0);\n   $or$cond$i$i = $127 & $130;\n   $$0$i$i = $or$cond$i$i ? 47 : $129;\n   FUNCTION_TABLE_vi[$$0$i$i & 127]($123);\n   HEAP32[$122>>2] = 0;\n   $$phi$trans$insert$i = ((($2)) + 4175|0);\n   $$pre$i = HEAP8[$$phi$trans$insert$i>>0]|0;\n   $131 = $$pre$i;\n  }\n }\n $132 = ($131<<24>>24)==(0);\n if ($132) {\n  $$9 = 0;\n  STACKTOP = sp;return ($$9|0);\n }\n $133 = HEAP32[$46>>2]|0;\n $134 = ($133|0)==(0|0);\n if ($134) {\n  $$9 = 0;\n  STACKTOP = sp;return ($$9|0);\n }\n $135 = ((($2)) + 4176|0);\n $136 = HEAP8[$135>>0]|0;\n $137 = ($136<<24>>24)==(0);\n $138 = ((($2)) + 8|0);\n $139 = HEAP32[$138>>2]|0;\n $140 = ($139|0)==(46|0);\n $or$cond$i10$i = $137 & $140;\n $$0$i11$i = $or$cond$i10$i ? 47 : $139;\n FUNCTION_TABLE_vi[$$0$i11$i & 127]($133);\n HEAP32[$46>>2] = 0;\n $$9 = 0;\n STACKTOP = sp;return ($$9|0);\n}\nfunction _liq_histogram_quantize_internal($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$0120$i$i = 0, $$$0136$i$i = 0.0, $$$i = 0, $$$i$i = 0, $$$i$i$i = 0, $$$i$i$i$us$i$i = 0.0, $$$i128$i = 0.0, $$$i4$i$i$us$i$i = 0.0, $$$i5$i$i$us$i$i = 0.0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i131$i = 0.0, $$0$i$i134$i = 0.0, $$0113$i$i = 0, $$0115$i = 0, $$0119152$i$i = 0, $$0119182$i = 0, $$0120$i$i = 0, $$0120177$i = 0.0, $$0121176$i = 0;\n var $$0123$i$i = 0, $$0123175$i = 0, $$0128$i$i = 0, $$0129$i$i = 0, $$0132$i$i = 0.0, $$0136$i$i = 0.0, $$0166$i = 0.0, $$019$i$i = 0, $$020$i$i = 0, $$02345$us$i$i = 0, $$044$us$i$i = 0, $$05155$i$i = 0, $$05155$i$i$i = 0, $$05253$i$i = 0, $$05253$i$i$i = 0, $$068$i$i = 0, $$068$i132$i = 0, $$087$lcssa$i$i = 0, $$087112$i$i = 0, $$089115$i$i = 0;\n var $$090$lcssa$i194$i = 0, $$090$lcssa129$i$i = 0, $$091122$i$i = 0, $$1 = 0, $$1$i$i = 0, $$1$us$i$i = 0, $$1121$i$i = 0, $$1122$i = 0, $$1124$i$i = 0, $$1130$i$i = 0, $$1133$i$i = 0.0, $$1137$i$i = 0.0, $$188$i$i = 0, $$2$i = 0.0, $$2$i142$i = 0, $$2$i167$i = 0, $$2$ph$i$i = 0, $$2$ph$i$i$i = 0, $$2125$i$i = 0, $$2125$v$i$i = 0;\n var $$2134$i$i = 0.0, $$254$i$i = 0, $$254$i$i$i = 0, $$3$i = 0, $$3$i$i = 0, $$4$i = 0.0, $$pow2$i$i = 0.0, $$pr = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i19 = 0, $$pre$i138$i = 0, $$pre188$i = 0, $$pre189$i = 0, $$pre54 = 0, $$sroa$0$0$$sroa_idx$us$i$i = 0, $$sroa$0$0$copyload$us$i$i = 0.0, $$sroa$031$0$$sroa_idx$us$i$i = 0, $$sroa$031$0$copyload$us$i$i = 0.0, $$sroa$10$0$$sroa_raw_idx$i = 0;\n var $$sroa$2$0$$sroa_idx3$i$i = 0, $$sroa$2$0$$sroa_idx3$i$i$i = 0, $$sroa$3$0$$sroa_idx$i$i = 0, $$sroa$3$0$$sroa_idx$i$i$i = 0, $$sroa$3$0$$sroa_idx4$i = 0, $$sroa$4$0$$sroa_idx25$us$i$i = 0, $$sroa$4$0$$sroa_idx5$i = 0, $$sroa$4$0$$sroa_raw_idx$i$i = 0, $$sroa$4$0$$sroa_raw_idx$i$i$i = 0, $$sroa$4$0$copyload$us$i$i = 0.0, $$sroa$4$i$i = 0, $$sroa$433$0$$sroa_idx34$us$i$i = 0, $$sroa$433$0$copyload$us$i$i = 0.0, $$sroa$5$0$$sroa_idx27$us$i$i = 0, $$sroa$5$0$$sroa_idx6$i = 0, $$sroa$5$0$copyload$us$i$i = 0.0, $$sroa$536$0$$sroa_idx37$us$i$i = 0, $$sroa$536$0$copyload$us$i$i = 0.0, $$sroa$57$0$$sroa_idx8$i = 0, $$sroa$6$0$$sroa_idx$i = 0;\n var $$sroa$6$0$$sroa_idx29$us$i$i = 0, $$sroa$6$0$copyload$us$i$i = 0.0, $$sroa$610$0$$sroa_idx11$i = 0, $$sroa$639$0$$sroa_idx40$us$i$i = 0, $$sroa$639$0$copyload$us$i$i = 0.0, $$sroa$7$0$$sroa_idx12$i = 0, $$sroa$8$0$$sroa_idx13$i = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0, $170 = 0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;\n var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0;\n var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0;\n var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0.0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0.0, $251 = 0.0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0.0;\n var $257 = 0.0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0;\n var $275 = 0, $276 = 0.0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;\n var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0.0, $302 = 0.0, $303 = 0.0, $304 = 0.0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0.0, $310 = 0;\n var $311 = 0, $312 = 0.0, $313 = 0, $314 = 0, $315 = 0, $316 = 0.0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0.0, $324 = 0.0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;\n var $33 = 0, $330 = 0, $331 = 0, $332 = 0.0, $333 = 0.0, $334 = 0.0, $335 = 0.0, $336 = 0.0, $337 = 0.0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0;\n var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0.0, $356 = 0.0, $357 = 0, $358 = 0.0, $359 = 0.0, $36 = 0, $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0.0;\n var $366 = 0.0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0.0, $38 = 0, $380 = 0, $381 = 0, $382 = 0.0, $383 = 0.0;\n var $384 = 0.0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0.0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;\n var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;\n var $42 = 0, $420 = 0.0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;\n var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0.0, $450 = 0, $451 = 0, $452 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0;\n var $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0;\n var $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i$i = 0, $cond$i133$i = 0, $exitcond$i = 0, $not$$i$i = 0;\n var $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i = 0, $or$cond$i127$i = 0, $or$cond140$i$i = 0, $or$cond141$i$i = 0, $or$cond201$i = 0, $or$cond3$i = 0, $pow2$i$i = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_ptr13 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);\n $vararg_buffer10 = sp + 48|0;\n $vararg_buffer4 = sp + 16|0;\n $vararg_buffer1 = sp + 8|0;\n $vararg_buffer = sp;\n $4 = sp + 152|0;\n $5 = sp + 128|0;\n $6 = sp + 104|0;\n $7 = sp + 80|0;\n $8 = sp + 56|0;\n $$sroa$4$i$i = sp + 176|0;\n $9 = (_liq_crash_if_invalid_pointer_given($3)|0);\n if (!($9)) {\n  $$1 = 105;\n  STACKTOP = sp;return ($$1|0);\n }\n HEAP32[$3>>2] = 0;\n $10 = (_liq_crash_if_invalid_handle_pointer_given($1,18233)|0);\n if (!($10)) {\n  $$1 = 105;\n  STACKTOP = sp;return ($$1|0);\n }\n $11 = (_liq_crash_if_invalid_handle_pointer_given($0,18510)|0);\n if (!($11)) {\n  $$1 = 105;\n  STACKTOP = sp;return ($$1|0);\n }\n $12 = ((($1)) + 76|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0|0);\n if (!($14)) {\n  $15 = ((($1)) + 80|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = (FUNCTION_TABLE_idi[$13 & 0](0.0,$16)|0);\n  $18 = ($17|0)==(0);\n  if ($18) {\n   $$1 = 102;\n   STACKTOP = sp;return ($$1|0);\n  }\n  $$pr = HEAP32[$12>>2]|0;\n  $19 = ($$pr|0)==(0|0);\n  if (!($19)) {\n   $20 = ((($1)) + 72|0);\n   $21 = HEAP8[$20>>0]|0;\n   $22 = (+($21&255));\n   $23 = $22 * 0.89999997615814208;\n   $24 = HEAP32[$15>>2]|0;\n   $25 = (FUNCTION_TABLE_idi[$$pr & 0]($23,$24)|0);\n   $26 = ($25|0)==(0);\n   if ($26) {\n    $$1 = 102;\n    STACKTOP = sp;return ($$1|0);\n   }\n  }\n }\n $27 = ((($0)) + 12|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = ($28|0)==(0|0);\n if ($29) {\n  $$1 = 103;\n  STACKTOP = sp;return ($$1|0);\n }\n $30 = ((($0)) + 16|0);\n $31 = +HEAPF64[$30>>3];\n $32 = ((($1)) + 4|0);\n $33 = HEAP32[$32>>2]|0;\n $34 = ((($1)) + 8|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = (_pam_acolorhashtoacolorhist($28,$31,$33,$35)|0);\n $37 = HEAP32[$27>>2]|0;\n _pam_freeacolorhash($37);\n HEAP32[$27>>2] = 0;\n $38 = ($36|0)==(0|0);\n if ($38) {\n  $$1 = 101;\n  STACKTOP = sp;return ($$1|0);\n }\n $39 = ((($36)) + 16|0);\n $40 = HEAP32[$39>>2]|0;\n HEAP32[$vararg_buffer>>2] = $40;\n _liq_verbose_printf($1,18524,$vararg_buffer);\n $41 = ((($0)) + 4120|0);\n $42 = HEAP16[$41>>1]|0;\n $43 = $42&65535;\n $44 = ((($1)) + 16|0);\n $45 = +HEAPF64[$44>>3];\n $46 = $45;\n $47 = $46;\n $48 = $47 * 0.5;\n $49 = $48 > 3.0517578125E-5;\n $50 = $49 ? $48 : 3.0517578125E-5;\n $51 = $50;\n $52 = ($42<<16>>16)==(0);\n $$pre54 = HEAP32[$39>>2]|0;\n if ($52) {\n  $107 = $$pre54;$93 = 0;\n } else {\n  $53 = ($$pre54|0)==(0);\n  if ($53) {\n   $107 = 0;$93 = $42;\n  } else {\n   $$02345$us$i$i = 0;$86 = $$pre54;\n   while(1) {\n    $54 = HEAP32[$36>>2]|0;\n    $$sroa$0$0$$sroa_idx$us$i$i = (($54) + ($$02345$us$i$i<<5)|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0$0$$sroa_idx$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0$0$$sroa_idx$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0$0$$sroa_idx$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0$0$$sroa_idx$us$i$i+3>>0];$$sroa$0$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$4$0$$sroa_idx25$us$i$i = (((($54) + ($$02345$us$i$i<<5)|0)) + 4|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx25$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx25$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx25$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx25$us$i$i+3>>0];$$sroa$4$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$5$0$$sroa_idx27$us$i$i = (((($54) + ($$02345$us$i$i<<5)|0)) + 8|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx27$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx27$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx27$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx27$us$i$i+3>>0];$$sroa$5$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$6$0$$sroa_idx29$us$i$i = (((($54) + ($$02345$us$i$i<<5)|0)) + 12|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx29$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx29$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx29$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx29$us$i$i+3>>0];$$sroa$6$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n    $55 = $$sroa$4$0$copyload$us$i$i;\n    $56 = $$sroa$5$0$copyload$us$i$i;\n    $57 = $$sroa$6$0$copyload$us$i$i;\n    $$044$us$i$i = 0;\n    while(1) {\n     $$sroa$031$0$$sroa_idx$us$i$i = (((($0)) + 24|0) + ($$044$us$i$i<<4)|0);\n     HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$031$0$$sroa_idx$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$031$0$$sroa_idx$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$031$0$$sroa_idx$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$031$0$$sroa_idx$us$i$i+3>>0];$$sroa$031$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n     $$sroa$433$0$$sroa_idx34$us$i$i = (((((($0)) + 24|0) + ($$044$us$i$i<<4)|0)) + 4|0);\n     HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$433$0$$sroa_idx34$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$433$0$$sroa_idx34$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$433$0$$sroa_idx34$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$433$0$$sroa_idx34$us$i$i+3>>0];$$sroa$433$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n     $$sroa$536$0$$sroa_idx37$us$i$i = (((((($0)) + 24|0) + ($$044$us$i$i<<4)|0)) + 8|0);\n     HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$536$0$$sroa_idx37$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$536$0$$sroa_idx37$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$536$0$$sroa_idx37$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$536$0$$sroa_idx37$us$i$i+3>>0];$$sroa$536$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n     $$sroa$639$0$$sroa_idx40$us$i$i = (((((($0)) + 24|0) + ($$044$us$i$i<<4)|0)) + 12|0);\n     HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$639$0$$sroa_idx40$us$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$639$0$$sroa_idx40$us$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$639$0$$sroa_idx40$us$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$639$0$$sroa_idx40$us$i$i+3>>0];$$sroa$639$0$copyload$us$i$i = +HEAPF32[tempDoublePtr>>2];\n     $60 = $$sroa$031$0$copyload$us$i$i - $$sroa$0$0$copyload$us$i$i;\n     $61 = $60;\n     $62 = $$sroa$433$0$copyload$us$i$i;\n     $63 = $55 - $62;\n     $64 = $61 + $63;\n     $65 = $63 * $63;\n     $66 = $64 * $64;\n     $67 = $65 > $66;\n     $$$i$i$i$us$i$i = $67 ? $65 : $66;\n     $68 = $$sroa$536$0$copyload$us$i$i;\n     $69 = $56 - $68;\n     $70 = $61 + $69;\n     $71 = $69 * $69;\n     $72 = $70 * $70;\n     $73 = $71 > $72;\n     $$$i5$i$i$us$i$i = $73 ? $71 : $72;\n     $74 = $$$i$i$i$us$i$i + $$$i5$i$i$us$i$i;\n     $75 = $$sroa$639$0$copyload$us$i$i;\n     $76 = $57 - $75;\n     $77 = $61 + $76;\n     $78 = $76 * $76;\n     $79 = $77 * $77;\n     $80 = $78 > $79;\n     $$$i4$i$i$us$i$i = $80 ? $78 : $79;\n     $81 = $74 + $$$i4$i$i$us$i$i;\n     $82 = $81;\n     $83 = $82 < $51;\n     $58 = (($$044$us$i$i) + 1)|0;\n     if ($83) {\n      label = 16;\n      break;\n     }\n     $59 = ($58>>>0)<($43>>>0);\n     if ($59) {\n      $$044$us$i$i = $58;\n     } else {\n      $$1$us$i$i = $$02345$us$i$i;$91 = $86;\n      break;\n     }\n    }\n    if ((label|0) == 16) {\n     label = 0;\n     $84 = (($54) + ($$02345$us$i$i<<5)|0);\n     $85 = (($86) + -1)|0;\n     HEAP32[$39>>2] = $85;\n     $87 = (($54) + ($85<<5)|0);\n     ;HEAP32[$84>>2]=HEAP32[$87>>2]|0;HEAP32[$84+4>>2]=HEAP32[$87+4>>2]|0;HEAP32[$84+8>>2]=HEAP32[$87+8>>2]|0;HEAP32[$84+12>>2]=HEAP32[$87+12>>2]|0;HEAP32[$84+16>>2]=HEAP32[$87+16>>2]|0;HEAP32[$84+20>>2]=HEAP32[$87+20>>2]|0;HEAP32[$84+24>>2]=HEAP32[$87+24>>2]|0;HEAP32[$84+28>>2]=HEAP32[$87+28>>2]|0;\n     $88 = (($$02345$us$i$i) + -1)|0;\n     $$pre$i$i = HEAP32[$39>>2]|0;\n     $$1$us$i$i = $88;$91 = $$pre$i$i;\n    }\n    $89 = (($$1$us$i$i) + 1)|0;\n    $90 = ($89>>>0)<($91>>>0);\n    if ($90) {\n     $$02345$us$i$i = $89;$86 = $91;\n    } else {\n     break;\n    }\n   }\n   $$pre = HEAP16[$41>>1]|0;\n   $107 = $91;$93 = $$pre;\n  }\n }\n $92 = $93&65535;\n $94 = +HEAPF64[$30>>3];\n $95 = ((($1)) + 44|0);\n $96 = HEAP32[$95>>2]|0;\n $97 = ((($1)) + 72|0);\n $98 = HEAP32[$12>>2]|0;\n $99 = ($98|0)==(0|0);\n if ($99) {\n  label = 21;\n } else {\n  $100 = HEAP8[$97>>0]|0;\n  $101 = (+($100&255));\n  $102 = ((($1)) + 80|0);\n  $103 = HEAP32[$102>>2]|0;\n  $104 = (FUNCTION_TABLE_idi[$98 & 0]($101,$103)|0);\n  $105 = ($104|0)==(0);\n  if ($105) {\n   $$3$i = 102;\n  } else {\n   label = 21;\n  }\n }\n L39: do {\n  if ((label|0) == 21) {\n   $106 = (($107) + ($92))|0;\n   $108 = ($106>>>0)<=($96>>>0);\n   $109 = +HEAPF64[$44>>3];\n   $110 = $109 == 0.0;\n   $or$cond201$i = $108 & $110;\n   if ($or$cond201$i) {\n    $111 = HEAP32[$39>>2]|0;\n    $112 = ($111|0)==(0);\n    if ($112) {\n     $$019$i$i = 0;\n    } else {\n     $113 = HEAP32[$32>>2]|0;\n     $114 = HEAP32[$34>>2]|0;\n     $115 = (_pam_colormap($111,$113,$114)|0);\n     $116 = HEAP32[$39>>2]|0;\n     $117 = ($116|0)==(0);\n     if ($117) {\n      $$019$i$i = $115;\n     } else {\n      $$pre$i$i19 = HEAP32[$36>>2]|0;\n      $$020$i$i = 0;$120 = $$pre$i$i19;\n      while(1) {\n       $118 = (((($115)) + 12|0) + (($$020$i$i*24)|0)|0);\n       $119 = (($120) + ($$020$i$i<<5)|0);\n       ;HEAP32[$118>>2]=HEAP32[$119>>2]|0;HEAP32[$118+4>>2]=HEAP32[$119+4>>2]|0;HEAP32[$118+8>>2]=HEAP32[$119+8>>2]|0;HEAP32[$118+12>>2]=HEAP32[$119+12>>2]|0;\n       $121 = HEAP32[$36>>2]|0;\n       $122 = (((($121) + ($$020$i$i<<5)|0)) + 20|0);\n       $123 = HEAP32[$122>>2]|0;\n       $124 = (((((($115)) + 12|0) + (($$020$i$i*24)|0)|0)) + 16|0);\n       HEAP32[$124>>2] = $123;\n       $125 = (($$020$i$i) + 1)|0;\n       $126 = HEAP32[$39>>2]|0;\n       $127 = ($125>>>0)<($126>>>0);\n       if ($127) {\n        $$020$i$i = $125;$120 = $121;\n       } else {\n        $$019$i$i = $115;\n        break;\n       }\n      }\n     }\n    }\n    $128 = HEAP32[$95>>2]|0;\n    $129 = HEAP32[$32>>2]|0;\n    $130 = HEAP32[$34>>2]|0;\n    $131 = ($93<<16>>16)==(0);\n    if ($131) {\n     $$0$i$i = $$019$i$i;\n    } else {\n     $132 = ($$019$i$i|0)!=(0|0);\n     if ($132) {\n      $133 = HEAP32[$$019$i$i>>2]|0;\n      $135 = $133;\n     } else {\n      $135 = 0;\n     }\n     $134 = (($135) + ($92))|0;\n     $136 = ($134>>>0)>($128>>>0);\n     if ($136) {\n      $140 = $128;\n     } else {\n      if ($132) {\n       $137 = HEAP32[$$019$i$i>>2]|0;\n       $139 = $137;\n      } else {\n       $139 = 0;\n      }\n      $138 = (($139) + ($92))|0;\n      $140 = $138;\n     }\n     $141 = (_pam_colormap($140,$129,$130)|0);\n     $142 = ($128|0)>($92|0);\n     $or$cond$i$i = $132 & $142;\n     if ($or$cond$i$i) {\n      $146 = HEAP32[$$019$i$i>>2]|0;\n      $147 = (($128) - ($92))|0;\n      $148 = ($146>>>0)<($147>>>0);\n      $$$i$i = $148 ? $146 : $147;\n      $149 = ($$$i$i|0)==(0);\n      if ($149) {\n       $$2$ph$i$i = 0;\n      } else {\n       $$05155$i$i = 0;\n       while(1) {\n        $150 = (((($141)) + 12|0) + (($$05155$i$i*24)|0)|0);\n        $151 = (((($$019$i$i)) + 12|0) + (($$05155$i$i*24)|0)|0);\n        ;HEAP32[$150>>2]=HEAP32[$151>>2]|0;HEAP32[$150+4>>2]=HEAP32[$151+4>>2]|0;HEAP32[$150+8>>2]=HEAP32[$151+8>>2]|0;HEAP32[$150+12>>2]=HEAP32[$151+12>>2]|0;HEAP32[$150+16>>2]=HEAP32[$151+16>>2]|0;HEAP32[$150+20>>2]=HEAP32[$151+20>>2]|0;\n        $152 = (($$05155$i$i) + 1)|0;\n        $153 = ($152>>>0)<($$$i$i>>>0);\n        if ($153) {\n         $$05155$i$i = $152;\n        } else {\n         $$2$ph$i$i = $$$i$i;\n         break;\n        }\n       }\n      }\n     } else {\n      $$2$ph$i$i = 0;\n     }\n     $143 = ($128|0)<($92|0);\n     $144 = $143 ? $128 : $92;\n     $145 = ($144|0)>(0);\n     if ($145) {\n      $$05253$i$i = 0;$$254$i$i = $$2$ph$i$i;\n      while(1) {\n       $154 = (($$254$i$i) + 1)|0;\n       $155 = (((($141)) + 12|0) + (($$254$i$i*24)|0)|0);\n       $156 = (((($0)) + 24|0) + ($$05253$i$i<<4)|0);\n       _memmove(($155|0),($156|0),16)|0;\n       $$sroa$2$0$$sroa_idx3$i$i = (((((($141)) + 12|0) + (($$254$i$i*24)|0)|0)) + 16|0);\n       HEAPF32[$$sroa$2$0$$sroa_idx3$i$i>>2] = 0.0;\n       $$sroa$3$0$$sroa_idx$i$i = (((((($141)) + 12|0) + (($$254$i$i*24)|0)|0)) + 20|0);\n       HEAP8[$$sroa$3$0$$sroa_idx$i$i>>0] = 1;\n       $$sroa$4$0$$sroa_raw_idx$i$i = ((($155)) + 21|0);\n       ;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i>>0]=HEAP8[$$sroa$4$i$i>>0]|0;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i+1>>0]=HEAP8[$$sroa$4$i$i+1>>0]|0;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i+2>>0]=HEAP8[$$sroa$4$i$i+2>>0]|0;\n       $157 = (($$05253$i$i) + 1)|0;\n       $158 = ($157|0)<($144|0);\n       if ($158) {\n        $$05253$i$i = $157;$$254$i$i = $154;\n       } else {\n        break;\n       }\n      }\n     }\n     if ($132) {\n      _pam_freecolormap($$019$i$i);\n      $$0$i$i = $141;\n     } else {\n      $$0$i$i = $141;\n     }\n    }\n    $$0115$i = $$0$i$i;$$4$i = 0.0;\n   } else {\n    $159 = ((($1)) + 24|0);\n    $160 = +HEAPF64[$159>>3];\n    $161 = $108 ? 0.33000000000000002 : 1.0;\n    $162 = $161 * $160;\n    $163 = HEAP32[$95>>2]|0;\n    $164 = ((($1)) + 52|0);\n    $165 = HEAP32[$164>>2]|0;\n    $166 = 1 << $165;\n    $167 = (+($166|0));\n    $168 = $167 * 9.765625E-4;\n    $pow2$i$i = $168 * $168;\n    $169 = $109 > $pow2$i$i;\n    $$pow2$i$i = $169 ? $109 : $pow2$i$i;\n    $170 = $$pow2$i$i > $162;\n    $171 = $170 ? $162 : $$pow2$i$i;\n    $172 = ((($1)) + 64|0);\n    $173 = HEAP32[$172>>2]|0;\n    $174 = ($173|0)>(0);\n    $175 = $174 ? 1.05 : 1.0;\n    $176 = (+($173|0));\n    $177 = $174 ? $176 : 1.0;\n    $178 = $171 < 6.866455078125E-4;\n    $179 = $178 ? 6.866455078125E-4 : $171;\n    $180 = ($93<<16>>16)==(0);\n    $181 = $171 > 0.0;\n    $182 = ((($1)) + 80|0);\n    $$0120$i$i = $163;$$0123$i$i = $173;$$0129$i$i = 0;$$0132$i$i = $175;$$0136$i$i = 1.0E+20;\n    while(1) {\n     $183 = HEAP32[$39>>2]|0;\n     $184 = ($183|0)!=(0);\n     $185 = ($$0120$i$i>>>0)>($92>>>0);\n     $or$cond140$i$i = $185 & $184;\n     if ($or$cond140$i$i) {\n      $186 = (($$0120$i$i) - ($92))|0;\n      $187 = $171 * $$0132$i$i;\n      $188 = $179 > $$0136$i$i;\n      $$$0136$i$i = $188 ? $179 : $$0136$i$i;\n      $189 = $$$0136$i$i * 1.2;\n      $190 = HEAP32[$32>>2]|0;\n      $191 = HEAP32[$34>>2]|0;\n      $192 = (_mediancut($36,$186,$187,$189,$190,$191)|0);\n      $$0128$i$i = $192;$$1124$i$i = $$0123$i$i;\n     } else {\n      $$0128$i$i = 0;$$1124$i$i = 0;\n     }\n     $193 = HEAP32[$32>>2]|0;\n     $194 = HEAP32[$34>>2]|0;\n     if ($180) {\n      $$0$i$i$i = $$0128$i$i;\n     } else {\n      $195 = ($$0128$i$i|0)!=(0|0);\n      if ($195) {\n       $196 = HEAP32[$$0128$i$i>>2]|0;\n       $198 = $196;\n      } else {\n       $198 = 0;\n      }\n      $197 = (($198) + ($92))|0;\n      $199 = ($197>>>0)>($$0120$i$i>>>0);\n      if ($199) {\n       $203 = $$0120$i$i;\n      } else {\n       if ($195) {\n        $200 = HEAP32[$$0128$i$i>>2]|0;\n        $202 = $200;\n       } else {\n        $202 = 0;\n       }\n       $201 = (($202) + ($92))|0;\n       $203 = $201;\n      }\n      $204 = (_pam_colormap($203,$193,$194)|0);\n      $205 = ($$0120$i$i|0)>($92|0);\n      $or$cond$i$i$i = $205 & $195;\n      if ($or$cond$i$i$i) {\n       $209 = HEAP32[$$0128$i$i>>2]|0;\n       $210 = (($$0120$i$i) - ($92))|0;\n       $211 = ($209>>>0)<($210>>>0);\n       $$$i$i$i = $211 ? $209 : $210;\n       $212 = ($$$i$i$i|0)==(0);\n       if ($212) {\n        $$2$ph$i$i$i = 0;\n       } else {\n        $$05155$i$i$i = 0;\n        while(1) {\n         $213 = (((($204)) + 12|0) + (($$05155$i$i$i*24)|0)|0);\n         $214 = (((($$0128$i$i)) + 12|0) + (($$05155$i$i$i*24)|0)|0);\n         ;HEAP32[$213>>2]=HEAP32[$214>>2]|0;HEAP32[$213+4>>2]=HEAP32[$214+4>>2]|0;HEAP32[$213+8>>2]=HEAP32[$214+8>>2]|0;HEAP32[$213+12>>2]=HEAP32[$214+12>>2]|0;HEAP32[$213+16>>2]=HEAP32[$214+16>>2]|0;HEAP32[$213+20>>2]=HEAP32[$214+20>>2]|0;\n         $215 = (($$05155$i$i$i) + 1)|0;\n         $216 = ($215>>>0)<($$$i$i$i>>>0);\n         if ($216) {\n          $$05155$i$i$i = $215;\n         } else {\n          $$2$ph$i$i$i = $$$i$i$i;\n          break;\n         }\n        }\n       }\n      } else {\n       $$2$ph$i$i$i = 0;\n      }\n      $206 = ($$0120$i$i|0)<($92|0);\n      $207 = $206 ? $$0120$i$i : $92;\n      $208 = ($207|0)>(0);\n      if ($208) {\n       $$05253$i$i$i = 0;$$254$i$i$i = $$2$ph$i$i$i;\n       while(1) {\n        $217 = (($$254$i$i$i) + 1)|0;\n        $218 = (((($204)) + 12|0) + (($$254$i$i$i*24)|0)|0);\n        $219 = (((($0)) + 24|0) + ($$05253$i$i$i<<4)|0);\n        _memmove(($218|0),($219|0),16)|0;\n        $$sroa$2$0$$sroa_idx3$i$i$i = (((((($204)) + 12|0) + (($$254$i$i$i*24)|0)|0)) + 16|0);\n        HEAPF32[$$sroa$2$0$$sroa_idx3$i$i$i>>2] = 0.0;\n        $$sroa$3$0$$sroa_idx$i$i$i = (((((($204)) + 12|0) + (($$254$i$i$i*24)|0)|0)) + 20|0);\n        HEAP8[$$sroa$3$0$$sroa_idx$i$i$i>>0] = 1;\n        $$sroa$4$0$$sroa_raw_idx$i$i$i = ((($218)) + 21|0);\n        ;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i$i>>0]=HEAP8[$$sroa$4$i$i>>0]|0;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i$i+1>>0]=HEAP8[$$sroa$4$i$i+1>>0]|0;HEAP8[$$sroa$4$0$$sroa_raw_idx$i$i$i+2>>0]=HEAP8[$$sroa$4$i$i+2>>0]|0;\n        $220 = (($$05253$i$i$i) + 1)|0;\n        $221 = ($220|0)<($207|0);\n        if ($221) {\n         $$05253$i$i$i = $220;$$254$i$i$i = $217;\n        } else {\n         break;\n        }\n       }\n      }\n      if ($195) {\n       _pam_freecolormap($$0128$i$i);\n       $$0$i$i$i = $204;\n      } else {\n       $$0$i$i$i = $204;\n      }\n     }\n     $222 = ($$0$i$i$i|0)==(0|0);\n     if ($222) {\n      $$3$i = 100;\n      break L39;\n     }\n     $223 = ($$1124$i$i|0)<(1);\n     if ($223) {\n      $$0166$i = -1.0;$$2$i167$i = $$0$i$i$i;\n      break;\n     }\n     $224 = ($$0129$i$i|0)!=(0|0);\n     $not$$i$i = $224 ^ 1;\n     $225 = $181 & $not$$i$i;\n     $226 = $225 ? 0 : 48;\n     $227 = (+_kmeans_do_iteration($36,$$0$i$i$i,$226));\n     $228 = $227 < $$0136$i$i;\n     $or$cond141$i$i = $228 | $not$$i$i;\n     do {\n      if ($or$cond141$i$i) {\n       label = 65;\n      } else {\n       $229 = !($227 <= $171);\n       if (!($229)) {\n        $230 = HEAP32[$$0$i$i$i>>2]|0;\n        $231 = ($230>>>0)<($$0120$i$i>>>0);\n        if ($231) {\n         label = 65;\n         break;\n        }\n       }\n       $232 = HEAP32[$39>>2]|0;\n       $233 = ($232|0)==(0);\n       if (!($233)) {\n        $234 = HEAP32[$36>>2]|0;\n        $$0119152$i$i = 0;\n        while(1) {\n         $246 = (((($234) + ($$0119152$i$i<<5)|0)) + 20|0);\n         $247 = +HEAPF32[$246>>2];\n         $248 = (((($234) + ($$0119152$i$i<<5)|0)) + 16|0);\n         $249 = +HEAPF32[$248>>2];\n         $250 = $247 + $249;\n         $251 = $250 * 0.5;\n         HEAPF32[$248>>2] = $251;\n         $252 = (($$0119152$i$i) + 1)|0;\n         $exitcond$i = ($252|0)==($232|0);\n         if ($exitcond$i) {\n          break;\n         } else {\n          $$0119152$i$i = $252;\n         }\n        }\n       }\n       $244 = $$0136$i$i * 4.0;\n       $245 = $227 > $244;\n       $$2125$v$i$i = $245 ? -9 : -6;\n       $$2125$i$i = (($$2125$v$i$i) + ($$1124$i$i))|0;\n       _pam_freecolormap($$0$i$i$i);\n       $$1121$i$i = $$0120$i$i;$$1130$i$i = $$0129$i$i;$$1137$i$i = $$0136$i$i;$$2134$i$i = 1.0;$$3$i$i = $$2125$i$i;\n      }\n     } while(0);\n     if ((label|0) == 65) {\n      label = 0;\n      if ($224) {\n       _pam_freecolormap($$0129$i$i);\n      }\n      $235 = $227 < $171;\n      $236 = $227 > 0.0;\n      $or$cond$i127$i = $235 & $236;\n      if ($or$cond$i127$i) {\n       $237 = $$0132$i$i * 1.25;\n       $238 = $171 / $227;\n       $239 = $237 < $238;\n       $$$i128$i = $239 ? $237 : $238;\n       $$1133$i$i = $$$i128$i;\n      } else {\n       $$1133$i$i = $$0132$i$i;\n      }\n      $240 = HEAP32[$$0$i$i$i>>2]|0;\n      $241 = (($240) + 1)|0;\n      $242 = ($241>>>0)<($$0120$i$i>>>0);\n      $$$0120$i$i = $242 ? $241 : $$0120$i$i;\n      $243 = (($$1124$i$i) + -1)|0;\n      $$1121$i$i = $$$0120$i$i;$$1130$i$i = $$0$i$i$i;$$1137$i$i = $227;$$2134$i$i = $$1133$i$i;$$3$i$i = $243;\n     }\n     $253 = (+($$3$i$i|0));\n     $254 = $253 / $177;\n     $255 = $254 < 0.0;\n     $256 = $255 ? 0.0 : $254;\n     $257 = 1.0 - $256;\n     $258 = HEAP32[$12>>2]|0;\n     $259 = ($258|0)==(0|0);\n     if (!($259)) {\n      $260 = HEAP16[$97>>1]|0;\n      $261 = $260&255;\n      $262 = (+($261&255));\n      $263 = ($260&65535) >>> 8;\n      $264 = $263&255;\n      $265 = (+($264&255));\n      $266 = $257 * $265;\n      $267 = $262 + $266;\n      $268 = HEAP32[$182>>2]|0;\n      $269 = (FUNCTION_TABLE_idi[$258 & 0]($267,$268)|0);\n      $270 = ($269|0)==(0);\n      if ($270) {\n       label = 75;\n       break;\n      }\n     }\n     $271 = $257 * 100.0;\n     $272 = (~~(($271)));\n     HEAP32[$vararg_buffer1>>2] = $272;\n     _liq_verbose_printf($1,18559,$vararg_buffer1);\n     $273 = ($$3$i$i|0)>(0);\n     if ($273) {\n      $$0120$i$i = $$1121$i$i;$$0123$i$i = $$3$i$i;$$0129$i$i = $$1130$i$i;$$0132$i$i = $$2134$i$i;$$0136$i$i = $$1137$i$i;\n     } else {\n      label = 75;\n      break;\n     }\n    }\n    if ((label|0) == 75) {\n     $274 = ($$1130$i$i|0)==(0|0);\n     if ($274) {\n      $$3$i = 100;\n      break;\n     } else {\n      $$0166$i = $$1137$i$i;$$2$i167$i = $$1130$i$i;\n     }\n    }\n    $275 = ((($1)) + 32|0);\n    $276 = +HEAPF64[$275>>3];\n    $277 = ((($1)) + 60|0);\n    $278 = HEAP32[$277>>2]|0;\n    $279 = ($278|0)==(0);\n    $280 = $$0166$i < 0.0;\n    $or$cond$i = $280 & $279;\n    $281 = $162 < 1.0E+20;\n    $or$cond3$i = $281 & $or$cond$i;\n    $$$i = $or$cond3$i ? 1 : $278;\n    $282 = ($$$i|0)==(0);\n    L126: do {\n     if ($282) {\n      $$2$i = $$0166$i;\n     } else {\n      $283 = HEAP32[$$2$i167$i>>2]|0;\n      $284 = ($283>>>0)<(256);\n      L128: do {\n       if ($284) {\n        $285 = HEAP32[$39>>2]|0;\n        $286 = ($285|0)==(0);\n        if (!($286)) {\n         $$0119182$i = 0;$292 = $283;$452 = $285;\n         while(1) {\n          $287 = HEAP32[$36>>2]|0;\n          $288 = (((($287) + ($$0119182$i<<5)|0)) + 28|0);\n          $289 = HEAP8[$288>>0]|0;\n          $290 = $289&255;\n          $291 = ($290>>>0)<($292>>>0);\n          if ($291) {\n           $295 = $452;\n          } else {\n           HEAP8[$288>>0] = 0;\n           $$pre189$i = HEAP32[$39>>2]|0;\n           $295 = $$pre189$i;\n          }\n          $293 = (($$0119182$i) + 1)|0;\n          $294 = ($293>>>0)<($295>>>0);\n          if (!($294)) {\n           break L128;\n          }\n          $$pre188$i = HEAP32[$$2$i167$i>>2]|0;\n          $$0119182$i = $293;$292 = $$pre188$i;$452 = $295;\n         }\n        }\n       }\n      } while(0);\n      $296 = ((($1)) + 84|0);\n      $297 = HEAP32[$296>>2]|0;\n      $298 = ($297|0)==(0|0);\n      if (!($298)) {\n       $299 = ((($1)) + 88|0);\n       $300 = HEAP32[$299>>2]|0;\n       FUNCTION_TABLE_viii[$297 & 127]($1,18585,$300);\n      }\n      $301 = $162 * 3.0;\n      $302 = $162 * 1.5;\n      $303 = (+($$$i>>>0));\n      $$0120177$i = 1.0E+20;$$0121176$i = 0;\n      while(1) {\n       $304 = (+_kmeans_do_iteration($36,$$2$i167$i,0));\n       $305 = HEAP32[$12>>2]|0;\n       $306 = ($305|0)==(0|0);\n       if (!($306)) {\n        $307 = HEAP32[$97>>2]|0;\n        $308 = $307 & 255;\n        $309 = $307 >>> 8;\n        $310 = $309 & 255;\n        $311 = (($310) + ($308))|0;\n        $312 = (+($311|0));\n        $313 = $307 >>> 16;\n        $314 = $313 & 255;\n        $315 = Math_imul($314, $$0121176$i)|0;\n        $316 = (+($315>>>0));\n        $317 = $316 * 0.89999997615814208;\n        $318 = $317 / $303;\n        $319 = $312 + $318;\n        $320 = HEAP32[$182>>2]|0;\n        $321 = (FUNCTION_TABLE_idi[$305 & 0]($319,$320)|0);\n        $322 = ($321|0)==(0);\n        if ($322) {\n         $$2$i = $304;\n         break L126;\n        }\n       }\n       $323 = $$0120177$i - $304;\n       $324 = (+Math_abs((+$323)));\n       $325 = $324 < $276;\n       if ($325) {\n        $$2$i = $304;\n        break L126;\n       }\n       $326 = $304 > $302;\n       if ($326) {\n        $327 = $304 > $301;\n        if ($327) {\n         $$2$i = $304;\n         break L126;\n        }\n        $328 = (($$0121176$i) + 1)|0;\n        $$1122$i = $328;\n       } else {\n        $$1122$i = $$0121176$i;\n       }\n       $329 = (($$1122$i) + 1)|0;\n       $330 = ($329>>>0)<($$$i>>>0);\n       if ($330) {\n        $$0120177$i = $304;$$0121176$i = $329;\n       } else {\n        $$2$i = $304;\n        break;\n       }\n      }\n     }\n    } while(0);\n    $331 = $$2$i > $162;\n    if ($331) {\n     $332 = $$2$i * 65536.0;\n     $333 = $332 / 6.0;\n     $$068$i$i = 100;\n     while(1) {\n      $cond$i$i = ($$068$i$i|0)==(100);\n      if ($cond$i$i) {\n       $$0$i$i131$i = 0.0;\n      } else {\n       $334 = (+($$068$i$i|0));\n       $335 = $334 + 0.001;\n       $336 = 0.016 / $335;\n       $337 = $336 + -0.001;\n       $338 = $337 < 0.0;\n       $339 = $338 ? 0.0 : $337;\n       $340 = $334 + 210.0;\n       $341 = (+Math_pow((+$340),1.2));\n       $342 = 2.5 / $341;\n       $343 = 100.09999999999999 - $334;\n       $344 = $343 * $342;\n       $345 = $344 / 100.0;\n       $346 = $339 + $345;\n       $$0$i$i131$i = $346;\n      }\n      $347 = $$0$i$i131$i + 9.9999999999999995E-7;\n      $348 = !($347 >= $$2$i);\n      if (!($348)) {\n       $370 = $$068$i$i;\n       break;\n      }\n      $349 = (($$068$i$i) + -1)|0;\n      $350 = ($$068$i$i|0)>(1);\n      if ($350) {\n       $$068$i$i = $349;\n      } else {\n       $370 = 0;\n       break;\n      }\n     }\n     $351 = $162 * 65536.0;\n     $352 = $351 / 6.0;\n     $$068$i132$i = 100;\n     while(1) {\n      $cond$i133$i = ($$068$i132$i|0)==(100);\n      if ($cond$i133$i) {\n       $$0$i$i134$i = 0.0;\n      } else {\n       $353 = (+($$068$i132$i|0));\n       $354 = $353 + 0.001;\n       $355 = 0.016 / $354;\n       $356 = $355 + -0.001;\n       $357 = $356 < 0.0;\n       $358 = $357 ? 0.0 : $356;\n       $359 = $353 + 210.0;\n       $360 = (+Math_pow((+$359),1.2));\n       $361 = 2.5 / $360;\n       $362 = 100.09999999999999 - $353;\n       $363 = $362 * $361;\n       $364 = $363 / 100.0;\n       $365 = $358 + $364;\n       $$0$i$i134$i = $365;\n      }\n      $366 = $$0$i$i134$i + 9.9999999999999995E-7;\n      $367 = !($366 >= $162);\n      if (!($367)) {\n       $371 = $$068$i132$i;\n       break;\n      }\n      $368 = (($$068$i132$i) + -1)|0;\n      $369 = ($$068$i132$i|0)>(1);\n      if ($369) {\n       $$068$i132$i = $368;\n      } else {\n       $371 = 0;\n       break;\n      }\n     }\n     HEAPF64[$vararg_buffer4>>3] = $333;\n     $vararg_ptr7 = ((($vararg_buffer4)) + 8|0);\n     HEAP32[$vararg_ptr7>>2] = $370;\n     $vararg_ptr8 = ((($vararg_buffer4)) + 16|0);\n     HEAPF64[$vararg_ptr8>>3] = $352;\n     $vararg_ptr9 = ((($vararg_buffer4)) + 24|0);\n     HEAP32[$vararg_ptr9>>2] = $371;\n     _liq_verbose_printf($1,18625,$vararg_buffer4);\n     _pam_freecolormap($$2$i167$i);\n     $$3$i = 99;\n     break;\n    } else {\n     $$0115$i = $$2$i167$i;$$4$i = $$2$i;\n    }\n   }\n   $372 = HEAP32[$12>>2]|0;\n   $373 = ($372|0)==(0|0);\n   if (!($373)) {\n    $374 = HEAP32[$97>>2]|0;\n    $375 = $374 & 255;\n    $376 = $374 >>> 8;\n    $377 = $376 & 255;\n    $378 = (($377) + ($375))|0;\n    $379 = (+($378|0));\n    $380 = $374 >>> 16;\n    $381 = $380&255;\n    $382 = (+($381&255));\n    $383 = $382 * 0.94999998807907104;\n    $384 = $379 + $383;\n    $385 = ((($1)) + 80|0);\n    $386 = HEAP32[$385>>2]|0;\n    $387 = (FUNCTION_TABLE_idi[$372 & 0]($384,$386)|0);\n    $388 = ($387|0)==(0);\n    if ($388) {\n     _pam_freecolormap($$0115$i);\n     $$3$i = 102;\n     break;\n    }\n   }\n   $389 = ((($1)) + 68|0);\n   $390 = HEAP8[$389>>0]|0;\n   $391 = ($390<<24>>24)==(0);\n   $$pre$i138$i = HEAP32[$$0115$i>>2]|0;\n   L171: do {\n    if ($391) {\n     label = 110;\n    } else {\n     $392 = ($$pre$i138$i|0)==(0);\n     if ($392) {\n      $$087$lcssa$i$i = 0;$$090$lcssa129$i$i = 0;\n      label = 119;\n     } else {\n      $$091122$i$i = 0;\n      while(1) {\n       $396 = (((($$0115$i)) + 12|0) + (($$091122$i$i*24)|0)|0);\n       $397 = +HEAPF32[$396>>2];\n       $398 = $397 < 0.00390625;\n       $394 = (($$091122$i$i) + 1)|0;\n       if ($398) {\n        break;\n       }\n       $395 = ($394>>>0)<($$pre$i138$i>>>0);\n       if ($395) {\n        $$091122$i$i = $394;\n       } else {\n        label = 110;\n        break L171;\n       }\n      }\n      $399 = (($$pre$i138$i) + -1)|0;\n      $400 = (((($$0115$i)) + 12|0) + (($399*24)|0)|0);\n      ;HEAP32[$4>>2]=HEAP32[$400>>2]|0;HEAP32[$4+4>>2]=HEAP32[$400+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$400+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[$400+12>>2]|0;HEAP32[$4+16>>2]=HEAP32[$400+16>>2]|0;HEAP32[$4+20>>2]=HEAP32[$400+20>>2]|0;\n      ;HEAP32[$400>>2]=HEAP32[$396>>2]|0;HEAP32[$400+4>>2]=HEAP32[$396+4>>2]|0;HEAP32[$400+8>>2]=HEAP32[$396+8>>2]|0;HEAP32[$400+12>>2]=HEAP32[$396+12>>2]|0;HEAP32[$400+16>>2]=HEAP32[$396+16>>2]|0;HEAP32[$400+20>>2]=HEAP32[$396+20>>2]|0;\n      ;HEAP32[$396>>2]=HEAP32[$4>>2]|0;HEAP32[$396+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$396+8>>2]=HEAP32[$4+8>>2]|0;HEAP32[$396+12>>2]=HEAP32[$4+12>>2]|0;HEAP32[$396+16>>2]=HEAP32[$4+16>>2]|0;HEAP32[$396+20>>2]=HEAP32[$4+20>>2]|0;\n      $401 = HEAP32[$$0115$i>>2]|0;\n      $402 = (($401) + -1)|0;\n      $403 = ($402|0)==(0);\n      if (!($403)) {\n       $404 = ((($$0115$i)) + 12|0);\n       _qsort($404,$402,24,49);\n      }\n     }\n    }\n   } while(0);\n   do {\n    if ((label|0) == 110) {\n     $393 = ($$pre$i138$i|0)==(0);\n     if ($393) {\n      $$087$lcssa$i$i = 0;$$090$lcssa129$i$i = 0;\n      label = 119;\n     } else {\n      $$089115$i$i = 0;\n      while(1) {\n       $406 = (((((($$0115$i)) + 12|0) + (($$089115$i$i*24)|0)|0)) + 20|0);\n       $407 = HEAP8[$406>>0]|0;\n       $408 = ($407<<24>>24)==(0);\n       if (!($408)) {\n        label = 115;\n        break;\n       }\n       $409 = (($$089115$i$i) + 1)|0;\n       $410 = ($409>>>0)<($$pre$i138$i>>>0);\n       if ($410) {\n        $$089115$i$i = $409;\n       } else {\n        $$090$lcssa$i194$i = $409;\n        break;\n       }\n      }\n      if ((label|0) == 115) {\n       $405 = ($$089115$i$i|0)==(0);\n       if ($405) {\n        $$087$lcssa$i$i = 0;$$090$lcssa129$i$i = 0;\n        label = 119;\n        break;\n       } else {\n        $$090$lcssa$i194$i = $$089115$i$i;\n       }\n      }\n      $$0113$i$i = 0;$$087112$i$i = 0;\n      while(1) {\n       $419 = (((($$0115$i)) + 12|0) + (($$0113$i$i*24)|0)|0);\n       $420 = +HEAPF32[$419>>2];\n       $421 = $420 < 0.99609375;\n       if ($421) {\n        $422 = ($$0113$i$i|0)==($$087112$i$i|0);\n        if ($422) {\n         $$1$i$i = $$0113$i$i;\n        } else {\n         $423 = (((($$0115$i)) + 12|0) + (($$087112$i$i*24)|0)|0);\n         ;HEAP32[$5>>2]=HEAP32[$423>>2]|0;HEAP32[$5+4>>2]=HEAP32[$423+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$423+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$423+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$423+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$423+20>>2]|0;\n         ;HEAP32[$423>>2]=HEAP32[$419>>2]|0;HEAP32[$423+4>>2]=HEAP32[$419+4>>2]|0;HEAP32[$423+8>>2]=HEAP32[$419+8>>2]|0;HEAP32[$423+12>>2]=HEAP32[$419+12>>2]|0;HEAP32[$423+16>>2]=HEAP32[$419+16>>2]|0;HEAP32[$423+20>>2]=HEAP32[$419+20>>2]|0;\n         ;HEAP32[$419>>2]=HEAP32[$5>>2]|0;HEAP32[$419+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$419+8>>2]=HEAP32[$5+8>>2]|0;HEAP32[$419+12>>2]=HEAP32[$5+12>>2]|0;HEAP32[$419+16>>2]=HEAP32[$5+16>>2]|0;HEAP32[$419+20>>2]=HEAP32[$5+20>>2]|0;\n         $424 = (($$0113$i$i) + -1)|0;\n         $$1$i$i = $424;\n        }\n        $425 = (($$087112$i$i) + 1)|0;\n        $$188$i$i = $425;$$2$i142$i = $$1$i$i;\n       } else {\n        $$188$i$i = $$087112$i$i;$$2$i142$i = $$0113$i$i;\n       }\n       $426 = (($$2$i142$i) + 1)|0;\n       $427 = ($426>>>0)<($$090$lcssa$i194$i>>>0);\n       if ($427) {\n        $$0113$i$i = $426;$$087112$i$i = $$188$i$i;\n       } else {\n        $$087$lcssa$i$i = $$188$i$i;$$090$lcssa129$i$i = $$090$lcssa$i194$i;\n        label = 119;\n        break;\n       }\n      }\n     }\n    }\n   } while(0);\n   if ((label|0) == 119) {\n    $411 = ($$087$lcssa$i$i|0)==(1);\n    $412 = $411 ? 18689 : 18691;\n    HEAP32[$vararg_buffer10>>2] = $$087$lcssa$i$i;\n    $vararg_ptr13 = ((($vararg_buffer10)) + 4|0);\n    HEAP32[$vararg_ptr13>>2] = $412;\n    _liq_verbose_printf($1,18695,$vararg_buffer10);\n    $413 = ($$087$lcssa$i$i|0)==(0);\n    if (!($413)) {\n     $414 = ((($$0115$i)) + 12|0);\n     _qsort($414,$$087$lcssa$i$i,24,49);\n    }\n    $415 = (($$090$lcssa129$i$i) - ($$087$lcssa$i$i))|0;\n    $416 = ($415|0)==(0);\n    if (!($416)) {\n     $417 = (((($$0115$i)) + 12|0) + (($$087$lcssa$i$i*24)|0)|0);\n     _qsort($417,$415,24,49);\n    }\n    $418 = ($$090$lcssa129$i$i>>>0)>(9);\n    if ($418) {\n     $428 = HEAP32[$$0115$i>>2]|0;\n     $429 = ($428>>>0)>(16);\n     if ($429) {\n      $430 = ((($$0115$i)) + 180|0);\n      ;HEAP32[$6>>2]=HEAP32[$430>>2]|0;HEAP32[$6+4>>2]=HEAP32[$430+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$430+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$430+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$430+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$430+20>>2]|0;\n      $431 = ((($$0115$i)) + 36|0);\n      ;HEAP32[$430>>2]=HEAP32[$431>>2]|0;HEAP32[$430+4>>2]=HEAP32[$431+4>>2]|0;HEAP32[$430+8>>2]=HEAP32[$431+8>>2]|0;HEAP32[$430+12>>2]=HEAP32[$431+12>>2]|0;HEAP32[$430+16>>2]=HEAP32[$431+16>>2]|0;HEAP32[$430+20>>2]=HEAP32[$431+20>>2]|0;\n      ;HEAP32[$431>>2]=HEAP32[$6>>2]|0;HEAP32[$431+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$431+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$431+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$431+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$431+20>>2]=HEAP32[$6+20>>2]|0;\n      $432 = ((($$0115$i)) + 204|0);\n      ;HEAP32[$7>>2]=HEAP32[$432>>2]|0;HEAP32[$7+4>>2]=HEAP32[$432+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$432+8>>2]|0;HEAP32[$7+12>>2]=HEAP32[$432+12>>2]|0;HEAP32[$7+16>>2]=HEAP32[$432+16>>2]|0;HEAP32[$7+20>>2]=HEAP32[$432+20>>2]|0;\n      $433 = ((($$0115$i)) + 60|0);\n      ;HEAP32[$432>>2]=HEAP32[$433>>2]|0;HEAP32[$432+4>>2]=HEAP32[$433+4>>2]|0;HEAP32[$432+8>>2]=HEAP32[$433+8>>2]|0;HEAP32[$432+12>>2]=HEAP32[$433+12>>2]|0;HEAP32[$432+16>>2]=HEAP32[$433+16>>2]|0;HEAP32[$432+20>>2]=HEAP32[$433+20>>2]|0;\n      ;HEAP32[$433>>2]=HEAP32[$7>>2]|0;HEAP32[$433+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$433+8>>2]=HEAP32[$7+8>>2]|0;HEAP32[$433+12>>2]=HEAP32[$7+12>>2]|0;HEAP32[$433+16>>2]=HEAP32[$7+16>>2]|0;HEAP32[$433+20>>2]=HEAP32[$7+20>>2]|0;\n      $434 = ((($$0115$i)) + 228|0);\n      ;HEAP32[$8>>2]=HEAP32[$434>>2]|0;HEAP32[$8+4>>2]=HEAP32[$434+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$434+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$434+12>>2]|0;HEAP32[$8+16>>2]=HEAP32[$434+16>>2]|0;HEAP32[$8+20>>2]=HEAP32[$434+20>>2]|0;\n      $435 = ((($$0115$i)) + 84|0);\n      ;HEAP32[$434>>2]=HEAP32[$435>>2]|0;HEAP32[$434+4>>2]=HEAP32[$435+4>>2]|0;HEAP32[$434+8>>2]=HEAP32[$435+8>>2]|0;HEAP32[$434+12>>2]=HEAP32[$435+12>>2]|0;HEAP32[$434+16>>2]=HEAP32[$435+16>>2]|0;HEAP32[$434+20>>2]=HEAP32[$435+20>>2]|0;\n      ;HEAP32[$435>>2]=HEAP32[$8>>2]|0;HEAP32[$435+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$435+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$435+12>>2]=HEAP32[$8+12>>2]|0;HEAP32[$435+16>>2]=HEAP32[$8+16>>2]|0;HEAP32[$435+20>>2]=HEAP32[$8+20>>2]|0;\n     }\n    }\n   }\n   if ($2) {\n    $436 = HEAP32[$$0115$i>>2]|0;\n    $437 = ($436|0)==(0);\n    if (!($437)) {\n     $$0123175$i = 0;\n     while(1) {\n      $438 = (((((($$0115$i)) + 12|0) + (($$0123175$i*24)|0)|0)) + 20|0);\n      HEAP8[$438>>0] = 1;\n      $439 = (($$0123175$i) + 1)|0;\n      $440 = HEAP32[$$0115$i>>2]|0;\n      $441 = ($439>>>0)<($440>>>0);\n      if ($441) {\n       $$0123175$i = $439;\n      } else {\n       break;\n      }\n     }\n    }\n   }\n   $442 = HEAP32[$32>>2]|0;\n   $443 = (FUNCTION_TABLE_ii[$442 & 63](1088)|0);\n   $444 = ($443|0)==(0|0);\n   if ($444) {\n    $$3$i = 101;\n   } else {\n    $445 = HEAP32[$32>>2]|0;\n    $446 = HEAP32[$34>>2]|0;\n    $447 = ((($1)) + 52|0);\n    $448 = HEAP32[$447>>2]|0;\n    $449 = ((($1)) + 70|0);\n    $450 = HEAP8[$449>>0]|0;\n    HEAP32[$443>>2] = 18242;\n    $$sroa$3$0$$sroa_idx4$i = ((($443)) + 4|0);\n    HEAP32[$$sroa$3$0$$sroa_idx4$i>>2] = $445;\n    $$sroa$4$0$$sroa_idx5$i = ((($443)) + 8|0);\n    HEAP32[$$sroa$4$0$$sroa_idx5$i>>2] = $446;\n    $$sroa$5$0$$sroa_idx6$i = ((($443)) + 12|0);\n    HEAP32[$$sroa$5$0$$sroa_idx6$i>>2] = 0;\n    $$sroa$57$0$$sroa_idx8$i = ((($443)) + 16|0);\n    HEAP32[$$sroa$57$0$$sroa_idx8$i>>2] = $$0115$i;\n    $$sroa$6$0$$sroa_idx$i = ((($443)) + 20|0);\n    _memset(($$sroa$6$0$$sroa_idx$i|0),0,1044)|0;\n    $$sroa$610$0$$sroa_idx11$i = ((($443)) + 1064|0);\n    HEAPF64[$$sroa$610$0$$sroa_idx11$i>>3] = $94;\n    $$sroa$7$0$$sroa_idx12$i = ((($443)) + 1072|0);\n    HEAPF64[$$sroa$7$0$$sroa_idx12$i>>3] = $$4$i;\n    $$sroa$8$0$$sroa_idx13$i = ((($443)) + 1080|0);\n    HEAP32[$$sroa$8$0$$sroa_idx13$i>>2] = $448;\n    $451 = ((($443)) + 1084|0);\n    HEAP8[$451>>0] = $450;\n    $$sroa$10$0$$sroa_raw_idx$i = ((($443)) + 1085|0);\n    ;HEAP8[$$sroa$10$0$$sroa_raw_idx$i>>0]=0|0;HEAP8[$$sroa$10$0$$sroa_raw_idx$i+1>>0]=0|0;HEAP8[$$sroa$10$0$$sroa_raw_idx$i+2>>0]=0|0;\n    HEAP32[$3>>2] = $443;\n    $$3$i = 0;\n   }\n  }\n } while(0);\n _pam_freeacolorhist($36);\n $$1 = $$3$i;\n STACKTOP = sp;return ($$1|0);\n}\nfunction _adjust_histogram_callback($0,$1) {\n $0 = $0|0;\n $1 = +$1;\n var $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 20|0);\n $3 = +HEAPF32[$2>>2];\n $4 = ((($0)) + 16|0);\n $5 = +HEAPF32[$4>>2];\n $6 = $3 + $5;\n $7 = $1 + 1.0;\n $8 = (+Math_sqrt((+$7)));\n $9 = $6 * $8;\n HEAPF32[$4>>2] = $9;\n return;\n}\nfunction _compare_popularity($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 16|0);\n $3 = +HEAPF32[$2>>2];\n $4 = ((($1)) + 16|0);\n $5 = +HEAPF32[$4>>2];\n $6 = $3 > $5;\n $7 = $6 ? -1 : 1;\n return ($7|0);\n}\nfunction _contrast_maps($0) {\n $0 = $0|0;\n var $$ = 0.0, $$0297317 = 0, $$0297317$phi = 0, $$0298316 = 0, $$0299315 = 0, $$0300304 = 0, $$0303 = 0, $$301 = 0.0, $$302 = 0, $$pre = 0, $$pre$phi325Z2D = 0, $$pre$phiZ2D = 0, $$pre324 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$copyload = 0.0, $$sroa$0123$0$$sroa_idx126 = 0, $$sroa$0123$0$copyload127 = 0.0, $$sroa$0123$0305 = 0.0, $$sroa$0148$0$copyload = 0.0, $$sroa$0148$0309 = 0.0;\n var $$sroa$0148$0309$phi = 0.0, $$sroa$078$0$$sroa_idx = 0, $$sroa$078$0$copyload = 0.0, $$sroa$12$0$$sroa_idx159 = 0, $$sroa$12$0$copyload = 0.0, $$sroa$12$0311 = 0.0, $$sroa$12$0311$phi = 0.0, $$sroa$16$0$$sroa_idx164 = 0, $$sroa$16$0$copyload = 0.0, $$sroa$16$0312 = 0.0, $$sroa$16$0312$phi = 0.0, $$sroa$4$0$$sroa_idx72 = 0, $$sroa$4$0$copyload = 0.0, $$sroa$480$0$$sroa_idx81 = 0, $$sroa$480$0$copyload = 0.0, $$sroa$5$0$$sroa_idx74 = 0, $$sroa$5$0$copyload = 0.0, $$sroa$583$0$$sroa_idx84 = 0, $$sroa$583$0$copyload = 0.0, $$sroa$6$0$$sroa_idx76 = 0;\n var $$sroa$6$0$copyload = 0.0, $$sroa$6129$0$$sroa_idx133 = 0, $$sroa$6129$0$copyload134 = 0.0, $$sroa$6129$0306 = 0.0, $$sroa$686$0$$sroa_idx87 = 0, $$sroa$686$0$copyload = 0.0, $$sroa$7$0$$sroa_idx139 = 0, $$sroa$7$0$copyload140 = 0.0, $$sroa$7$0307 = 0.0, $$sroa$8$0$$sroa_idx145 = 0, $$sroa$8$0$copyload146 = 0.0, $$sroa$8$0308 = 0.0, $$sroa$8153$0$$sroa_idx154 = 0, $$sroa$8153$0$copyload = 0.0, $$sroa$8153$0310 = 0.0, $$sroa$8153$0310$phi = 0.0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0;\n var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;\n var $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0;\n var $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0.0;\n var $84 = 0, $85 = 0.0, $86 = 0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond321 = 0, $exitcond322 = 0;\n var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 32|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 36|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($2>>>0)<(4);\n $6 = ($4>>>0)<(4);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  return;\n }\n $7 = ($2*3)|0;\n $8 = Math_imul($7, $4)|0;\n $9 = ($8>>>0)>(67108864);\n if ($9) {\n  return;\n }\n $10 = ((($0)) + 40|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)==(0|0);\n if ($12) {\n  $13 = Math_imul($4, $2)|0;\n  $14 = ((($0)) + 4|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = (FUNCTION_TABLE_ii[$15 & 63]($13)|0);\n  $26 = $16;\n } else {\n  $26 = $11;\n }\n HEAP32[$10>>2] = 0;\n $17 = ((($0)) + 44|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0|0);\n if ($19) {\n  $20 = Math_imul($4, $2)|0;\n  $21 = ((($0)) + 4|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = (FUNCTION_TABLE_ii[$22 & 63]($20)|0);\n  $$pre$phi325Z2D = $20;$$pre$phiZ2D = $21;$28 = $23;\n } else {\n  $$pre = ((($0)) + 4|0);\n  $$pre324 = Math_imul($4, $2)|0;\n  $$pre$phi325Z2D = $$pre324;$$pre$phiZ2D = $$pre;$28 = $18;\n }\n HEAP32[$17>>2] = 0;\n $24 = HEAP32[$$pre$phiZ2D>>2]|0;\n $25 = (FUNCTION_TABLE_ii[$24 & 63]($$pre$phi325Z2D)|0);\n $27 = ($26|0)!=(0|0);\n $29 = ($28|0)!=(0|0);\n $or$cond3 = $27 & $29;\n $30 = ($25|0)!=(0|0);\n $or$cond5 = $or$cond3 & $30;\n if (!($or$cond5)) {\n  $31 = ((($0)) + 8|0);\n  $32 = HEAP32[$31>>2]|0;\n  FUNCTION_TABLE_vi[$32 & 127]($26);\n  $33 = HEAP32[$31>>2]|0;\n  FUNCTION_TABLE_vi[$33 & 127]($28);\n  $34 = HEAP32[$31>>2]|0;\n  FUNCTION_TABLE_vi[$34 & 127]($25);\n  return;\n }\n $35 = (_liq_image_get_row_f($0,0)|0);\n $36 = ($4|0)==(0);\n if (!($36)) {\n  $37 = (($4) + -1)|0;\n  $38 = ($2|0)==(0);\n  $39 = (($2) + -1)|0;\n  $$0297317 = $35;$$0298316 = $35;$$0299315 = 0;\n  while(1) {\n   $40 = (($$0299315) + 1)|0;\n   $42 = ($37>>>0)<($40>>>0);\n   $43 = $42 ? $37 : $40;\n   $44 = (_liq_image_get_row_f($0,$43)|0);\n   $$sroa$0148$0$copyload = +HEAPF32[$$0298316>>2];\n   $$sroa$8153$0$$sroa_idx154 = ((($$0298316)) + 4|0);\n   $$sroa$8153$0$copyload = +HEAPF32[$$sroa$8153$0$$sroa_idx154>>2];\n   $$sroa$12$0$$sroa_idx159 = ((($$0298316)) + 8|0);\n   $$sroa$12$0$copyload = +HEAPF32[$$sroa$12$0$$sroa_idx159>>2];\n   $$sroa$16$0$$sroa_idx164 = ((($$0298316)) + 12|0);\n   $$sroa$16$0$copyload = +HEAPF32[$$sroa$16$0$$sroa_idx164>>2];\n   if (!($38)) {\n    $45 = Math_imul($$0299315, $2)|0;\n    $$0300304 = 0;$$sroa$0123$0305 = $$sroa$0148$0$copyload;$$sroa$0148$0309 = $$sroa$0148$0$copyload;$$sroa$12$0311 = $$sroa$12$0$copyload;$$sroa$16$0312 = $$sroa$16$0$copyload;$$sroa$6129$0306 = $$sroa$8153$0$copyload;$$sroa$7$0307 = $$sroa$12$0$copyload;$$sroa$8$0308 = $$sroa$16$0$copyload;$$sroa$8153$0310 = $$sroa$8153$0$copyload;\n    while(1) {\n     $46 = (($$0300304) + 1)|0;\n     $47 = ($39>>>0)<($46>>>0);\n     $48 = $47 ? $39 : $46;\n     $$sroa$0123$0$$sroa_idx126 = (($$0298316) + ($48<<4)|0);\n     $$sroa$0123$0$copyload127 = +HEAPF32[$$sroa$0123$0$$sroa_idx126>>2];\n     $$sroa$6129$0$$sroa_idx133 = (((($$0298316) + ($48<<4)|0)) + 4|0);\n     $$sroa$6129$0$copyload134 = +HEAPF32[$$sroa$6129$0$$sroa_idx133>>2];\n     $$sroa$7$0$$sroa_idx139 = (((($$0298316) + ($48<<4)|0)) + 8|0);\n     $$sroa$7$0$copyload140 = +HEAPF32[$$sroa$7$0$$sroa_idx139>>2];\n     $$sroa$8$0$$sroa_idx145 = (((($$0298316) + ($48<<4)|0)) + 12|0);\n     $$sroa$8$0$copyload146 = +HEAPF32[$$sroa$8$0$$sroa_idx145>>2];\n     $49 = $$sroa$0148$0309 + $$sroa$0123$0$copyload127;\n     $50 = $$sroa$0123$0305 * 2.0;\n     $51 = $49 - $50;\n     $52 = (+Math_abs((+$51)));\n     $53 = $$sroa$8153$0310 + $$sroa$6129$0$copyload134;\n     $54 = $$sroa$6129$0306 * 2.0;\n     $55 = $53 - $54;\n     $56 = (+Math_abs((+$55)));\n     $57 = $$sroa$12$0311 + $$sroa$7$0$copyload140;\n     $58 = $$sroa$7$0307 * 2.0;\n     $59 = $57 - $58;\n     $60 = (+Math_abs((+$59)));\n     $61 = $$sroa$16$0312 + $$sroa$8$0$copyload146;\n     $62 = $$sroa$8$0308 * 2.0;\n     $63 = $61 - $62;\n     $64 = (+Math_abs((+$63)));\n     $$sroa$078$0$$sroa_idx = (($$0297317) + ($$0300304<<4)|0);\n     $$sroa$078$0$copyload = +HEAPF32[$$sroa$078$0$$sroa_idx>>2];\n     $$sroa$480$0$$sroa_idx81 = (((($$0297317) + ($$0300304<<4)|0)) + 4|0);\n     $$sroa$480$0$copyload = +HEAPF32[$$sroa$480$0$$sroa_idx81>>2];\n     $$sroa$583$0$$sroa_idx84 = (((($$0297317) + ($$0300304<<4)|0)) + 8|0);\n     $$sroa$583$0$copyload = +HEAPF32[$$sroa$583$0$$sroa_idx84>>2];\n     $$sroa$686$0$$sroa_idx87 = (((($$0297317) + ($$0300304<<4)|0)) + 12|0);\n     $$sroa$686$0$copyload = +HEAPF32[$$sroa$686$0$$sroa_idx87>>2];\n     $$sroa$0$0$$sroa_idx = (($44) + ($$0300304<<4)|0);\n     $$sroa$0$0$copyload = +HEAPF32[$$sroa$0$0$$sroa_idx>>2];\n     $$sroa$4$0$$sroa_idx72 = (((($44) + ($$0300304<<4)|0)) + 4|0);\n     $$sroa$4$0$copyload = +HEAPF32[$$sroa$4$0$$sroa_idx72>>2];\n     $$sroa$5$0$$sroa_idx74 = (((($44) + ($$0300304<<4)|0)) + 8|0);\n     $$sroa$5$0$copyload = +HEAPF32[$$sroa$5$0$$sroa_idx74>>2];\n     $$sroa$6$0$$sroa_idx76 = (((($44) + ($$0300304<<4)|0)) + 12|0);\n     $$sroa$6$0$copyload = +HEAPF32[$$sroa$6$0$$sroa_idx76>>2];\n     $65 = $$sroa$078$0$copyload + $$sroa$0$0$copyload;\n     $66 = $65 - $50;\n     $67 = (+Math_abs((+$66)));\n     $68 = $$sroa$480$0$copyload + $$sroa$4$0$copyload;\n     $69 = $68 - $54;\n     $70 = (+Math_abs((+$69)));\n     $71 = $$sroa$583$0$copyload + $$sroa$5$0$copyload;\n     $72 = $71 - $58;\n     $73 = (+Math_abs((+$72)));\n     $74 = $$sroa$686$0$copyload + $$sroa$6$0$copyload;\n     $75 = $74 - $62;\n     $76 = (+Math_abs((+$75)));\n     $77 = $52 > $56;\n     $78 = $77 ? $52 : $56;\n     $79 = $60 > $64;\n     $80 = $79 ? $60 : $64;\n     $81 = $78 > $80;\n     $$ = $81 ? $78 : $80;\n     $82 = $67 > $70;\n     $83 = $82 ? $67 : $70;\n     $84 = $73 > $76;\n     $85 = $84 ? $73 : $76;\n     $86 = $83 > $85;\n     $87 = $86 ? $83 : $85;\n     $88 = $$ > $87;\n     $89 = $88 ? $$ : $87;\n     $90 = $$ - $87;\n     $91 = (+Math_abs((+$90)));\n     $92 = $91 * 0.5;\n     $93 = $89 - $92;\n     $94 = $$ < $87;\n     $95 = $94 ? $$ : $87;\n     $96 = $93 > $95;\n     $$301 = $96 ? $93 : $95;\n     $97 = 1.0 - $$301;\n     $98 = $97 * $97;\n     $99 = $98 * $98;\n     $100 = $99 * 256.0;\n     $101 = $100 < 256.0;\n     $102 = (~~(($100))&255);\n     $103 = $101 ? $102 : -1;\n     $104 = (($$0300304) + ($45))|0;\n     $105 = (($26) + ($104)|0);\n     HEAP8[$105>>0] = $103;\n     $106 = 1.0 - $89;\n     $107 = $106 * 256.0;\n     $108 = $107 > 0.0;\n     $109 = $107 < 256.0;\n     $110 = (~~(($107))&255);\n     $111 = $109 ? $110 : -1;\n     $112 = $108 ? $111 : 0;\n     $113 = (($28) + ($104)|0);\n     HEAP8[$113>>0] = $112;\n     $exitcond321 = ($46|0)==($2|0);\n     if ($exitcond321) {\n      break;\n     } else {\n      $$sroa$8153$0310$phi = $$sroa$6129$0306;$$sroa$16$0312$phi = $$sroa$8$0308;$$sroa$12$0311$phi = $$sroa$7$0307;$$sroa$0148$0309$phi = $$sroa$0123$0305;$$0300304 = $46;$$sroa$0123$0305 = $$sroa$0123$0$copyload127;$$sroa$6129$0306 = $$sroa$6129$0$copyload134;$$sroa$7$0307 = $$sroa$7$0$copyload140;$$sroa$8$0308 = $$sroa$8$0$copyload146;$$sroa$8153$0310 = $$sroa$8153$0310$phi;$$sroa$16$0312 = $$sroa$16$0312$phi;$$sroa$12$0311 = $$sroa$12$0311$phi;$$sroa$0148$0309 = $$sroa$0148$0309$phi;\n     }\n    }\n   }\n   $exitcond322 = ($40|0)==($4|0);\n   if ($exitcond322) {\n    break;\n   } else {\n    $$0297317$phi = $$0298316;$$0298316 = $44;$$0299315 = $40;$$0297317 = $$0297317$phi;\n   }\n  }\n }\n _liq_max3($26,$25,$2,$4);\n _liq_max3($25,$26,$2,$4);\n _liq_blur($26,$25,$26,$2,$4,3);\n _liq_max3($26,$25,$2,$4);\n _liq_min3($25,$26,$2,$4);\n _liq_min3($26,$25,$2,$4);\n _liq_min3($25,$26,$2,$4);\n _liq_min3($28,$25,$2,$4);\n _liq_max3($25,$28,$2,$4);\n $41 = ($$pre$phi325Z2D|0)==(0);\n if (!($41)) {\n  $$0303 = 0;\n  while(1) {\n   $116 = (($26) + ($$0303)|0);\n   $117 = HEAP8[$116>>0]|0;\n   $118 = (($28) + ($$0303)|0);\n   $119 = HEAP8[$118>>0]|0;\n   $120 = ($117&255)<($119&255);\n   $$302 = $120 ? $117 : $119;\n   HEAP8[$118>>0] = $$302;\n   $121 = (($$0303) + 1)|0;\n   $exitcond = ($121|0)==($$pre$phi325Z2D|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$0303 = $121;\n   }\n  }\n }\n $114 = ((($0)) + 8|0);\n $115 = HEAP32[$114>>2]|0;\n FUNCTION_TABLE_vi[$115 & 127]($25);\n HEAP32[$10>>2] = $26;\n HEAP32[$17>>2] = $28;\n return;\n}\nfunction _liq_image_get_row_rgba($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$033$i = 0, $$pre$phiZ2D = 0, $$pre20 = 0, $$sroa$3$0$$sroa_idx$i = 0, $$sroa$3$0$copyload$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0.0;\n var $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 16|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n do {\n  if ($4) {\n   $17 = ((($0)) + 56|0);\n   $18 = HEAP32[$17>>2]|0;\n   $19 = ((($0)) + 32|0);\n   $20 = HEAP32[$19>>2]|0;\n   $$pre20 = ((($0)) + 72|0);\n   $21 = ((($0)) + 64|0);\n   $22 = HEAP32[$21>>2]|0;\n   $23 = ((($0)) + 68|0);\n   $24 = HEAP32[$23>>2]|0;\n   _liq_executing_user_callback($22,$18,$1,$20,$24);\n   $$pre$phiZ2D = $$pre20;$32 = $19;$36 = $18;\n  } else {\n   $5 = ((($0)) + 72|0);\n   $6 = +HEAPF32[$5>>2];\n   $7 = !($6 < 1.0);\n   if (!($7)) {\n    $10 = ((($0)) + 56|0);\n    $11 = HEAP32[$10>>2]|0;\n    $12 = ((($0)) + 32|0);\n    $13 = HEAP32[$12>>2]|0;\n    $14 = (($3) + ($1<<2)|0);\n    $15 = HEAP32[$14>>2]|0;\n    $16 = $13 << 2;\n    _memcpy(($11|0),($15|0),($16|0))|0;\n    $$pre$phiZ2D = $5;$32 = $12;$36 = $11;\n    break;\n   }\n   $8 = (($3) + ($1<<2)|0);\n   $9 = HEAP32[$8>>2]|0;\n   $$0 = $9;\n   return ($$0|0);\n  }\n } while(0);\n $25 = +HEAPF32[$$pre$phiZ2D>>2];\n $26 = $25 < 1.0;\n if (!($26)) {\n  $$0 = $36;\n  return ($$0|0);\n }\n $27 = $25 * 169.0;\n $28 = $27 * 0.00390625;\n $29 = $28 * 255.0;\n $30 = (~~(($29))>>>0);\n $31 = HEAP32[$32>>2]|0;\n $33 = ($31|0)==(0);\n if ($33) {\n  $$0 = $36;\n  return ($$0|0);\n }\n $34 = 1.0 - $28;\n $35 = $25 - $28;\n $$033$i = 0;\n while(1) {\n  $$sroa$3$0$$sroa_idx$i = (((($36) + ($$033$i<<2)|0)) + 3|0);\n  $$sroa$3$0$copyload$i = HEAP8[$$sroa$3$0$$sroa_idx$i>>0]|0;\n  $37 = $$sroa$3$0$copyload$i&255;\n  $38 = ($37>>>0)<($30>>>0);\n  if (!($38)) {\n   $39 = (+($$sroa$3$0$copyload$i&255));\n   $40 = $39 / 255.0;\n   $41 = $40 - $28;\n   $42 = $34 * $41;\n   $43 = $42 / $35;\n   $44 = $28 + $43;\n   $45 = $44 * 256.0;\n   $46 = $45 >= 255.0;\n   $47 = $46 ? 255.0 : $45;\n   $48 = (~~(($47))&255);\n   HEAP8[$$sroa$3$0$$sroa_idx$i>>0] = $48;\n  }\n  $49 = (($$033$i) + 1)|0;\n  $exitcond = ($49|0)==($31|0);\n  if ($exitcond) {\n   $$0 = $36;\n   break;\n  } else {\n   $$033$i = $49;\n  }\n }\n return ($$0|0);\n}\nfunction _liq_image_get_row_f($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$017$i = 0, $$017$i35 = 0, $$033 = 0, $$050 = 0, $$idx = 0, $$idx$val = 0, $$idx34 = 0, $$idx34$val = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre51 = 0, $$pre53 = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$$sroa_idx$i44 = 0, $$sroa$015$0$$sroa_idx$i = 0, $$sroa$015$0$$sroa_idx$i36 = 0, $$sroa$015$0$copyload$i = 0, $$sroa$015$0$copyload$i37 = 0, $$sroa$2$0$$sroa_idx12$i = 0, $$sroa$2$0$$sroa_idx12$i45 = 0;\n var $$sroa$3$0$$sroa_idx13$i = 0, $$sroa$3$0$$sroa_idx13$i46 = 0, $$sroa$4$0$$sroa_idx14$i = 0, $$sroa$4$0$$sroa_idx14$i47 = 0, $$sroa$416$0$$sroa_idx$i = 0, $$sroa$416$0$$sroa_idx$i38 = 0, $$sroa$416$0$copyload$i = 0, $$sroa$416$0$copyload$i39 = 0, $$sroa$5$0$$sroa_idx$i = 0, $$sroa$5$0$$sroa_idx$i40 = 0, $$sroa$5$0$copyload$i = 0, $$sroa$5$0$copyload$i41 = 0, $$sroa$6$0$$sroa_idx$i = 0, $$sroa$6$0$$sroa_idx$i42 = 0, $$sroa$6$0$copyload$i = 0, $$sroa$6$0$copyload$i43 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $phitmp = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 2048|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2048|0);\n $2 = sp + 1024|0;\n $3 = sp;\n $4 = ((($0)) + 12|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n do {\n  if ($6) {\n   $7 = ((($0)) + 60|0);\n   $8 = HEAP32[$7>>2]|0;\n   $9 = ($8|0)==(0|0);\n   if (!($9)) {\n    $10 = ((($0)) + 24|0);\n    $11 = +HEAPF64[$10>>3];\n    _to_f_set_gamma($2,$11);\n    $12 = HEAP32[$7>>2]|0;\n    $13 = (_liq_image_get_row_rgba($0,$1)|0);\n    $14 = ((($0)) + 32|0);\n    $15 = HEAP32[$14>>2]|0;\n    $16 = ($15|0)==(0);\n    if (!($16)) {\n     $$017$i = 0;\n     while(1) {\n      $$sroa$015$0$$sroa_idx$i = (($13) + ($$017$i<<2)|0);\n      $$sroa$015$0$copyload$i = HEAP8[$$sroa$015$0$$sroa_idx$i>>0]|0;\n      $$sroa$416$0$$sroa_idx$i = (((($13) + ($$017$i<<2)|0)) + 1|0);\n      $$sroa$416$0$copyload$i = HEAP8[$$sroa$416$0$$sroa_idx$i>>0]|0;\n      $$sroa$5$0$$sroa_idx$i = (((($13) + ($$017$i<<2)|0)) + 2|0);\n      $$sroa$5$0$copyload$i = HEAP8[$$sroa$5$0$$sroa_idx$i>>0]|0;\n      $$sroa$6$0$$sroa_idx$i = (((($13) + ($$017$i<<2)|0)) + 3|0);\n      $$sroa$6$0$copyload$i = HEAP8[$$sroa$6$0$$sroa_idx$i>>0]|0;\n      $17 = (+($$sroa$6$0$copyload$i&255));\n      $18 = $17 / 255.0;\n      $19 = $$sroa$015$0$copyload$i&255;\n      $20 = (($2) + ($19<<2)|0);\n      $21 = +HEAPF32[$20>>2];\n      $22 = $21 * $18;\n      $23 = $$sroa$416$0$copyload$i&255;\n      $24 = (($2) + ($23<<2)|0);\n      $25 = +HEAPF32[$24>>2];\n      $26 = $18 * $25;\n      $27 = $$sroa$5$0$copyload$i&255;\n      $28 = (($2) + ($27<<2)|0);\n      $29 = +HEAPF32[$28>>2];\n      $30 = $18 * $29;\n      $$sroa$0$0$$sroa_idx$i = (($12) + ($$017$i<<4)|0);\n      HEAPF32[$$sroa$0$0$$sroa_idx$i>>2] = $18;\n      $$sroa$2$0$$sroa_idx12$i = (((($12) + ($$017$i<<4)|0)) + 4|0);\n      HEAPF32[$$sroa$2$0$$sroa_idx12$i>>2] = $22;\n      $$sroa$3$0$$sroa_idx13$i = (((($12) + ($$017$i<<4)|0)) + 8|0);\n      HEAPF32[$$sroa$3$0$$sroa_idx13$i>>2] = $26;\n      $$sroa$4$0$$sroa_idx14$i = (((($12) + ($$017$i<<4)|0)) + 12|0);\n      HEAPF32[$$sroa$4$0$$sroa_idx14$i>>2] = $30;\n      $31 = (($$017$i) + 1)|0;\n      $32 = HEAP32[$14>>2]|0;\n      $33 = ($31>>>0)<($32>>>0);\n      if ($33) {\n       $$017$i = $31;\n      } else {\n       break;\n      }\n     }\n    }\n    $$033 = $12;\n    STACKTOP = sp;return ($$033|0);\n   }\n   $$idx = ((($0)) + 32|0);\n   $$idx$val = HEAP32[$$idx>>2]|0;\n   $$idx34 = ((($0)) + 36|0);\n   $$idx34$val = HEAP32[$$idx34>>2]|0;\n   $34 = Math_imul($$idx34$val, $$idx$val)|0;\n   $35 = ($34>>>0)>(4194304);\n   if (!($35)) {\n    $36 = ((($0)) + 4|0);\n    $37 = HEAP32[$36>>2]|0;\n    $38 = $$idx$val << 4;\n    $39 = Math_imul($38, $$idx34$val)|0;\n    $40 = (FUNCTION_TABLE_ii[$37 & 63]($39)|0);\n    HEAP32[$4>>2] = $40;\n    $phitmp = ($40|0)==(0|0);\n    if (!($phitmp)) {\n     $48 = ((($0)) + 24|0);\n     $49 = +HEAPF64[$48>>3];\n     _to_f_set_gamma($3,$49);\n     $50 = HEAP32[$$idx34>>2]|0;\n     $51 = ($50|0)==(0);\n     if (!($51)) {\n      $$pre = HEAP32[$$idx>>2]|0;\n      $$050 = 0;$53 = $$pre;\n      while(1) {\n       $52 = Math_imul($53, $$050)|0;\n       $54 = HEAP32[$4>>2]|0;\n       $55 = (($54) + ($52<<4)|0);\n       $56 = (_liq_image_get_row_rgba($0,$$050)|0);\n       $57 = HEAP32[$$idx>>2]|0;\n       $58 = ($57|0)==(0);\n       if ($58) {\n        $83 = 0;\n       } else {\n        $$017$i35 = 0;\n        while(1) {\n         $$sroa$015$0$$sroa_idx$i36 = (($56) + ($$017$i35<<2)|0);\n         $$sroa$015$0$copyload$i37 = HEAP8[$$sroa$015$0$$sroa_idx$i36>>0]|0;\n         $$sroa$416$0$$sroa_idx$i38 = (((($56) + ($$017$i35<<2)|0)) + 1|0);\n         $$sroa$416$0$copyload$i39 = HEAP8[$$sroa$416$0$$sroa_idx$i38>>0]|0;\n         $$sroa$5$0$$sroa_idx$i40 = (((($56) + ($$017$i35<<2)|0)) + 2|0);\n         $$sroa$5$0$copyload$i41 = HEAP8[$$sroa$5$0$$sroa_idx$i40>>0]|0;\n         $$sroa$6$0$$sroa_idx$i42 = (((($56) + ($$017$i35<<2)|0)) + 3|0);\n         $$sroa$6$0$copyload$i43 = HEAP8[$$sroa$6$0$$sroa_idx$i42>>0]|0;\n         $59 = (+($$sroa$6$0$copyload$i43&255));\n         $60 = $59 / 255.0;\n         $61 = $$sroa$015$0$copyload$i37&255;\n         $62 = (($3) + ($61<<2)|0);\n         $63 = +HEAPF32[$62>>2];\n         $64 = $63 * $60;\n         $65 = $$sroa$416$0$copyload$i39&255;\n         $66 = (($3) + ($65<<2)|0);\n         $67 = +HEAPF32[$66>>2];\n         $68 = $60 * $67;\n         $69 = $$sroa$5$0$copyload$i41&255;\n         $70 = (($3) + ($69<<2)|0);\n         $71 = +HEAPF32[$70>>2];\n         $72 = $60 * $71;\n         $$sroa$0$0$$sroa_idx$i44 = (($55) + ($$017$i35<<4)|0);\n         HEAPF32[$$sroa$0$0$$sroa_idx$i44>>2] = $60;\n         $$sroa$2$0$$sroa_idx12$i45 = (((($55) + ($$017$i35<<4)|0)) + 4|0);\n         HEAPF32[$$sroa$2$0$$sroa_idx12$i45>>2] = $64;\n         $$sroa$3$0$$sroa_idx13$i46 = (((($55) + ($$017$i35<<4)|0)) + 8|0);\n         HEAPF32[$$sroa$3$0$$sroa_idx13$i46>>2] = $68;\n         $$sroa$4$0$$sroa_idx14$i47 = (((($55) + ($$017$i35<<4)|0)) + 12|0);\n         HEAPF32[$$sroa$4$0$$sroa_idx14$i47>>2] = $72;\n         $73 = (($$017$i35) + 1)|0;\n         $74 = HEAP32[$$idx>>2]|0;\n         $75 = ($73>>>0)<($74>>>0);\n         if ($75) {\n          $$017$i35 = $73;\n         } else {\n          $83 = $74;\n          break;\n         }\n        }\n       }\n       $76 = (($$050) + 1)|0;\n       $77 = HEAP32[$$idx34>>2]|0;\n       $78 = ($76>>>0)<($77>>>0);\n       if ($78) {\n        $$050 = $76;$53 = $83;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre51 = HEAP32[$4>>2]|0;\n     $$pre$phiZ2D = $$idx;$82 = $$pre51;\n     break;\n    }\n   }\n   $41 = ((($0)) + 4|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = HEAP32[$$idx>>2]|0;\n   $44 = $43 << 4;\n   $45 = (FUNCTION_TABLE_ii[$42 & 63]($44)|0);\n   HEAP32[$7>>2] = $45;\n   $46 = ($45|0)==(0|0);\n   if ($46) {\n    $$033 = 0;\n    STACKTOP = sp;return ($$033|0);\n   }\n   $47 = (_liq_image_get_row_f($0,$1)|0);\n   $$033 = $47;\n   STACKTOP = sp;return ($$033|0);\n  } else {\n   $$pre53 = ((($0)) + 32|0);\n   $$pre$phiZ2D = $$pre53;$82 = $5;\n  }\n } while(0);\n $79 = HEAP32[$$pre$phiZ2D>>2]|0;\n $80 = Math_imul($79, $1)|0;\n $81 = (($82) + ($80<<4)|0);\n $$033 = $81;\n STACKTOP = sp;return ($$033|0);\n}\nfunction _liq_set_dithering_level($0,$1) {\n $0 = $0|0;\n $1 = +$1;\n var $$0 = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($2)) {\n  $$0 = 105;\n  return ($$0|0);\n }\n $3 = ((($0)) + 12|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if (!($5)) {\n  $6 = (_liq_crash_if_invalid_handle_pointer_given($4,18253)|0);\n  if ($6) {\n   $7 = ((($4)) + 16|0);\n   $8 = HEAP32[$7>>2]|0;\n   $9 = ($8|0)==(0|0);\n   if (!($9)) {\n    _pam_freecolormap($8);\n   }\n   $10 = ((($4)) + 12|0);\n   $11 = HEAP32[$10>>2]|0;\n   $12 = ($11|0)==(0|0);\n   $$pre$i = ((($4)) + 8|0);\n   if (!($12)) {\n    $13 = HEAP32[$$pre$i>>2]|0;\n    FUNCTION_TABLE_vi[$13 & 127]($11);\n   }\n   HEAP32[$4>>2] = 18202;\n   $14 = HEAP32[$$pre$i>>2]|0;\n   FUNCTION_TABLE_vi[$14 & 127]($4);\n  }\n  HEAP32[$3>>2] = 0;\n }\n $15 = ((($0)) + 1056|0);\n $16 = +HEAPF32[$15>>2];\n $17 = $16 < 0.0;\n $18 = $16 > 1.0;\n $or$cond = $17 | $18;\n if ($or$cond) {\n  $$0 = 100;\n  return ($$0|0);\n }\n HEAPF32[$15>>2] = $1;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _liq_get_output_gamma($0) {\n $0 = $0|0;\n var $$0 = 0.0, $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($1)) {\n  $$0 = -1.0;\n  return (+$$0);\n }\n $2 = ((($0)) + 1064|0);\n $3 = +HEAPF64[$2>>3];\n $$0 = $3;\n return (+$$0);\n}\nfunction _liq_result_destroy($0) {\n $0 = $0|0;\n var $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($1)) {\n  return;\n }\n $2 = ((($0)) + 28|0);\n _memset(($2|0),0,1028)|0;\n $3 = ((($0)) + 12|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if (!($5)) {\n  $6 = ((($4)) + 28|0);\n  _memset(($6|0),0,1028)|0;\n  $7 = HEAP32[$3>>2]|0;\n  $8 = (_liq_crash_if_invalid_handle_pointer_given($7,18253)|0);\n  if ($8) {\n   $9 = ((($7)) + 16|0);\n   $10 = HEAP32[$9>>2]|0;\n   $11 = ($10|0)==(0|0);\n   if (!($11)) {\n    _pam_freecolormap($10);\n   }\n   $12 = ((($7)) + 12|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = ($13|0)==(0|0);\n   $$pre$i = ((($7)) + 8|0);\n   if (!($14)) {\n    $15 = HEAP32[$$pre$i>>2]|0;\n    FUNCTION_TABLE_vi[$15 & 127]($13);\n   }\n   HEAP32[$7>>2] = 18202;\n   $16 = HEAP32[$$pre$i>>2]|0;\n   FUNCTION_TABLE_vi[$16 & 127]($7);\n  }\n }\n $17 = ((($0)) + 16|0);\n $18 = HEAP32[$17>>2]|0;\n _pam_freecolormap($18);\n HEAP32[$0>>2] = 18202;\n $19 = ((($0)) + 8|0);\n $20 = HEAP32[$19>>2]|0;\n FUNCTION_TABLE_vi[$20 & 127]($0);\n return;\n}\nfunction _liq_get_quantization_error($0) {\n $0 = $0|0;\n var $$0 = 0.0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($1)) {\n  $$0 = -1.0;\n  return (+$$0);\n }\n $2 = ((($0)) + 1072|0);\n $3 = +HEAPF64[$2>>3];\n $4 = !($3 >= 0.0);\n if ($4) {\n  $$0 = -1.0;\n  return (+$$0);\n }\n $5 = $3 * 65536.0;\n $6 = $5 / 6.0;\n $$0 = $6;\n return (+$$0);\n}\nfunction _liq_get_quantization_quality($0) {\n $0 = $0|0;\n var $$0 = 0, $$0$i$i = 0.0, $$068$i = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0.0, $4 = 0, $5 = 0.0;\n var $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0, $cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($1)) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $2 = ((($0)) + 1072|0);\n $3 = +HEAPF64[$2>>3];\n $4 = !($3 >= 0.0);\n if ($4) {\n  $$0 = -1;\n  return ($$0|0);\n } else {\n  $$068$i = 100;\n }\n while(1) {\n  $cond$i = ($$068$i|0)==(100);\n  if ($cond$i) {\n   $$0$i$i = 0.0;\n  } else {\n   $5 = (+($$068$i|0));\n   $6 = $5 + 0.001;\n   $7 = 0.016 / $6;\n   $8 = $7 + -0.001;\n   $9 = $8 < 0.0;\n   $10 = $9 ? 0.0 : $8;\n   $11 = $5 + 210.0;\n   $12 = (+Math_pow((+$11),1.2));\n   $13 = 2.5 / $12;\n   $14 = 100.09999999999999 - $5;\n   $15 = $14 * $13;\n   $16 = $15 / 100.0;\n   $17 = $10 + $16;\n   $$0$i$i = $17;\n  }\n  $18 = $$0$i$i + 9.9999999999999995E-7;\n  $19 = !($18 >= $3);\n  if (!($19)) {\n   $$0 = $$068$i;\n   label = 7;\n   break;\n  }\n  $20 = (($$068$i) + -1)|0;\n  $21 = ($$068$i|0)>(1);\n  if ($21) {\n   $$068$i = $20;\n  } else {\n   $$0 = 0;\n   label = 7;\n   break;\n  }\n }\n if ((label|0) == 7) {\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _liq_get_palette($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($1)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $2 = ((($0)) + 12|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  $5 = ((($3)) + 28|0);\n  $6 = HEAP32[$5>>2]|0;\n  $7 = ($6|0)==(0);\n  if (!($7)) {\n   $$0 = $5;\n   return ($$0|0);\n  }\n }\n $8 = ((($0)) + 28|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0);\n if (!($10)) {\n  $$0 = $8;\n  return ($$0|0);\n }\n $11 = ((($0)) + 16|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($0)) + 1064|0);\n $14 = +HEAPF64[$13>>3];\n $15 = ((($0)) + 1080|0);\n $16 = HEAP32[$15>>2]|0;\n _set_rounded_palette($8,$12,$14,$16);\n $$0 = $8;\n return ($$0|0);\n}\nfunction _set_rounded_palette($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = +$2;\n $3 = $3|0;\n var $$ = 0, $$047 = 0, $$45 = 0, $$46 = 0, $$sink$i = 0, $$sink25$i = 0, $$sink26$i = 0, $$sink27$i = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$026$0 = 0, $$sroa$032$0$$sroa_idx = 0, $$sroa$032$0$copyload = 0.0, $$sroa$13$0 = 0, $$sroa$2$0$$sroa_idx = 0, $$sroa$3$0$$sroa_idx = 0, $$sroa$4$0$$sroa_idx = 0, $$sroa$434$0$$sroa_idx35 = 0, $$sroa$434$0$copyload = 0.0, $$sroa$5$0$$sroa_idx37 = 0, $$sroa$5$0$copyload = 0.0;\n var $$sroa$6$0$$sroa_idx39 = 0, $$sroa$6$0$copyload = 0.0, $$sroa$8$0 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0.0;\n var $27 = 0, $28 = 0, $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0;\n var $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1024|0);\n $4 = sp;\n _to_f_set_gamma($4,$2);\n $5 = HEAP32[$1>>2]|0;\n HEAP32[$0>>2] = $5;\n $6 = HEAP32[$1>>2]|0;\n $7 = ($6|0)==(0);\n if ($7) {\n  STACKTOP = sp;return;\n }\n $8 = -1 << $3;\n $9 = (8 - ($3))|0;\n $10 = $2;\n $11 = $10;\n $12 = $11 / 0.54990000000000006;\n $13 = $12;\n $$047 = 0;\n while(1) {\n  $$sroa$032$0$$sroa_idx = (((($1)) + 12|0) + (($$047*24)|0)|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$032$0$$sroa_idx>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$032$0$$sroa_idx+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$032$0$$sroa_idx+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$032$0$$sroa_idx+3>>0];$$sroa$032$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$434$0$$sroa_idx35 = (((((($1)) + 12|0) + (($$047*24)|0)|0)) + 4|0);\n  $$sroa$5$0$$sroa_idx37 = (((((($1)) + 12|0) + (($$047*24)|0)|0)) + 8|0);\n  $$sroa$6$0$$sroa_idx39 = (((((($1)) + 12|0) + (($$047*24)|0)|0)) + 12|0);\n  $14 = $$sroa$032$0$copyload < 0.00390625;\n  if ($14) {\n   $$sink$i = 0;$$sink25$i = 0;$$sink26$i = 0;$$sink27$i = 0;\n  } else {\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx39>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx39+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx39+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx39+3>>0];$$sroa$6$0$copyload = +HEAPF32[tempDoublePtr>>2];\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx37>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx37+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx37+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx37+3>>0];$$sroa$5$0$copyload = +HEAPF32[tempDoublePtr>>2];\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$434$0$$sroa_idx35>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$434$0$$sroa_idx35+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$434$0$$sroa_idx35+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$434$0$$sroa_idx35+3>>0];$$sroa$434$0$copyload = +HEAPF32[tempDoublePtr>>2];\n   $15 = $$sroa$434$0$copyload / $$sroa$032$0$copyload;\n   $16 = $$sroa$5$0$copyload / $$sroa$032$0$copyload;\n   $17 = $$sroa$6$0$copyload / $$sroa$032$0$copyload;\n   $18 = (+Math_pow((+$15),(+$13)));\n   $19 = (+Math_pow((+$16),(+$13)));\n   $20 = (+Math_pow((+$17),(+$13)));\n   $21 = $18 * 256.0;\n   $22 = $19 * 256.0;\n   $23 = $20 * 256.0;\n   $24 = $$sroa$032$0$copyload * 256.0;\n   $25 = $21 >= 255.0;\n   $26 = $25 ? 255.0 : $21;\n   $27 = (~~(($26))&255);\n   $28 = $22 >= 255.0;\n   $29 = $28 ? 255.0 : $22;\n   $30 = (~~(($29))&255);\n   $31 = $23 >= 255.0;\n   $32 = $31 ? 255.0 : $23;\n   $33 = (~~(($32))&255);\n   $34 = $24 >= 255.0;\n   $35 = $34 ? 255.0 : $24;\n   $36 = (~~(($35))&255);\n   $$sink$i = $36;$$sink25$i = $33;$$sink26$i = $30;$$sink27$i = $27;\n  }\n  $37 = $$sink27$i&255;\n  $38 = $37 & $8;\n  $39 = $37 >>> $9;\n  $40 = $38 | $39;\n  $41 = $40&255;\n  $42 = $$sink26$i&255;\n  $43 = $42 & $8;\n  $44 = $42 >>> $9;\n  $45 = $43 | $44;\n  $46 = $45&255;\n  $47 = $$sink25$i&255;\n  $48 = $47 & $8;\n  $49 = $47 >>> $9;\n  $50 = $48 | $49;\n  $51 = $50&255;\n  $52 = $$sink$i&255;\n  $53 = $52 & $8;\n  $54 = $52 >>> $9;\n  $55 = $53 | $54;\n  $56 = $55&255;\n  $57 = (+($56&255));\n  $58 = $57 / 255.0;\n  $59 = $40 & 255;\n  $60 = (($4) + ($59<<2)|0);\n  $61 = +HEAPF32[$60>>2];\n  $62 = $61 * $58;\n  $63 = $45 & 255;\n  $64 = (($4) + ($63<<2)|0);\n  $65 = +HEAPF32[$64>>2];\n  $66 = $65 * $58;\n  $67 = $50 & 255;\n  $68 = (($4) + ($67<<2)|0);\n  $69 = +HEAPF32[$68>>2];\n  $70 = $69 * $58;\n  HEAPF32[$$sroa$032$0$$sroa_idx>>2] = $58;\n  HEAPF32[$$sroa$434$0$$sroa_idx35>>2] = $62;\n  HEAPF32[$$sroa$5$0$$sroa_idx37>>2] = $66;\n  HEAPF32[$$sroa$6$0$$sroa_idx39>>2] = $70;\n  $71 = ($56<<24>>24)==(0);\n  if ($71) {\n   $72 = (((((($1)) + 12|0) + (($$047*24)|0)|0)) + 20|0);\n   $73 = HEAP8[$72>>0]|0;\n   $74 = ($73<<24>>24)==(0);\n   $$ = $74 ? 71 : $41;\n   $$45 = $74 ? 112 : $46;\n   $$46 = $74 ? 76 : $51;\n   $$sroa$026$0 = $$;$$sroa$13$0 = $$46;$$sroa$8$0 = $$45;\n  } else {\n   $$sroa$026$0 = $41;$$sroa$13$0 = $51;$$sroa$8$0 = $46;\n  }\n  $$sroa$0$0$$sroa_idx = (((($0)) + 4|0) + ($$047<<2)|0);\n  HEAP8[$$sroa$0$0$$sroa_idx>>0] = $$sroa$026$0;\n  $$sroa$2$0$$sroa_idx = (((((($0)) + 4|0) + ($$047<<2)|0)) + 1|0);\n  HEAP8[$$sroa$2$0$$sroa_idx>>0] = $$sroa$8$0;\n  $$sroa$3$0$$sroa_idx = (((((($0)) + 4|0) + ($$047<<2)|0)) + 2|0);\n  HEAP8[$$sroa$3$0$$sroa_idx>>0] = $$sroa$13$0;\n  $$sroa$4$0$$sroa_idx = (((((($0)) + 4|0) + ($$047<<2)|0)) + 3|0);\n  HEAP8[$$sroa$4$0$$sroa_idx>>0] = $56;\n  $75 = (($$047) + 1)|0;\n  $76 = HEAP32[$1>>2]|0;\n  $77 = ($75>>>0)<($76>>>0);\n  if ($77) {\n   $$047 = $75;\n  } else {\n   break;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _liq_write_remapped_image_rows($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$073$i = 0, $$$073$us84$i = 0, $$$2$us$us$i$us = 0, $$$2$us86$i = 0, $$$i$i = 0.0, $$0$$i$i = 0.0, $$0$75$i$i = 0.0, $$0$i$i = 0.0, $$0229272$i = 0, $$0229272$i$phi = 0, $$0230271$i = 0, $$0230271$i$phi = 0, $$0233$i = 0.0, $$0234$i = 0.0, $$0235270$i = 0, $$0236$i = 0, $$0237269$i = 0, $$0238268$i = 0, $$060 = 0.0, $$06281 = 0;\n var $$07197$i = 0, $$07197$i$us = 0, $$07281$i = 0, $$07281$us$us$i$us = 0, $$07281$us82$i = 0, $$073$i$i = 0.0, $$073$lcssa$i = 0, $$073$lcssa$i$us = 0, $$07380$i = 0, $$07380$us$us$i$us = 0, $$07380$us83$i = 0, $$07596$i = 0, $$07596$i$us = 0, $$099$i = 0, $$1$$i$i = 0.0, $$1$76$i$i = 0.0, $$1$i$i = 0.0, $$1$i67 = 0, $$1$i67$us = 0, $$1$i71 = 0;\n var $$161 = 0.0, $$17688$i = 0, $$17688$i$us = 0, $$2$i$i = 0.0, $$277$i = 0, $$277$i$us = 0, $$3$i$i = 0.0, $$4 = 0, $$74$i$i = 0.0, $$not = 0, $$not82 = 0, $$pre = 0, $$pre$i = 0, $$pre$i68 = 0, $$pre$i68$us = 0, $$pre$phi127$iZ2D = 0, $$pre121$i = 0, $$pre122$i = 0, $$pre123$i$us = 0, $$pre124$i = 0;\n var $$pre126$i = 0, $$sroa$0$0$$sroa_idx$i72 = 0, $$sroa$0$0$copyload$i = 0.0, $$sroa$0$0$i = 0.0, $$sroa$0249$0$$sroa_idx250$i = 0, $$sroa$0249$0$copyload251$i = 0.0, $$sroa$045$0$$sroa_idx$i = 0, $$sroa$045$0$copyload$i = 0.0, $$sroa$10$0$$sroa_idx12$i = 0, $$sroa$13$0$$sroa_raw_idx$i = 0, $$sroa$14$0$i = 0.0, $$sroa$27$0$i = 0.0, $$sroa$3$0$$sroa_idx1$i = 0, $$sroa$4$0$$sroa_idx2$i = 0, $$sroa$4$0$$sroa_idx240$i = 0, $$sroa$4$0$$sroa_idx47$i = 0, $$sroa$4$0$copyload$i = 0.0, $$sroa$4$0$copyload241$i = 0.0, $$sroa$40$0$i = 0.0, $$sroa$5$0$$sroa_idx243$i = 0;\n var $$sroa$5$0$$sroa_idx3$i = 0, $$sroa$5$0$$sroa_idx49$i = 0, $$sroa$5$0$copyload$i = 0.0, $$sroa$5$0$copyload244$i = 0.0, $$sroa$5253$0$$sroa_idx255$i = 0, $$sroa$5253$0$copyload256$i = 0.0, $$sroa$54$0$$sroa_idx5$i = 0, $$sroa$6$0$$sroa_idx246$i = 0, $$sroa$6$0$$sroa_idx51$i = 0, $$sroa$6$0$$sroa_idx6$i = 0, $$sroa$6$0$copyload$i = 0.0, $$sroa$6$0$copyload247$i = 0.0, $$sroa$6258$0$$sroa_idx260$i = 0, $$sroa$6258$0$copyload261$i = 0.0, $$sroa$7$0$$sroa_idx264$i = 0, $$sroa$7$0$$sroa_idx7$i = 0, $$sroa$7$0$copyload265$i = 0.0, $$sroa$8$0$$sroa_idx$i = 0, $$sroa$89$0$$sroa_idx10$i = 0, $$sroa$9$0$$sroa_idx11$i = 0;\n var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;\n var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0;\n var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;\n var $154 = 0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0;\n var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0, $19 = 0;\n var $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;\n var $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;\n var $227 = 0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;\n var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0;\n var $263 = 0.0, $264 = 0, $265 = 0.0, $266 = 0, $267 = 0.0, $268 = 0.0, $269 = 0, $27 = 0, $270 = 0, $271 = 0.0, $272 = 0.0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0.0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0.0;\n var $281 = 0.0, $282 = 0, $283 = 0.0, $284 = 0, $285 = 0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = 0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0, $298 = 0.0, $299 = 0.0;\n var $3 = 0, $30 = 0, $300 = 0.0, $301 = 0.0, $302 = 0.0, $303 = 0.0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0;\n var $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0.0, $326 = 0.0, $327 = 0.0, $328 = 0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0;\n var $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0, $348 = 0.0, $349 = 0.0, $35 = 0, $350 = 0.0, $351 = 0, $352 = 0.0;\n var $353 = 0, $354 = 0.0, $355 = 0, $356 = 0.0, $357 = 0, $358 = 0.0, $359 = 0, $36 = 0, $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0, $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0.0;\n var $371 = 0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0, $376 = 0.0, $377 = 0.0, $378 = 0.0, $379 = 0, $38 = 0, $380 = 0.0, $381 = 0.0, $382 = 0.0, $383 = 0, $384 = 0.0, $385 = 0.0, $386 = 0.0, $387 = 0, $388 = 0.0, $389 = 0.0;\n var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0.0, $394 = 0.0, $395 = 0.0, $396 = 0, $397 = 0.0, $398 = 0.0, $399 = 0.0, $4 = 0, $40 = 0, $400 = 0, $401 = 0.0, $402 = 0.0, $403 = 0.0, $404 = 0, $405 = 0.0, $406 = 0.0;\n var $407 = 0.0, $408 = 0, $409 = 0.0, $41 = 0, $410 = 0, $411 = 0.0, $412 = 0, $413 = 0.0, $414 = 0, $415 = 0.0, $416 = 0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0, $421 = 0.0, $422 = 0.0, $423 = 0.0, $424 = 0;\n var $425 = 0.0, $426 = 0.0, $427 = 0.0, $428 = 0, $429 = 0.0, $43 = 0, $430 = 0.0, $431 = 0.0, $432 = 0, $433 = 0, $434 = 0.0, $435 = 0.0, $436 = 0.0, $437 = 0, $438 = 0.0, $439 = 0.0, $44 = 0.0, $440 = 0.0, $441 = 0, $442 = 0.0;\n var $443 = 0.0, $444 = 0.0, $445 = 0, $446 = 0.0, $447 = 0.0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0.0, $460 = 0;\n var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0.0, $466 = 0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0.0;\n var $75 = 0, $76 = 0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0;\n var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond$i = 0, $exitcond108$i = 0, $exitcond114$i$us = 0, $exitcond117$i = 0, $exitcond117$i$us = 0, $exitcond118$i = 0, $exitcond118$i$us = 0, $exitcond119$i = 0, $indvars$iv$next113$i = 0, $indvars$iv$next113$i$us = 0, $indvars$iv$next116$i = 0, $indvars$iv$next116$i$us = 0;\n var $indvars$iv112$i = 0, $indvars$iv112$i$us = 0, $indvars$iv115$i = 0, $indvars$iv115$i$us = 0, $or$cond$i = 0, $or$cond$i$us = 0, $storemerge$i = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if (!($4)) {\n  $$4 = 105;\n  STACKTOP = sp;return ($$4|0);\n }\n $5 = (_liq_crash_if_invalid_handle_pointer_given($1,18274)|0);\n if (!($5)) {\n  $$4 = 105;\n  STACKTOP = sp;return ($$4|0);\n }\n $6 = ((($1)) + 36|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)==(0);\n L7: do {\n  if (!($8)) {\n   $$06281 = 0;\n   while(1) {\n    $12 = (($2) + ($$06281<<2)|0);\n    $13 = (_liq_crash_if_invalid_pointer_given($12)|0);\n    if (!($13)) {\n     $$4 = 105;\n     label = 107;\n     break;\n    }\n    $14 = HEAP32[$12>>2]|0;\n    $15 = (_liq_crash_if_invalid_pointer_given($14)|0);\n    $10 = (($$06281) + 1)|0;\n    if (!($15)) {\n     $$4 = 105;\n     label = 107;\n     break;\n    }\n    $9 = HEAP32[$6>>2]|0;\n    $11 = ($10>>>0)<($9>>>0);\n    if ($11) {\n     $$06281 = $10;\n    } else {\n     break L7;\n    }\n   }\n   if ((label|0) == 107) {\n    STACKTOP = sp;return ($$4|0);\n   }\n  }\n } while(0);\n $16 = ((($0)) + 12|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ($17|0)==(0|0);\n if (!($18)) {\n  $19 = (_liq_crash_if_invalid_handle_pointer_given($17,18253)|0);\n  if ($19) {\n   $20 = ((($17)) + 16|0);\n   $21 = HEAP32[$20>>2]|0;\n   $22 = ($21|0)==(0|0);\n   if (!($22)) {\n    _pam_freecolormap($21);\n   }\n   $23 = ((($17)) + 12|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = ($24|0)==(0|0);\n   $$pre$i = ((($17)) + 8|0);\n   if (!($25)) {\n    $26 = HEAP32[$$pre$i>>2]|0;\n    FUNCTION_TABLE_vi[$26 & 127]($24);\n   }\n   HEAP32[$17>>2] = 18202;\n   $27 = HEAP32[$$pre$i>>2]|0;\n   FUNCTION_TABLE_vi[$27 & 127]($17);\n  }\n }\n $28 = (_liq_crash_if_invalid_handle_pointer_given($0,18242)|0);\n if ($28) {\n  $29 = ((($0)) + 4|0);\n  $30 = HEAP32[$29>>2]|0;\n  $31 = (FUNCTION_TABLE_ii[$30 & 63](1080)|0);\n  $32 = ($31|0)==(0|0);\n  if (!($32)) {\n   $33 = HEAP32[$29>>2]|0;\n   $34 = ((($0)) + 8|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ((($0)) + 16|0);\n   $37 = HEAP32[$36>>2]|0;\n   $38 = (_pam_duplicate_colormap($37)|0);\n   $39 = ((($0)) + 20|0);\n   $40 = HEAP32[$39>>2]|0;\n   $41 = ((($0)) + 24|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = ((($0)) + 1064|0);\n   $44 = +HEAPF64[$43>>3];\n   $45 = ((($0)) + 1072|0);\n   $46 = +HEAPF64[$45>>3];\n   $47 = ((($0)) + 1056|0);\n   $48 = HEAP32[$47>>2]|0;\n   $49 = ((($0)) + 1084|0);\n   $50 = HEAP8[$49>>0]|0;\n   $51 = ($50<<24>>24)!=(0);\n   $52 = $51 ? 20 : 0;\n   HEAP32[$31>>2] = 18253;\n   $$sroa$3$0$$sroa_idx1$i = ((($31)) + 4|0);\n   HEAP32[$$sroa$3$0$$sroa_idx1$i>>2] = $33;\n   $$sroa$4$0$$sroa_idx2$i = ((($31)) + 8|0);\n   HEAP32[$$sroa$4$0$$sroa_idx2$i>>2] = $35;\n   $$sroa$5$0$$sroa_idx3$i = ((($31)) + 12|0);\n   HEAP32[$$sroa$5$0$$sroa_idx3$i>>2] = 0;\n   $$sroa$54$0$$sroa_idx5$i = ((($31)) + 16|0);\n   HEAP32[$$sroa$54$0$$sroa_idx5$i>>2] = $38;\n   $$sroa$6$0$$sroa_idx6$i = ((($31)) + 20|0);\n   HEAP32[$$sroa$6$0$$sroa_idx6$i>>2] = $40;\n   $$sroa$7$0$$sroa_idx7$i = ((($31)) + 24|0);\n   HEAP32[$$sroa$7$0$$sroa_idx7$i>>2] = $42;\n   $$sroa$8$0$$sroa_idx$i = ((($31)) + 28|0);\n   _memset(($$sroa$8$0$$sroa_idx$i|0),0,1028)|0;\n   $$sroa$89$0$$sroa_idx10$i = ((($31)) + 1056|0);\n   HEAPF64[$$sroa$89$0$$sroa_idx10$i>>3] = $44;\n   $$sroa$9$0$$sroa_idx11$i = ((($31)) + 1064|0);\n   HEAPF64[$$sroa$9$0$$sroa_idx11$i>>3] = $46;\n   $$sroa$10$0$$sroa_idx12$i = ((($31)) + 1072|0);\n   HEAP32[$$sroa$10$0$$sroa_idx12$i>>2] = $48;\n   $53 = ((($31)) + 1076|0);\n   HEAP8[$53>>0] = $50;\n   $54 = ((($31)) + 1077|0);\n   HEAP8[$54>>0] = $52;\n   $$sroa$13$0$$sroa_raw_idx$i = ((($31)) + 1078|0);\n   HEAP16[$$sroa$13$0$$sroa_raw_idx$i>>1] = 0;\n   HEAP32[$16>>2] = $31;\n   $55 = ((($1)) + 44|0);\n   $56 = HEAP32[$55>>2]|0;\n   $57 = ($56|0)==(0|0);\n   $58 = $40;\n   if ($57) {\n    $59 = ((($1)) + 48|0);\n    $60 = HEAP32[$59>>2]|0;\n    $61 = ($60|0)==(0|0);\n    if ($61) {\n     $62 = HEAP8[$49>>0]|0;\n     $63 = ($62<<24>>24)==(0);\n     if ($63) {\n      $64 = $58;\n     } else {\n      _contrast_maps($1);\n      $$pre = HEAP32[$$sroa$6$0$$sroa_idx6$i>>2]|0;\n      $64 = $$pre;\n     }\n    } else {\n     $64 = $58;\n    }\n   } else {\n    $64 = $58;\n   }\n   $65 = ($64|0)==(0|0);\n   if (!($65)) {\n    $66 = HEAP8[$54>>0]|0;\n    $67 = (+($66&255));\n    $68 = $67 * 0.25;\n    $69 = HEAP32[$$sroa$7$0$$sroa_idx7$i>>2]|0;\n    $70 = (FUNCTION_TABLE_idi[$64 & 0]($68,$69)|0);\n    $71 = ($70|0)==(0);\n    if ($71) {\n     $$4 = 102;\n     STACKTOP = sp;return ($$4|0);\n    }\n   }\n   $72 = +HEAPF64[$$sroa$9$0$$sroa_idx11$i>>3];\n   $73 = $72;\n   $74 = +HEAPF32[$$sroa$10$0$$sroa_idx12$i>>2];\n   $75 = $74 == 0.0;\n   do {\n    if ($75) {\n     $76 = HEAP32[$$sroa$54$0$$sroa_idx5$i>>2]|0;\n     $77 = +HEAPF64[$$sroa$89$0$$sroa_idx10$i>>3];\n     $78 = ((($0)) + 1080|0);\n     $79 = HEAP32[$78>>2]|0;\n     _set_rounded_palette($$sroa$8$0$$sroa_idx$i,$76,$77,$79);\n     $80 = HEAP32[$$sroa$54$0$$sroa_idx5$i>>2]|0;\n     $81 = (+_remap_to_palette($1,$2,$80));\n     $$161 = $81;\n    } else {\n     $82 = HEAP8[$53>>0]|0;\n     $83 = ($82<<24>>24)==(0);\n     if ($83) {\n      $$060 = $73;$468 = 0;\n     } else {\n      $84 = HEAP32[$55>>2]|0;\n      $85 = ($84|0)==(0|0);\n      if ($85) {\n       $$060 = $73;$468 = 0;\n      } else {\n       $86 = ((($1)) + 48|0);\n       $87 = HEAP32[$86>>2]|0;\n       $88 = ($87|0)==(0|0);\n       if ($88) {\n        $89 = HEAP32[$$sroa$54$0$$sroa_idx5$i>>2]|0;\n        $90 = (+_remap_to_palette($1,$2,$89));\n        $91 = ((($1)) + 32|0);\n        $92 = HEAP32[$91>>2]|0;\n        $93 = HEAP32[$6>>2]|0;\n        $94 = HEAP32[$55>>2]|0;\n        $95 = ($93|0)==(0);\n        if ($95) {\n         $96 = $94;\n         $174 = $96;\n        } else {\n         $97 = ($92>>>0)>(1);\n         $98 = (($92) + -1)|0;\n         $99 = (($93) + -1)|0;\n         $$099$i = 0;\n         while(1) {\n          $100 = (($2) + ($$099$i<<2)|0);\n          L50: do {\n           if ($97) {\n            $101 = HEAP32[$100>>2]|0;\n            $102 = HEAP8[$101>>0]|0;\n            $103 = ($$099$i|0)==(0);\n            $104 = ($$099$i>>>0)<($99>>>0);\n            $105 = (($$099$i) + 1)|0;\n            $106 = (($2) + ($105<<2)|0);\n            $107 = (($$099$i) + -1)|0;\n            $108 = (($2) + ($107<<2)|0);\n            $109 = Math_imul($$099$i, $92)|0;\n            if ($103) {\n             $$not82 = $104 ^ 1;\n             $$07197$i$us = $102;$$07596$i$us = 0;$111 = $101;$indvars$iv112$i$us = 1;$indvars$iv115$i$us = 2;\n             while(1) {\n              $110 = (($111) + ($indvars$iv112$i$us)|0);\n              $112 = HEAP8[$110>>0]|0;\n              $113 = ($112<<24>>24)!=($$07197$i$us<<24>>24);\n              $114 = ($indvars$iv112$i$us|0)==($98|0);\n              $or$cond$i$us = $114 | $113;\n              do {\n               if ($or$cond$i$us) {\n                $115 = (($indvars$iv112$i$us) - ($$07596$i$us))|0;\n                $116 = ($115*10)|0;\n                $$not = ($indvars$iv112$i$us>>>0)<=($$07596$i$us>>>0);\n                $brmerge = $$not | $$not82;\n                if ($brmerge) {\n                 $$073$lcssa$i$us = $116;\n                } else {\n                 $$pre123$i$us = HEAP32[$106>>2]|0;\n                 $$07281$us$us$i$us = $$07596$i$us;$$07380$us$us$i$us = $116;\n                 while(1) {\n                  $117 = (($$pre123$i$us) + ($$07281$us$us$i$us)|0);\n                  $118 = HEAP8[$117>>0]|0;\n                  $119 = ($118<<24>>24)==($$07197$i$us<<24>>24);\n                  $120 = (($$07380$us$us$i$us) + 15)|0;\n                  $$$2$us$us$i$us = $119 ? $120 : $$07380$us$us$i$us;\n                  $121 = (($$07281$us$us$i$us) + 1)|0;\n                  $exitcond114$i$us = ($121|0)==($indvars$iv112$i$us|0);\n                  if ($exitcond114$i$us) {\n                   $$073$lcssa$i$us = $$$2$us$us$i$us;\n                   break;\n                  } else {\n                   $$07281$us$us$i$us = $121;$$07380$us$us$i$us = $$$2$us$us$i$us;\n                  }\n                 }\n                }\n                $122 = ($indvars$iv112$i$us>>>0)<($$07596$i$us>>>0);\n                if ($122) {\n                 $$1$i67$us = $112;$$277$i$us = $$07596$i$us;\n                 break;\n                }\n                $123 = (($$073$lcssa$i$us) + 20)|0;\n                $124 = (+($123|0));\n                $125 = 20.0 / $124;\n                $126 = 1.0 - $125;\n                $$17688$i$us = $$07596$i$us;\n                while(1) {\n                 $127 = (($$17688$i$us) + ($109))|0;\n                 $128 = (($94) + ($127)|0);\n                 $129 = HEAP8[$128>>0]|0;\n                 $130 = $129&255;\n                 $131 = (($130) + 128)|0;\n                 $132 = (+($131|0));\n                 $133 = $132 * 0.66579633951187134;\n                 $134 = $126 * $133;\n                 $135 = (~~(($134))&255);\n                 $136 = (($$17688$i$us) + 1)|0;\n                 HEAP8[$128>>0] = $135;\n                 $exitcond117$i$us = ($136|0)==($indvars$iv115$i$us|0);\n                 if ($exitcond117$i$us) {\n                  $$1$i67$us = $112;$$277$i$us = $indvars$iv115$i$us;\n                  break;\n                 } else {\n                  $$17688$i$us = $136;\n                 }\n                }\n               } else {\n                $$1$i67$us = $$07197$i$us;$$277$i$us = $$07596$i$us;\n               }\n              } while(0);\n              $exitcond118$i$us = ($indvars$iv115$i$us|0)==($92|0);\n              if ($exitcond118$i$us) {\n               $$pre$phi127$iZ2D = $105;\n               break L50;\n              }\n              $indvars$iv$next116$i$us = (($indvars$iv115$i$us) + 1)|0;\n              $indvars$iv$next113$i$us = (($indvars$iv112$i$us) + 1)|0;\n              $$pre$i68$us = HEAP32[$100>>2]|0;\n              $$07197$i$us = $$1$i67$us;$$07596$i$us = $$277$i$us;$111 = $$pre$i68$us;$indvars$iv112$i$us = $indvars$iv$next113$i$us;$indvars$iv115$i$us = $indvars$iv$next116$i$us;\n             }\n            } else {\n             $$07197$i = $102;$$07596$i = 0;$138 = $101;$indvars$iv112$i = 1;$indvars$iv115$i = 2;\n            }\n            while(1) {\n             $137 = (($138) + ($indvars$iv112$i)|0);\n             $139 = HEAP8[$137>>0]|0;\n             $140 = ($139<<24>>24)!=($$07197$i<<24>>24);\n             $141 = ($indvars$iv112$i|0)==($98|0);\n             $or$cond$i = $141 | $140;\n             do {\n              if ($or$cond$i) {\n               $142 = (($indvars$iv112$i) - ($$07596$i))|0;\n               $143 = ($142*10)|0;\n               $144 = ($indvars$iv112$i>>>0)>($$07596$i>>>0);\n               L72: do {\n                if ($144) {\n                 $$pre121$i = HEAP32[$108>>2]|0;\n                 if (!($104)) {\n                  $$07281$i = $$07596$i;$$07380$i = $143;\n                  while(1) {\n                   $159 = (($$pre121$i) + ($$07281$i)|0);\n                   $160 = HEAP8[$159>>0]|0;\n                   $161 = ($160<<24>>24)==($$07197$i<<24>>24);\n                   $162 = (($$07380$i) + 15)|0;\n                   $$$073$i = $161 ? $162 : $$07380$i;\n                   $163 = (($$07281$i) + 1)|0;\n                   $exitcond$i = ($163|0)==($indvars$iv112$i|0);\n                   if ($exitcond$i) {\n                    $$073$lcssa$i = $$$073$i;\n                    break L72;\n                   } else {\n                    $$07281$i = $163;$$07380$i = $$$073$i;\n                   }\n                  }\n                 }\n                 $$pre122$i = HEAP32[$106>>2]|0;\n                 $$07281$us82$i = $$07596$i;$$07380$us83$i = $143;\n                 while(1) {\n                  $145 = (($$pre121$i) + ($$07281$us82$i)|0);\n                  $146 = HEAP8[$145>>0]|0;\n                  $147 = ($146<<24>>24)==($$07197$i<<24>>24);\n                  $148 = (($$07380$us83$i) + 15)|0;\n                  $$$073$us84$i = $147 ? $148 : $$07380$us83$i;\n                  $149 = (($$pre122$i) + ($$07281$us82$i)|0);\n                  $150 = HEAP8[$149>>0]|0;\n                  $151 = ($150<<24>>24)==($$07197$i<<24>>24);\n                  $152 = (($$$073$us84$i) + 15)|0;\n                  $$$2$us86$i = $151 ? $152 : $$$073$us84$i;\n                  $153 = (($$07281$us82$i) + 1)|0;\n                  $exitcond108$i = ($153|0)==($indvars$iv112$i|0);\n                  if ($exitcond108$i) {\n                   $$073$lcssa$i = $$$2$us86$i;\n                   break;\n                  } else {\n                   $$07281$us82$i = $153;$$07380$us83$i = $$$2$us86$i;\n                  }\n                 }\n                } else {\n                 $$073$lcssa$i = $143;\n                }\n               } while(0);\n               $154 = ($indvars$iv112$i>>>0)<($$07596$i>>>0);\n               if ($154) {\n                $$1$i67 = $139;$$277$i = $$07596$i;\n                break;\n               }\n               $155 = (($$073$lcssa$i) + 20)|0;\n               $156 = (+($155|0));\n               $157 = 20.0 / $156;\n               $158 = 1.0 - $157;\n               $$17688$i = $$07596$i;\n               while(1) {\n                $164 = (($$17688$i) + ($109))|0;\n                $165 = (($94) + ($164)|0);\n                $166 = HEAP8[$165>>0]|0;\n                $167 = $166&255;\n                $168 = (($167) + 128)|0;\n                $169 = (+($168|0));\n                $170 = $169 * 0.66579633951187134;\n                $171 = $158 * $170;\n                $172 = (~~(($171))&255);\n                $173 = (($$17688$i) + 1)|0;\n                HEAP8[$165>>0] = $172;\n                $exitcond117$i = ($173|0)==($indvars$iv115$i|0);\n                if ($exitcond117$i) {\n                 $$1$i67 = $139;$$277$i = $indvars$iv115$i;\n                 break;\n                } else {\n                 $$17688$i = $173;\n                }\n               }\n              } else {\n               $$1$i67 = $$07197$i;$$277$i = $$07596$i;\n              }\n             } while(0);\n             $exitcond118$i = ($indvars$iv115$i|0)==($92|0);\n             if ($exitcond118$i) {\n              $$pre$phi127$iZ2D = $105;\n              break L50;\n             }\n             $indvars$iv$next116$i = (($indvars$iv115$i) + 1)|0;\n             $indvars$iv$next113$i = (($indvars$iv112$i) + 1)|0;\n             $$pre$i68 = HEAP32[$100>>2]|0;\n             $$07197$i = $$1$i67;$$07596$i = $$277$i;$138 = $$pre$i68;$indvars$iv112$i = $indvars$iv$next113$i;$indvars$iv115$i = $indvars$iv$next116$i;\n            }\n           } else {\n            $$pre126$i = (($$099$i) + 1)|0;\n            $$pre$phi127$iZ2D = $$pre126$i;\n           }\n          } while(0);\n          $exitcond119$i = ($$pre$phi127$iZ2D|0)==($93|0);\n          if ($exitcond119$i) {\n           break;\n          } else {\n           $$099$i = $$pre$phi127$iZ2D;\n          }\n         }\n         $$pre124$i = HEAP32[$55>>2]|0;\n         $174 = $$pre124$i;\n        }\n        HEAP32[$86>>2] = $174;\n        HEAP32[$55>>2] = 0;\n        $$060 = $90;$468 = 1;\n       } else {\n        $$060 = $73;$468 = 0;\n       }\n      }\n     }\n     $175 = HEAP32[$$sroa$6$0$$sroa_idx6$i>>2]|0;\n     $176 = ($175|0)==(0|0);\n     if (!($176)) {\n      $177 = HEAP8[$54>>0]|0;\n      $178 = (+($177&255));\n      $179 = $178 * 0.5;\n      $180 = HEAP32[$$sroa$7$0$$sroa_idx7$i>>2]|0;\n      $181 = (FUNCTION_TABLE_idi[$175 & 0]($179,$180)|0);\n      $182 = ($181|0)==(0);\n      if ($182) {\n       $$4 = 102;\n       STACKTOP = sp;return ($$4|0);\n      }\n     }\n     $183 = HEAP32[$$sroa$54$0$$sroa_idx5$i>>2]|0;\n     $184 = +HEAPF64[$$sroa$89$0$$sroa_idx10$i>>3];\n     $185 = ((($0)) + 1080|0);\n     $186 = HEAP32[$185>>2]|0;\n     _set_rounded_palette($$sroa$8$0$$sroa_idx$i,$183,$184,$186);\n     $187 = $$060;\n     $188 = $187 * 2.3999999999999999;\n     $189 = $188 > 0.0625;\n     $190 = $189 ? $188 : 0.0625;\n     $191 = $190;\n     $192 = HEAP32[$6>>2]|0;\n     $193 = ((($1)) + 32|0);\n     $194 = HEAP32[$193>>2]|0;\n     $195 = HEAP8[$53>>0]|0;\n     $196 = ($195<<24>>24)==(0);\n     if ($196) {\n      $217 = 0;\n     } else {\n      $197 = ((($1)) + 48|0);\n      $198 = HEAP32[$197>>2]|0;\n      $199 = ($198|0)==(0|0);\n      if ($199) {\n       $200 = HEAP32[$55>>2]|0;\n       $217 = $200;\n      } else {\n       $217 = $198;\n      }\n     }\n     $201 = HEAP32[$$sroa$54$0$$sroa_idx5$i>>2]|0;\n     $202 = (($194) + 2)|0;\n     $203 = $202 << 4;\n     $204 = $202 << 5;\n     $205 = ((($1)) + 4|0);\n     $206 = HEAP32[$205>>2]|0;\n     $207 = (FUNCTION_TABLE_ii[$206 & 63]($204)|0);\n     $208 = ($207|0)==(0|0);\n     if ($208) {\n      $$4 = 102;\n      STACKTOP = sp;return ($$4|0);\n     }\n     _memset(($207|0),0,($204|0))|0;\n     $209 = (($207) + ($202<<4)|0);\n     $210 = (_nearest_init($201)|0);\n     $211 = +HEAPF32[$$sroa$10$0$$sroa_idx12$i>>2];\n     $212 = $211;\n     $213 = 1.0 - $212;\n     $214 = $213 * $213;\n     $215 = 1.0 - $214;\n     $216 = $215;\n     $218 = ($217|0)!=(0|0);\n     if ($218) {\n      $219 = $216;\n      $220 = $219 * 0.0039215686274509803;\n      $221 = $220;\n      $$0233$i = $221;\n     } else {\n      $$0233$i = $216;\n     }\n     $222 = $$0233$i * 0.9375;\n     $223 = ($192|0)>(0);\n     if (!($223)) {\n      $457 = ((($1)) + 8|0);\n      $458 = HEAP32[$457>>2]|0;\n      $459 = ($207>>>0)<($209>>>0);\n      $460 = $459 ? $207 : $209;\n      FUNCTION_TABLE_vi[$458 & 127]($460);\n      _nearest_free($210);\n      $$161 = $$060;\n      break;\n     }\n     $224 = (($194) + -1)|0;\n     $225 = ((($3)) + 4|0);\n     $226 = ((($3)) + 8|0);\n     $227 = ((($3)) + 12|0);\n     $228 = (+($192|0));\n     $$0229272$i = $207;$$0230271$i = $209;$$0235270$i = 1;$$0237269$i = 0;$$0238268$i = 0;\n     while(1) {\n      $229 = HEAP8[$54>>0]|0;\n      $230 = (+($229&255));\n      $231 = HEAP32[$$sroa$6$0$$sroa_idx6$i>>2]|0;\n      $232 = ($231|0)==(0|0);\n      if (!($232)) {\n       $233 = (+($$0237269$i|0));\n       $234 = 100.0 - $230;\n       $235 = $233 * $234;\n       $236 = $235 / $228;\n       $237 = $230 + $236;\n       $238 = HEAP32[$$sroa$7$0$$sroa_idx7$i>>2]|0;\n       $239 = (FUNCTION_TABLE_idi[$231 & 0]($237,$238)|0);\n       $240 = ($239|0)==(0);\n       if ($240) {\n        break;\n       }\n      }\n      _memset(($$0230271$i|0),0,($203|0))|0;\n      $241 = ($$0235270$i|0)>(0);\n      $242 = $241 ? 0 : $224;\n      $243 = (_liq_image_get_row_f($1,$$0237269$i)|0);\n      $244 = Math_imul($$0237269$i, $194)|0;\n      $245 = (($2) + ($$0237269$i<<2)|0);\n      $$0236$i = $242;$$1$i71 = $$0238268$i;\n      while(1) {\n       if ($218) {\n        $246 = (($$0236$i) + ($244))|0;\n        $247 = (($217) + ($246)|0);\n        $248 = HEAP8[$247>>0]|0;\n        $249 = (+($248&255));\n        $250 = $222 * $249;\n        $$0234$i = $250;\n       } else {\n        $$0234$i = $222;\n       }\n       $251 = (($$0236$i) + 1)|0;\n       $$sroa$0249$0$$sroa_idx250$i = (($243) + ($$0236$i<<4)|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0249$0$$sroa_idx250$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0249$0$$sroa_idx250$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0249$0$$sroa_idx250$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0249$0$$sroa_idx250$i+3>>0];$$sroa$0249$0$copyload251$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$5253$0$$sroa_idx255$i = (((($243) + ($$0236$i<<4)|0)) + 4|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5253$0$$sroa_idx255$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5253$0$$sroa_idx255$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5253$0$$sroa_idx255$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5253$0$$sroa_idx255$i+3>>0];$$sroa$5253$0$copyload256$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$6258$0$$sroa_idx260$i = (((($243) + ($$0236$i<<4)|0)) + 8|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6258$0$$sroa_idx260$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6258$0$$sroa_idx260$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6258$0$$sroa_idx260$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6258$0$$sroa_idx260$i+3>>0];$$sroa$6258$0$copyload261$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$7$0$$sroa_idx264$i = (((($243) + ($$0236$i<<4)|0)) + 12|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$7$0$$sroa_idx264$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$7$0$$sroa_idx264$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$7$0$$sroa_idx264$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$7$0$$sroa_idx264$i+3>>0];$$sroa$7$0$copyload265$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$0$0$$sroa_idx$i72 = (($$0229272$i) + ($251<<4)|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i72>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i72+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i72+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i72+3>>0];$$sroa$0$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$4$0$$sroa_idx240$i = (((($$0229272$i) + ($251<<4)|0)) + 4|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx240$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx240$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx240$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx240$i+3>>0];$$sroa$4$0$copyload241$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$5$0$$sroa_idx243$i = (((($$0229272$i) + ($251<<4)|0)) + 8|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx243$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx243$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx243$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx243$i+3>>0];$$sroa$5$0$copyload244$i = +HEAPF32[tempDoublePtr>>2];\n       $$sroa$6$0$$sroa_idx246$i = (((($$0229272$i) + ($251<<4)|0)) + 12|0);\n       HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx246$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx246$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx246$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx246$i+3>>0];$$sroa$6$0$copyload247$i = +HEAPF32[tempDoublePtr>>2];\n       $252 = $$0234$i * $$sroa$4$0$copyload241$i;\n       $253 = $$0234$i * $$sroa$5$0$copyload244$i;\n       $254 = $$0234$i * $$sroa$6$0$copyload247$i;\n       $255 = $$0234$i * $$sroa$0$0$copyload$i;\n       $256 = $$sroa$5253$0$copyload256$i + $252;\n       $257 = $256 > 1.1000000238418579;\n       do {\n        if ($257) {\n         $258 = 1.1000000238418579 - $$sroa$5253$0$copyload256$i;\n         $259 = $258 / $252;\n         $260 = $259 > 1.0;\n         $$$i$i = $260 ? 1.0 : $259;\n         $$0$i$i = $$$i$i;\n        } else {\n         $261 = $256 < -0.10000000149011612;\n         if (!($261)) {\n          $$0$i$i = 1.0;\n          break;\n         }\n         $262 = -0.10000000149011612 - $$sroa$5253$0$copyload256$i;\n         $263 = $262 / $252;\n         $264 = $263 > 1.0;\n         $$74$i$i = $264 ? 1.0 : $263;\n         $$0$i$i = $$74$i$i;\n        }\n       } while(0);\n       $265 = $$sroa$6258$0$copyload261$i + $253;\n       $266 = $265 > 1.1000000238418579;\n       do {\n        if ($266) {\n         $267 = 1.1000000238418579 - $$sroa$6258$0$copyload261$i;\n         $268 = $267 / $253;\n         $269 = $$0$i$i < $268;\n         $$0$$i$i = $269 ? $$0$i$i : $268;\n         $$1$i$i = $$0$$i$i;\n        } else {\n         $270 = $265 < -0.10000000149011612;\n         if (!($270)) {\n          $$1$i$i = $$0$i$i;\n          break;\n         }\n         $271 = -0.10000000149011612 - $$sroa$6258$0$copyload261$i;\n         $272 = $271 / $253;\n         $273 = $$0$i$i < $272;\n         $$0$75$i$i = $273 ? $$0$i$i : $272;\n         $$1$i$i = $$0$75$i$i;\n        }\n       } while(0);\n       $274 = $$sroa$7$0$copyload265$i + $254;\n       $275 = $274 > 1.1000000238418579;\n       do {\n        if ($275) {\n         $276 = 1.1000000238418579 - $$sroa$7$0$copyload265$i;\n         $277 = $276 / $254;\n         $278 = $$1$i$i < $277;\n         $$1$$i$i = $278 ? $$1$i$i : $277;\n         $$2$i$i = $$1$$i$i;\n        } else {\n         $279 = $274 < -0.10000000149011612;\n         if (!($279)) {\n          $$2$i$i = $$1$i$i;\n          break;\n         }\n         $280 = -0.10000000149011612 - $$sroa$7$0$copyload265$i;\n         $281 = $280 / $254;\n         $282 = $$1$i$i < $281;\n         $$1$76$i$i = $282 ? $$1$i$i : $281;\n         $$2$i$i = $$1$76$i$i;\n        }\n       } while(0);\n       $283 = $$sroa$0249$0$copyload251$i + $255;\n       $284 = $283 > 1.0;\n       do {\n        if ($284) {\n         $$073$i$i = 1.0;\n        } else {\n         $285 = $283 < 0.0;\n         if (!($285)) {\n          $$073$i$i = $283;\n          break;\n         }\n         $$073$i$i = 0.0;\n        }\n       } while(0);\n       $286 = $252 * $252;\n       $287 = $253 * $253;\n       $288 = $286 + $287;\n       $289 = $254 * $254;\n       $290 = $288 + $289;\n       $291 = $255 * $255;\n       $292 = $291 + $290;\n       $293 = $292 > $191;\n       do {\n        if ($293) {\n         $294 = $$2$i$i;\n         $295 = $294 * 0.80000000000000004;\n         $296 = $295;\n         $$3$i$i = $296;\n         label = 92;\n        } else {\n         $297 = $292 < 3.0517578125E-5;\n         if (!($297)) {\n          $$3$i$i = $$2$i$i;\n          label = 92;\n          break;\n         }\n         HEAPF32[$3>>2] = $$sroa$0249$0$copyload251$i;\n         HEAPF32[$225>>2] = $$sroa$5253$0$copyload256$i;\n         HEAPF32[$226>>2] = $$sroa$6258$0$copyload261$i;\n         $storemerge$i = $$sroa$7$0$copyload265$i;\n        }\n       } while(0);\n       if ((label|0) == 92) {\n        label = 0;\n        HEAPF32[$3>>2] = $$073$i$i;\n        $298 = $252 * $$3$i$i;\n        $299 = $$sroa$5253$0$copyload256$i + $298;\n        HEAPF32[$225>>2] = $299;\n        $300 = $253 * $$3$i$i;\n        $301 = $$sroa$6258$0$copyload261$i + $300;\n        HEAPF32[$226>>2] = $301;\n        $302 = $254 * $$3$i$i;\n        $303 = $$sroa$7$0$copyload265$i + $302;\n        $storemerge$i = $303;\n       }\n       HEAPF32[$227>>2] = $storemerge$i;\n       if ($468) {\n        $304 = HEAP32[$245>>2]|0;\n        $305 = (($304) + ($$0236$i)|0);\n        $306 = HEAP8[$305>>0]|0;\n        $307 = $306&255;\n        $308 = $307;\n       } else {\n        $308 = $$1$i71;\n       }\n       $309 = (_nearest_search($210,$3,$308,0)|0);\n       $310 = $309&255;\n       $311 = HEAP32[$245>>2]|0;\n       $312 = (($311) + ($$0236$i)|0);\n       HEAP8[$312>>0] = $310;\n       $$sroa$045$0$$sroa_idx$i = (((($201)) + 12|0) + (($309*24)|0)|0);\n       $$sroa$045$0$copyload$i = +HEAPF32[$$sroa$045$0$$sroa_idx$i>>2];\n       $$sroa$4$0$$sroa_idx47$i = (((((($201)) + 12|0) + (($309*24)|0)|0)) + 4|0);\n       $$sroa$4$0$copyload$i = +HEAPF32[$$sroa$4$0$$sroa_idx47$i>>2];\n       $$sroa$5$0$$sroa_idx49$i = (((((($201)) + 12|0) + (($309*24)|0)|0)) + 8|0);\n       $$sroa$5$0$copyload$i = +HEAPF32[$$sroa$5$0$$sroa_idx49$i>>2];\n       $$sroa$6$0$$sroa_idx51$i = (((((($201)) + 12|0) + (($309*24)|0)|0)) + 12|0);\n       $$sroa$6$0$copyload$i = +HEAPF32[$$sroa$6$0$$sroa_idx51$i>>2];\n       $313 = +HEAPF32[$3>>2];\n       $314 = $313 - $$sroa$045$0$copyload$i;\n       $315 = +HEAPF32[$225>>2];\n       $316 = $315 - $$sroa$4$0$copyload$i;\n       $317 = +HEAPF32[$226>>2];\n       $318 = $317 - $$sroa$5$0$copyload$i;\n       $319 = +HEAPF32[$227>>2];\n       $320 = $319 - $$sroa$6$0$copyload$i;\n       $321 = $316 * $316;\n       $322 = $318 * $318;\n       $323 = $321 + $322;\n       $324 = $320 * $320;\n       $325 = $323 + $324;\n       $326 = $314 * $314;\n       $327 = $326 + $325;\n       $328 = $327 > $191;\n       if ($328) {\n        $329 = $316 * 0.75;\n        $330 = $318 * 0.75;\n        $331 = $320 * 0.75;\n        $332 = $314 * 0.75;\n        $$sroa$0$0$i = $332;$$sroa$14$0$i = $329;$$sroa$27$0$i = $330;$$sroa$40$0$i = $331;\n       } else {\n        $$sroa$0$0$i = $314;$$sroa$14$0$i = $316;$$sroa$27$0$i = $318;$$sroa$40$0$i = $320;\n       }\n       $333 = $$sroa$0$0$i * 0.4375;\n       if ($241) {\n        $334 = (($$0236$i) + 2)|0;\n        $335 = (($$0229272$i) + ($334<<4)|0);\n        $336 = +HEAPF32[$335>>2];\n        $337 = $333 + $336;\n        HEAPF32[$335>>2] = $337;\n        $338 = $$sroa$14$0$i * 0.4375;\n        $339 = (((($$0229272$i) + ($334<<4)|0)) + 4|0);\n        $340 = +HEAPF32[$339>>2];\n        $341 = $338 + $340;\n        HEAPF32[$339>>2] = $341;\n        $342 = $$sroa$27$0$i * 0.4375;\n        $343 = (((($$0229272$i) + ($334<<4)|0)) + 8|0);\n        $344 = +HEAPF32[$343>>2];\n        $345 = $342 + $344;\n        HEAPF32[$343>>2] = $345;\n        $346 = $$sroa$40$0$i * 0.4375;\n        $347 = (((($$0229272$i) + ($334<<4)|0)) + 12|0);\n        $348 = +HEAPF32[$347>>2];\n        $349 = $346 + $348;\n        HEAPF32[$347>>2] = $349;\n        $350 = $$sroa$0$0$i * 0.0625;\n        $351 = (($$0230271$i) + ($334<<4)|0);\n        HEAPF32[$351>>2] = $350;\n        $352 = $$sroa$14$0$i * 0.0625;\n        $353 = (((($$0230271$i) + ($334<<4)|0)) + 4|0);\n        HEAPF32[$353>>2] = $352;\n        $354 = $$sroa$27$0$i * 0.0625;\n        $355 = (((($$0230271$i) + ($334<<4)|0)) + 8|0);\n        HEAPF32[$355>>2] = $354;\n        $356 = $$sroa$40$0$i * 0.0625;\n        $357 = (((($$0230271$i) + ($334<<4)|0)) + 12|0);\n        HEAPF32[$357>>2] = $356;\n        $358 = $$sroa$0$0$i * 0.3125;\n        $359 = (($$0230271$i) + ($251<<4)|0);\n        $360 = +HEAPF32[$359>>2];\n        $361 = $358 + $360;\n        HEAPF32[$359>>2] = $361;\n        $362 = $$sroa$14$0$i * 0.3125;\n        $363 = (((($$0230271$i) + ($251<<4)|0)) + 4|0);\n        $364 = +HEAPF32[$363>>2];\n        $365 = $362 + $364;\n        HEAPF32[$363>>2] = $365;\n        $366 = $$sroa$27$0$i * 0.3125;\n        $367 = (((($$0230271$i) + ($251<<4)|0)) + 8|0);\n        $368 = +HEAPF32[$367>>2];\n        $369 = $366 + $368;\n        HEAPF32[$367>>2] = $369;\n        $370 = $$sroa$40$0$i * 0.3125;\n        $371 = (((($$0230271$i) + ($251<<4)|0)) + 12|0);\n        $372 = +HEAPF32[$371>>2];\n        $373 = $370 + $372;\n        HEAPF32[$371>>2] = $373;\n        $374 = $$sroa$0$0$i * 0.1875;\n        $375 = (($$0230271$i) + ($$0236$i<<4)|0);\n        $376 = +HEAPF32[$375>>2];\n        $377 = $374 + $376;\n        HEAPF32[$375>>2] = $377;\n        $378 = $$sroa$14$0$i * 0.1875;\n        $379 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 4|0);\n        $380 = +HEAPF32[$379>>2];\n        $381 = $378 + $380;\n        HEAPF32[$379>>2] = $381;\n        $382 = $$sroa$27$0$i * 0.1875;\n        $383 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 8|0);\n        $384 = +HEAPF32[$383>>2];\n        $385 = $382 + $384;\n        HEAPF32[$383>>2] = $385;\n        $386 = $$sroa$40$0$i * 0.1875;\n        $387 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 12|0);\n        $388 = +HEAPF32[$387>>2];\n        $389 = $386 + $388;\n        HEAPF32[$387>>2] = $389;\n        $390 = (($$0236$i) + ($$0235270$i))|0;\n        $391 = ($390|0)<($194|0);\n        if ($391) {\n         $469 = $390;\n        } else {\n         break;\n        }\n       } else {\n        $392 = (($$0229272$i) + ($$0236$i<<4)|0);\n        $393 = +HEAPF32[$392>>2];\n        $394 = $333 + $393;\n        HEAPF32[$392>>2] = $394;\n        $395 = $$sroa$14$0$i * 0.4375;\n        $396 = (((($$0229272$i) + ($$0236$i<<4)|0)) + 4|0);\n        $397 = +HEAPF32[$396>>2];\n        $398 = $395 + $397;\n        HEAPF32[$396>>2] = $398;\n        $399 = $$sroa$27$0$i * 0.4375;\n        $400 = (((($$0229272$i) + ($$0236$i<<4)|0)) + 8|0);\n        $401 = +HEAPF32[$400>>2];\n        $402 = $399 + $401;\n        HEAPF32[$400>>2] = $402;\n        $403 = $$sroa$40$0$i * 0.4375;\n        $404 = (((($$0229272$i) + ($$0236$i<<4)|0)) + 12|0);\n        $405 = +HEAPF32[$404>>2];\n        $406 = $403 + $405;\n        HEAPF32[$404>>2] = $406;\n        $407 = $$sroa$0$0$i * 0.0625;\n        $408 = (($$0230271$i) + ($$0236$i<<4)|0);\n        HEAPF32[$408>>2] = $407;\n        $409 = $$sroa$14$0$i * 0.0625;\n        $410 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 4|0);\n        HEAPF32[$410>>2] = $409;\n        $411 = $$sroa$27$0$i * 0.0625;\n        $412 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 8|0);\n        HEAPF32[$412>>2] = $411;\n        $413 = $$sroa$40$0$i * 0.0625;\n        $414 = (((($$0230271$i) + ($$0236$i<<4)|0)) + 12|0);\n        HEAPF32[$414>>2] = $413;\n        $415 = $$sroa$0$0$i * 0.3125;\n        $416 = (($$0230271$i) + ($251<<4)|0);\n        $417 = +HEAPF32[$416>>2];\n        $418 = $415 + $417;\n        HEAPF32[$416>>2] = $418;\n        $419 = $$sroa$14$0$i * 0.3125;\n        $420 = (((($$0230271$i) + ($251<<4)|0)) + 4|0);\n        $421 = +HEAPF32[$420>>2];\n        $422 = $419 + $421;\n        HEAPF32[$420>>2] = $422;\n        $423 = $$sroa$27$0$i * 0.3125;\n        $424 = (((($$0230271$i) + ($251<<4)|0)) + 8|0);\n        $425 = +HEAPF32[$424>>2];\n        $426 = $423 + $425;\n        HEAPF32[$424>>2] = $426;\n        $427 = $$sroa$40$0$i * 0.3125;\n        $428 = (((($$0230271$i) + ($251<<4)|0)) + 12|0);\n        $429 = +HEAPF32[$428>>2];\n        $430 = $427 + $429;\n        HEAPF32[$428>>2] = $430;\n        $431 = $$sroa$0$0$i * 0.1875;\n        $432 = (($$0236$i) + 2)|0;\n        $433 = (($$0230271$i) + ($432<<4)|0);\n        $434 = +HEAPF32[$433>>2];\n        $435 = $431 + $434;\n        HEAPF32[$433>>2] = $435;\n        $436 = $$sroa$14$0$i * 0.1875;\n        $437 = (((($$0230271$i) + ($432<<4)|0)) + 4|0);\n        $438 = +HEAPF32[$437>>2];\n        $439 = $436 + $438;\n        HEAPF32[$437>>2] = $439;\n        $440 = $$sroa$27$0$i * 0.1875;\n        $441 = (((($$0230271$i) + ($432<<4)|0)) + 8|0);\n        $442 = +HEAPF32[$441>>2];\n        $443 = $440 + $442;\n        HEAPF32[$441>>2] = $443;\n        $444 = $$sroa$40$0$i * 0.1875;\n        $445 = (((($$0230271$i) + ($432<<4)|0)) + 12|0);\n        $446 = +HEAPF32[$445>>2];\n        $447 = $444 + $446;\n        HEAPF32[$445>>2] = $447;\n        $448 = (($$0236$i) + ($$0235270$i))|0;\n        $449 = ($448|0)<(1);\n        if ($449) {\n         break;\n        } else {\n         $469 = $448;\n        }\n       }\n       $$0236$i = $469;$$1$i71 = $309;\n      }\n      $450 = (0 - ($$0235270$i))|0;\n      $451 = (($$0237269$i) + 1)|0;\n      $452 = ($451|0)<($192|0);\n      if ($452) {\n       $$0230271$i$phi = $$0229272$i;$$0229272$i$phi = $$0230271$i;$$0235270$i = $450;$$0237269$i = $451;$$0238268$i = $309;$$0230271$i = $$0230271$i$phi;$$0229272$i = $$0229272$i$phi;\n      } else {\n       label = 104;\n       break;\n      }\n     }\n     if ((label|0) == 104) {\n      $461 = ((($1)) + 8|0);\n      $462 = HEAP32[$461>>2]|0;\n      $463 = ($$0230271$i>>>0)<($$0229272$i>>>0);\n      $464 = $463 ? $$0230271$i : $$0229272$i;\n      FUNCTION_TABLE_vi[$462 & 127]($464);\n      _nearest_free($210);\n      $$161 = $$060;\n      break;\n     }\n     $453 = ((($1)) + 8|0);\n     $454 = HEAP32[$453>>2]|0;\n     $455 = ($$0229272$i>>>0)<($$0230271$i>>>0);\n     $456 = $455 ? $$0229272$i : $$0230271$i;\n     FUNCTION_TABLE_vi[$454 & 127]($456);\n     _nearest_free($210);\n     $$4 = 102;\n     STACKTOP = sp;return ($$4|0);\n    }\n   } while(0);\n   $465 = +HEAPF64[$$sroa$9$0$$sroa_idx11$i>>3];\n   $466 = $465 < 0.0;\n   if (!($466)) {\n    $$4 = 0;\n    STACKTOP = sp;return ($$4|0);\n   }\n   $467 = $$161;\n   HEAPF64[$$sroa$9$0$$sroa_idx11$i>>3] = $467;\n   $$4 = 0;\n   STACKTOP = sp;return ($$4|0);\n  }\n }\n HEAP32[$16>>2] = 0;\n $$4 = 101;\n STACKTOP = sp;return ($$4|0);\n}\nfunction _remap_to_palette($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$04954$us = 0, $$050 = 0.0, $$05157 = 0, $$05157$us = 0, $$052$lcssa = 0.0, $$05256$us = 0.0, $$055$us = 0, $$153$us = 0.0, $$alloca_mul = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $4 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond63 = 0, $exitcond64 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $$byval_copy = sp + 8|0;\n $3 = sp;\n $4 = ((($0)) + 36|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 32|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (_liq_image_get_row_f($0,0)|0);\n $9 = ($8|0)==(0|0);\n if ($9) {\n  $$050 = -1.0;\n  STACKTOP = sp;return (+$$050);\n }\n $10 = (_nearest_init($2)|0);\n $11 = HEAP32[$2>>2]|0;\n $12 = (($11) + 2)|0;\n $13 = (_llvm_stacksave()|0);\n $$alloca_mul = ($12*40)|0;\n $14 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n _kmeans_init($2,1,$14);\n $15 = ($5|0)>(0);\n L4: do {\n  if ($15) {\n   $16 = ($7|0)==(0);\n   if ($16) {\n    $$05157 = 0;\n    while(1) {\n     (_liq_image_get_row_f($0,$$05157)|0);\n     $35 = (($$05157) + 1)|0;\n     $exitcond = ($35|0)==($5|0);\n     if ($exitcond) {\n      $$052$lcssa = 0.0;\n      break L4;\n     } else {\n      $$05157 = $35;\n     }\n    }\n   } else {\n    $$05157$us = 0;$$05256$us = 0.0;\n   }\n   while(1) {\n    $17 = (_liq_image_get_row_f($0,$$05157$us)|0);\n    $18 = (($1) + ($$05157$us<<2)|0);\n    $$04954$us = 0;$$055$us = 0;$$153$us = $$05256$us;\n    while(1) {\n     $19 = (($17) + ($$055$us<<4)|0);\n     $20 = (_nearest_search($10,$19,$$04954$us,$3)|0);\n     $21 = $20&255;\n     $22 = HEAP32[$18>>2]|0;\n     $23 = (($22) + ($$055$us)|0);\n     HEAP8[$23>>0] = $21;\n     $24 = +HEAPF32[$3>>2];\n     $25 = $24;\n     $26 = $$153$us + $25;\n     ;HEAP32[$$byval_copy>>2]=HEAP32[$19>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$19+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$19+12>>2]|0;\n     _kmeans_update_color($$byval_copy,1.0,$2,$20,0,$14);\n     $27 = (($$055$us) + 1)|0;\n     $exitcond63 = ($27|0)==($7|0);\n     if ($exitcond63) {\n      break;\n     } else {\n      $$04954$us = $20;$$055$us = $27;$$153$us = $26;\n     }\n    }\n    $28 = (($$05157$us) + 1)|0;\n    $exitcond64 = ($28|0)==($5|0);\n    if ($exitcond64) {\n     $$052$lcssa = $26;\n     break;\n    } else {\n     $$05157$us = $28;$$05256$us = $26;\n    }\n   }\n  } else {\n   $$052$lcssa = 0.0;\n  }\n } while(0);\n _kmeans_finalize($2,1,$14);\n _nearest_free($10);\n $29 = HEAP32[$6>>2]|0;\n $30 = HEAP32[$4>>2]|0;\n $31 = Math_imul($30, $29)|0;\n $32 = (+($31>>>0));\n $33 = $$052$lcssa / $32;\n $34 = $33;\n _llvm_stackrestore(($13|0));\n $$050 = $34;\n STACKTOP = sp;return (+$$050);\n}\nfunction _pam_computeacolorhash($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0$us = 0, $$06386$us = 0, $$06485$us = 0.0, $$06888$us = 0, $$07387$us = 0, $$1$us = 0.0, $$17484$us = 0, $$2$us = 0.0, $$275$us = 0, $$5 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0;\n var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $$byval_copy = sp + 4|0;\n $5 = sp;\n $6 = ((($0)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = 255 >>> $7;\n $9 = $8 << $7;\n $10 = $8 ^ 255;\n $11 = $9 << 24;\n $12 = $9 << 16;\n $13 = $9 << 8;\n $14 = $12 | $9;\n $15 = $14 | $11;\n $16 = $15 | $13;\n $17 = $10 << 24;\n $18 = $10 << 16;\n $19 = $10 << 8;\n $20 = $18 | $10;\n $21 = $20 | $17;\n $22 = $21 | $19;\n $23 = ((($0)) + 24|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ($3|0)==(0);\n L1: do {\n  if (!($25)) {\n   $26 = ($2|0)==(0);\n   $27 = (8 - ($7))|0;\n   if (!($26)) {\n    $$06888$us = 0;$$07387$us = $4;\n    L3: while(1) {\n     $28 = (($1) + ($$06888$us<<2)|0);\n     $$06386$us = 0;$$06485$us = 1.0;$$17484$us = $$07387$us;\n     while(1) {\n      $31 = ($$17484$us|0)==(0|0);\n      if ($31) {\n       $$1$us = $$06485$us;$$275$us = 0;\n      } else {\n       $32 = ((($$17484$us)) + 1|0);\n       $33 = HEAP8[$$17484$us>>0]|0;\n       $34 = (+($33&255));\n       $35 = $34 / 255.0;\n       $36 = $35 + 0.5;\n       $37 = $36;\n       $$1$us = $37;$$275$us = $32;\n      }\n      $38 = HEAP32[$28>>2]|0;\n      $39 = (($38) + ($$06386$us<<2)|0);\n      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);\n      HEAP32[$5>>2] = $40;\n      $41 = ($40>>>0)<(16777216);\n      if ($41) {\n       HEAP32[$5>>2] = 0;\n       $$0$us = 0;$$2$us = 10.0;\n      } else {\n       $42 = $40 & $16;\n       $43 = $40 & $22;\n       $44 = $43 >>> $27;\n       $45 = $44 | $42;\n       HEAP32[$5>>2] = $45;\n       $46 = (($45>>>0) % ($24>>>0))&-1;\n       $$0$us = $46;$$2$us = $$1$us;\n      }\n      ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;\n      $47 = (_pam_add_to_hash($0,$$0$us,$$2$us,$$byval_copy,$$06888$us,$3)|0);\n      $29 = (($$06386$us) + 1)|0;\n      if (!($47)) {\n       $$5 = 0;\n       break L3;\n      }\n      $30 = ($29>>>0)<($2>>>0);\n      if ($30) {\n       $$06386$us = $29;$$06485$us = $$2$us;$$17484$us = $$275$us;\n      } else {\n       break;\n      }\n     }\n     $48 = (($$06888$us) + 1)|0;\n     $49 = ($48>>>0)<($3>>>0);\n     if ($49) {\n      $$06888$us = $48;$$07387$us = $$275$us;\n     } else {\n      break L1;\n     }\n    }\n    STACKTOP = sp;return ($$5|0);\n   }\n  }\n } while(0);\n $50 = ((($0)) + 16|0);\n HEAP32[$50>>2] = $2;\n $51 = ((($0)) + 20|0);\n $52 = HEAP32[$51>>2]|0;\n $53 = (($52) + ($3))|0;\n HEAP32[$51>>2] = $53;\n $$5 = 1;\n STACKTOP = sp;return ($$5|0);\n}\nfunction _pam_add_to_hash($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = +$2;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$0107$lcssa = 0, $$0107114 = 0, $$0108 = 0, $$0109 = 0, $$4 = 0, $$pre117 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$022$0$$sroa_idx = 0, $$sroa$2$0$$sroa_idx4 = 0, $$sroa$225$0$$sroa_idx26 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = (((($0)) + 2080|0) + (($1*28)|0)|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = HEAP32[$3>>2]|0;\n $9 = ($7|0)==($8|0);\n $10 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 16|0);\n $11 = HEAP32[$10>>2]|0;\n L1: do {\n  if ($9) {\n   $12 = ($11|0)==(0);\n   if (!($12)) {\n    $13 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 4|0);\n    $14 = +HEAPF32[$13>>2];\n    $15 = $14 + $2;\n    HEAPF32[$13>>2] = $15;\n    $$4 = 1;\n    return ($$4|0);\n   }\n  } else {\n   switch ($11|0) {\n   case 0:  {\n    break L1;\n    break;\n   }\n   case 1:  {\n    $95 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 8|0);\n    HEAP32[$95>>2] = $8;\n    $96 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 12|0);\n    HEAPF32[$96>>2] = $2;\n    HEAP32[$10>>2] = 2;\n    $97 = ((($0)) + 12|0);\n    $98 = HEAP32[$97>>2]|0;\n    $99 = (($98) + 1)|0;\n    HEAP32[$97>>2] = $99;\n    $$4 = 1;\n    return ($$4|0);\n    break;\n   }\n   default: {\n   }\n   }\n   $16 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 8|0);\n   $17 = HEAP32[$16>>2]|0;\n   $18 = ($17|0)==($8|0);\n   if ($18) {\n    $19 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 12|0);\n    $20 = +HEAPF32[$19>>2];\n    $21 = $20 + $2;\n    HEAPF32[$19>>2] = $21;\n    $$4 = 1;\n    return ($$4|0);\n   }\n   $22 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 24|0);\n   $23 = HEAP32[$22>>2]|0;\n   $24 = ($11|0)==(2);\n   L14: do {\n    if ($24) {\n     $$0107$lcssa = 0;\n    } else {\n     $25 = (($11) + -2)|0;\n     $$0107114 = 0;\n     while(1) {\n      $26 = (($23) + ($$0107114<<3)|0);\n      $27 = HEAP32[$26>>2]|0;\n      $28 = ($27|0)==($8|0);\n      if ($28) {\n       break;\n      }\n      $32 = (($$0107114) + 1)|0;\n      $33 = ($32>>>0)<($25>>>0);\n      if ($33) {\n       $$0107114 = $32;\n      } else {\n       $$0107$lcssa = $32;\n       break L14;\n      }\n     }\n     $29 = (((($23) + ($$0107114<<3)|0)) + 4|0);\n     $30 = +HEAPF32[$29>>2];\n     $31 = $30 + $2;\n     HEAPF32[$29>>2] = $31;\n     $$4 = 1;\n     return ($$4|0);\n    }\n   } while(0);\n   $34 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 20|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ($$0107$lcssa>>>0)<($35>>>0);\n   if ($36) {\n    $$sroa$022$0$$sroa_idx = (($23) + ($$0107$lcssa<<3)|0);\n    HEAP32[$$sroa$022$0$$sroa_idx>>2] = $8;\n    $$sroa$225$0$$sroa_idx26 = (((($23) + ($$0107$lcssa<<3)|0)) + 4|0);\n    HEAPF32[$$sroa$225$0$$sroa_idx26>>2] = $2;\n    $37 = HEAP32[$10>>2]|0;\n    $38 = (($37) + 1)|0;\n    HEAP32[$10>>2] = $38;\n    $39 = ((($0)) + 12|0);\n    $40 = HEAP32[$39>>2]|0;\n    $41 = (($40) + 1)|0;\n    HEAP32[$39>>2] = $41;\n    $$4 = 1;\n    return ($$4|0);\n   }\n   $42 = ((($0)) + 12|0);\n   $43 = HEAP32[$42>>2]|0;\n   $44 = (($43) + 1)|0;\n   HEAP32[$42>>2] = $44;\n   $45 = ((($0)) + 8|0);\n   $46 = HEAP32[$45>>2]|0;\n   $47 = ($44>>>0)>($46>>>0);\n   if ($47) {\n    $$4 = 0;\n    return ($$4|0);\n   }\n   $48 = ($23|0)==(0|0);\n   do {\n    if ($48) {\n     $49 = ((($0)) + 28|0);\n     $50 = HEAP32[$49>>2]|0;\n     $51 = ($50|0)==(0);\n     if ($51) {\n      $52 = ((($0)) + 20|0);\n      $53 = HEAP32[$52>>2]|0;\n      $54 = (($5) - ($4))|0;\n      $55 = (($54) + ($53))|0;\n      $56 = $44 << 1;\n      $57 = Math_imul($56, $55)|0;\n      $58 = (($4) + 1)|0;\n      $59 = (($58) + ($53))|0;\n      $60 = (($57>>>0) / ($59>>>0))&-1;\n      $61 = $60 << 3;\n      $62 = (($61) + 8192)|0;\n      $63 = (_mempool_alloc($0,64,$62)|0);\n      $$0108 = $63;$$0109 = 8;\n      break;\n     } else {\n      $64 = (($50) + -1)|0;\n      HEAP32[$49>>2] = $64;\n      $65 = (((($0)) + 32|0) + ($64<<2)|0);\n      $66 = HEAP32[$65>>2]|0;\n      $$0108 = $66;$$0109 = 8;\n      break;\n     }\n    } else {\n     $67 = HEAP32[$34>>2]|0;\n     $68 = $67 << 1;\n     $69 = (($68) + 16)|0;\n     $70 = ((($0)) + 28|0);\n     $71 = HEAP32[$70>>2]|0;\n     $72 = ($71>>>0)<(511);\n     if ($72) {\n      $73 = (((($0)) + 32|0) + ($71<<2)|0);\n      $74 = (($71) + 1)|0;\n      HEAP32[$70>>2] = $74;\n      HEAP32[$73>>2] = $23;\n      $$pre117 = HEAP32[$42>>2]|0;\n      $81 = $$pre117;\n     } else {\n      $81 = $44;\n     }\n     $75 = ((($0)) + 20|0);\n     $76 = HEAP32[$75>>2]|0;\n     $77 = (($5) - ($4))|0;\n     $78 = (($77) + ($76))|0;\n     $79 = $78 << 1;\n     $80 = Math_imul($79, $81)|0;\n     $82 = (($4) + 1)|0;\n     $83 = (($82) + ($76))|0;\n     $84 = (($80>>>0) / ($83>>>0))&-1;\n     $85 = $69 << 5;\n     $86 = (($84) + ($85))|0;\n     $87 = $86 << 3;\n     $88 = $69 << 3;\n     $89 = (_mempool_alloc($0,$88,$87)|0);\n     $90 = ($89|0)==(0|0);\n     if ($90) {\n      $$4 = 0;\n      return ($$4|0);\n     } else {\n      $91 = HEAP32[$34>>2]|0;\n      $92 = $91 << 3;\n      _memcpy(($89|0),($23|0),($92|0))|0;\n      $$0108 = $89;$$0109 = $69;\n      break;\n     }\n    }\n   } while(0);\n   HEAP32[$22>>2] = $$0108;\n   HEAP32[$34>>2] = $$0109;\n   $$sroa$0$0$$sroa_idx = (($$0108) + ($$0107$lcssa<<3)|0);\n   HEAP32[$$sroa$0$0$$sroa_idx>>2] = $8;\n   $$sroa$2$0$$sroa_idx4 = (((($$0108) + ($$0107$lcssa<<3)|0)) + 4|0);\n   HEAPF32[$$sroa$2$0$$sroa_idx4>>2] = $2;\n   $93 = HEAP32[$10>>2]|0;\n   $94 = (($93) + 1)|0;\n   HEAP32[$10>>2] = $94;\n   $$4 = 1;\n   return ($$4|0);\n  }\n } while(0);\n HEAP32[$6>>2] = $8;\n $100 = (((((($0)) + 2080|0) + (($1*28)|0)|0)) + 4|0);\n HEAPF32[$100>>2] = $2;\n HEAP32[$10>>2] = 1;\n $101 = ((($0)) + 12|0);\n $102 = HEAP32[$101>>2]|0;\n $103 = (($102) + 1)|0;\n HEAP32[$101>>2] = $103;\n $$4 = 1;\n return ($$4|0);\n}\nfunction _pam_allocacolorhash($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$0 = 0, $$sroa$3$0$$sroa_idx1 = 0, $$sroa$4$0$$sroa_idx2 = 0, $$sroa$5$0$$sroa_idx = 0, $$sroa$54$0$$sroa_idx5 = 0, $$sroa$6$0$$sroa_idx = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $5 = sp;\n $6 = ($1>>>0)>(262144);\n $7 = $6 ? 6 : 5;\n $8 = (($7) + ($2))|0;\n $9 = (($1>>>0) / ($8>>>0))&-1;\n $10 = ($9>>>0)>($0>>>0);\n $$ = $10 ? $0 : $9;\n $11 = ($$>>>0)<(66000);\n $12 = ($$>>>0)<(200000);\n $13 = $12 ? 12011 : 24019;\n $14 = $11 ? 6673 : $13;\n HEAP32[$5>>2] = 0;\n $15 = ($14*28)|0;\n $16 = (($15) + 2080)|0;\n $17 = $$ << 3;\n $18 = (($16) + ($17))|0;\n $19 = (_mempool_create($5,$16,$18,$3,$4)|0);\n $20 = ($19|0)==(0|0);\n if ($20) {\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $21 = HEAP32[$5>>2]|0;\n HEAP32[$19>>2] = $21;\n $$sroa$3$0$$sroa_idx1 = ((($19)) + 4|0);\n HEAP32[$$sroa$3$0$$sroa_idx1>>2] = $2;\n $$sroa$4$0$$sroa_idx2 = ((($19)) + 8|0);\n HEAP32[$$sroa$4$0$$sroa_idx2>>2] = $0;\n $$sroa$5$0$$sroa_idx = ((($19)) + 12|0);\n ;HEAP32[$$sroa$5$0$$sroa_idx>>2]=0|0;HEAP32[$$sroa$5$0$$sroa_idx+4>>2]=0|0;HEAP32[$$sroa$5$0$$sroa_idx+8>>2]=0|0;\n $$sroa$54$0$$sroa_idx5 = ((($19)) + 24|0);\n HEAP32[$$sroa$54$0$$sroa_idx5>>2] = $14;\n $$sroa$6$0$$sroa_idx = ((($19)) + 28|0);\n _memset(($$sroa$6$0$$sroa_idx|0),0,2052)|0;\n $22 = ((($19)) + 2080|0);\n _memset(($22|0),0,($15|0))|0;\n $$0 = $19;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _pam_acolorhashtoacolorhist($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n $3 = $3|0;\n var $$$i = 0.0, $$$i79 = 0.0, $$$i92 = 0.0, $$06$i = 0, $$061 = 0, $$06299 = 0, $$06398 = 0, $$064$lcssa = 0.0, $$06497 = 0.0, $$095 = 0, $$16593 = 0.0, $$194 = 0, $$2 = 0, $$266 = 0.0, $$phitmp = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$$sroa_idx$i75 = 0, $$sroa$0$0$$sroa_idx$i88 = 0, $$sroa$017$0$copyload$i = 0, $$sroa$017$0$copyload$i68 = 0;\n var $$sroa$017$0$copyload$i81 = 0, $$sroa$2$0$$sroa_idx14$i = 0, $$sroa$2$0$$sroa_idx14$i76 = 0, $$sroa$2$0$$sroa_idx14$i89 = 0, $$sroa$2$0$$sroa_idx33 = 0, $$sroa$3$0$$sroa_idx15$i = 0, $$sroa$3$0$$sroa_idx15$i77 = 0, $$sroa$3$0$$sroa_idx15$i90 = 0, $$sroa$3$0$$sroa_idx34 = 0, $$sroa$4$0$$sroa_idx16$i = 0, $$sroa$4$0$$sroa_idx16$i78 = 0, $$sroa$4$0$$sroa_idx16$i91 = 0, $$sroa$4$0$$sroa_idx35 = 0, $$sroa$418$0$$sroa_idx$i = 0, $$sroa$418$0$$sroa_idx$i69 = 0, $$sroa$418$0$$sroa_idx$i82 = 0, $$sroa$418$0$copyload$i = 0, $$sroa$418$0$copyload$i70 = 0, $$sroa$418$0$copyload$i83 = 0, $$sroa$5$0$$sroa_idx$i = 0;\n var $$sroa$5$0$$sroa_idx$i71 = 0, $$sroa$5$0$$sroa_idx$i84 = 0, $$sroa$5$0$$sroa_idx36 = 0, $$sroa$5$0$copyload$i = 0, $$sroa$5$0$copyload$i72 = 0, $$sroa$5$0$copyload$i85 = 0, $$sroa$6$0$$sroa_idx$i = 0, $$sroa$6$0$$sroa_idx$i73 = 0, $$sroa$6$0$$sroa_idx$i86 = 0, $$sroa$6$0$copyload$i = 0, $$sroa$6$0$copyload$i74 = 0, $$sroa$6$0$copyload$i87 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0.0;\n var $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0;\n var $54 = 0, $55 = 0.0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0;\n var $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $exitcond$i = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1024|0);\n $4 = sp;\n $5 = (FUNCTION_TABLE_ii[$2 & 63](24)|0);\n $6 = ($5|0)!=(0|0);\n $7 = ($0|0)!=(0|0);\n $or$cond = $7 & $6;\n if (!($or$cond)) {\n  $$061 = 0;\n  STACKTOP = sp;return ($$061|0);\n }\n $8 = ((($0)) + 12|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0);\n $phitmp = $9 << 5;\n $$phitmp = $10 ? 32 : $phitmp;\n $11 = (FUNCTION_TABLE_ii[$2 & 63]($$phitmp)|0);\n $12 = HEAP32[$8>>2]|0;\n $13 = ((($0)) + 4|0);\n $14 = HEAP32[$13>>2]|0;\n HEAP32[$5>>2] = $11;\n $$sroa$2$0$$sroa_idx33 = ((($5)) + 4|0);\n HEAP32[$$sroa$2$0$$sroa_idx33>>2] = $3;\n $$sroa$3$0$$sroa_idx34 = ((($5)) + 8|0);\n HEAPF64[$$sroa$3$0$$sroa_idx34>>3] = 0.0;\n $$sroa$4$0$$sroa_idx35 = ((($5)) + 16|0);\n HEAP32[$$sroa$4$0$$sroa_idx35>>2] = $12;\n $$sroa$5$0$$sroa_idx36 = ((($5)) + 20|0);\n HEAP32[$$sroa$5$0$$sroa_idx36>>2] = $14;\n $15 = ($11|0)==(0|0);\n if ($15) {\n  $$061 = 0;\n  STACKTOP = sp;return ($$061|0);\n }\n $16 = 0.54990000000000006 / $1;\n $$06$i = 0;\n while(1) {\n  $17 = (+($$06$i|0));\n  $18 = $17 / 255.0;\n  $19 = (+Math_pow((+$18),(+$16)));\n  $20 = $19;\n  $21 = (($4) + ($$06$i<<2)|0);\n  HEAPF32[$21>>2] = $20;\n  $22 = (($$06$i) + 1)|0;\n  $exitcond$i = ($22|0)==(256);\n  if ($exitcond$i) {\n   break;\n  } else {\n   $$06$i = $22;\n  }\n }\n $23 = ((($0)) + 16|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = (+($24>>>0));\n $26 = $25 * 0.10000000149011612;\n $27 = ((($0)) + 20|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = (+($28>>>0));\n $30 = $26 * $29;\n $31 = ((($0)) + 24|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = ($32|0)==(0);\n if ($33) {\n  $$064$lcssa = 0.0;\n } else {\n  $$06299 = 0;$$06398 = 0;$$06497 = 0.0;\n  while(1) {\n   $34 = (((((($0)) + 2080|0) + (($$06299*28)|0)|0)) + 16|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ($35|0)==(0);\n   if ($36) {\n    $$2 = $$06398;$$266 = $$06497;\n   } else {\n    $37 = HEAP32[$5>>2]|0;\n    $38 = (($$06398) + 1)|0;\n    $39 = (((($0)) + 2080|0) + (($$06299*28)|0)|0);\n    $$sroa$017$0$copyload$i81 = HEAP8[$39>>0]|0;\n    $$sroa$418$0$$sroa_idx$i82 = ((($39)) + 1|0);\n    $$sroa$418$0$copyload$i83 = HEAP8[$$sroa$418$0$$sroa_idx$i82>>0]|0;\n    $$sroa$5$0$$sroa_idx$i84 = ((($39)) + 2|0);\n    $$sroa$5$0$copyload$i85 = HEAP8[$$sroa$5$0$$sroa_idx$i84>>0]|0;\n    $$sroa$6$0$$sroa_idx$i86 = ((($39)) + 3|0);\n    $$sroa$6$0$copyload$i87 = HEAP8[$$sroa$6$0$$sroa_idx$i86>>0]|0;\n    $40 = (+($$sroa$6$0$copyload$i87&255));\n    $41 = $40 / 255.0;\n    $42 = $$sroa$017$0$copyload$i81&255;\n    $43 = (($4) + ($42<<2)|0);\n    $44 = +HEAPF32[$43>>2];\n    $45 = $44 * $41;\n    $46 = $$sroa$418$0$copyload$i83&255;\n    $47 = (($4) + ($46<<2)|0);\n    $48 = +HEAPF32[$47>>2];\n    $49 = $41 * $48;\n    $50 = $$sroa$5$0$copyload$i85&255;\n    $51 = (($4) + ($50<<2)|0);\n    $52 = +HEAPF32[$51>>2];\n    $53 = $41 * $52;\n    $$sroa$0$0$$sroa_idx$i88 = (($37) + ($$06398<<5)|0);\n    HEAPF32[$$sroa$0$0$$sroa_idx$i88>>2] = $41;\n    $$sroa$2$0$$sroa_idx14$i89 = (((($37) + ($$06398<<5)|0)) + 4|0);\n    HEAPF32[$$sroa$2$0$$sroa_idx14$i89>>2] = $45;\n    $$sroa$3$0$$sroa_idx15$i90 = (((($37) + ($$06398<<5)|0)) + 8|0);\n    HEAPF32[$$sroa$3$0$$sroa_idx15$i90>>2] = $49;\n    $$sroa$4$0$$sroa_idx16$i91 = (((($37) + ($$06398<<5)|0)) + 12|0);\n    HEAPF32[$$sroa$4$0$$sroa_idx16$i91>>2] = $53;\n    $54 = (((((($0)) + 2080|0) + (($$06299*28)|0)|0)) + 4|0);\n    $55 = +HEAPF32[$54>>2];\n    $56 = $55 < $30;\n    $$$i92 = $56 ? $55 : $30;\n    $57 = (((($37) + ($$06398<<5)|0)) + 20|0);\n    HEAPF32[$57>>2] = $$$i92;\n    $58 = (((($37) + ($$06398<<5)|0)) + 16|0);\n    HEAPF32[$58>>2] = $$$i92;\n    $59 = $$$i92;\n    $60 = $$06497 + $59;\n    $61 = HEAP32[$34>>2]|0;\n    $62 = ($61>>>0)>(1);\n    if ($62) {\n     $63 = HEAP32[$5>>2]|0;\n     $64 = (($$06398) + 2)|0;\n     $65 = (((((($0)) + 2080|0) + (($$06299*28)|0)|0)) + 8|0);\n     $$sroa$017$0$copyload$i68 = HEAP8[$65>>0]|0;\n     $$sroa$418$0$$sroa_idx$i69 = ((($65)) + 1|0);\n     $$sroa$418$0$copyload$i70 = HEAP8[$$sroa$418$0$$sroa_idx$i69>>0]|0;\n     $$sroa$5$0$$sroa_idx$i71 = ((($65)) + 2|0);\n     $$sroa$5$0$copyload$i72 = HEAP8[$$sroa$5$0$$sroa_idx$i71>>0]|0;\n     $$sroa$6$0$$sroa_idx$i73 = ((($65)) + 3|0);\n     $$sroa$6$0$copyload$i74 = HEAP8[$$sroa$6$0$$sroa_idx$i73>>0]|0;\n     $66 = (+($$sroa$6$0$copyload$i74&255));\n     $67 = $66 / 255.0;\n     $68 = $$sroa$017$0$copyload$i68&255;\n     $69 = (($4) + ($68<<2)|0);\n     $70 = +HEAPF32[$69>>2];\n     $71 = $70 * $67;\n     $72 = $$sroa$418$0$copyload$i70&255;\n     $73 = (($4) + ($72<<2)|0);\n     $74 = +HEAPF32[$73>>2];\n     $75 = $67 * $74;\n     $76 = $$sroa$5$0$copyload$i72&255;\n     $77 = (($4) + ($76<<2)|0);\n     $78 = +HEAPF32[$77>>2];\n     $79 = $67 * $78;\n     $$sroa$0$0$$sroa_idx$i75 = (($63) + ($38<<5)|0);\n     HEAPF32[$$sroa$0$0$$sroa_idx$i75>>2] = $67;\n     $$sroa$2$0$$sroa_idx14$i76 = (((($63) + ($38<<5)|0)) + 4|0);\n     HEAPF32[$$sroa$2$0$$sroa_idx14$i76>>2] = $71;\n     $$sroa$3$0$$sroa_idx15$i77 = (((($63) + ($38<<5)|0)) + 8|0);\n     HEAPF32[$$sroa$3$0$$sroa_idx15$i77>>2] = $75;\n     $$sroa$4$0$$sroa_idx16$i78 = (((($63) + ($38<<5)|0)) + 12|0);\n     HEAPF32[$$sroa$4$0$$sroa_idx16$i78>>2] = $79;\n     $80 = (((((($0)) + 2080|0) + (($$06299*28)|0)|0)) + 12|0);\n     $81 = +HEAPF32[$80>>2];\n     $82 = $81 < $30;\n     $$$i79 = $82 ? $81 : $30;\n     $83 = (((($63) + ($38<<5)|0)) + 20|0);\n     HEAPF32[$83>>2] = $$$i79;\n     $84 = (((($63) + ($38<<5)|0)) + 16|0);\n     HEAPF32[$84>>2] = $$$i79;\n     $85 = $$$i79;\n     $86 = $60 + $85;\n     $87 = HEAP32[$34>>2]|0;\n     $88 = ($87|0)==(2);\n     if ($88) {\n      $$2 = $64;$$266 = $86;\n     } else {\n      $89 = (((((($0)) + 2080|0) + (($$06299*28)|0)|0)) + 24|0);\n      $$095 = 0;$$16593 = $86;$$194 = $64;\n      while(1) {\n       $90 = HEAP32[$5>>2]|0;\n       $91 = (($$194) + 1)|0;\n       $92 = HEAP32[$89>>2]|0;\n       $93 = (($92) + ($$095<<3)|0);\n       $$sroa$017$0$copyload$i = HEAP8[$93>>0]|0;\n       $$sroa$418$0$$sroa_idx$i = ((($93)) + 1|0);\n       $$sroa$418$0$copyload$i = HEAP8[$$sroa$418$0$$sroa_idx$i>>0]|0;\n       $$sroa$5$0$$sroa_idx$i = ((($93)) + 2|0);\n       $$sroa$5$0$copyload$i = HEAP8[$$sroa$5$0$$sroa_idx$i>>0]|0;\n       $$sroa$6$0$$sroa_idx$i = ((($93)) + 3|0);\n       $$sroa$6$0$copyload$i = HEAP8[$$sroa$6$0$$sroa_idx$i>>0]|0;\n       $94 = (+($$sroa$6$0$copyload$i&255));\n       $95 = $94 / 255.0;\n       $96 = $$sroa$017$0$copyload$i&255;\n       $97 = (($4) + ($96<<2)|0);\n       $98 = +HEAPF32[$97>>2];\n       $99 = $98 * $95;\n       $100 = $$sroa$418$0$copyload$i&255;\n       $101 = (($4) + ($100<<2)|0);\n       $102 = +HEAPF32[$101>>2];\n       $103 = $95 * $102;\n       $104 = $$sroa$5$0$copyload$i&255;\n       $105 = (($4) + ($104<<2)|0);\n       $106 = +HEAPF32[$105>>2];\n       $107 = $95 * $106;\n       $$sroa$0$0$$sroa_idx$i = (($90) + ($$194<<5)|0);\n       HEAPF32[$$sroa$0$0$$sroa_idx$i>>2] = $95;\n       $$sroa$2$0$$sroa_idx14$i = (((($90) + ($$194<<5)|0)) + 4|0);\n       HEAPF32[$$sroa$2$0$$sroa_idx14$i>>2] = $99;\n       $$sroa$3$0$$sroa_idx15$i = (((($90) + ($$194<<5)|0)) + 8|0);\n       HEAPF32[$$sroa$3$0$$sroa_idx15$i>>2] = $103;\n       $$sroa$4$0$$sroa_idx16$i = (((($90) + ($$194<<5)|0)) + 12|0);\n       HEAPF32[$$sroa$4$0$$sroa_idx16$i>>2] = $107;\n       $108 = (((($92) + ($$095<<3)|0)) + 4|0);\n       $109 = +HEAPF32[$108>>2];\n       $110 = $109 < $30;\n       $$$i = $110 ? $109 : $30;\n       $111 = (((($90) + ($$194<<5)|0)) + 20|0);\n       HEAPF32[$111>>2] = $$$i;\n       $112 = (((($90) + ($$194<<5)|0)) + 16|0);\n       HEAPF32[$112>>2] = $$$i;\n       $113 = $$$i;\n       $114 = $$16593 + $113;\n       $115 = (($$095) + 1)|0;\n       $116 = HEAP32[$34>>2]|0;\n       $117 = (($116) + -2)|0;\n       $118 = ($115>>>0)<($117>>>0);\n       if ($118) {\n        $$095 = $115;$$16593 = $114;$$194 = $91;\n       } else {\n        $$2 = $91;$$266 = $114;\n        break;\n       }\n      }\n     }\n    } else {\n     $$2 = $38;$$266 = $60;\n    }\n   }\n   $119 = (($$06299) + 1)|0;\n   $120 = HEAP32[$31>>2]|0;\n   $121 = ($119>>>0)<($120>>>0);\n   if ($121) {\n    $$06299 = $119;$$06398 = $$2;$$06497 = $$266;\n   } else {\n    $$064$lcssa = $$266;\n    break;\n   }\n  }\n }\n HEAPF64[$$sroa$3$0$$sroa_idx34>>3] = $$064$lcssa;\n $$061 = $5;\n STACKTOP = sp;return ($$061|0);\n}\nfunction _to_f_set_gamma($0,$1) {\n $0 = $0|0;\n $1 = +$1;\n var $$06 = 0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = 0.54990000000000006 / $1;\n $$06 = 0;\n while(1) {\n  $3 = (+($$06|0));\n  $4 = $3 / 255.0;\n  $5 = (+Math_pow((+$4),(+$2)));\n  $6 = $5;\n  $7 = (($0) + ($$06<<2)|0);\n  HEAPF32[$7>>2] = $6;\n  $8 = (($$06) + 1)|0;\n  $exitcond = ($8|0)==(256);\n  if ($exitcond) {\n   break;\n  } else {\n   $$06 = $8;\n  }\n }\n return;\n}\nfunction _pam_freeacolorhash($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = HEAP32[$0>>2]|0;\n _mempool_destroy($2);\n return;\n}\nfunction _pam_freeacolorhist($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 4|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = HEAP32[$0>>2]|0;\n FUNCTION_TABLE_vi[$2 & 127]($3);\n $4 = HEAP32[$1>>2]|0;\n FUNCTION_TABLE_vi[$4 & 127]($0);\n return;\n}\nfunction _pam_colormap($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$sroa$2$0$$sroa_idx1 = 0, $$sroa$3$0$$sroa_idx2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0*24)|0;\n $4 = (($3) + 12)|0;\n $5 = (FUNCTION_TABLE_ii[$1 & 63]($4)|0);\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $$0 = 0;\n  return ($$0|0);\n }\n HEAP32[$5>>2] = $0;\n $$sroa$2$0$$sroa_idx1 = ((($5)) + 4|0);\n HEAP32[$$sroa$2$0$$sroa_idx1>>2] = $1;\n $$sroa$3$0$$sroa_idx2 = ((($5)) + 8|0);\n HEAP32[$$sroa$3$0$$sroa_idx2>>2] = $2;\n $7 = ((($5)) + 12|0);\n _memset(($7|0),0,($3|0))|0;\n $$0 = $5;\n return ($$0|0);\n}\nfunction _pam_duplicate_colormap($0) {\n $0 = $0|0;\n var $$0$i = 0, $$013 = 0, $$sroa$2$0$$sroa_idx1$i = 0, $$sroa$3$0$$sroa_idx2$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = HEAP32[$0>>2]|0;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($1*24)|0;\n $7 = (($6) + 12)|0;\n $8 = (FUNCTION_TABLE_ii[$3 & 63]($7)|0);\n $9 = ($8|0)==(0|0);\n if ($9) {\n  $$0$i = 0;\n } else {\n  HEAP32[$8>>2] = $1;\n  $$sroa$2$0$$sroa_idx1$i = ((($8)) + 4|0);\n  HEAP32[$$sroa$2$0$$sroa_idx1$i>>2] = $3;\n  $$sroa$3$0$$sroa_idx2$i = ((($8)) + 8|0);\n  HEAP32[$$sroa$3$0$$sroa_idx2$i>>2] = $5;\n  $10 = ((($8)) + 12|0);\n  _memset(($10|0),0,($6|0))|0;\n  $$0$i = $8;\n }\n $11 = HEAP32[$0>>2]|0;\n $12 = ($11|0)==(0);\n if ($12) {\n  return ($$0$i|0);\n } else {\n  $$013 = 0;\n }\n while(1) {\n  $13 = (((($$0$i)) + 12|0) + (($$013*24)|0)|0);\n  $14 = (((($0)) + 12|0) + (($$013*24)|0)|0);\n  ;HEAP32[$13>>2]=HEAP32[$14>>2]|0;HEAP32[$13+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$13+8>>2]=HEAP32[$14+8>>2]|0;HEAP32[$13+12>>2]=HEAP32[$14+12>>2]|0;HEAP32[$13+16>>2]=HEAP32[$14+16>>2]|0;HEAP32[$13+20>>2]=HEAP32[$14+20>>2]|0;\n  $15 = (($$013) + 1)|0;\n  $16 = HEAP32[$0>>2]|0;\n  $17 = ($15>>>0)<($16>>>0);\n  if ($17) {\n   $$013 = $15;\n  } else {\n   break;\n  }\n }\n return ($$0$i|0);\n}\nfunction _pam_freecolormap($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 8|0);\n $2 = HEAP32[$1>>2]|0;\n FUNCTION_TABLE_vi[$2 & 127]($0);\n return;\n}\nfunction _mediancut($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = +$2;\n $3 = +$3;\n $4 = $4|0;\n $5 = $5|0;\n var $$ = 0, $$$i = 0.0, $$$i$i$i$i$i = 0.0, $$$i$i$i$i$i116 = 0.0, $$$i4$i$i$i$i = 0.0, $$$i4$i$i$i$i118 = 0.0, $$$i5$i$i$i$i = 0.0, $$$i5$i$i$i$i117 = 0.0, $$0$i = 0.0, $$0$i$i$i$i$i = 0, $$0$i50$i$i$i$i = 0, $$0$lcssa = 0.0, $$0$lcssa$i$i$i$i = 0, $$0$ph45$i$i$i$i = 0, $$0100149 = 0, $$0101$lcssa = 0.0, $$0101148 = 0.0, $$0102155 = 0, $$0103150 = 0, $$014$lcssa$i$i = 0.0;\n var $$01433$i$i = 0.0, $$0156 = 0.0, $$01618$i = 0, $$017$i = 0, $$020$ph$i$i$i = 0, $$021$i$i$i = 0, $$021$ph$i$i$i = 0, $$02325$i = 0, $$024$i = 0, $$024$ph$i$i$i = 0, $$030$ph44$i$i$i$i = 0, $$034$i$i = 0, $$03649$i = 0, $$03748$i = 0.0, $$042$i$i$i$i = 0, $$042$lcssa$i = 0.0, $$04278$i = 0.0, $$04380$i = 0, $$046$i = 0, $$04757$i = 0;\n var $$04855$i = 0, $$04954$i = 0.0, $$079$i = 0, $$1$i = 0, $$1$i$i$i = 0.0, $$1$i$i$i$i = 0, $$138$i = 0.0, $$150$i = 0.0, $$150$i$i$i = 0.0, $$152$i$i$i = 0.0, $$154$i$i$i = 0.0, $$2 = 0, $$2$i = 0, $$251$i = 0.0, $$345$i = 0.0, $$4$i = 0.0, $$53$i = 0.0, $$alloca_mul = 0, $$in$i$i$i$i = 0, $$lcssa147 = 0;\n var $$lcssa41$i$i$i = 0, $$lcssa76$i = 0, $$sroa$0$0$$sroa_idx$i$1$i$i = 0, $$sroa$0$0$$sroa_idx$i$i = 0, $$sroa$0$0$copyload$i$1$i$i = 0.0, $$sroa$0$0$copyload$i$i = 0.0, $$sroa$0$0$copyload$i$i$i = 0.0, $$sroa$0$0$i = 0.0, $$sroa$022$0$$sroa_idx$i$i = 0, $$sroa$022$0$copyload$i$i = 0.0, $$sroa$056$0$$sroa_idx$i = 0, $$sroa$056$0$copyload$i = 0.0, $$sroa$4$0$$sroa_idx16$i$i = 0, $$sroa$4$0$$sroa_idx58$i = 0, $$sroa$4$0$$sroa_idx7$i$1$i$i = 0, $$sroa$4$0$$sroa_idx7$i$i$i = 0, $$sroa$4$0$copyload$i = 0.0, $$sroa$4$0$copyload$i$1$i$i = 0.0, $$sroa$4$0$copyload$i$i = 0.0, $$sroa$4$0$copyload$i$i$i = 0.0;\n var $$sroa$424$0$$sroa_idx25$i$i = 0, $$sroa$424$0$copyload$i$i = 0.0, $$sroa$5$0$$sroa_idx18$i$i = 0, $$sroa$5$0$$sroa_idx9$i$1$i$i = 0, $$sroa$5$0$$sroa_idx9$i$i$i = 0, $$sroa$5$0$copyload$i$1$i$i = 0.0, $$sroa$5$0$copyload$i$i = 0.0, $$sroa$5$0$copyload$i$i$i = 0.0, $$sroa$5$0$i = 0.0, $$sroa$527$0$$sroa_idx28$i$i = 0, $$sroa$527$0$copyload$i$i = 0.0, $$sroa$560$0$$sroa_idx61$i = 0, $$sroa$560$0$copyload$i = 0.0, $$sroa$6$0$$sroa_idx11$i$1$i$i = 0, $$sroa$6$0$$sroa_idx11$i$i$i = 0, $$sroa$6$0$$sroa_idx20$i$i = 0, $$sroa$6$0$$sroa_idx63$i = 0, $$sroa$6$0$copyload$i = 0.0, $$sroa$6$0$copyload$i$1$i$i = 0.0, $$sroa$6$0$copyload$i$i = 0.0;\n var $$sroa$6$0$copyload$i$i$i = 0.0, $$sroa$630$0$$sroa_idx31$i$i = 0, $$sroa$630$0$copyload$i$i = 0.0, $$sroa$7$0$i = 0.0, $$sroa$765$0$$sroa_idx66$i = 0, $$sroa$765$0$copyload$i = 0.0, $$sroa$9$0$i = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0;\n var $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0;\n var $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0.0, $183 = 0.0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0;\n var $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0.0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0;\n var $220 = 0.0, $221 = 0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0.0, $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0, $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0.0;\n var $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;\n var $257 = 0, $258 = 0.0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0.0, $265 = 0, $266 = 0.0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0.0, $272 = 0, $273 = 0.0, $274 = 0;\n var $275 = 0, $276 = 0, $277 = 0, $278 = 0.0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0, $29 = 0.0, $290 = 0.0, $291 = 0.0, $292 = 0.0;\n var $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0, $298 = 0.0, $299 = 0.0, $30 = 0, $300 = 0.0, $301 = 0.0, $302 = 0.0, $303 = 0, $304 = 0.0, $305 = 0.0, $306 = 0.0, $307 = 0.0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0;\n var $311 = 0.0, $312 = 0.0, $313 = 0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0, $319 = 0.0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0.0, $324 = 0.0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;\n var $33 = 0.0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0.0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0.0, $343 = 0.0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;\n var $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0.0;\n var $44 = 0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;\n var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;\n var $exitcond = 0, $exitcond$i = 0, $exitcond$i108 = 0, $exitcond$i110 = 0, $exitcond$i113 = 0, $exitcond$i119 = 0, $or$cond27$i$i$i = 0, $phitmp$i = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);\n $6 = sp + 104|0;\n $7 = sp + 72|0;\n $8 = sp + 40|0;\n $9 = sp + 8|0;\n $10 = sp;\n $11 = HEAP32[$0>>2]|0;\n $$alloca_mul = $1<<6;\n $12 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $13 = ((($0)) + 16|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)==(0);\n if ($15) {\n  $$0$lcssa = 0.0;$$lcssa147 = 0;\n } else {\n  $$0102155 = 0;$$0156 = 0.0;\n  while(1) {\n   $26 = (((($11) + ($$0102155<<5)|0)) + 16|0);\n   $27 = +HEAPF32[$26>>2];\n   $28 = $27;\n   $29 = $$0156 + $28;\n   $30 = (($$0102155) + 1)|0;\n   $31 = ($30>>>0)<($14>>>0);\n   if ($31) {\n    $$0102155 = $30;$$0156 = $29;\n   } else {\n    $$0$lcssa = $29;$$lcssa147 = $14;\n    break;\n   }\n  }\n }\n _box_init($12,$11,0,$$lcssa147,$$0$lcssa);\n $16 = ($1>>>0)>(1);\n L5: do {\n  if ($16) {\n   $17 = (+($1>>>0));\n   $18 = ((($9)) + 4|0);\n   $19 = ((($9)) + 8|0);\n   $20 = ((($9)) + 12|0);\n   $21 = ((($9)) + 16|0);\n   $22 = ((($9)) + 20|0);\n   $23 = ((($9)) + 24|0);\n   $24 = ((($9)) + 28|0);\n   $25 = ((($0)) + 8|0);\n   $$0103150 = 1;\n   L7: while(1) {\n    $32 = (+($$0103150>>>0));\n    $33 = $32 / $17;\n    $34 = $33 * 16.0;\n    $35 = $34 * $3;\n    $36 = $35 + $3;\n    $$04757$i = -1;$$04855$i = 0;$$04954$i = 0.0;\n    while(1) {\n     $37 = (((($12) + ($$04855$i<<6)|0)) + 60|0);\n     $38 = HEAP32[$37>>2]|0;\n     $39 = ($38>>>0)<(2);\n     if ($39) {\n      $$2$i = $$04757$i;$$251$i = $$04954$i;\n     } else {\n      $40 = (((($12) + ($$04855$i<<6)|0)) + 20|0);\n      $41 = +HEAPF32[$40>>2];\n      $42 = (((($12) + ($$04855$i<<6)|0)) + 24|0);\n      $43 = +HEAPF32[$42>>2];\n      $44 = (((($12) + ($$04855$i<<6)|0)) + 28|0);\n      $45 = +HEAPF32[$44>>2];\n      $46 = $43 > $45;\n      $$$i = $46 ? $43 : $45;\n      $47 = $41 > $$$i;\n      $48 = $47 ? $41 : $$$i;\n      $49 = (((($12) + ($$04855$i<<6)|0)) + 32|0);\n      $50 = +HEAPF64[$49>>3];\n      $51 = (((($12) + ($$04855$i<<6)|0)) + 16|0);\n      $52 = +HEAPF32[$51>>2];\n      $53 = $52 > $48;\n      $$53$i = $53 ? $52 : $48;\n      $54 = $$53$i;\n      $55 = $50 * $54;\n      $56 = (((($12) + ($$04855$i<<6)|0)) + 48|0);\n      $57 = +HEAPF64[$56>>3];\n      $58 = $57 > $36;\n      if ($58) {\n       $59 = $57 * $55;\n       $60 = $59 / $36;\n       $$0$i = $60;\n      } else {\n       $$0$i = $55;\n      }\n      $61 = $$0$i > $$04954$i;\n      $$150$i = $61 ? $$0$i : $$04954$i;\n      $$1$i = $61 ? $$04855$i : $$04757$i;\n      $$2$i = $$1$i;$$251$i = $$150$i;\n     }\n     $62 = (($$04855$i) + 1)|0;\n     $exitcond$i = ($62|0)==($$0103150|0);\n     if ($exitcond$i) {\n      break;\n     } else {\n      $$04757$i = $$2$i;$$04855$i = $62;$$04954$i = $$251$i;\n     }\n    }\n    $63 = ($$2$i|0)<(0);\n    if ($63) {\n     $$2 = $$0103150;\n     break L5;\n    }\n    $64 = (($12) + ($$2$i<<6)|0);\n    $65 = (((($12) + ($$2$i<<6)|0)) + 56|0);\n    $66 = HEAP32[$65>>2]|0;\n    $67 = (((($12) + ($$2$i<<6)|0)) + 60|0);\n    $68 = HEAP32[$67>>2]|0;\n    HEAP32[$9>>2] = 0;\n    $69 = (((($12) + ($$2$i<<6)|0)) + 16|0);\n    $70 = HEAP32[$69>>2]|0;\n    HEAP32[$18>>2] = $70;\n    HEAP32[$19>>2] = 1;\n    $71 = (((($12) + ($$2$i<<6)|0)) + 20|0);\n    $72 = HEAP32[$71>>2]|0;\n    HEAP32[$20>>2] = $72;\n    HEAP32[$21>>2] = 2;\n    $73 = (((($12) + ($$2$i<<6)|0)) + 24|0);\n    $74 = HEAP32[$73>>2]|0;\n    HEAP32[$22>>2] = $74;\n    HEAP32[$23>>2] = 3;\n    $75 = (((($12) + ($$2$i<<6)|0)) + 28|0);\n    $76 = HEAP32[$75>>2]|0;\n    HEAP32[$24>>2] = $76;\n    _qsort($9,4,8,50);\n    $77 = HEAP32[$67>>2]|0;\n    $78 = ($77|0)==(0);\n    if ($78) {\n     $$lcssa76$i = 0;\n    } else {\n     $79 = HEAP32[$9>>2]|0;\n     $80 = HEAP32[$21>>2]|0;\n     $81 = HEAP32[$19>>2]|0;\n     $82 = HEAP32[$23>>2]|0;\n     $$04380$i = 0;\n     while(1) {\n      $184 = HEAP32[$65>>2]|0;\n      $185 = (($184) + ($$04380$i))|0;\n      $186 = (($11) + ($185<<5)|0);\n      $187 = (($186) + ($79<<2)|0);\n      $188 = +HEAPF32[$187>>2];\n      $189 = $188;\n      $190 = $189 * 65535.0;\n      $191 = (~~(($190))>>>0);\n      $192 = $191 << 16;\n      $193 = (($186) + ($80<<2)|0);\n      $194 = +HEAPF32[$193>>2];\n      $195 = $194;\n      $196 = (($186) + ($81<<2)|0);\n      $197 = +HEAPF32[$196>>2];\n      $198 = $197;\n      $199 = $198 * 0.5;\n      $200 = $195 + $199;\n      $201 = (($186) + ($82<<2)|0);\n      $202 = +HEAPF32[$201>>2];\n      $203 = $202;\n      $204 = $203 * 0.25;\n      $205 = $200 + $204;\n      $206 = $205 * 65535.0;\n      $207 = (~~(($206))>>>0);\n      $208 = $207 | $192;\n      $209 = (((($11) + ($185<<5)|0)) + 28|0);\n      HEAP32[$209>>2] = $208;\n      $210 = (($$04380$i) + 1)|0;\n      $211 = HEAP32[$67>>2]|0;\n      $212 = ($210>>>0)<($211>>>0);\n      if ($212) {\n       $$04380$i = $210;\n      } else {\n       $$lcssa76$i = $211;\n       break;\n      }\n     }\n    }\n    $83 = (($$lcssa76$i) + -1)|0;\n    $84 = $83 >>> 1;\n    $85 = HEAP32[$65>>2]|0;\n    $86 = (($11) + ($85<<5)|0);\n    $$020$ph$i$i$i = $86;$$021$ph$i$i$i = $$lcssa76$i;$$024$ph$i$i$i = $84;\n    while(1) {\n     $87 = ((($$020$ph$i$i$i)) + 284|0);\n     $$in$i$i$i$i = ((($$020$ph$i$i$i)) + 28|0);\n     $$021$i$i$i = $$021$ph$i$i$i;\n     while(1) {\n      $88 = ($$021$i$i$i>>>0)>(7);\n      L28: do {\n       if ($88) {\n        $89 = ($$021$i$i$i>>>0)<(32);\n        $90 = $$021$i$i$i >>> 1;\n        do {\n         if ($89) {\n          $$0$i50$i$i$i$i = $90;\n         } else {\n          $91 = (($$021$i$i$i) + -1)|0;\n          $92 = HEAP32[$87>>2]|0;\n          $93 = (((($$020$ph$i$i$i) + ($90<<5)|0)) + 28|0);\n          $94 = HEAP32[$93>>2]|0;\n          $95 = (((($$020$ph$i$i$i) + ($91<<5)|0)) + 28|0);\n          $96 = HEAP32[$95>>2]|0;\n          $97 = ($92>>>0)<($94>>>0);\n          if ($97) {\n           $98 = ($94>>>0)<($96>>>0);\n           if ($98) {\n            $$0$i50$i$i$i$i = $90;\n            break;\n           }\n           $99 = ($92>>>0)<($96>>>0);\n           $100 = $99 ? $91 : 8;\n           $$0$i$i$i$i$i = $100;\n          } else {\n           $101 = ($94>>>0)>($96>>>0);\n           if ($101) {\n            $$0$i50$i$i$i$i = $90;\n            break;\n           }\n           $102 = ($92>>>0)<($96>>>0);\n           $103 = $102 ? 8 : $91;\n           $$0$i$i$i$i$i = $103;\n          }\n          $104 = ($$0$i$i$i$i$i|0)==(0);\n          if ($104) {\n           label = 26;\n           break L28;\n          } else {\n           $$0$i50$i$i$i$i = $$0$i$i$i$i$i;\n          }\n         }\n        } while(0);\n        $105 = (($$020$ph$i$i$i) + ($$0$i50$i$i$i$i<<5)|0);\n        ;HEAP32[$6>>2]=HEAP32[$$020$ph$i$i$i>>2]|0;HEAP32[$6+4>>2]=HEAP32[$$020$ph$i$i$i+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$$020$ph$i$i$i+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$$020$ph$i$i$i+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$$020$ph$i$i$i+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$$020$ph$i$i$i+20>>2]|0;HEAP32[$6+24>>2]=HEAP32[$$020$ph$i$i$i+24>>2]|0;HEAP32[$6+28>>2]=HEAP32[$$020$ph$i$i$i+28>>2]|0;\n        ;HEAP32[$$020$ph$i$i$i>>2]=HEAP32[$105>>2]|0;HEAP32[$$020$ph$i$i$i+4>>2]=HEAP32[$105+4>>2]|0;HEAP32[$$020$ph$i$i$i+8>>2]=HEAP32[$105+8>>2]|0;HEAP32[$$020$ph$i$i$i+12>>2]=HEAP32[$105+12>>2]|0;HEAP32[$$020$ph$i$i$i+16>>2]=HEAP32[$105+16>>2]|0;HEAP32[$$020$ph$i$i$i+20>>2]=HEAP32[$105+20>>2]|0;HEAP32[$$020$ph$i$i$i+24>>2]=HEAP32[$105+24>>2]|0;HEAP32[$$020$ph$i$i$i+28>>2]=HEAP32[$105+28>>2]|0;\n        ;HEAP32[$105>>2]=HEAP32[$6>>2]|0;HEAP32[$105+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$105+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$105+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$105+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$105+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$105+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$105+28>>2]=HEAP32[$6+28>>2]|0;\n        label = 26;\n       } else {\n        $106 = ($$021$i$i$i>>>0)>(1);\n        if ($106) {\n         label = 26;\n        } else {\n         $125 = 0;\n        }\n       }\n      } while(0);\n      if ((label|0) == 26) {\n       label = 0;\n       $107 = HEAP32[$$in$i$i$i$i>>2]|0;\n       $$0$ph45$i$i$i$i = 1;$$030$ph44$i$i$i$i = $$021$i$i$i;\n       L42: while(1) {\n        $$042$i$i$i$i = $$0$ph45$i$i$i$i;\n        while(1) {\n         $108 = (((($$020$ph$i$i$i) + ($$042$i$i$i$i<<5)|0)) + 28|0);\n         $109 = HEAP32[$108>>2]|0;\n         $110 = ($109>>>0)<($107>>>0);\n         if ($110) {\n          break;\n         }\n         $112 = (($$042$i$i$i$i) + 1)|0;\n         $113 = ($112>>>0)<($$030$ph44$i$i$i$i>>>0);\n         if ($113) {\n          $$042$i$i$i$i = $112;\n         } else {\n          $$0$lcssa$i$i$i$i = $112;\n          break L42;\n         }\n        }\n        $111 = (($$020$ph$i$i$i) + ($$042$i$i$i$i<<5)|0);\n        $$1$i$i$i$i = $$030$ph44$i$i$i$i;\n        while(1) {\n         $114 = (($$1$i$i$i$i) + -1)|0;\n         $115 = ($$042$i$i$i$i>>>0)<($114>>>0);\n         if (!($115)) {\n          $$lcssa41$i$i$i = 0;\n          break;\n         }\n         $116 = (((($$020$ph$i$i$i) + ($114<<5)|0)) + 28|0);\n         $117 = HEAP32[$116>>2]|0;\n         $118 = ($117>>>0)>($107>>>0);\n         if ($118) {\n          $$lcssa41$i$i$i = 1;\n          break;\n         } else {\n          $$1$i$i$i$i = $114;\n         }\n        }\n        $119 = ($$042$i$i$i$i|0)==($114|0);\n        if (!($119)) {\n         $120 = (($$020$ph$i$i$i) + ($114<<5)|0);\n         ;HEAP32[$7>>2]=HEAP32[$111>>2]|0;HEAP32[$7+4>>2]=HEAP32[$111+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$111+8>>2]|0;HEAP32[$7+12>>2]=HEAP32[$111+12>>2]|0;HEAP32[$7+16>>2]=HEAP32[$111+16>>2]|0;HEAP32[$7+20>>2]=HEAP32[$111+20>>2]|0;HEAP32[$7+24>>2]=HEAP32[$111+24>>2]|0;HEAP32[$7+28>>2]=HEAP32[$111+28>>2]|0;\n         ;HEAP32[$111>>2]=HEAP32[$120>>2]|0;HEAP32[$111+4>>2]=HEAP32[$120+4>>2]|0;HEAP32[$111+8>>2]=HEAP32[$120+8>>2]|0;HEAP32[$111+12>>2]=HEAP32[$120+12>>2]|0;HEAP32[$111+16>>2]=HEAP32[$120+16>>2]|0;HEAP32[$111+20>>2]=HEAP32[$120+20>>2]|0;HEAP32[$111+24>>2]=HEAP32[$120+24>>2]|0;HEAP32[$111+28>>2]=HEAP32[$120+28>>2]|0;\n         ;HEAP32[$120>>2]=HEAP32[$7>>2]|0;HEAP32[$120+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$120+8>>2]=HEAP32[$7+8>>2]|0;HEAP32[$120+12>>2]=HEAP32[$7+12>>2]|0;HEAP32[$120+16>>2]=HEAP32[$7+16>>2]|0;HEAP32[$120+20>>2]=HEAP32[$7+20>>2]|0;HEAP32[$120+24>>2]=HEAP32[$7+24>>2]|0;HEAP32[$120+28>>2]=HEAP32[$7+28>>2]|0;\n        }\n        if ($$lcssa41$i$i$i) {\n         $$0$ph45$i$i$i$i = $$042$i$i$i$i;$$030$ph44$i$i$i$i = $114;\n        } else {\n         $$0$lcssa$i$i$i$i = $$042$i$i$i$i;\n         break;\n        }\n       }\n       $121 = (($$0$lcssa$i$i$i$i) + -1)|0;\n       $122 = ($121|0)==(0);\n       if ($122) {\n        $125 = 0;\n       } else {\n        $123 = (($$020$ph$i$i$i) + ($121<<5)|0);\n        ;HEAP32[$8>>2]=HEAP32[$$020$ph$i$i$i>>2]|0;HEAP32[$8+4>>2]=HEAP32[$$020$ph$i$i$i+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$$020$ph$i$i$i+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$$020$ph$i$i$i+12>>2]|0;HEAP32[$8+16>>2]=HEAP32[$$020$ph$i$i$i+16>>2]|0;HEAP32[$8+20>>2]=HEAP32[$$020$ph$i$i$i+20>>2]|0;HEAP32[$8+24>>2]=HEAP32[$$020$ph$i$i$i+24>>2]|0;HEAP32[$8+28>>2]=HEAP32[$$020$ph$i$i$i+28>>2]|0;\n        ;HEAP32[$$020$ph$i$i$i>>2]=HEAP32[$123>>2]|0;HEAP32[$$020$ph$i$i$i+4>>2]=HEAP32[$123+4>>2]|0;HEAP32[$$020$ph$i$i$i+8>>2]=HEAP32[$123+8>>2]|0;HEAP32[$$020$ph$i$i$i+12>>2]=HEAP32[$123+12>>2]|0;HEAP32[$$020$ph$i$i$i+16>>2]=HEAP32[$123+16>>2]|0;HEAP32[$$020$ph$i$i$i+20>>2]=HEAP32[$123+20>>2]|0;HEAP32[$$020$ph$i$i$i+24>>2]=HEAP32[$123+24>>2]|0;HEAP32[$$020$ph$i$i$i+28>>2]=HEAP32[$123+28>>2]|0;\n        ;HEAP32[$123>>2]=HEAP32[$8>>2]|0;HEAP32[$123+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$123+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$123+12>>2]=HEAP32[$8+12>>2]|0;HEAP32[$123+16>>2]=HEAP32[$8+16>>2]|0;HEAP32[$123+20>>2]=HEAP32[$8+20>>2]|0;HEAP32[$123+24>>2]=HEAP32[$8+24>>2]|0;HEAP32[$123+28>>2]=HEAP32[$8+28>>2]|0;\n        $125 = $121;\n       }\n      }\n      $124 = ($$024$ph$i$i$i>>>0)<($125>>>0);\n      if ($124) {\n       $$021$i$i$i = $125;\n      } else {\n       break;\n      }\n     }\n     $126 = (($125) + 1)|0;\n     $127 = ($$021$i$i$i>>>0)>($126>>>0);\n     $128 = ($$024$ph$i$i$i>>>0)>($126>>>0);\n     $or$cond27$i$i$i = $127 & $128;\n     $129 = (($$020$ph$i$i$i) + ($126<<5)|0);\n     $130 = (($$021$i$i$i) - ($126))|0;\n     $131 = (($$024$ph$i$i$i) - ($126))|0;\n     if ($or$cond27$i$i$i) {\n      $$020$ph$i$i$i = $129;$$021$ph$i$i$i = $130;$$024$ph$i$i$i = $131;\n     } else {\n      break;\n     }\n    }\n    $132 = HEAP32[$67>>2]|0;\n    $133 = $132 & 1;\n    $134 = ($133|0)==(0);\n    $135 = HEAP32[$65>>2]|0;\n    $136 = (($135) + ($84))|0;\n    $137 = (($11) + ($136<<5)|0);\n    $$sroa$0$0$copyload$i$i$i = +HEAPF32[$137>>2];\n    $$sroa$4$0$$sroa_idx7$i$i$i = (((($11) + ($136<<5)|0)) + 4|0);\n    $$sroa$4$0$copyload$i$i$i = +HEAPF32[$$sroa$4$0$$sroa_idx7$i$i$i>>2];\n    $$sroa$5$0$$sroa_idx9$i$i$i = (((($11) + ($136<<5)|0)) + 8|0);\n    $$sroa$5$0$copyload$i$i$i = +HEAPF32[$$sroa$5$0$$sroa_idx9$i$i$i>>2];\n    $$sroa$6$0$$sroa_idx11$i$i$i = (((($11) + ($136<<5)|0)) + 12|0);\n    $$sroa$6$0$copyload$i$i$i = +HEAPF32[$$sroa$6$0$$sroa_idx11$i$i$i>>2];\n    if ($134) {\n     $138 = (((($11) + ($136<<5)|0)) + 16|0);\n     $139 = +HEAPF32[$138>>2];\n     $140 = $139;\n     $141 = $140 + 0.0;\n     $142 = $$sroa$0$0$copyload$i$i$i;\n     $143 = $142 * $140;\n     $144 = $143 + 0.0;\n     $145 = $$sroa$4$0$copyload$i$i$i;\n     $146 = $145 * $140;\n     $147 = $146 + 0.0;\n     $148 = $$sroa$5$0$copyload$i$i$i;\n     $149 = $148 * $140;\n     $150 = $149 + 0.0;\n     $151 = $$sroa$6$0$copyload$i$i$i;\n     $152 = $151 * $140;\n     $153 = $152 + 0.0;\n     $$sroa$0$0$$sroa_idx$i$1$i$i = ((($137)) + 32|0);\n     $$sroa$0$0$copyload$i$1$i$i = +HEAPF32[$$sroa$0$0$$sroa_idx$i$1$i$i>>2];\n     $$sroa$4$0$$sroa_idx7$i$1$i$i = ((($137)) + 36|0);\n     $$sroa$4$0$copyload$i$1$i$i = +HEAPF32[$$sroa$4$0$$sroa_idx7$i$1$i$i>>2];\n     $$sroa$5$0$$sroa_idx9$i$1$i$i = ((($137)) + 40|0);\n     $$sroa$5$0$copyload$i$1$i$i = +HEAPF32[$$sroa$5$0$$sroa_idx9$i$1$i$i>>2];\n     $$sroa$6$0$$sroa_idx11$i$1$i$i = ((($137)) + 44|0);\n     $$sroa$6$0$copyload$i$1$i$i = +HEAPF32[$$sroa$6$0$$sroa_idx11$i$1$i$i>>2];\n     $154 = ((($137)) + 48|0);\n     $155 = +HEAPF32[$154>>2];\n     $156 = $155;\n     $157 = $141 + $156;\n     $158 = $$sroa$0$0$copyload$i$1$i$i;\n     $159 = $158 * $156;\n     $160 = $144 + $159;\n     $161 = $$sroa$4$0$copyload$i$1$i$i;\n     $162 = $161 * $156;\n     $163 = $147 + $162;\n     $164 = $$sroa$5$0$copyload$i$1$i$i;\n     $165 = $164 * $156;\n     $166 = $150 + $165;\n     $167 = $$sroa$6$0$copyload$i$1$i$i;\n     $168 = $167 * $156;\n     $169 = $153 + $168;\n     $170 = $157 != 0.0;\n     if ($170) {\n      $171 = $160 / $157;\n      $172 = $163 / $157;\n      $173 = $166 / $157;\n      $174 = $169 / $157;\n      $$1$i$i$i = $172;$$150$i$i$i = $173;$$152$i$i$i = $174;$$154$i$i$i = $171;\n     } else {\n      $$1$i$i$i = $163;$$150$i$i$i = $166;$$152$i$i$i = $169;$$154$i$i$i = $160;\n     }\n     $175 = $$154$i$i$i;\n     $176 = $$1$i$i$i;\n     $177 = $$150$i$i$i;\n     $178 = $$152$i$i$i;\n     $$sroa$0$0$i = $175;$$sroa$5$0$i = $176;$$sroa$7$0$i = $177;$$sroa$9$0$i = $178;\n    } else {\n     $$sroa$0$0$i = $$sroa$0$0$copyload$i$i$i;$$sroa$5$0$i = $$sroa$4$0$copyload$i$i$i;$$sroa$7$0$i = $$sroa$5$0$copyload$i$i$i;$$sroa$9$0$i = $$sroa$6$0$copyload$i$i$i;\n    }\n    $179 = (($135) + ($132))|0;\n    $180 = ($135>>>0)<($179>>>0);\n    if ($180) {\n     $181 = $$sroa$5$0$i;\n     $182 = $$sroa$7$0$i;\n     $183 = $$sroa$9$0$i;\n     $$04278$i = 0.0;$$079$i = $135;\n     while(1) {\n      $$sroa$056$0$$sroa_idx$i = (($11) + ($$079$i<<5)|0);\n      HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$056$0$$sroa_idx$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$056$0$$sroa_idx$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$056$0$$sroa_idx$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$056$0$$sroa_idx$i+3>>0];$$sroa$056$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n      $$sroa$4$0$$sroa_idx58$i = (((($11) + ($$079$i<<5)|0)) + 4|0);\n      HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx58$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx58$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx58$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx58$i+3>>0];$$sroa$4$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n      $$sroa$560$0$$sroa_idx61$i = (((($11) + ($$079$i<<5)|0)) + 8|0);\n      HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$560$0$$sroa_idx61$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$560$0$$sroa_idx61$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$560$0$$sroa_idx61$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$560$0$$sroa_idx61$i+3>>0];$$sroa$560$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n      $$sroa$6$0$$sroa_idx63$i = (((($11) + ($$079$i<<5)|0)) + 12|0);\n      HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx63$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx63$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx63$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx63$i+3>>0];$$sroa$6$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n      $$sroa$765$0$$sroa_idx66$i = (((($11) + ($$079$i<<5)|0)) + 16|0);\n      HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$765$0$$sroa_idx66$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$765$0$$sroa_idx66$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$765$0$$sroa_idx66$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$765$0$$sroa_idx66$i+3>>0];$$sroa$765$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n      $214 = $$sroa$056$0$copyload$i - $$sroa$0$0$i;\n      $215 = $214;\n      $216 = $$sroa$4$0$copyload$i;\n      $217 = $181 - $216;\n      $218 = $215 + $217;\n      $219 = $217 * $217;\n      $220 = $218 * $218;\n      $221 = $219 > $220;\n      $$$i$i$i$i$i116 = $221 ? $219 : $220;\n      $222 = $$sroa$560$0$copyload$i;\n      $223 = $182 - $222;\n      $224 = $215 + $223;\n      $225 = $223 * $223;\n      $226 = $224 * $224;\n      $227 = $225 > $226;\n      $$$i5$i$i$i$i117 = $227 ? $225 : $226;\n      $228 = $$$i$i$i$i$i116 + $$$i5$i$i$i$i117;\n      $229 = $$sroa$6$0$copyload$i;\n      $230 = $183 - $229;\n      $231 = $215 + $230;\n      $232 = $230 * $230;\n      $233 = $231 * $231;\n      $234 = $232 > $233;\n      $$$i4$i$i$i$i118 = $234 ? $232 : $233;\n      $235 = $228 + $$$i4$i$i$i$i118;\n      $236 = $235;\n      $237 = $236;\n      $238 = (+Math_sqrt((+$237)));\n      $239 = $$sroa$765$0$copyload$i;\n      $240 = $239 + 1.0;\n      $241 = (+Math_sqrt((+$240)));\n      $242 = $241 + -1.0;\n      $243 = $238 * $242;\n      $244 = $243;\n      $245 = (((($11) + ($$079$i<<5)|0)) + 24|0);\n      HEAPF32[$245>>2] = $244;\n      $246 = $244;\n      $213 = $$04278$i + $246;\n      $247 = (($$079$i) + 1)|0;\n      $exitcond$i119 = ($247|0)==($179|0);\n      if ($exitcond$i119) {\n       break;\n      } else {\n       $$04278$i = $213;$$079$i = $247;\n      }\n     }\n     $phitmp$i = $213 * 0.5;\n     $$042$lcssa$i = $phitmp$i;\n    } else {\n     $$042$lcssa$i = 0.0;\n    }\n    HEAPF64[$10>>3] = 0.0;\n    $248 = (($11) + ($66<<5)|0);\n    $249 = (_hist_item_sort_halfvar($248,$68,$10,$$042$lcssa$i)|0);\n    $250 = (($68) + -1)|0;\n    $251 = $249;\n    $252 = $248;\n    $253 = (($251) - ($252))|0;\n    $254 = $253 >> 5;\n    $255 = (($254) + 1)|0;\n    $256 = ($250>>>0)<($255>>>0);\n    $$ = $256 ? $250 : $255;\n    $257 = (((($12) + ($$2$i<<6)|0)) + 32|0);\n    $258 = +HEAPF64[$257>>3];\n    $259 = ($$|0)==(0);\n    if ($259) {\n     $$0101$lcssa = 0.0;\n    } else {\n     $$0100149 = 0;$$0101148 = 0.0;\n     while(1) {\n      $321 = (($$0100149) + ($66))|0;\n      $322 = (((($11) + ($321<<5)|0)) + 16|0);\n      $323 = +HEAPF32[$322>>2];\n      $324 = $323;\n      $325 = $$0101148 + $324;\n      $326 = (($$0100149) + 1)|0;\n      $327 = ($326>>>0)<($$>>>0);\n      if ($327) {\n       $$0100149 = $326;$$0101148 = $325;\n      } else {\n       $$0101$lcssa = $325;\n       break;\n      }\n     }\n    }\n    $260 = HEAP32[$65>>2]|0;\n    _box_init($64,$11,$260,$$,$$0101$lcssa);\n    $261 = (($12) + ($$0103150<<6)|0);\n    $262 = (($$) + ($66))|0;\n    $263 = (($68) - ($$))|0;\n    $264 = $258 - $$0101$lcssa;\n    _box_init($261,$11,$262,$263,$264);\n    $265 = (($$0103150) + 1)|0;\n    $266 = +HEAPF64[$25>>3];\n    $267 = $266 * $2;\n    $$03649$i = 0;$$03748$i = 0.0;\n    while(1) {\n     $270 = (((($12) + ($$03649$i<<6)|0)) + 40|0);\n     $271 = +HEAPF64[$270>>3];\n     $272 = !($271 >= 0.0);\n     $273 = $$03748$i + $271;\n     $$138$i = $272 ? $$03748$i : $273;\n     $274 = $$138$i > $267;\n     $268 = (($$03649$i) + 1)|0;\n     if ($274) {\n      break;\n     }\n     $269 = ($268>>>0)<($265>>>0);\n     if ($269) {\n      $$03649$i = $268;$$03748$i = $$138$i;\n     } else {\n      $$046$i = 0;$$345$i = $$138$i;\n      label = 54;\n      break;\n     }\n    }\n    L79: do {\n     if ((label|0) == 54) {\n      while(1) {\n       label = 0;\n       $277 = (((($12) + ($$046$i<<6)|0)) + 40|0);\n       $278 = +HEAPF64[$277>>3];\n       $279 = $278 < 0.0;\n       if ($279) {\n        $280 = HEAP32[$0>>2]|0;\n        $$sroa$0$0$$sroa_idx$i$i = (($12) + ($$046$i<<6)|0);\n        $$sroa$0$0$copyload$i$i = +HEAPF32[$$sroa$0$0$$sroa_idx$i$i>>2];\n        $281 = (((($12) + ($$046$i<<6)|0)) + 60|0);\n        $282 = HEAP32[$281>>2]|0;\n        $283 = ($282|0)==(0);\n        if ($283) {\n         $$014$lcssa$i$i = 0.0;\n        } else {\n         $$sroa$6$0$$sroa_idx20$i$i = (((($12) + ($$046$i<<6)|0)) + 12|0);\n         $$sroa$6$0$copyload$i$i = +HEAPF32[$$sroa$6$0$$sroa_idx20$i$i>>2];\n         $$sroa$5$0$$sroa_idx18$i$i = (((($12) + ($$046$i<<6)|0)) + 8|0);\n         $$sroa$5$0$copyload$i$i = +HEAPF32[$$sroa$5$0$$sroa_idx18$i$i>>2];\n         $$sroa$4$0$$sroa_idx16$i$i = (((($12) + ($$046$i<<6)|0)) + 4|0);\n         $$sroa$4$0$copyload$i$i = +HEAPF32[$$sroa$4$0$$sroa_idx16$i$i>>2];\n         $284 = (((($12) + ($$046$i<<6)|0)) + 56|0);\n         $285 = HEAP32[$284>>2]|0;\n         $286 = $$sroa$4$0$copyload$i$i;\n         $287 = $$sroa$5$0$copyload$i$i;\n         $288 = $$sroa$6$0$copyload$i$i;\n         $$01433$i$i = 0.0;$$034$i$i = 0;\n         while(1) {\n          $289 = (($$034$i$i) + ($285))|0;\n          $$sroa$022$0$$sroa_idx$i$i = (($280) + ($289<<5)|0);\n          HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$022$0$$sroa_idx$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$022$0$$sroa_idx$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$022$0$$sroa_idx$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$022$0$$sroa_idx$i$i+3>>0];$$sroa$022$0$copyload$i$i = +HEAPF32[tempDoublePtr>>2];\n          $$sroa$424$0$$sroa_idx25$i$i = (((($280) + ($289<<5)|0)) + 4|0);\n          HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$424$0$$sroa_idx25$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$424$0$$sroa_idx25$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$424$0$$sroa_idx25$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$424$0$$sroa_idx25$i$i+3>>0];$$sroa$424$0$copyload$i$i = +HEAPF32[tempDoublePtr>>2];\n          $$sroa$527$0$$sroa_idx28$i$i = (((($280) + ($289<<5)|0)) + 8|0);\n          HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$527$0$$sroa_idx28$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$527$0$$sroa_idx28$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$527$0$$sroa_idx28$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$527$0$$sroa_idx28$i$i+3>>0];$$sroa$527$0$copyload$i$i = +HEAPF32[tempDoublePtr>>2];\n          $$sroa$630$0$$sroa_idx31$i$i = (((($280) + ($289<<5)|0)) + 12|0);\n          HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$630$0$$sroa_idx31$i$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$630$0$$sroa_idx31$i$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$630$0$$sroa_idx31$i$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$630$0$$sroa_idx31$i$i+3>>0];$$sroa$630$0$copyload$i$i = +HEAPF32[tempDoublePtr>>2];\n          $290 = $$sroa$022$0$copyload$i$i - $$sroa$0$0$copyload$i$i;\n          $291 = $290;\n          $292 = $$sroa$424$0$copyload$i$i;\n          $293 = $286 - $292;\n          $294 = $291 + $293;\n          $295 = $293 * $293;\n          $296 = $294 * $294;\n          $297 = $295 > $296;\n          $$$i$i$i$i$i = $297 ? $295 : $296;\n          $298 = $$sroa$527$0$copyload$i$i;\n          $299 = $287 - $298;\n          $300 = $291 + $299;\n          $301 = $299 * $299;\n          $302 = $300 * $300;\n          $303 = $301 > $302;\n          $$$i5$i$i$i$i = $303 ? $301 : $302;\n          $304 = $$$i$i$i$i$i + $$$i5$i$i$i$i;\n          $305 = $$sroa$630$0$copyload$i$i;\n          $306 = $288 - $305;\n          $307 = $291 + $306;\n          $308 = $306 * $306;\n          $309 = $307 * $307;\n          $310 = $308 > $309;\n          $$$i4$i$i$i$i = $310 ? $308 : $309;\n          $311 = $304 + $$$i4$i$i$i$i;\n          $312 = $311;\n          $313 = (((($280) + ($289<<5)|0)) + 20|0);\n          $314 = +HEAPF32[$313>>2];\n          $315 = $314 * $312;\n          $316 = $315;\n          $317 = $$01433$i$i + $316;\n          $318 = (($$034$i$i) + 1)|0;\n          $exitcond$i113 = ($318|0)==($282|0);\n          if ($exitcond$i113) {\n           $$014$lcssa$i$i = $317;\n           break;\n          } else {\n           $$01433$i$i = $317;$$034$i$i = $318;\n          }\n         }\n        }\n        HEAPF64[$277>>3] = $$014$lcssa$i$i;\n        $319 = $$345$i + $$014$lcssa$i$i;\n        $$4$i = $319;\n       } else {\n        $$4$i = $$345$i;\n       }\n       $320 = $$4$i > $267;\n       $275 = (($$046$i) + 1)|0;\n       if ($320) {\n        break L79;\n       }\n       $276 = ($275>>>0)<($265>>>0);\n       if ($276) {\n        $$046$i = $275;$$345$i = $$4$i;\n        label = 54;\n       } else {\n        break L7;\n       }\n      }\n     }\n    } while(0);\n    $328 = ($265>>>0)<($1>>>0);\n    if ($328) {\n     $$0103150 = $265;\n    } else {\n     $$2 = $265;\n     break L5;\n    }\n   }\n   $$2 = $265;\n  } else {\n   $$2 = 1;\n  }\n } while(0);\n $329 = (_pam_colormap($$2,$4,$5)|0);\n $$02325$i = 0;\n while(1) {\n  $330 = (((($329)) + 12|0) + (($$02325$i*24)|0)|0);\n  $331 = (($12) + ($$02325$i<<6)|0);\n  ;HEAP32[$330>>2]=HEAP32[$331>>2]|0;HEAP32[$330+4>>2]=HEAP32[$331+4>>2]|0;HEAP32[$330+8>>2]=HEAP32[$331+8>>2]|0;HEAP32[$330+12>>2]=HEAP32[$331+12>>2]|0;\n  $332 = (((((($329)) + 12|0) + (($$02325$i*24)|0)|0)) + 16|0);\n  HEAPF32[$332>>2] = 0.0;\n  $333 = (((($12) + ($$02325$i<<6)|0)) + 56|0);\n  $334 = HEAP32[$333>>2]|0;\n  $335 = (((($12) + ($$02325$i<<6)|0)) + 60|0);\n  $336 = HEAP32[$335>>2]|0;\n  $337 = (($336) + ($334))|0;\n  $338 = ($334>>>0)<($337>>>0);\n  if ($338) {\n   $$024$i = $334;$343 = 0.0;\n   while(1) {\n    $341 = (((($11) + ($$024$i<<5)|0)) + 20|0);\n    $342 = +HEAPF32[$341>>2];\n    $339 = $343 + $342;\n    $344 = (($$024$i) + 1)|0;\n    $exitcond = ($344|0)==($337|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$024$i = $344;$343 = $339;\n    }\n   }\n   HEAPF32[$332>>2] = $339;\n  }\n  $340 = (($$02325$i) + 1)|0;\n  $exitcond$i110 = ($340|0)==($$2|0);\n  if ($exitcond$i110) {\n   $$01618$i = 0;\n   break;\n  } else {\n   $$02325$i = $340;\n  }\n }\n while(1) {\n  $345 = (((($12) + ($$01618$i<<6)|0)) + 56|0);\n  $346 = HEAP32[$345>>2]|0;\n  $347 = (((($12) + ($$01618$i<<6)|0)) + 60|0);\n  $348 = HEAP32[$347>>2]|0;\n  $349 = (($348) + ($346))|0;\n  $350 = ($346>>>0)<($349>>>0);\n  if ($350) {\n   $351 = $$01618$i&255;\n   $$017$i = $346;\n   while(1) {\n    $353 = (((($11) + ($$017$i<<5)|0)) + 28|0);\n    HEAP8[$353>>0] = $351;\n    $354 = (($$017$i) + 1)|0;\n    $355 = HEAP32[$345>>2]|0;\n    $356 = HEAP32[$347>>2]|0;\n    $357 = (($356) + ($355))|0;\n    $358 = ($354>>>0)<($357>>>0);\n    if ($358) {\n     $$017$i = $354;\n    } else {\n     break;\n    }\n   }\n  }\n  $352 = (($$01618$i) + 1)|0;\n  $exitcond$i108 = ($352|0)==($$2|0);\n  if ($exitcond$i108) {\n   break;\n  } else {\n   $$01618$i = $352;\n  }\n }\n STACKTOP = sp;return ($329|0);\n}\nfunction _box_init($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = +$4;\n var $$$i$i$i$i = 0.0, $$$i4$i$i$i = 0.0, $$$i5$i$i$i = 0.0, $$0$i$i = 0.0, $$0$i54$i = 0.0, $$0$i55$i = 0.0, $$0$i56$i = 0.0, $$0$lcssa$i = 0.0, $$0$lcssa$i25 = 0.0, $$01534$i = 0, $$035$i = 0.0, $$04961$i = 0.0, $$050$lcssa$i = 0.0, $$05060$i = 0.0, $$051$lcssa$i = 0.0, $$05159$i = 0.0, $$05160$i = 0.0, $$052$lcssa$i = 0.0, $$05258$i = 0.0, $$05357$i = 0;\n var $$05359$i = 0.0, $$05558$i = 0.0, $$05657$i = 0, $$061$i = 0.0, $$062$i = 0.0, $$1$i = 0.0, $$1$i23 = 0.0, $$150$i = 0.0, $$152$i = 0.0, $$154$i = 0.0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$$sroa_idx$i27 = 0, $$sroa$0$0$copyload$i = 0.0, $$sroa$0$0$copyload$i28 = 0.0, $$sroa$023$0$$sroa_idx$i = 0, $$sroa$023$0$copyload$i = 0.0, $$sroa$2$0$$sroa_idx32 = 0, $$sroa$236$0$$sroa_idx37 = 0, $$sroa$3$0$$sroa_idx33 = 0;\n var $$sroa$338$0$$sroa_idx39 = 0, $$sroa$4$0$$sroa_idx34 = 0, $$sroa$4$0$$sroa_idx6$i = 0, $$sroa$4$0$$sroa_idx7$i = 0, $$sroa$4$0$copyload$i = 0.0, $$sroa$4$0$copyload$i29 = 0.0, $$sroa$425$0$$sroa_idx26$i = 0, $$sroa$425$0$copyload$i = 0.0, $$sroa$440$0$$sroa_idx41 = 0, $$sroa$5$0$$sroa_idx8$i = 0, $$sroa$5$0$$sroa_idx9$i = 0, $$sroa$5$0$copyload$i = 0.0, $$sroa$5$0$copyload$i30 = 0.0, $$sroa$528$0$$sroa_idx29$i = 0, $$sroa$528$0$copyload$i = 0.0, $$sroa$6$0$$sroa_idx10$i = 0, $$sroa$6$0$$sroa_idx11$i = 0, $$sroa$6$0$copyload$i = 0.0, $$sroa$6$0$copyload$i31 = 0.0, $$sroa$631$0$$sroa_idx32$i = 0;\n var $$sroa$631$0$copyload$i = 0.0, $10 = 0, $100 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0;\n var $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0;\n var $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0;\n var $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $83 = 0.0;\n var $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond58 = 0;\n var $phitmp$i = 0.0, $phitmp68$i = 0.0, $phitmp69$i = 0.0, $phitmp70$i = 0.0, $phitmp71$i = 0.0, $phitmp72$i = 0.0, $phitmp73$i = 0.0, $phitmp74$i = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ((($0)) + 56|0);\n HEAP32[$5>>2] = $2;\n $6 = ((($0)) + 60|0);\n HEAP32[$6>>2] = $3;\n $7 = ((($0)) + 32|0);\n HEAPF64[$7>>3] = $4;\n $8 = ((($0)) + 40|0);\n HEAPF64[$8>>3] = -1.0;\n $9 = (($1) + ($2<<5)|0);\n $10 = ($3|0)==(0);\n if ($10) {\n  $$1$i = 0.0;$$150$i = 0.0;$$152$i = 0.0;$$154$i = 0.0;\n } else {\n  $$04961$i = 0.0;$$05160$i = 0.0;$$05359$i = 0.0;$$05558$i = 0.0;$$05657$i = 0;$$062$i = 0.0;\n  while(1) {\n   $$sroa$0$0$$sroa_idx$i = (($9) + ($$05657$i<<5)|0);\n   $$sroa$0$0$copyload$i = +HEAPF32[$$sroa$0$0$$sroa_idx$i>>2];\n   $$sroa$4$0$$sroa_idx7$i = (((($9) + ($$05657$i<<5)|0)) + 4|0);\n   $$sroa$4$0$copyload$i = +HEAPF32[$$sroa$4$0$$sroa_idx7$i>>2];\n   $$sroa$5$0$$sroa_idx9$i = (((($9) + ($$05657$i<<5)|0)) + 8|0);\n   $$sroa$5$0$copyload$i = +HEAPF32[$$sroa$5$0$$sroa_idx9$i>>2];\n   $$sroa$6$0$$sroa_idx11$i = (((($9) + ($$05657$i<<5)|0)) + 12|0);\n   $$sroa$6$0$copyload$i = +HEAPF32[$$sroa$6$0$$sroa_idx11$i>>2];\n   $13 = (((($9) + ($$05657$i<<5)|0)) + 16|0);\n   $14 = +HEAPF32[$13>>2];\n   $15 = $14;\n   $12 = $$05558$i + $15;\n   $16 = $$sroa$0$0$copyload$i;\n   $17 = $16 * $15;\n   $18 = $$05359$i + $17;\n   $19 = $$sroa$4$0$copyload$i;\n   $20 = $19 * $15;\n   $21 = $$062$i + $20;\n   $22 = $$sroa$5$0$copyload$i;\n   $23 = $22 * $15;\n   $24 = $$04961$i + $23;\n   $25 = $$sroa$6$0$copyload$i;\n   $26 = $25 * $15;\n   $27 = $$05160$i + $26;\n   $28 = (($$05657$i) + 1)|0;\n   $exitcond$i = ($28|0)==($3|0);\n   if ($exitcond$i) {\n    break;\n   } else {\n    $$04961$i = $24;$$05160$i = $27;$$05359$i = $18;$$05558$i = $12;$$05657$i = $28;$$062$i = $21;\n   }\n  }\n  $11 = $12 != 0.0;\n  if ($11) {\n   $29 = $18 / $12;\n   $30 = $21 / $12;\n   $31 = $24 / $12;\n   $32 = $27 / $12;\n   $$1$i = $30;$$150$i = $31;$$152$i = $32;$$154$i = $29;\n  } else {\n   $$1$i = $21;$$150$i = $24;$$152$i = $27;$$154$i = $18;\n  }\n }\n $33 = $$154$i;\n $34 = $$1$i;\n $35 = $$150$i;\n $36 = $$152$i;\n HEAPF32[$0>>2] = $33;\n $$sroa$236$0$$sroa_idx37 = ((($0)) + 4|0);\n HEAPF32[$$sroa$236$0$$sroa_idx37>>2] = $34;\n $$sroa$338$0$$sroa_idx39 = ((($0)) + 8|0);\n HEAPF32[$$sroa$338$0$$sroa_idx39>>2] = $35;\n $$sroa$440$0$$sroa_idx41 = ((($0)) + 12|0);\n HEAPF32[$$sroa$440$0$$sroa_idx41>>2] = $36;\n if ($10) {\n  $$0$lcssa$i25 = 0.0;$$050$lcssa$i = 0.0;$$051$lcssa$i = 0.0;$$052$lcssa$i = 0.0;\n } else {\n  $$05060$i = 0.0;$$05159$i = 0.0;$$05258$i = 0.0;$$05357$i = 0;$$061$i = 0.0;\n  while(1) {\n   $41 = (($$05357$i) + ($2))|0;\n   $$sroa$0$0$$sroa_idx$i27 = (($1) + ($41<<5)|0);\n   $$sroa$0$0$copyload$i28 = +HEAPF32[$$sroa$0$0$$sroa_idx$i27>>2];\n   $$sroa$4$0$$sroa_idx6$i = (((($1) + ($41<<5)|0)) + 4|0);\n   $$sroa$4$0$copyload$i29 = +HEAPF32[$$sroa$4$0$$sroa_idx6$i>>2];\n   $$sroa$5$0$$sroa_idx8$i = (((($1) + ($41<<5)|0)) + 8|0);\n   $$sroa$5$0$copyload$i30 = +HEAPF32[$$sroa$5$0$$sroa_idx8$i>>2];\n   $$sroa$6$0$$sroa_idx10$i = (((($1) + ($41<<5)|0)) + 12|0);\n   $$sroa$6$0$copyload$i31 = +HEAPF32[$$sroa$6$0$$sroa_idx10$i>>2];\n   $42 = (((($1) + ($41<<5)|0)) + 16|0);\n   $43 = +HEAPF32[$42>>2];\n   $44 = $43;\n   $45 = $33 - $$sroa$0$0$copyload$i28;\n   $46 = $45;\n   $47 = $46 * $46;\n   $48 = $47 < 6.103515625E-5;\n   $49 = $47 * 0.25;\n   $$0$i$i = $48 ? $49 : $47;\n   $50 = $$0$i$i * $44;\n   $37 = $$061$i + $50;\n   $51 = $34 - $$sroa$4$0$copyload$i29;\n   $52 = $51;\n   $53 = $52 * $52;\n   $54 = $53 < 1.52587890625E-5;\n   $55 = $53 * 0.25;\n   $$0$i56$i = $54 ? $55 : $53;\n   $56 = $44 * $$0$i56$i;\n   $38 = $$05060$i + $56;\n   $57 = $35 - $$sroa$5$0$copyload$i30;\n   $58 = $57;\n   $59 = $58 * $58;\n   $60 = $59 < 1.52587890625E-5;\n   $61 = $59 * 0.25;\n   $$0$i55$i = $60 ? $61 : $59;\n   $62 = $44 * $$0$i55$i;\n   $39 = $$05159$i + $62;\n   $63 = $36 - $$sroa$6$0$copyload$i31;\n   $64 = $63;\n   $65 = $64 * $64;\n   $66 = $65 < 1.52587890625E-5;\n   $67 = $65 * 0.25;\n   $$0$i54$i = $66 ? $67 : $65;\n   $68 = $44 * $$0$i54$i;\n   $40 = $$05258$i + $68;\n   $69 = (($$05357$i) + 1)|0;\n   $exitcond58 = ($69|0)==($3|0);\n   if ($exitcond58) {\n    break;\n   } else {\n    $$05060$i = $38;$$05159$i = $39;$$05258$i = $40;$$05357$i = $69;$$061$i = $37;\n   }\n  }\n  $phitmp$i = $37 * 0.25;\n  $phitmp68$i = $phitmp$i;\n  $phitmp69$i = $38 * 0.4375;\n  $phitmp70$i = $phitmp69$i;\n  $phitmp71$i = $39 * 0.5625;\n  $phitmp72$i = $phitmp71$i;\n  $phitmp73$i = $40 * 0.3125;\n  $phitmp74$i = $phitmp73$i;\n  $$0$lcssa$i25 = $phitmp68$i;$$050$lcssa$i = $phitmp70$i;$$051$lcssa$i = $phitmp72$i;$$052$lcssa$i = $phitmp74$i;\n }\n $$sroa$0$0$$sroa_idx = ((($0)) + 16|0);\n HEAPF32[$$sroa$0$0$$sroa_idx>>2] = $$0$lcssa$i25;\n $$sroa$2$0$$sroa_idx32 = ((($0)) + 20|0);\n HEAPF32[$$sroa$2$0$$sroa_idx32>>2] = $$050$lcssa$i;\n $$sroa$3$0$$sroa_idx33 = ((($0)) + 24|0);\n HEAPF32[$$sroa$3$0$$sroa_idx33>>2] = $$051$lcssa$i;\n $$sroa$4$0$$sroa_idx34 = ((($0)) + 28|0);\n HEAPF32[$$sroa$4$0$$sroa_idx34>>2] = $$052$lcssa$i;\n if ($10) {\n  $$0$lcssa$i = 0.0;\n  $100 = ((($0)) + 48|0);\n  HEAPF64[$100>>3] = $$0$lcssa$i;\n  return;\n }\n $70 = $34;\n $71 = $35;\n $72 = $36;\n $$01534$i = 0;$$035$i = 0.0;\n while(1) {\n  $73 = (($$01534$i) + ($2))|0;\n  $$sroa$023$0$$sroa_idx$i = (($1) + ($73<<5)|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$023$0$$sroa_idx$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$023$0$$sroa_idx$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$023$0$$sroa_idx$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$023$0$$sroa_idx$i+3>>0];$$sroa$023$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$425$0$$sroa_idx26$i = (((($1) + ($73<<5)|0)) + 4|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$425$0$$sroa_idx26$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$425$0$$sroa_idx26$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$425$0$$sroa_idx26$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$425$0$$sroa_idx26$i+3>>0];$$sroa$425$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$528$0$$sroa_idx29$i = (((($1) + ($73<<5)|0)) + 8|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$528$0$$sroa_idx29$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$528$0$$sroa_idx29$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$528$0$$sroa_idx29$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$528$0$$sroa_idx29$i+3>>0];$$sroa$528$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$631$0$$sroa_idx32$i = (((($1) + ($73<<5)|0)) + 12|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$631$0$$sroa_idx32$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$631$0$$sroa_idx32$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$631$0$$sroa_idx32$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$631$0$$sroa_idx32$i+3>>0];$$sroa$631$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n  $74 = $$sroa$023$0$copyload$i - $33;\n  $75 = $74;\n  $76 = $$sroa$425$0$copyload$i;\n  $77 = $70 - $76;\n  $78 = $75 + $77;\n  $79 = $77 * $77;\n  $80 = $78 * $78;\n  $81 = $79 > $80;\n  $$$i$i$i$i = $81 ? $79 : $80;\n  $82 = $$sroa$528$0$copyload$i;\n  $83 = $71 - $82;\n  $84 = $75 + $83;\n  $85 = $83 * $83;\n  $86 = $84 * $84;\n  $87 = $85 > $86;\n  $$$i5$i$i$i = $87 ? $85 : $86;\n  $88 = $$$i$i$i$i + $$$i5$i$i$i;\n  $89 = $$sroa$631$0$copyload$i;\n  $90 = $72 - $89;\n  $91 = $75 + $90;\n  $92 = $90 * $90;\n  $93 = $91 * $91;\n  $94 = $92 > $93;\n  $$$i4$i$i$i = $94 ? $92 : $93;\n  $95 = $88 + $$$i4$i$i$i;\n  $96 = $95;\n  $97 = $96;\n  $98 = $97 > $$035$i;\n  $$1$i23 = $98 ? $97 : $$035$i;\n  $99 = (($$01534$i) + 1)|0;\n  $exitcond = ($99|0)==($3|0);\n  if ($exitcond) {\n   $$0$lcssa$i = $$1$i23;\n   break;\n  } else {\n   $$01534$i = $99;$$035$i = $$1$i23;\n  }\n }\n $100 = ((($0)) + 48|0);\n HEAPF64[$100>>3] = $$0$lcssa$i;\n return;\n}\nfunction _comparevariance($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = +HEAPF32[$2>>2];\n $4 = ((($1)) + 4|0);\n $5 = +HEAPF32[$4>>2];\n $6 = $3 > $5;\n $7 = $3 < $5;\n $8 = $7&1;\n $9 = $6 ? -1 : $8;\n return ($9|0);\n}\nfunction _hist_item_sort_halfvar($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = +$3;\n var $$0$i$i = 0, $$0$i50$i = 0, $$0$lcssa$i = 0, $$0$ph45$i = 0, $$030$ph44$i = 0, $$042$i = 0, $$05177 = 0.0, $$05276 = 0, $$053 = 0, $$055 = 0, $$1$i = 0, $$363 = 0, $$in$i = 0, $$lcssa81 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0;\n var $72 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);\n $4 = sp + 64|0;\n $5 = sp + 32|0;\n $6 = sp;\n $$053 = $0;$$055 = $1;\n L1: while(1) {\n  $7 = ($$055>>>0)>(7);\n  L3: do {\n   if ($7) {\n    $8 = ($$055>>>0)<(32);\n    $9 = $$055 >>> 1;\n    do {\n     if ($8) {\n      $$0$i50$i = $9;\n     } else {\n      $10 = (($$055) + -1)|0;\n      $11 = ((($$053)) + 284|0);\n      $12 = HEAP32[$11>>2]|0;\n      $13 = (((($$053) + ($9<<5)|0)) + 28|0);\n      $14 = HEAP32[$13>>2]|0;\n      $15 = (((($$053) + ($10<<5)|0)) + 28|0);\n      $16 = HEAP32[$15>>2]|0;\n      $17 = ($12>>>0)<($14>>>0);\n      if ($17) {\n       $18 = ($14>>>0)<($16>>>0);\n       if ($18) {\n        $$0$i50$i = $9;\n        break;\n       }\n       $19 = ($12>>>0)<($16>>>0);\n       $20 = $19 ? $10 : 8;\n       $$0$i$i = $20;\n      } else {\n       $21 = ($14>>>0)>($16>>>0);\n       if ($21) {\n        $$0$i50$i = $9;\n        break;\n       }\n       $22 = ($12>>>0)<($16>>>0);\n       $23 = $22 ? 8 : $10;\n       $$0$i$i = $23;\n      }\n      $24 = ($$0$i$i|0)==(0);\n      if ($24) {\n       label = 12;\n       break L3;\n      } else {\n       $$0$i50$i = $$0$i$i;\n      }\n     }\n    } while(0);\n    $25 = (($$053) + ($$0$i50$i<<5)|0);\n    ;HEAP32[$4>>2]=HEAP32[$$053>>2]|0;HEAP32[$4+4>>2]=HEAP32[$$053+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$$053+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[$$053+12>>2]|0;HEAP32[$4+16>>2]=HEAP32[$$053+16>>2]|0;HEAP32[$4+20>>2]=HEAP32[$$053+20>>2]|0;HEAP32[$4+24>>2]=HEAP32[$$053+24>>2]|0;HEAP32[$4+28>>2]=HEAP32[$$053+28>>2]|0;\n    ;HEAP32[$$053>>2]=HEAP32[$25>>2]|0;HEAP32[$$053+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$$053+8>>2]=HEAP32[$25+8>>2]|0;HEAP32[$$053+12>>2]=HEAP32[$25+12>>2]|0;HEAP32[$$053+16>>2]=HEAP32[$25+16>>2]|0;HEAP32[$$053+20>>2]=HEAP32[$25+20>>2]|0;HEAP32[$$053+24>>2]=HEAP32[$25+24>>2]|0;HEAP32[$$053+28>>2]=HEAP32[$25+28>>2]|0;\n    ;HEAP32[$25>>2]=HEAP32[$4>>2]|0;HEAP32[$25+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$25+8>>2]=HEAP32[$4+8>>2]|0;HEAP32[$25+12>>2]=HEAP32[$4+12>>2]|0;HEAP32[$25+16>>2]=HEAP32[$4+16>>2]|0;HEAP32[$25+20>>2]=HEAP32[$4+20>>2]|0;HEAP32[$25+24>>2]=HEAP32[$4+24>>2]|0;HEAP32[$25+28>>2]=HEAP32[$4+28>>2]|0;\n    label = 12;\n   } else {\n    $26 = ($$055>>>0)>(1);\n    if ($26) {\n     label = 12;\n    } else {\n     $45 = 0;\n    }\n   }\n  } while(0);\n  if ((label|0) == 12) {\n   label = 0;\n   $$in$i = ((($$053)) + 28|0);\n   $27 = HEAP32[$$in$i>>2]|0;\n   $$0$ph45$i = 1;$$030$ph44$i = $$055;\n   L17: while(1) {\n    $$042$i = $$0$ph45$i;\n    while(1) {\n     $28 = (((($$053) + ($$042$i<<5)|0)) + 28|0);\n     $29 = HEAP32[$28>>2]|0;\n     $30 = ($29>>>0)<($27>>>0);\n     if ($30) {\n      break;\n     }\n     $32 = (($$042$i) + 1)|0;\n     $33 = ($32>>>0)<($$030$ph44$i>>>0);\n     if ($33) {\n      $$042$i = $32;\n     } else {\n      $$0$lcssa$i = $32;\n      break L17;\n     }\n    }\n    $31 = (($$053) + ($$042$i<<5)|0);\n    $$1$i = $$030$ph44$i;\n    while(1) {\n     $34 = (($$1$i) + -1)|0;\n     $35 = ($$042$i>>>0)<($34>>>0);\n     if (!($35)) {\n      $$lcssa81 = 0;\n      break;\n     }\n     $36 = (((($$053) + ($34<<5)|0)) + 28|0);\n     $37 = HEAP32[$36>>2]|0;\n     $38 = ($37>>>0)>($27>>>0);\n     if ($38) {\n      $$lcssa81 = 1;\n      break;\n     } else {\n      $$1$i = $34;\n     }\n    }\n    $39 = ($$042$i|0)==($34|0);\n    if (!($39)) {\n     $40 = (($$053) + ($34<<5)|0);\n     ;HEAP32[$5>>2]=HEAP32[$31>>2]|0;HEAP32[$5+4>>2]=HEAP32[$31+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$31+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$31+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$31+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$31+20>>2]|0;HEAP32[$5+24>>2]=HEAP32[$31+24>>2]|0;HEAP32[$5+28>>2]=HEAP32[$31+28>>2]|0;\n     ;HEAP32[$31>>2]=HEAP32[$40>>2]|0;HEAP32[$31+4>>2]=HEAP32[$40+4>>2]|0;HEAP32[$31+8>>2]=HEAP32[$40+8>>2]|0;HEAP32[$31+12>>2]=HEAP32[$40+12>>2]|0;HEAP32[$31+16>>2]=HEAP32[$40+16>>2]|0;HEAP32[$31+20>>2]=HEAP32[$40+20>>2]|0;HEAP32[$31+24>>2]=HEAP32[$40+24>>2]|0;HEAP32[$31+28>>2]=HEAP32[$40+28>>2]|0;\n     ;HEAP32[$40>>2]=HEAP32[$5>>2]|0;HEAP32[$40+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$40+8>>2]=HEAP32[$5+8>>2]|0;HEAP32[$40+12>>2]=HEAP32[$5+12>>2]|0;HEAP32[$40+16>>2]=HEAP32[$5+16>>2]|0;HEAP32[$40+20>>2]=HEAP32[$5+20>>2]|0;HEAP32[$40+24>>2]=HEAP32[$5+24>>2]|0;HEAP32[$40+28>>2]=HEAP32[$5+28>>2]|0;\n    }\n    if ($$lcssa81) {\n     $$0$ph45$i = $$042$i;$$030$ph44$i = $34;\n    } else {\n     $$0$lcssa$i = $$042$i;\n     break;\n    }\n   }\n   $41 = (($$0$lcssa$i) + -1)|0;\n   $42 = ($41|0)==(0);\n   if ($42) {\n    $45 = 0;\n   } else {\n    $43 = (($$053) + ($41<<5)|0);\n    ;HEAP32[$6>>2]=HEAP32[$$053>>2]|0;HEAP32[$6+4>>2]=HEAP32[$$053+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$$053+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$$053+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[$$053+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[$$053+20>>2]|0;HEAP32[$6+24>>2]=HEAP32[$$053+24>>2]|0;HEAP32[$6+28>>2]=HEAP32[$$053+28>>2]|0;\n    ;HEAP32[$$053>>2]=HEAP32[$43>>2]|0;HEAP32[$$053+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$$053+8>>2]=HEAP32[$43+8>>2]|0;HEAP32[$$053+12>>2]=HEAP32[$43+12>>2]|0;HEAP32[$$053+16>>2]=HEAP32[$43+16>>2]|0;HEAP32[$$053+20>>2]=HEAP32[$43+20>>2]|0;HEAP32[$$053+24>>2]=HEAP32[$43+24>>2]|0;HEAP32[$$053+28>>2]=HEAP32[$43+28>>2]|0;\n    ;HEAP32[$43>>2]=HEAP32[$6>>2]|0;HEAP32[$43+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$43+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$43+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$43+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$43+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$43+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$43+28>>2]=HEAP32[$6+28>>2]|0;\n    $45 = $41;\n   }\n  }\n  $44 = (($45) + 1)|0;\n  $46 = +HEAPF64[$2>>3];\n  $47 = $46 < $3;\n  if ($47) {\n   $$05177 = $46;$$05276 = 0;\n   while(1) {\n    $48 = (($$05276) + 1)|0;\n    $49 = (((($$053) + ($$05276<<5)|0)) + 24|0);\n    $50 = +HEAPF32[$49>>2];\n    $51 = $50;\n    $52 = $$05177 + $51;\n    $53 = ($48>>>0)<=($45>>>0);\n    $54 = $52 < $3;\n    $or$cond = $53 & $54;\n    if ($or$cond) {\n     $$05177 = $52;$$05276 = $48;\n    } else {\n     break;\n    }\n   }\n   if ($54) {\n    HEAPF64[$2>>3] = $52;\n   } else {\n    label = 28;\n   }\n  } else {\n   label = 28;\n  }\n  do {\n   if ((label|0) == 28) {\n    label = 0;\n    $55 = ($45|0)==(0);\n    if ($55) {\n     $58 = ((($$053)) + 24|0);\n     $59 = +HEAPF32[$58>>2];\n     $60 = $59;\n     $61 = $46 + $60;\n     HEAPF64[$2>>3] = $61;\n     $62 = $61 > $3;\n     if ($62) {\n      $$363 = $$053;\n      label = 33;\n      break L1;\n     } else {\n      break;\n     }\n    } else {\n     $56 = (_hist_item_sort_halfvar($$053,$45,$2,$3)|0);\n     $57 = ($56|0)==(0|0);\n     if ($57) {\n      break;\n     } else {\n      $$363 = $56;\n      label = 33;\n      break L1;\n     }\n    }\n   }\n  } while(0);\n  $63 = ($$055>>>0)>($44>>>0);\n  $64 = (($$053) + ($44<<5)|0);\n  $65 = (($$055) - ($44))|0;\n  if ($63) {\n   $$053 = $64;$$055 = $65;\n  } else {\n   label = 32;\n   break;\n  }\n }\n if ((label|0) == 32) {\n  $66 = (((($$053) + ($44<<5)|0)) + 24|0);\n  $67 = +HEAPF32[$66>>2];\n  $68 = $67;\n  $69 = +HEAPF64[$2>>3];\n  $70 = $69 + $68;\n  HEAPF64[$2>>3] = $70;\n  $71 = $70 > $3;\n  $72 = $71 ? $64 : 0;\n  $$363 = $72;\n  STACKTOP = sp;return ($$363|0);\n }\n else if ((label|0) == 33) {\n  STACKTOP = sp;return ($$363|0);\n }\n return (0)|0;\n}\nfunction _liq_max3($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$$us = 0, $$07789 = 0, $$07789$us = 0, $$07884$us = 0, $$07884$us$phi = 0, $$07983$us = 0, $$08082$us = 0, $$090 = 0, $$090$us = 0, $$185$us = 0, $$81$us = 0, $$sink$us = 0, $$sink2$us = 0, $$sink3$sink$us = 0, $$sink4$us = 0, $$sink6 = 0, $$sink6$us = 0, $10 = 0, $11 = 0;\n var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond97 = 0, $exitcond98 = 0, $scevgep = 0, $scevgep96 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $4 = ($3|0)==(0);\n if ($4) {\n  return;\n }\n $5 = (($3) + -1)|0;\n $6 = (($2) + -1)|0;\n $7 = ($6|0)==(0);\n if ($7) {\n  $$07789 = 0;$$090 = $1;\n  while(1) {\n   $42 = Math_imul($$07789, $2)|0;\n   $43 = (($0) + ($42)|0);\n   $44 = ($$07789>>>0)>(1);\n   $45 = (($$07789) + -1)|0;\n   $46 = $44 ? $45 : 0;\n   $47 = Math_imul($46, $2)|0;\n   $48 = (($0) + ($47)|0);\n   $49 = (($$07789) + 1)|0;\n   $50 = ($5>>>0)<($49>>>0);\n   $51 = $50 ? $5 : $49;\n   $52 = Math_imul($51, $2)|0;\n   $53 = (($0) + ($52)|0);\n   $54 = HEAP8[$43>>0]|0;\n   $55 = HEAP8[$53>>0]|0;\n   $56 = HEAP8[$48>>0]|0;\n   $57 = ($55&255)>($56&255);\n   $$ = $57 ? $55 : $56;\n   $58 = ($54&255)>($$&255);\n   $$sink6 = $58 ? $54 : $$;\n   $59 = ((($$090)) + 1|0);\n   HEAP8[$$090>>0] = $$sink6;\n   $exitcond = ($49|0)==($3|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$07789 = $49;$$090 = $59;\n   }\n  }\n  return;\n }\n $8 = (($2) + -2)|0;\n $$07789$us = 0;$$090$us = $1;\n while(1) {\n  $9 = Math_imul($$07789$us, $2)|0;\n  $10 = (($0) + ($9)|0);\n  $11 = ($$07789$us>>>0)>(1);\n  $12 = (($$07789$us) + -1)|0;\n  $13 = $11 ? $12 : 0;\n  $14 = Math_imul($13, $2)|0;\n  $15 = (($0) + ($14)|0);\n  $16 = (($$07789$us) + 1)|0;\n  $17 = ($5>>>0)<($16>>>0);\n  $18 = $17 ? $5 : $16;\n  $19 = Math_imul($18, $2)|0;\n  $20 = (($0) + ($19)|0);\n  $21 = HEAP8[$10>>0]|0;\n  $scevgep = (($$090$us) + ($8)|0);\n  $$07884$us = $21;$$07983$us = 0;$$08082$us = $21;$$185$us = $$090$us;\n  while(1) {\n   $22 = (($$07983$us) + 1)|0;\n   $23 = (($10) + ($22)|0);\n   $24 = HEAP8[$23>>0]|0;\n   $25 = ($$07884$us&255)>($24&255);\n   $$sink$us = $25 ? $$07884$us : $24;\n   $26 = (($20) + ($$07983$us)|0);\n   $27 = HEAP8[$26>>0]|0;\n   $28 = (($15) + ($$07983$us)|0);\n   $29 = HEAP8[$28>>0]|0;\n   $30 = ($27&255)>($29&255);\n   $$81$us = $30 ? $27 : $29;\n   $31 = ($$sink$us&255)>($$81$us&255);\n   $$sink2$us = $31 ? $$sink$us : $$81$us;\n   $32 = ($$08082$us&255)>($$sink2$us&255);\n   $$sink3$sink$us = $32 ? $$08082$us : $$sink2$us;\n   $33 = ((($$185$us)) + 1|0);\n   HEAP8[$$185$us>>0] = $$sink3$sink$us;\n   $exitcond97 = ($22|0)==($6|0);\n   if ($exitcond97) {\n    break;\n   } else {\n    $$07884$us$phi = $$08082$us;$$07983$us = $22;$$08082$us = $24;$$185$us = $33;$$07884$us = $$07884$us$phi;\n   }\n  }\n  $scevgep96 = (($$090$us) + ($6)|0);\n  $34 = ($$08082$us&255)>($24&255);\n  $$sink4$us = $34 ? $$08082$us : $24;\n  $35 = (($20) + ($6)|0);\n  $36 = HEAP8[$35>>0]|0;\n  $37 = (($15) + ($6)|0);\n  $38 = HEAP8[$37>>0]|0;\n  $39 = ($36&255)>($38&255);\n  $$$us = $39 ? $36 : $38;\n  $40 = ($$sink4$us&255)>($$$us&255);\n  $$sink6$us = $40 ? $$sink4$us : $$$us;\n  $41 = ((($scevgep)) + 2|0);\n  HEAP8[$scevgep96>>0] = $$sink6$us;\n  $exitcond98 = ($16|0)==($3|0);\n  if ($exitcond98) {\n   break;\n  } else {\n   $$07789$us = $16;$$090$us = $41;\n  }\n }\n return;\n}\nfunction _liq_min3($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$$us = 0, $$07789 = 0, $$07789$us = 0, $$07884$us = 0, $$07884$us$phi = 0, $$07983$us = 0, $$08082$us = 0, $$090 = 0, $$090$us = 0, $$185$us = 0, $$81$us = 0, $$sink$us = 0, $$sink2$us = 0, $$sink3$sink$us = 0, $$sink4$us = 0, $$sink6 = 0, $$sink6$us = 0, $10 = 0, $11 = 0;\n var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond97 = 0, $exitcond98 = 0, $scevgep = 0, $scevgep96 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $4 = ($3|0)==(0);\n if ($4) {\n  return;\n }\n $5 = (($3) + -1)|0;\n $6 = (($2) + -1)|0;\n $7 = ($6|0)==(0);\n if ($7) {\n  $$07789 = 0;$$090 = $1;\n  while(1) {\n   $42 = Math_imul($$07789, $2)|0;\n   $43 = (($0) + ($42)|0);\n   $44 = ($$07789>>>0)>(1);\n   $45 = (($$07789) + -1)|0;\n   $46 = $44 ? $45 : 0;\n   $47 = Math_imul($46, $2)|0;\n   $48 = (($0) + ($47)|0);\n   $49 = (($$07789) + 1)|0;\n   $50 = ($5>>>0)<($49>>>0);\n   $51 = $50 ? $5 : $49;\n   $52 = Math_imul($51, $2)|0;\n   $53 = (($0) + ($52)|0);\n   $54 = HEAP8[$43>>0]|0;\n   $55 = HEAP8[$53>>0]|0;\n   $56 = HEAP8[$48>>0]|0;\n   $57 = ($55&255)<($56&255);\n   $$ = $57 ? $55 : $56;\n   $58 = ($54&255)<($$&255);\n   $$sink6 = $58 ? $54 : $$;\n   $59 = ((($$090)) + 1|0);\n   HEAP8[$$090>>0] = $$sink6;\n   $exitcond = ($49|0)==($3|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$07789 = $49;$$090 = $59;\n   }\n  }\n  return;\n }\n $8 = (($2) + -2)|0;\n $$07789$us = 0;$$090$us = $1;\n while(1) {\n  $9 = Math_imul($$07789$us, $2)|0;\n  $10 = (($0) + ($9)|0);\n  $11 = ($$07789$us>>>0)>(1);\n  $12 = (($$07789$us) + -1)|0;\n  $13 = $11 ? $12 : 0;\n  $14 = Math_imul($13, $2)|0;\n  $15 = (($0) + ($14)|0);\n  $16 = (($$07789$us) + 1)|0;\n  $17 = ($5>>>0)<($16>>>0);\n  $18 = $17 ? $5 : $16;\n  $19 = Math_imul($18, $2)|0;\n  $20 = (($0) + ($19)|0);\n  $21 = HEAP8[$10>>0]|0;\n  $scevgep = (($$090$us) + ($8)|0);\n  $$07884$us = $21;$$07983$us = 0;$$08082$us = $21;$$185$us = $$090$us;\n  while(1) {\n   $22 = (($$07983$us) + 1)|0;\n   $23 = (($10) + ($22)|0);\n   $24 = HEAP8[$23>>0]|0;\n   $25 = ($$07884$us&255)<($24&255);\n   $$sink$us = $25 ? $$07884$us : $24;\n   $26 = (($20) + ($$07983$us)|0);\n   $27 = HEAP8[$26>>0]|0;\n   $28 = (($15) + ($$07983$us)|0);\n   $29 = HEAP8[$28>>0]|0;\n   $30 = ($27&255)<($29&255);\n   $$81$us = $30 ? $27 : $29;\n   $31 = ($$sink$us&255)<($$81$us&255);\n   $$sink2$us = $31 ? $$sink$us : $$81$us;\n   $32 = ($$08082$us&255)<($$sink2$us&255);\n   $$sink3$sink$us = $32 ? $$08082$us : $$sink2$us;\n   $33 = ((($$185$us)) + 1|0);\n   HEAP8[$$185$us>>0] = $$sink3$sink$us;\n   $exitcond97 = ($22|0)==($6|0);\n   if ($exitcond97) {\n    break;\n   } else {\n    $$07884$us$phi = $$08082$us;$$07983$us = $22;$$08082$us = $24;$$185$us = $33;$$07884$us = $$07884$us$phi;\n   }\n  }\n  $scevgep96 = (($$090$us) + ($6)|0);\n  $34 = ($$08082$us&255)<($24&255);\n  $$sink4$us = $34 ? $$08082$us : $24;\n  $35 = (($20) + ($6)|0);\n  $36 = HEAP8[$35>>0]|0;\n  $37 = (($15) + ($6)|0);\n  $38 = HEAP8[$37>>0]|0;\n  $39 = ($36&255)<($38&255);\n  $$$us = $39 ? $36 : $38;\n  $40 = ($$sink4$us&255)<($$$us&255);\n  $$sink6$us = $40 ? $$sink4$us : $$$us;\n  $41 = ((($scevgep)) + 2|0);\n  HEAP8[$scevgep96>>0] = $$sink6$us;\n  $exitcond98 = ($16|0)==($3|0);\n  if ($exitcond98) {\n   break;\n  } else {\n   $$07789$us = $16;$$090$us = $41;\n  }\n }\n return;\n}\nfunction _liq_blur($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = $5 << 1;\n $7 = $6 | 1;\n $8 = ($7>>>0)>($3>>>0);\n $9 = ($7>>>0)>($4>>>0);\n $or$cond = $8 | $9;\n if ($or$cond) {\n  return;\n }\n _transposing_1d_blur($0,$1,$3,$4,$5);\n _transposing_1d_blur($1,$2,$4,$3,$5);\n return;\n}\nfunction _transposing_1d_blur($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$07892 = 0, $$07892$us = 0, $$07988$us = 0, $$08299 = 0, $$08299$us = 0, $$097 = 0, $$097$us = 0, $$187$us = 0, $$2$lcssa$us = 0, $$291$us = 0, $$396 = 0, $$396$us = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $exitcond111 = 0, $exitcond112 = 0;\n var $exitcond113 = 0, $exitcond114 = 0, $exitcond114128 = 0, $exitcond115 = 0, $exitcond116 = 0, $exitcond117 = 0, $exitcond118 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($3|0)==(0);\n if ($5) {\n  return;\n }\n $6 = ($4|0)==(0);\n $7 = (($2) - ($4))|0;\n $8 = ($7>>>0)>($4>>>0);\n $9 = (($2) + -1)|0;\n $10 = $4 << 1;\n $11 = ($7>>>0)<($2>>>0);\n if ($6) {\n  $$08299 = 0;\n  while(1) {\n   $68 = Math_imul($$08299, $2)|0;\n   $69 = (($0) + ($68)|0);\n   if ($8) {\n    $$07892 = 0;\n    while(1) {\n     $73 = Math_imul($$07892, $3)|0;\n     $74 = (($73) + ($$08299))|0;\n     $75 = (($1) + ($74)|0);\n     HEAP8[$75>>0] = 0;\n     $76 = (($$07892) + 1)|0;\n     $exitcond111 = ($76|0)==($7|0);\n     if ($exitcond111) {\n      break;\n     } else {\n      $$07892 = $76;\n     }\n    }\n   }\n   if ($11) {\n    $70 = (($69) + ($9)|0);\n    $71 = HEAP8[$70>>0]|0;\n    $72 = $71&255;\n    $$097 = $7;$$396 = 0;\n    while(1) {\n     $78 = (($69) + ($$097)|0);\n     $79 = HEAP8[$78>>0]|0;\n     $80 = $79&255;\n     $81 = (($$396) - ($80))|0;\n     $82 = (($81) + ($72))|0;\n     $83 = (($82>>>0) / ($10>>>0))&-1;\n     $84 = $83&255;\n     $85 = Math_imul($$097, $3)|0;\n     $86 = (($85) + ($$08299))|0;\n     $87 = (($1) + ($86)|0);\n     HEAP8[$87>>0] = $84;\n     $88 = (($$097) + 1)|0;\n     $exitcond112 = ($88|0)==($2|0);\n     if ($exitcond112) {\n      break;\n     } else {\n      $$097 = $88;$$396 = $82;\n     }\n    }\n   }\n   $77 = (($$08299) + 1)|0;\n   $exitcond113 = ($77|0)==($3|0);\n   if ($exitcond113) {\n    break;\n   } else {\n    $$08299 = $77;\n   }\n  }\n  return;\n }\n $exitcond114128 = ($4|0)==(1);\n $$08299$us = 0;\n while(1) {\n  $12 = Math_imul($$08299$us, $2)|0;\n  $13 = (($0) + ($12)|0);\n  $14 = HEAP8[$13>>0]|0;\n  $15 = $14&255;\n  $16 = Math_imul($15, $4)|0;\n  $17 = $14&255;\n  $18 = (($17) + ($16))|0;\n  if ($exitcond114128) {\n   $$07988$us = 0;$$187$us = $18;\n  } else {\n   $61 = 1;$64 = $18;\n   while(1) {\n    $$phi$trans$insert = (($13) + ($61)|0);\n    $$pre = HEAP8[$$phi$trans$insert>>0]|0;\n    $62 = $$pre&255;\n    $63 = (($62) + ($64))|0;\n    $65 = (($61) + 1)|0;\n    $exitcond114 = ($65|0)==($4|0);\n    if ($exitcond114) {\n     $$07988$us = 0;$$187$us = $63;\n     break;\n    } else {\n     $61 = $65;$64 = $63;\n    }\n   }\n  }\n  while(1) {\n   $49 = (($$187$us) - ($15))|0;\n   $50 = (($$07988$us) + ($4))|0;\n   $51 = (($13) + ($50)|0);\n   $52 = HEAP8[$51>>0]|0;\n   $53 = $52&255;\n   $54 = (($49) + ($53))|0;\n   $55 = (($54>>>0) / ($10>>>0))&-1;\n   $56 = $55&255;\n   $57 = Math_imul($$07988$us, $3)|0;\n   $58 = (($57) + ($$08299$us))|0;\n   $59 = (($1) + ($58)|0);\n   HEAP8[$59>>0] = $56;\n   $60 = (($$07988$us) + 1)|0;\n   $exitcond115 = ($60|0)==($4|0);\n   if ($exitcond115) {\n    break;\n   } else {\n    $$07988$us = $60;$$187$us = $54;\n   }\n  }\n  if ($8) {\n   $$07892$us = $4;$$291$us = $54;\n   while(1) {\n    $33 = (($$07892$us) - ($4))|0;\n    $34 = (($13) + ($33)|0);\n    $35 = HEAP8[$34>>0]|0;\n    $36 = $35&255;\n    $37 = (($$291$us) - ($36))|0;\n    $38 = (($$07892$us) + ($4))|0;\n    $39 = (($13) + ($38)|0);\n    $40 = HEAP8[$39>>0]|0;\n    $41 = $40&255;\n    $42 = (($37) + ($41))|0;\n    $43 = (($42>>>0) / ($10>>>0))&-1;\n    $44 = $43&255;\n    $45 = Math_imul($$07892$us, $3)|0;\n    $46 = (($45) + ($$08299$us))|0;\n    $47 = (($1) + ($46)|0);\n    HEAP8[$47>>0] = $44;\n    $48 = (($$07892$us) + 1)|0;\n    $exitcond116 = ($48|0)==($7|0);\n    if ($exitcond116) {\n     $$2$lcssa$us = $42;\n     break;\n    } else {\n     $$07892$us = $48;$$291$us = $42;\n    }\n   }\n  } else {\n   $$2$lcssa$us = $54;\n  }\n  if ($11) {\n   $66 = (($13) + ($9)|0);\n   $67 = HEAP8[$66>>0]|0;\n   $26 = $67&255;\n   $$097$us = $7;$$396$us = $$2$lcssa$us;\n   while(1) {\n    $20 = (($$097$us) - ($4))|0;\n    $21 = (($13) + ($20)|0);\n    $22 = HEAP8[$21>>0]|0;\n    $23 = $22&255;\n    $24 = (($$396$us) - ($23))|0;\n    $25 = (($24) + ($26))|0;\n    $27 = (($25>>>0) / ($10>>>0))&-1;\n    $28 = $27&255;\n    $29 = Math_imul($$097$us, $3)|0;\n    $30 = (($29) + ($$08299$us))|0;\n    $31 = (($1) + ($30)|0);\n    HEAP8[$31>>0] = $28;\n    $32 = (($$097$us) + 1)|0;\n    $exitcond117 = ($32|0)==($2|0);\n    if ($exitcond117) {\n     break;\n    } else {\n     $$097$us = $32;$$396$us = $25;\n    }\n   }\n  }\n  $19 = (($$08299$us) + 1)|0;\n  $exitcond118 = ($19|0)==($3|0);\n  if ($exitcond118) {\n   break;\n  } else {\n   $$08299$us = $19;\n  }\n }\n return;\n}\nfunction _mempool_create($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$1 = 0, $$pre = 0, $$sroa$2$0$$sroa_idx2 = 0, $$sroa$3$0$$sroa_idx3 = 0, $$sroa$4$0$$sroa_idx4 = 0, $$sroa$5$0$$sroa_idx5 = 0, $$tr42 = 0, $$tr43 = 0, $$tr44 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = (($1) + 15)|0;\n $$pre = HEAP32[$0>>2]|0;\n $6 = $$pre;\n $$tr42 = $2;$$tr43 = $3;$$tr44 = $4;$17 = $$pre;$24 = $6;$7 = $$pre;\n while(1) {\n  $8 = ($7|0)==(0|0);\n  if (!($8)) {\n   $9 = HEAP32[$7>>2]|0;\n   $10 = (($9) + ($1))|0;\n   $11 = ((($7)) + 4|0);\n   $12 = HEAP32[$11>>2]|0;\n   $13 = ($10>>>0)>($12>>>0);\n   if (!($13)) {\n    label = 4;\n    break;\n   }\n  }\n  $18 = ($$tr42|0)==(0);\n  $$ = $18 ? 131072 : $$tr42;\n  $19 = ($5>>>0)>($$>>>0);\n  $20 = $19 ? $5 : $$;\n  $21 = (($20) + 32)|0;\n  $22 = (FUNCTION_TABLE_ii[$$tr43 & 63]($21)|0);\n  HEAP32[$0>>2] = $22;\n  $23 = ($22|0)==(0|0);\n  if ($23) {\n   $$1 = 0;\n   label = 9;\n   break;\n  }\n  HEAP32[$22>>2] = 20;\n  $$sroa$2$0$$sroa_idx2 = ((($22)) + 4|0);\n  HEAP32[$$sroa$2$0$$sroa_idx2>>2] = $21;\n  $$sroa$3$0$$sroa_idx3 = ((($22)) + 8|0);\n  HEAP32[$$sroa$3$0$$sroa_idx3>>2] = $$tr43;\n  $$sroa$4$0$$sroa_idx4 = ((($22)) + 12|0);\n  HEAP32[$$sroa$4$0$$sroa_idx4>>2] = $$tr44;\n  $$sroa$5$0$$sroa_idx5 = ((($22)) + 16|0);\n  HEAP32[$$sroa$5$0$$sroa_idx5>>2] = $24;\n  $25 = HEAP32[$0>>2]|0;\n  $26 = $25;\n  $27 = HEAP32[$25>>2]|0;\n  $28 = (($26) + ($27))|0;\n  $29 = (0 - ($28))|0;\n  $30 = $29 & 15;\n  $31 = (($30) + ($27))|0;\n  HEAP32[$25>>2] = $31;\n  $32 = (($31) + ($1))|0;\n  $33 = ((($25)) + 4|0);\n  $34 = HEAP32[$33>>2]|0;\n  $35 = ($32>>>0)>($34>>>0);\n  if (!($35)) {\n   label = 7;\n   break;\n  }\n  $39 = ((($25)) + 8|0);\n  $40 = HEAP32[$39>>2]|0;\n  $41 = ((($25)) + 12|0);\n  $42 = HEAP32[$41>>2]|0;\n  $$tr42 = $1;$$tr43 = $40;$$tr44 = $42;$17 = $25;$24 = $26;$7 = $25;\n }\n if ((label|0) == 4) {\n  $14 = $5 & -16;\n  $15 = (($9) + ($14))|0;\n  HEAP32[$7>>2] = $15;\n  $16 = (($17) + ($9)|0);\n  $$1 = $16;\n  return ($$1|0);\n }\n else if ((label|0) == 7) {\n  $36 = $5 & -16;\n  $37 = (($31) + ($36))|0;\n  HEAP32[$25>>2] = $37;\n  $38 = (($25) + ($31)|0);\n  $$1 = $38;\n  return ($$1|0);\n }\n else if ((label|0) == 9) {\n  return ($$1|0);\n }\n return (0)|0;\n}\nfunction _mempool_alloc($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = HEAP32[$3>>2]|0;\n $5 = (($4) + ($1))|0;\n $6 = ((($3)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($5>>>0)>($7>>>0);\n if ($8) {\n  $13 = ((($3)) + 8|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = ((($3)) + 12|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = (_mempool_create($0,$1,$2,$14,$16)|0);\n  $$0 = $17;\n  return ($$0|0);\n } else {\n  $9 = (($1) + 15)|0;\n  $10 = $9 & -16;\n  $11 = (($4) + ($10))|0;\n  HEAP32[$3>>2] = $11;\n  $12 = (($3) + ($4)|0);\n  $$0 = $12;\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _mempool_destroy($0) {\n $0 = $0|0;\n var $$06 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n } else {\n  $$06 = $0;\n }\n while(1) {\n  $2 = ((($$06)) + 16|0);\n  $3 = HEAP32[$2>>2]|0;\n  $4 = ((($$06)) + 12|0);\n  $5 = HEAP32[$4>>2]|0;\n  FUNCTION_TABLE_vi[$5 & 127]($$06);\n  $6 = ($3|0)==(0|0);\n  if ($6) {\n   break;\n  } else {\n   $$06 = $3;\n  }\n }\n return;\n}\nfunction _kmeans_init($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3*40)|0;\n $5 = (($4) + 80)|0;\n $6 = Math_imul($5, $1)|0;\n _memset(($2|0),0,($6|0))|0;\n return;\n}\nfunction _kmeans_update_color($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0.0;\n var $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0.0, $40 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = HEAP32[$2>>2]|0;\n $7 = (($6) + 2)|0;\n $8 = Math_imul($7, $4)|0;\n $9 = (($8) + ($3))|0;\n $10 = +HEAPF32[$0>>2];\n $11 = $10 * $1;\n $12 = $11;\n $13 = (($5) + (($9*40)|0)|0);\n $14 = +HEAPF64[$13>>3];\n $15 = $14 + $12;\n HEAPF64[$13>>3] = $15;\n $16 = ((($0)) + 4|0);\n $17 = +HEAPF32[$16>>2];\n $18 = $17 * $1;\n $19 = $18;\n $20 = (((($5) + (($9*40)|0)|0)) + 8|0);\n $21 = +HEAPF64[$20>>3];\n $22 = $21 + $19;\n HEAPF64[$20>>3] = $22;\n $23 = ((($0)) + 8|0);\n $24 = +HEAPF32[$23>>2];\n $25 = $24 * $1;\n $26 = $25;\n $27 = (((($5) + (($9*40)|0)|0)) + 16|0);\n $28 = +HEAPF64[$27>>3];\n $29 = $28 + $26;\n HEAPF64[$27>>3] = $29;\n $30 = ((($0)) + 12|0);\n $31 = +HEAPF32[$30>>2];\n $32 = $31 * $1;\n $33 = $32;\n $34 = (((($5) + (($9*40)|0)|0)) + 24|0);\n $35 = +HEAPF64[$34>>3];\n $36 = $35 + $33;\n HEAPF64[$34>>3] = $36;\n $37 = $1;\n $38 = (((($5) + (($9*40)|0)|0)) + 32|0);\n $39 = +HEAPF64[$38>>3];\n $40 = $37 + $39;\n HEAPF64[$38>>3] = $40;\n return;\n}\nfunction _kmeans_finalize($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$05768$us = 0.0, $$05867$us = 0.0, $$05966$us = 0.0, $$06065$us = 0, $$06164$us = 0.0, $$06263$us = 0.0, $$073 = 0, $$073$us = 0, $$pre = 0, $$sroa$0$0$$sroa_idx$us = 0, $$sroa$2$0$$sroa_idx1$us = 0, $$sroa$3$0$$sroa_idx2$us = 0, $$sroa$4$0$$sroa_idx3$us = 0, $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0;\n var $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0;\n var $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3|0)==(0);\n if ($4) {\n  return;\n }\n $5 = ($1|0)==(0);\n if ($5) {\n  $$073 = 0;\n  while(1) {\n   $43 = (($$073) + 1)|0;\n   $44 = ($43>>>0)<($3>>>0);\n   if ($44) {\n    $$073 = $43;\n   } else {\n    break;\n   }\n  }\n  return;\n } else {\n  $$073$us = 0;$7 = $3;\n }\n while(1) {\n  $6 = (($7) + 2)|0;\n  $$05768$us = 0.0;$$05867$us = 0.0;$$05966$us = 0.0;$$06065$us = 0;$$06164$us = 0.0;$$06263$us = 0.0;\n  while(1) {\n   $29 = Math_imul($6, $$06065$us)|0;\n   $30 = (($29) + ($$073$us))|0;\n   $31 = (($2) + (($30*40)|0)|0);\n   $32 = +HEAPF64[$31>>3];\n   $13 = $$05768$us + $32;\n   $33 = (((($2) + (($30*40)|0)|0)) + 8|0);\n   $34 = +HEAPF64[$33>>3];\n   $16 = $$05867$us + $34;\n   $35 = (((($2) + (($30*40)|0)|0)) + 16|0);\n   $36 = +HEAPF64[$35>>3];\n   $19 = $$05966$us + $36;\n   $37 = (((($2) + (($30*40)|0)|0)) + 24|0);\n   $38 = +HEAPF64[$37>>3];\n   $22 = $$06263$us + $38;\n   $39 = (((($2) + (($30*40)|0)|0)) + 32|0);\n   $40 = +HEAPF64[$39>>3];\n   $12 = $$06164$us + $40;\n   $41 = (($$06065$us) + 1)|0;\n   $exitcond = ($41|0)==($1|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$05768$us = $13;$$05867$us = $16;$$05966$us = $19;$$06065$us = $41;$$06164$us = $12;$$06263$us = $22;\n   }\n  }\n  $42 = $12 != 0.0;\n  if ($42) {\n   $8 = (((((($0)) + 12|0) + (($$073$us*24)|0)|0)) + 20|0);\n   $9 = HEAP8[$8>>0]|0;\n   $10 = ($9<<24>>24)==(0);\n   if ($10) {\n    $11 = $13 / $12;\n    $14 = $11;\n    $15 = $16 / $12;\n    $17 = $15;\n    $18 = $19 / $12;\n    $20 = $18;\n    $21 = $22 / $12;\n    $23 = $21;\n    $$sroa$0$0$$sroa_idx$us = (((($0)) + 12|0) + (($$073$us*24)|0)|0);\n    HEAPF32[$$sroa$0$0$$sroa_idx$us>>2] = $14;\n    $$sroa$2$0$$sroa_idx1$us = (((((($0)) + 12|0) + (($$073$us*24)|0)|0)) + 4|0);\n    HEAPF32[$$sroa$2$0$$sroa_idx1$us>>2] = $17;\n    $$sroa$3$0$$sroa_idx2$us = (((((($0)) + 12|0) + (($$073$us*24)|0)|0)) + 8|0);\n    HEAPF32[$$sroa$3$0$$sroa_idx2$us>>2] = $20;\n    $$sroa$4$0$$sroa_idx3$us = (((((($0)) + 12|0) + (($$073$us*24)|0)|0)) + 12|0);\n    HEAPF32[$$sroa$4$0$$sroa_idx3$us>>2] = $23;\n    $24 = $12;\n    $25 = (((((($0)) + 12|0) + (($$073$us*24)|0)|0)) + 16|0);\n    HEAPF32[$25>>2] = $24;\n    $$pre = HEAP32[$0>>2]|0;\n    $28 = $$pre;\n   } else {\n    $28 = $7;\n   }\n  } else {\n   $28 = $7;\n  }\n  $26 = (($$073$us) + 1)|0;\n  $27 = ($26>>>0)<($28>>>0);\n  if ($27) {\n   $$073$us = $26;$7 = $28;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _kmeans_do_iteration($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa = 0.0, $$04658 = 0, $$04658$us = 0, $$059 = 0.0, $$059$us = 0.0, $$073$us$i = 0, $$alloca_mul = 0, $$pre$i = 0, $$sroa$0$0$$sroa_idx$us$i = 0, $$sroa$0$0$copyload = 0.0, $$sroa$0$0$copyload$us = 0.0, $$sroa$2$0$$sroa_idx1$us$i = 0, $$sroa$3$0$$sroa_idx2$us$i = 0, $$sroa$4$0$$sroa_idx3$us$i = 0, $$sroa$4$0$$sroa_idx48 = 0, $$sroa$4$0$$sroa_idx48$us = 0, $$sroa$4$0$copyload = 0.0, $$sroa$4$0$copyload$us = 0.0, $$sroa$5$0$$sroa_idx50 = 0, $$sroa$5$0$$sroa_idx50$us = 0;\n var $$sroa$5$0$copyload = 0.0, $$sroa$5$0$copyload$us = 0.0, $$sroa$6$0$$sroa_idx52 = 0, $$sroa$6$0$$sroa_idx52$us = 0, $$sroa$6$0$copyload = 0.0, $$sroa$6$0$copyload$us = 0.0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0;\n var $112 = 0.0, $113 = 0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0;\n var $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond68 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = HEAP32[$1>>2]|0;\n $5 = (($4) + 2)|0;\n $$alloca_mul = ($5*40)|0;\n $6 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $7 = ($4*40)|0;\n $8 = (($7) + 80)|0;\n _memset(($6|0),0,($8|0))|0;\n $9 = (_nearest_init($1)|0);\n $10 = HEAP32[$0>>2]|0;\n $11 = ((($0)) + 16|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ($12|0)>(0);\n if ($13) {\n  $14 = ($2|0)==(0|0);\n  if ($14) {\n   $$04658$us = 0;$$059$us = 0.0;\n   while(1) {\n    $15 = (($10) + ($$04658$us<<5)|0);\n    $16 = (((($10) + ($$04658$us<<5)|0)) + 28|0);\n    $17 = HEAP8[$16>>0]|0;\n    $18 = $17&255;\n    $19 = (_nearest_search($9,$15,$18,$3)|0);\n    $20 = $19&255;\n    HEAP8[$16>>0] = $20;\n    $21 = +HEAPF32[$3>>2];\n    $22 = (((($10) + ($$04658$us<<5)|0)) + 20|0);\n    $23 = +HEAPF32[$22>>2];\n    $24 = $21 * $23;\n    $25 = $24;\n    $26 = $$059$us + $25;\n    HEAP8[tempDoublePtr>>0]=HEAP8[$15>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$15+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$15+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$15+3>>0];$$sroa$0$0$copyload$us = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$4$0$$sroa_idx48$us = (((($10) + ($$04658$us<<5)|0)) + 4|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx48$us>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx48$us+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx48$us+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx48$us+3>>0];$$sroa$4$0$copyload$us = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$5$0$$sroa_idx50$us = (((($10) + ($$04658$us<<5)|0)) + 8|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx50$us>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx50$us+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx50$us+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx50$us+3>>0];$$sroa$5$0$copyload$us = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$6$0$$sroa_idx52$us = (((($10) + ($$04658$us<<5)|0)) + 12|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx52$us>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx52$us+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx52$us+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx52$us+3>>0];$$sroa$6$0$copyload$us = +HEAPF32[tempDoublePtr>>2];\n    $27 = $23 * $$sroa$0$0$copyload$us;\n    $28 = $27;\n    $29 = (($6) + (($19*40)|0)|0);\n    $30 = +HEAPF64[$29>>3];\n    $31 = $28 + $30;\n    HEAPF64[$29>>3] = $31;\n    $32 = $23 * $$sroa$4$0$copyload$us;\n    $33 = $32;\n    $34 = (((($6) + (($19*40)|0)|0)) + 8|0);\n    $35 = +HEAPF64[$34>>3];\n    $36 = $33 + $35;\n    HEAPF64[$34>>3] = $36;\n    $37 = $23 * $$sroa$5$0$copyload$us;\n    $38 = $37;\n    $39 = (((($6) + (($19*40)|0)|0)) + 16|0);\n    $40 = +HEAPF64[$39>>3];\n    $41 = $38 + $40;\n    HEAPF64[$39>>3] = $41;\n    $42 = $23 * $$sroa$6$0$copyload$us;\n    $43 = $42;\n    $44 = (((($6) + (($19*40)|0)|0)) + 24|0);\n    $45 = +HEAPF64[$44>>3];\n    $46 = $43 + $45;\n    HEAPF64[$44>>3] = $46;\n    $47 = $23;\n    $48 = (((($6) + (($19*40)|0)|0)) + 32|0);\n    $49 = +HEAPF64[$48>>3];\n    $50 = $47 + $49;\n    HEAPF64[$48>>3] = $50;\n    $51 = (($$04658$us) + 1)|0;\n    $exitcond = ($51|0)==($12|0);\n    if ($exitcond) {\n     $$0$lcssa = $26;\n     break;\n    } else {\n     $$04658$us = $51;$$059$us = $26;\n    }\n   }\n  } else {\n   $$04658 = 0;$$059 = 0.0;\n   while(1) {\n    $89 = (($10) + ($$04658<<5)|0);\n    $90 = (((($10) + ($$04658<<5)|0)) + 28|0);\n    $91 = HEAP8[$90>>0]|0;\n    $92 = $91&255;\n    $93 = (_nearest_search($9,$89,$92,$3)|0);\n    $94 = $93&255;\n    HEAP8[$90>>0] = $94;\n    $95 = +HEAPF32[$3>>2];\n    $96 = (((($10) + ($$04658<<5)|0)) + 20|0);\n    $97 = +HEAPF32[$96>>2];\n    $98 = $95 * $97;\n    $99 = $98;\n    $100 = $$059 + $99;\n    HEAP8[tempDoublePtr>>0]=HEAP8[$89>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$89+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$89+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$89+3>>0];$$sroa$0$0$copyload = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$4$0$$sroa_idx48 = (((($10) + ($$04658<<5)|0)) + 4|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx48>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx48+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx48+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx48+3>>0];$$sroa$4$0$copyload = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$5$0$$sroa_idx50 = (((($10) + ($$04658<<5)|0)) + 8|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx50>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx50+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx50+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx50+3>>0];$$sroa$5$0$copyload = +HEAPF32[tempDoublePtr>>2];\n    $$sroa$6$0$$sroa_idx52 = (((($10) + ($$04658<<5)|0)) + 12|0);\n    HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx52>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx52+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx52+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx52+3>>0];$$sroa$6$0$copyload = +HEAPF32[tempDoublePtr>>2];\n    $101 = $97 * $$sroa$0$0$copyload;\n    $102 = $101;\n    $103 = (($6) + (($93*40)|0)|0);\n    $104 = +HEAPF64[$103>>3];\n    $105 = $102 + $104;\n    HEAPF64[$103>>3] = $105;\n    $106 = $97 * $$sroa$4$0$copyload;\n    $107 = $106;\n    $108 = (((($6) + (($93*40)|0)|0)) + 8|0);\n    $109 = +HEAPF64[$108>>3];\n    $110 = $107 + $109;\n    HEAPF64[$108>>3] = $110;\n    $111 = $97 * $$sroa$5$0$copyload;\n    $112 = $111;\n    $113 = (((($6) + (($93*40)|0)|0)) + 16|0);\n    $114 = +HEAPF64[$113>>3];\n    $115 = $112 + $114;\n    HEAPF64[$113>>3] = $115;\n    $116 = $97 * $$sroa$6$0$copyload;\n    $117 = $116;\n    $118 = (((($6) + (($93*40)|0)|0)) + 24|0);\n    $119 = +HEAPF64[$118>>3];\n    $120 = $117 + $119;\n    HEAPF64[$118>>3] = $120;\n    $121 = $97;\n    $122 = (((($6) + (($93*40)|0)|0)) + 32|0);\n    $123 = +HEAPF64[$122>>3];\n    $124 = $121 + $123;\n    HEAPF64[$122>>3] = $124;\n    FUNCTION_TABLE_vid[$2 & 63]($89,$95);\n    $125 = (($$04658) + 1)|0;\n    $exitcond68 = ($125|0)==($12|0);\n    if ($exitcond68) {\n     $$0$lcssa = $100;\n     break;\n    } else {\n     $$04658 = $125;$$059 = $100;\n    }\n   }\n  }\n } else {\n  $$0$lcssa = 0.0;\n }\n _nearest_free($9);\n $52 = HEAP32[$1>>2]|0;\n $53 = ($52|0)==(0);\n if ($53) {\n  $86 = ((($0)) + 8|0);\n  $87 = +HEAPF64[$86>>3];\n  $88 = $$0$lcssa / $87;\n  STACKTOP = sp;return (+$88);\n } else {\n  $$073$us$i = 0;$126 = $52;\n }\n while(1) {\n  $54 = (($6) + (($$073$us$i*40)|0)|0);\n  $55 = +HEAPF64[$54>>3];\n  $56 = $55 + 0.0;\n  $57 = (((($6) + (($$073$us$i*40)|0)|0)) + 8|0);\n  $58 = +HEAPF64[$57>>3];\n  $59 = $58 + 0.0;\n  $60 = (((($6) + (($$073$us$i*40)|0)|0)) + 16|0);\n  $61 = +HEAPF64[$60>>3];\n  $62 = $61 + 0.0;\n  $63 = (((($6) + (($$073$us$i*40)|0)|0)) + 24|0);\n  $64 = +HEAPF64[$63>>3];\n  $65 = $64 + 0.0;\n  $66 = (((($6) + (($$073$us$i*40)|0)|0)) + 32|0);\n  $67 = +HEAPF64[$66>>3];\n  $68 = $67 + 0.0;\n  $69 = $68 != 0.0;\n  if ($69) {\n   $70 = (((((($1)) + 12|0) + (($$073$us$i*24)|0)|0)) + 20|0);\n   $71 = HEAP8[$70>>0]|0;\n   $72 = ($71<<24>>24)==(0);\n   if ($72) {\n    $73 = $56 / $68;\n    $74 = $73;\n    $75 = $59 / $68;\n    $76 = $75;\n    $77 = $62 / $68;\n    $78 = $77;\n    $79 = $65 / $68;\n    $80 = $79;\n    $$sroa$0$0$$sroa_idx$us$i = (((($1)) + 12|0) + (($$073$us$i*24)|0)|0);\n    HEAPF32[$$sroa$0$0$$sroa_idx$us$i>>2] = $74;\n    $$sroa$2$0$$sroa_idx1$us$i = (((((($1)) + 12|0) + (($$073$us$i*24)|0)|0)) + 4|0);\n    HEAPF32[$$sroa$2$0$$sroa_idx1$us$i>>2] = $76;\n    $$sroa$3$0$$sroa_idx2$us$i = (((((($1)) + 12|0) + (($$073$us$i*24)|0)|0)) + 8|0);\n    HEAPF32[$$sroa$3$0$$sroa_idx2$us$i>>2] = $78;\n    $$sroa$4$0$$sroa_idx3$us$i = (((((($1)) + 12|0) + (($$073$us$i*24)|0)|0)) + 12|0);\n    HEAPF32[$$sroa$4$0$$sroa_idx3$us$i>>2] = $80;\n    $81 = $68;\n    $82 = (((((($1)) + 12|0) + (($$073$us$i*24)|0)|0)) + 16|0);\n    HEAPF32[$82>>2] = $81;\n    $$pre$i = HEAP32[$1>>2]|0;\n    $85 = $$pre$i;\n   } else {\n    $85 = $126;\n   }\n  } else {\n   $85 = $126;\n  }\n  $83 = (($$073$us$i) + 1)|0;\n  $84 = ($83>>>0)<($85>>>0);\n  if ($84) {\n   $$073$us$i = $83;$126 = $85;\n  } else {\n   break;\n  }\n }\n $86 = ((($0)) + 8|0);\n $87 = +HEAPF64[$86>>3];\n $88 = $$0$lcssa / $87;\n STACKTOP = sp;return (+$88);\n}\nfunction _nearest_init($0) {\n $0 = $0|0;\n var $$03638 = 0, $$037 = 0, $$alloca_mul = 0, $$lcssa = 0, $$sroa$3$0$$sroa_idx6 = 0, $$sroa$4$0$$sroa_idx = 0, $$sroa$48$0$$sroa_idx9 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp + 12|0;\n $2 = sp;\n HEAP32[$1>>2] = 0;\n $3 = HEAP32[$0>>2]|0;\n $4 = $3 << 5;\n $5 = (($4) + 1052)|0;\n $6 = ((($0)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($0)) + 8|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (_mempool_create($1,1036,$5,$7,$9)|0);\n $11 = HEAP32[$0>>2]|0;\n $12 = (_llvm_stacksave()|0);\n $$alloca_mul = $11<<3;\n $13 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;\n $14 = HEAP32[$0>>2]|0;\n $15 = ($14|0)==(0);\n if ($15) {\n  $$lcssa = 0;\n } else {\n  $$03638 = 0;\n  while(1) {\n   $23 = (((($13) + ($$03638<<3)|0)) + 4|0);\n   HEAP32[$23>>2] = $$03638;\n   $24 = (($$03638) + 1)|0;\n   $25 = ($24>>>0)<($14>>>0);\n   if ($25) {\n    $$03638 = $24;\n   } else {\n    $$lcssa = $14;\n    break;\n   }\n  }\n }\n $16 = ((($0)) + 12|0);\n $17 = (_vp_create_node($1,$13,$$lcssa,$16)|0);\n $18 = HEAP32[$1>>2]|0;\n HEAP32[$10>>2] = $17;\n $$sroa$3$0$$sroa_idx6 = ((($10)) + 4|0);\n HEAP32[$$sroa$3$0$$sroa_idx6>>2] = $16;\n $$sroa$4$0$$sroa_idx = ((($10)) + 8|0);\n _memset(($$sroa$4$0$$sroa_idx|0),0,1024)|0;\n $$sroa$48$0$$sroa_idx9 = ((($10)) + 1032|0);\n HEAP32[$$sroa$48$0$$sroa_idx9>>2] = $18;\n $19 = HEAP32[$0>>2]|0;\n $20 = ($19|0)==(0);\n if ($20) {\n  _llvm_stackrestore(($12|0));\n  STACKTOP = sp;return ($10|0);\n }\n $21 = ((($2)) + 4|0);\n $22 = ((($2)) + 8|0);\n $$037 = 0;\n while(1) {\n  HEAPF32[$2>>2] = 1.0000000200408773E+20;\n  HEAP32[$21>>2] = 0;\n  HEAP32[$22>>2] = $$037;\n  $26 = (((($0)) + 12|0) + (($$037*24)|0)|0);\n  _vp_search_node($17,$26,$2);\n  $27 = +HEAPF32[$2>>2];\n  $28 = $27 * $27;\n  $29 = $28 * 0.25;\n  $30 = (($$sroa$4$0$$sroa_idx) + ($$037<<2)|0);\n  HEAPF32[$30>>2] = $29;\n  $31 = (($$037) + 1)|0;\n  $32 = HEAP32[$0>>2]|0;\n  $33 = ($31>>>0)<($32>>>0);\n  if ($33) {\n   $$037 = $31;\n  } else {\n   break;\n  }\n }\n _llvm_stackrestore(($12|0));\n STACKTOP = sp;return ($10|0);\n}\nfunction _vp_create_node($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$i$i$i$i = 0.0, $$$i4$i$i$i = 0.0, $$$i5$i$i$i = 0.0, $$017$i = 0, $$01822$i = 0.0, $$01921$i = 0, $$023$i = 0, $$1 = 0, $$1$i = 0.0, $$120$i = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$copyload = 0.0, $$sroa$0$0$copyload$i = 0.0, $$sroa$2$0$$sroa_idx1 = 0, $$sroa$218$0$$sroa_idx19 = 0, $$sroa$3 = 0, $$sroa$3$0$$sroa_idx = 0, $$sroa$320 = 0, $$sroa$320$0$$sroa_idx = 0, $$sroa$4$0$$sroa_idx11$i = 0;\n var $$sroa$4$0$$sroa_idx2 = 0, $$sroa$4$0$$sroa_idx65 = 0, $$sroa$4$0$copyload = 0.0, $$sroa$4$0$copyload$i = 0.0, $$sroa$421$0$$sroa_idx22 = 0, $$sroa$5$0$$sroa_idx13$i = 0, $$sroa$5$0$$sroa_idx3 = 0, $$sroa$5$0$$sroa_idx67 = 0, $$sroa$5$0$copyload = 0.0, $$sroa$5$0$copyload$i = 0.0, $$sroa$523$0$$sroa_idx24 = 0, $$sroa$6$0$$sroa_idx15$i = 0, $$sroa$6$0$$sroa_idx69 = 0, $$sroa$6$0$copyload = 0.0, $$sroa$6$0$copyload$i = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0;\n var $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0;\n var $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond$i62 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $$sroa$320 = sp + 16|0;\n $$sroa$3 = sp;\n $4 = ($2|0)<(1);\n if ($4) {\n  $$1 = 0;\n  STACKTOP = sp;return ($$1|0);\n }\n $5 = (_mempool_alloc($0,32,0)|0);\n $6 = ($2|0)==(1);\n $7 = ((($1)) + 4|0);\n $8 = HEAP32[$7>>2]|0;\n if ($6) {\n  $9 = (($3) + (($8*24)|0)|0);\n  ;HEAP32[$$sroa$320>>2]=HEAP32[$9>>2]|0;HEAP32[$$sroa$320+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$$sroa$320+8>>2]=HEAP32[$9+8>>2]|0;HEAP32[$$sroa$320+12>>2]=HEAP32[$9+12>>2]|0;\n  HEAP32[$5>>2] = 0;\n  $$sroa$218$0$$sroa_idx19 = ((($5)) + 4|0);\n  HEAP32[$$sroa$218$0$$sroa_idx19>>2] = 0;\n  $$sroa$320$0$$sroa_idx = ((($5)) + 8|0);\n  ;HEAP32[$$sroa$320$0$$sroa_idx>>2]=HEAP32[$$sroa$320>>2]|0;HEAP32[$$sroa$320$0$$sroa_idx+4>>2]=HEAP32[$$sroa$320+4>>2]|0;HEAP32[$$sroa$320$0$$sroa_idx+8>>2]=HEAP32[$$sroa$320+8>>2]|0;HEAP32[$$sroa$320$0$$sroa_idx+12>>2]=HEAP32[$$sroa$320+12>>2]|0;\n  $$sroa$421$0$$sroa_idx22 = ((($5)) + 24|0);\n  HEAPF32[$$sroa$421$0$$sroa_idx22>>2] = 1.0000000200408773E+20;\n  $$sroa$523$0$$sroa_idx24 = ((($5)) + 28|0);\n  HEAP32[$$sroa$523$0$$sroa_idx24>>2] = $8;\n  $$1 = $5;\n  STACKTOP = sp;return ($$1|0);\n }\n $10 = (((($3) + (($8*24)|0)|0)) + 16|0);\n $11 = +HEAPF32[$10>>2];\n $$01822$i = $11;$$01921$i = 0;$$023$i = 1;\n while(1) {\n  $12 = (((($1) + ($$023$i<<3)|0)) + 4|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = (((($3) + (($13*24)|0)|0)) + 16|0);\n  $15 = +HEAPF32[$14>>2];\n  $16 = $15 > $$01822$i;\n  $$120$i = $16 ? $$023$i : $$01921$i;\n  $$1$i = $16 ? $15 : $$01822$i;\n  $17 = (($$023$i) + 1)|0;\n  $exitcond$i = ($17|0)==($2|0);\n  if ($exitcond$i) {\n   break;\n  } else {\n   $$01822$i = $$1$i;$$01921$i = $$120$i;$$023$i = $17;\n  }\n }\n $18 = (($1) + ($$120$i<<3)|0);\n $19 = (((($1) + ($$120$i<<3)|0)) + 4|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (($2) + -1)|0;\n $22 = (($1) + ($21<<3)|0);\n $23 = $22;\n $24 = $23;\n $25 = HEAP32[$24>>2]|0;\n $26 = (($23) + 4)|0;\n $27 = $26;\n $28 = HEAP32[$27>>2]|0;\n $29 = $18;\n $30 = $29;\n HEAP32[$30>>2] = $25;\n $31 = (($29) + 4)|0;\n $32 = $31;\n HEAP32[$32>>2] = $28;\n $33 = (($3) + (($20*24)|0)|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$33>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$33+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$33+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$33+3>>0];$$sroa$0$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $34 = ($2|0)>(1);\n if ($34) {\n  $$sroa$6$0$$sroa_idx69 = (((($3) + (($20*24)|0)|0)) + 12|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx69>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx69+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx69+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx69+3>>0];$$sroa$6$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$5$0$$sroa_idx67 = (((($3) + (($20*24)|0)|0)) + 8|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx67>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx67+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx67+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx67+3>>0];$$sroa$5$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$4$0$$sroa_idx65 = (((($3) + (($20*24)|0)|0)) + 4|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx65>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx65+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx65+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx65+3>>0];$$sroa$4$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $35 = $$sroa$4$0$copyload;\n  $36 = $$sroa$5$0$copyload;\n  $37 = $$sroa$6$0$copyload;\n  $$017$i = 0;\n  while(1) {\n   $38 = (((($1) + ($$017$i<<3)|0)) + 4|0);\n   $39 = HEAP32[$38>>2]|0;\n   $$sroa$0$0$$sroa_idx$i = (($3) + (($39*24)|0)|0);\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0$0$$sroa_idx$i+3>>0];$$sroa$0$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n   $$sroa$4$0$$sroa_idx11$i = (((($3) + (($39*24)|0)|0)) + 4|0);\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx11$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx11$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx11$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx11$i+3>>0];$$sroa$4$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n   $$sroa$5$0$$sroa_idx13$i = (((($3) + (($39*24)|0)|0)) + 8|0);\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx13$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx13$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx13$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx13$i+3>>0];$$sroa$5$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n   $$sroa$6$0$$sroa_idx15$i = (((($3) + (($39*24)|0)|0)) + 12|0);\n   HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx15$i>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx15$i+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx15$i+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx15$i+3>>0];$$sroa$6$0$copyload$i = +HEAPF32[tempDoublePtr>>2];\n   $40 = $$sroa$0$0$copyload$i - $$sroa$0$0$copyload;\n   $41 = $40;\n   $42 = $$sroa$4$0$copyload$i;\n   $43 = $35 - $42;\n   $44 = $41 + $43;\n   $45 = $43 * $43;\n   $46 = $44 * $44;\n   $47 = $45 > $46;\n   $$$i$i$i$i = $47 ? $45 : $46;\n   $48 = $$sroa$5$0$copyload$i;\n   $49 = $36 - $48;\n   $50 = $41 + $49;\n   $51 = $49 * $49;\n   $52 = $50 * $50;\n   $53 = $51 > $52;\n   $$$i5$i$i$i = $53 ? $51 : $52;\n   $54 = $$$i$i$i$i + $$$i5$i$i$i;\n   $55 = $$sroa$6$0$copyload$i;\n   $56 = $37 - $55;\n   $57 = $41 + $56;\n   $58 = $56 * $56;\n   $59 = $57 * $57;\n   $60 = $58 > $59;\n   $$$i4$i$i$i = $60 ? $58 : $59;\n   $61 = $54 + $$$i4$i$i$i;\n   $62 = $61;\n   $63 = (($1) + ($$017$i<<3)|0);\n   HEAPF32[$63>>2] = $62;\n   $64 = (($$017$i) + 1)|0;\n   $exitcond$i62 = ($64|0)==($21|0);\n   if ($exitcond$i62) {\n    break;\n   } else {\n    $$017$i = $64;\n   }\n  }\n }\n _qsort($1,$21,8,51);\n $65 = (($21|0) / 2)&-1;\n ;HEAP32[$$sroa$3>>2]=HEAP32[$33>>2]|0;HEAP32[$$sroa$3+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$$sroa$3+8>>2]=HEAP32[$33+8>>2]|0;HEAP32[$$sroa$3+12>>2]=HEAP32[$33+12>>2]|0;\n $66 = (($1) + ($65<<3)|0);\n $67 = +HEAPF32[$66>>2];\n $68 = (+Math_sqrt((+$67)));\n HEAP32[$5>>2] = 0;\n $$sroa$2$0$$sroa_idx1 = ((($5)) + 4|0);\n HEAP32[$$sroa$2$0$$sroa_idx1>>2] = 0;\n $$sroa$3$0$$sroa_idx = ((($5)) + 8|0);\n ;HEAP32[$$sroa$3$0$$sroa_idx>>2]=HEAP32[$$sroa$3>>2]|0;HEAP32[$$sroa$3$0$$sroa_idx+4>>2]=HEAP32[$$sroa$3+4>>2]|0;HEAP32[$$sroa$3$0$$sroa_idx+8>>2]=HEAP32[$$sroa$3+8>>2]|0;HEAP32[$$sroa$3$0$$sroa_idx+12>>2]=HEAP32[$$sroa$3+12>>2]|0;\n $$sroa$4$0$$sroa_idx2 = ((($5)) + 24|0);\n HEAPF32[$$sroa$4$0$$sroa_idx2>>2] = $68;\n $$sroa$5$0$$sroa_idx3 = ((($5)) + 28|0);\n HEAP32[$$sroa$5$0$$sroa_idx3>>2] = $20;\n $69 = (_vp_create_node($0,$1,$65,$3)|0);\n HEAP32[$5>>2] = $69;\n $70 = (($21) - ($65))|0;\n $71 = (_vp_create_node($0,$66,$70,$3)|0);\n HEAP32[$$sroa$2$0$$sroa_idx1>>2] = $71;\n $$1 = $5;\n STACKTOP = sp;return ($$1|0);\n}\nfunction _vp_search_node($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$i$i$i = 0.0, $$$i4$i$i = 0.0, $$$i5$i$i = 0.0, $$030 = 0, $$pre = 0.0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$copyload = 0.0, $$sroa$038$0$copyload = 0.0, $$sroa$4$0$$sroa_idx32 = 0, $$sroa$4$0$copyload = 0.0, $$sroa$440$0$$sroa_idx41 = 0, $$sroa$440$0$copyload = 0.0, $$sroa$5$0$$sroa_idx34 = 0, $$sroa$5$0$copyload = 0.0, $$sroa$543$0$$sroa_idx44 = 0, $$sroa$543$0$copyload = 0.0, $$sroa$6$0$$sroa_idx36 = 0, $$sroa$6$0$copyload = 0.0, $$sroa$646$0$$sroa_idx47 = 0, $$sroa$646$0$copyload = 0.0;\n var $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0;\n var $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0.0;\n var $48 = 0.0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $$sroa$440$0$$sroa_idx41 = ((($1)) + 4|0);\n $$sroa$543$0$$sroa_idx44 = ((($1)) + 8|0);\n $$sroa$646$0$$sroa_idx47 = ((($1)) + 12|0);\n $3 = ((($2)) + 8|0);\n $4 = ((($2)) + 4|0);\n $$pre = +HEAPF32[$2>>2];\n $$030 = $0;$33 = $$pre;\n while(1) {\n  HEAP8[tempDoublePtr>>0]=HEAP8[$1>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$1+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$1+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$1+3>>0];$$sroa$038$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$440$0$$sroa_idx41>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$440$0$$sroa_idx41+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$440$0$$sroa_idx41+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$440$0$$sroa_idx41+3>>0];$$sroa$440$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$543$0$$sroa_idx44>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$543$0$$sroa_idx44+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$543$0$$sroa_idx44+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$543$0$$sroa_idx44+3>>0];$$sroa$543$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$646$0$$sroa_idx47>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$646$0$$sroa_idx47+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$646$0$$sroa_idx47+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$646$0$$sroa_idx47+3>>0];$$sroa$646$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$0$0$$sroa_idx = ((($$030)) + 8|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0$0$$sroa_idx>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0$0$$sroa_idx+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0$0$$sroa_idx+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0$0$$sroa_idx+3>>0];$$sroa$0$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$4$0$$sroa_idx32 = ((($$030)) + 12|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx32>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx32+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx32+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx32+3>>0];$$sroa$4$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$5$0$$sroa_idx34 = ((($$030)) + 16|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx34>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx34+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx34+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx34+3>>0];$$sroa$5$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $$sroa$6$0$$sroa_idx36 = ((($$030)) + 20|0);\n  HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx36>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx36+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx36+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx36+3>>0];$$sroa$6$0$copyload = +HEAPF32[tempDoublePtr>>2];\n  $5 = $$sroa$038$0$copyload - $$sroa$0$0$copyload;\n  $6 = $5;\n  $7 = $$sroa$4$0$copyload;\n  $8 = $$sroa$440$0$copyload;\n  $9 = $7 - $8;\n  $10 = $6 + $9;\n  $11 = $9 * $9;\n  $12 = $10 * $10;\n  $13 = $11 > $12;\n  $$$i$i$i = $13 ? $11 : $12;\n  $14 = $$sroa$5$0$copyload;\n  $15 = $$sroa$543$0$copyload;\n  $16 = $14 - $15;\n  $17 = $6 + $16;\n  $18 = $16 * $16;\n  $19 = $17 * $17;\n  $20 = $18 > $19;\n  $$$i5$i$i = $20 ? $18 : $19;\n  $21 = $$$i$i$i + $$$i5$i$i;\n  $22 = $$sroa$6$0$copyload;\n  $23 = $$sroa$646$0$copyload;\n  $24 = $22 - $23;\n  $25 = $6 + $24;\n  $26 = $24 * $24;\n  $27 = $25 * $25;\n  $28 = $26 > $27;\n  $$$i4$i$i = $28 ? $26 : $27;\n  $29 = $21 + $$$i4$i$i;\n  $30 = $29;\n  $31 = (+Math_sqrt((+$30)));\n  $32 = $31 < $33;\n  if ($32) {\n   $34 = HEAP32[$3>>2]|0;\n   $35 = ((($$030)) + 28|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = ($34|0)==($36|0);\n   if (!($37)) {\n    HEAPF32[$2>>2] = $31;\n    HEAP32[$4>>2] = $36;\n   }\n  }\n  $38 = ((($$030)) + 24|0);\n  $39 = +HEAPF32[$38>>2];\n  $40 = $31 < $39;\n  if ($40) {\n   $41 = HEAP32[$$030>>2]|0;\n   $42 = ($41|0)==(0|0);\n   if (!($42)) {\n    _vp_search_node($41,$1,$2);\n   }\n   $43 = ((($$030)) + 4|0);\n   $44 = HEAP32[$43>>2]|0;\n   $45 = ($44|0)==(0|0);\n   if ($45) {\n    label = 14;\n    break;\n   }\n   $46 = +HEAPF32[$38>>2];\n   $47 = +HEAPF32[$2>>2];\n   $48 = $46 - $47;\n   $49 = !($31 >= $48);\n   if ($49) {\n    label = 14;\n    break;\n   } else {\n    $$030 = $44;$33 = $47;\n    continue;\n   }\n  } else {\n   $50 = ((($$030)) + 4|0);\n   $51 = HEAP32[$50>>2]|0;\n   $52 = ($51|0)==(0|0);\n   if (!($52)) {\n    _vp_search_node($51,$1,$2);\n   }\n   $53 = HEAP32[$$030>>2]|0;\n   $54 = ($53|0)==(0|0);\n   if ($54) {\n    label = 14;\n    break;\n   }\n   $55 = +HEAPF32[$38>>2];\n   $56 = +HEAPF32[$2>>2];\n   $57 = $55 + $56;\n   $58 = !($31 <= $57);\n   if ($58) {\n    label = 14;\n    break;\n   } else {\n    $$030 = $53;$33 = $56;\n    continue;\n   }\n  }\n }\n if ((label|0) == 14) {\n  return;\n }\n}\nfunction _vp_compare_distance($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = +HEAPF32[$0>>2];\n $3 = +HEAPF32[$1>>2];\n $4 = $2 > $3;\n $5 = $4 ? 1 : -1;\n return ($5|0);\n}\nfunction _nearest_search($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$i$i$i = 0.0, $$$i4$i$i = 0.0, $$$i5$i$i = 0.0, $$0 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$copyload = 0.0, $$sroa$024$0$copyload = 0.0, $$sroa$4$0$$sroa_idx18 = 0, $$sroa$4$0$copyload = 0.0, $$sroa$426$0$$sroa_idx27 = 0, $$sroa$426$0$copyload = 0.0, $$sroa$5$0$$sroa_idx20 = 0, $$sroa$5$0$copyload = 0.0, $$sroa$529$0$$sroa_idx30 = 0, $$sroa$529$0$copyload = 0.0, $$sroa$6$0$$sroa_idx22 = 0, $$sroa$6$0$copyload = 0.0, $$sroa$632$0$$sroa_idx33 = 0, $$sroa$632$0$copyload = 0.0, $10 = 0.0;\n var $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0;\n var $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $4 = sp;\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n HEAP8[tempDoublePtr>>0]=HEAP8[$1>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$1+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$1+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$1+3>>0];$$sroa$024$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$426$0$$sroa_idx27 = ((($1)) + 4|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$426$0$$sroa_idx27>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$426$0$$sroa_idx27+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$426$0$$sroa_idx27+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$426$0$$sroa_idx27+3>>0];$$sroa$426$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$529$0$$sroa_idx30 = ((($1)) + 8|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$529$0$$sroa_idx30>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$529$0$$sroa_idx30+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$529$0$$sroa_idx30+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$529$0$$sroa_idx30+3>>0];$$sroa$529$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$632$0$$sroa_idx33 = ((($1)) + 12|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$632$0$$sroa_idx33>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$632$0$$sroa_idx33+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$632$0$$sroa_idx33+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$632$0$$sroa_idx33+3>>0];$$sroa$632$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$0$0$$sroa_idx = (($6) + (($2*24)|0)|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$0$0$$sroa_idx>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$0$0$$sroa_idx+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$0$0$$sroa_idx+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$0$0$$sroa_idx+3>>0];$$sroa$0$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$4$0$$sroa_idx18 = (((($6) + (($2*24)|0)|0)) + 4|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$4$0$$sroa_idx18>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$4$0$$sroa_idx18+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$4$0$$sroa_idx18+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$4$0$$sroa_idx18+3>>0];$$sroa$4$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$5$0$$sroa_idx20 = (((($6) + (($2*24)|0)|0)) + 8|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$5$0$$sroa_idx20>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$5$0$$sroa_idx20+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$5$0$$sroa_idx20+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$5$0$$sroa_idx20+3>>0];$$sroa$5$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $$sroa$6$0$$sroa_idx22 = (((($6) + (($2*24)|0)|0)) + 12|0);\n HEAP8[tempDoublePtr>>0]=HEAP8[$$sroa$6$0$$sroa_idx22>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$$sroa$6$0$$sroa_idx22+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$$sroa$6$0$$sroa_idx22+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$$sroa$6$0$$sroa_idx22+3>>0];$$sroa$6$0$copyload = +HEAPF32[tempDoublePtr>>2];\n $7 = $$sroa$024$0$copyload - $$sroa$0$0$copyload;\n $8 = $7;\n $9 = $$sroa$4$0$copyload;\n $10 = $$sroa$426$0$copyload;\n $11 = $9 - $10;\n $12 = $8 + $11;\n $13 = $11 * $11;\n $14 = $12 * $12;\n $15 = $13 > $14;\n $$$i$i$i = $15 ? $13 : $14;\n $16 = $$sroa$5$0$copyload;\n $17 = $$sroa$529$0$copyload;\n $18 = $16 - $17;\n $19 = $8 + $18;\n $20 = $18 * $18;\n $21 = $19 * $19;\n $22 = $20 > $21;\n $$$i5$i$i = $22 ? $20 : $21;\n $23 = $$$i$i$i + $$$i5$i$i;\n $24 = $$sroa$6$0$copyload;\n $25 = $$sroa$632$0$copyload;\n $26 = $24 - $25;\n $27 = $8 + $26;\n $28 = $26 * $26;\n $29 = $27 * $27;\n $30 = $28 > $29;\n $$$i4$i$i = $30 ? $28 : $29;\n $31 = $23 + $$$i4$i$i;\n $32 = $31;\n $33 = (((($0)) + 8|0) + ($2<<2)|0);\n $34 = +HEAPF32[$33>>2];\n $35 = $32 < $34;\n if ($35) {\n  $36 = ($3|0)==(0|0);\n  if ($36) {\n   $$0 = $2;\n   STACKTOP = sp;return ($$0|0);\n  }\n  HEAPF32[$3>>2] = $32;\n  $$0 = $2;\n  STACKTOP = sp;return ($$0|0);\n } else {\n  $37 = (+Math_sqrt((+$32)));\n  HEAPF32[$4>>2] = $37;\n  $38 = ((($4)) + 4|0);\n  HEAP32[$38>>2] = $2;\n  $39 = ((($4)) + 8|0);\n  HEAP32[$39>>2] = -1;\n  $40 = HEAP32[$0>>2]|0;\n  _vp_search_node($40,$1,$4);\n  $41 = ($3|0)==(0|0);\n  if (!($41)) {\n   $42 = +HEAPF32[$4>>2];\n   $43 = $42 * $42;\n   HEAPF32[$3>>2] = $43;\n  }\n  $44 = HEAP32[$38>>2]|0;\n  $$0 = $44;\n  STACKTOP = sp;return ($$0|0);\n }\n return (0)|0;\n}\nfunction _nearest_free($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 1032|0);\n $2 = HEAP32[$1>>2]|0;\n _mempool_destroy($2);\n return;\n}\nfunction _png_destroy_png_struct($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);\n $1 = sp;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  STACKTOP = sp;return;\n }\n _memcpy(($1|0),($0|0),900)|0;\n _memset(($0|0),0,900)|0;\n $3 = ((($1)) + 724|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  _free($0);\n } else {\n  FUNCTION_TABLE_vii[$4 & 127]($1,$0);\n }\n _png_free_jmpbuf($1);\n STACKTOP = sp;return;\n}\nfunction _png_free_jmpbuf($0) {\n $0 = $0|0;\n var $$pre = 0, $$reg2mem18$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0;\n var $cond20 = 0, $or$cond = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);\n _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;\n $1 = sp;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  _free(_setjmpTable|0);\n  STACKTOP = sp;return;\n }\n $3 = ((($0)) + 160|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n $$pre = ((($0)) + 164|0);\n if (!($5)) {\n  $6 = HEAP32[$$pre>>2]|0;\n  $7 = ($6|0)==(0);\n  $8 = ($4|0)==($0|0);\n  $or$cond = $8 | $7;\n  if (!($or$cond)) {\n   _setjmpTable = _saveSetjmp($1,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;\n   __THREW__ = 0;\n   $9 = __THREW__; __THREW__ = 0;\n   if ((($9|0) != 0) & ((threwValue|0) != 0)) { $10 = _testSetjmp(HEAP32[$9>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($10|0) == 0) { _longjmp($9|0, threwValue|0); } tempRet0 = (threwValue); } else { $10 = -1; };\n   $11 = tempRet0;\n   $cond = ($10|0)==(1);\n   if ($cond) {\n    $$reg2mem18$0 = $11;\n   } else {\n    $$reg2mem18$0 = 0;\n   }\n   while(1) {\n    $12 = ($$reg2mem18$0|0)==(0);\n    if (!($12)) {\n     break;\n    }\n    HEAP32[$3>>2] = $1;\n    HEAP32[$$pre>>2] = 0;\n    $13 = ((($0)) + 156|0);\n    HEAP32[$13>>2] = 52;\n    __THREW__ = 0;\n    invoke_vii(53,($0|0),($4|0));\n    $14 = __THREW__; __THREW__ = 0;\n    if ((($14|0) != 0) & ((threwValue|0) != 0)) { $15 = _testSetjmp(HEAP32[$14>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($15|0) == 0) { _longjmp($14|0, threwValue|0); } tempRet0 = (threwValue); } else { $15 = -1; };\n    $16 = tempRet0;\n    $cond20 = ($15|0)==(1);\n    if ($cond20) {\n     $$reg2mem18$0 = $16;\n    } else {\n     label = 8;\n     break;\n    }\n   }\n   if ((label|0) == 8) {\n   }\n  }\n }\n HEAP32[$$pre>>2] = 0;\n HEAP32[$3>>2] = 0;\n $17 = ((($0)) + 156|0);\n HEAP32[$17>>2] = 0;\n _free(_setjmpTable|0);\n STACKTOP = sp;return;\n}\nfunction _png_free($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  return;\n }\n $4 = ((($0)) + 724|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  _free($1);\n  return;\n } else {\n  FUNCTION_TABLE_vii[$5 & 127]($0,$1);\n  return;\n }\n}\nfunction _png_calloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i$i = 0, $$0$i6 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$0$i6 = 0;\n  return ($$0$i6|0);\n }\n $3 = ($1|0)==(0);\n if ($3) {\n  _png_error($0,18820);\n  // unreachable;\n }\n $4 = ((($0)) + 720|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $8 = (_malloc($1)|0);\n  $$0$i$i = $8;\n } else {\n  $7 = (FUNCTION_TABLE_iii[$5 & 63]($0,$1)|0);\n  $$0$i$i = $7;\n }\n $9 = ($$0$i$i|0)==(0|0);\n if ($9) {\n  _png_error($0,18820);\n  // unreachable;\n }\n _memset(($$0$i$i|0),0,($1|0))|0;\n $$0$i6 = $$0$i$i;\n return ($$0$i6|0);\n}\nfunction _png_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $2 = ($0|0)==(0|0);\n if (!($2)) {\n  $3 = ((($0)) + 168|0);\n  $4 = HEAP32[$3>>2]|0;\n  $5 = ($4|0)==(0|0);\n  if (!($5)) {\n   FUNCTION_TABLE_vii[$4 & 127]($0,$1);\n  }\n }\n $6 = HEAP32[2606]|0;\n $7 = ($1|0)!=(0|0);\n $8 = $7 ? $1 : 18834;\n HEAP32[$vararg_buffer>>2] = $8;\n (_fprintf($6,18844,$vararg_buffer)|0);\n (_fputc(10,$6)|0);\n _png_longjmp($0,1);\n // unreachable;\n}\nfunction _png_longjmp($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if (!($2)) {\n  $3 = ((($0)) + 156|0);\n  $4 = HEAP32[$3>>2]|0;\n  $5 = ($4|0)==(0|0);\n  if (!($5)) {\n   $6 = ((($0)) + 160|0);\n   $7 = HEAP32[$6>>2]|0;\n   $8 = ($7|0)==(0|0);\n   if (!($8)) {\n    FUNCTION_TABLE_vii[$4 & 127]($7,$1);\n   }\n  }\n }\n _abort();\n // unreachable;\n}\nfunction _png_malloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $3 = ($1|0)==(0);\n if ($3) {\n  _png_error($0,18820);\n  // unreachable;\n }\n $4 = ((($0)) + 720|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $8 = (_malloc($1)|0);\n  $$0$i = $8;\n } else {\n  $7 = (FUNCTION_TABLE_iii[$5 & 63]($0,$1)|0);\n  $$0$i = $7;\n }\n $9 = ($$0$i|0)==(0|0);\n if ($9) {\n  _png_error($0,18820);\n  // unreachable;\n } else {\n  $$0 = $$0$i;\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _png_malloc_base($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1|0)==(0);\n if ($2) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $3 = ($0|0)==(0|0);\n if (!($3)) {\n  $4 = ((($0)) + 720|0);\n  $5 = HEAP32[$4>>2]|0;\n  $6 = ($5|0)==(0|0);\n  if (!($6)) {\n   $7 = (FUNCTION_TABLE_iii[$5 & 63]($0,$1)|0);\n   $$0 = $7;\n   return ($$0|0);\n  }\n }\n $8 = (_malloc($1)|0);\n $$0 = $8;\n return ($$0|0);\n}\nfunction _png_malloc_array($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1|0)<(1);\n $4 = ($2|0)==(0);\n $or$cond = $3 | $4;\n if ($or$cond) {\n  _png_error($0,18861);\n  // unreachable;\n }\n $5 = (4294967295 / ($2>>>0))&-1;\n $6 = ($5>>>0)<($1>>>0);\n if ($6) {\n  $$0$i = 0;\n  return ($$0$i|0);\n }\n $7 = Math_imul($2, $1)|0;\n $8 = ($7|0)==(0);\n if ($8) {\n  $$0$i = 0;\n  return ($$0$i|0);\n }\n $9 = ($0|0)==(0|0);\n if (!($9)) {\n  $10 = ((($0)) + 720|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ($11|0)==(0|0);\n  if (!($12)) {\n   $13 = (FUNCTION_TABLE_iii[$11 & 63]($0,$7)|0);\n   $$0$i = $13;\n   return ($$0$i|0);\n  }\n }\n $14 = (_malloc($7)|0);\n $$0$i = $14;\n return ($$0$i|0);\n}\nfunction _png_realloc_array($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0$i = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($3|0)<(1);\n $6 = ($4|0)==(0);\n $or$cond = $5 | $6;\n $7 = ($2|0)<(0);\n $or$cond3 = $7 | $or$cond;\n if ($or$cond3) {\n  _png_error($0,18889);\n  // unreachable;\n }\n $8 = ($1|0)==(0|0);\n $9 = ($2|0)>(0);\n $or$cond5 = $8 & $9;\n if ($or$cond5) {\n  _png_error($0,18889);\n  // unreachable;\n }\n $10 = (2147483647 - ($2))|0;\n $11 = ($10|0)<($3|0);\n if ($11) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $12 = (($3) + ($2))|0;\n $13 = (4294967295 / ($4>>>0))&-1;\n $14 = ($13>>>0)<($12>>>0);\n if ($14) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $15 = Math_imul($12, $4)|0;\n $16 = ($15|0)==(0);\n if ($16) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $17 = ($0|0)==(0|0);\n if ($17) {\n  label = 10;\n } else {\n  $18 = ((($0)) + 720|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = ($19|0)==(0|0);\n  if ($20) {\n   label = 10;\n  } else {\n   $21 = (FUNCTION_TABLE_iii[$19 & 63]($0,$15)|0);\n   $$0$i = $21;\n  }\n }\n if ((label|0) == 10) {\n  $22 = (_malloc($15)|0);\n  $$0$i = $22;\n }\n $23 = ($$0$i|0)==(0|0);\n if ($23) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $24 = Math_imul($4, $2)|0;\n if ($9) {\n  _memcpy(($$0$i|0),($1|0),($24|0))|0;\n }\n $25 = (($$0$i) + ($24)|0);\n $26 = Math_imul($4, $3)|0;\n _memset(($25|0),0,($26|0))|0;\n $$1 = $$0$i;\n return ($$1|0);\n}\nfunction _png_malloc_warn($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i = 0, $$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $3 = ($1|0)==(0);\n if (!($3)) {\n  $4 = ((($0)) + 720|0);\n  $5 = HEAP32[$4>>2]|0;\n  $6 = ($5|0)==(0|0);\n  if ($6) {\n   $8 = (_malloc($1)|0);\n   $$0$i = $8;\n  } else {\n   $7 = (FUNCTION_TABLE_iii[$5 & 63]($0,$1)|0);\n   $$0$i = $7;\n  }\n  $9 = ($$0$i|0)==(0|0);\n  if (!($9)) {\n   $$1 = $$0$i;\n   return ($$1|0);\n  }\n }\n _png_warning($0,18820);\n $$1 = 0;\n return ($$1|0);\n}\nfunction _png_warning($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$115 = 0, $$116 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$116 = 0;\n } else {\n  $3 = HEAP8[$1>>0]|0;\n  $4 = ($3<<24>>24)==(35);\n  if ($4) {\n   $5 = ((($1)) + 1|0);\n   $6 = HEAP8[$5>>0]|0;\n   $7 = ($6<<24>>24)==(32);\n   if ($7) {\n    $$115 = 1;\n   } else {\n    $8 = ((($1)) + 2|0);\n    $9 = HEAP8[$8>>0]|0;\n    $10 = ($9<<24>>24)==(32);\n    if ($10) {\n     $$115 = 2;\n    } else {\n     $17 = ((($1)) + 3|0);\n     $18 = HEAP8[$17>>0]|0;\n     $19 = ($18<<24>>24)==(32);\n     if ($19) {\n      $$115 = 3;\n     } else {\n      $20 = ((($1)) + 4|0);\n      $21 = HEAP8[$20>>0]|0;\n      $22 = ($21<<24>>24)==(32);\n      if ($22) {\n       $$115 = 4;\n      } else {\n       $23 = ((($1)) + 5|0);\n       $24 = HEAP8[$23>>0]|0;\n       $25 = ($24<<24>>24)==(32);\n       if ($25) {\n        $$115 = 5;\n       } else {\n        $26 = ((($1)) + 6|0);\n        $27 = HEAP8[$26>>0]|0;\n        $28 = ($27<<24>>24)==(32);\n        if ($28) {\n         $$115 = 6;\n        } else {\n         $29 = ((($1)) + 7|0);\n         $30 = HEAP8[$29>>0]|0;\n         $31 = ($30<<24>>24)==(32);\n         if ($31) {\n          $$115 = 7;\n         } else {\n          $32 = ((($1)) + 8|0);\n          $33 = HEAP8[$32>>0]|0;\n          $34 = ($33<<24>>24)==(32);\n          if ($34) {\n           $$115 = 8;\n          } else {\n           $35 = ((($1)) + 9|0);\n           $36 = HEAP8[$35>>0]|0;\n           $37 = ($36<<24>>24)==(32);\n           if ($37) {\n            $$115 = 9;\n           } else {\n            $38 = ((($1)) + 10|0);\n            $39 = HEAP8[$38>>0]|0;\n            $40 = ($39<<24>>24)==(32);\n            if ($40) {\n             $$115 = 10;\n            } else {\n             $41 = ((($1)) + 11|0);\n             $42 = HEAP8[$41>>0]|0;\n             $43 = ($42<<24>>24)==(32);\n             if ($43) {\n              $$115 = 11;\n             } else {\n              $44 = ((($1)) + 12|0);\n              $45 = HEAP8[$44>>0]|0;\n              $46 = ($45<<24>>24)==(32);\n              if ($46) {\n               $$115 = 12;\n              } else {\n               $47 = ((($1)) + 13|0);\n               $48 = HEAP8[$47>>0]|0;\n               $49 = ($48<<24>>24)==(32);\n               if ($49) {\n                $$115 = 13;\n               } else {\n                $50 = ((($1)) + 14|0);\n                $51 = HEAP8[$50>>0]|0;\n                $52 = ($51<<24>>24)==(32);\n                $$ = $52 ? 14 : 15;\n                $$115 = $$;\n               }\n              }\n             }\n            }\n           }\n          }\n         }\n        }\n       }\n      }\n     }\n    }\n   }\n  } else {\n   $$115 = 0;\n  }\n  $11 = ((($0)) + 172|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = ($12|0)==(0|0);\n  if ($13) {\n   $$116 = $$115;\n  } else {\n   $14 = (($1) + ($$115)|0);\n   FUNCTION_TABLE_vii[$12 & 127]($0,$14);\n   STACKTOP = sp;return;\n  }\n }\n $15 = (($1) + ($$116)|0);\n $16 = HEAP32[2606]|0;\n HEAP32[$vararg_buffer>>2] = $15;\n (_fprintf($16,18919,$vararg_buffer)|0);\n (_fputc(10,$16)|0);\n STACKTOP = sp;return;\n}\nfunction _png_set_mem_fn($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  return;\n }\n $5 = ((($0)) + 716|0);\n HEAP32[$5>>2] = $1;\n $6 = ((($0)) + 720|0);\n HEAP32[$6>>2] = $2;\n $7 = ((($0)) + 724|0);\n HEAP32[$7>>2] = $3;\n return;\n}\nfunction _png_set_bKGD($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n $4 = ($1|0)==(0|0);\n $or$cond = $3 | $4;\n $5 = ($2|0)==(0|0);\n $or$cond3 = $or$cond | $5;\n if ($or$cond3) {\n  return;\n }\n $6 = ((($1)) + 170|0);\n ;HEAP16[$6>>1]=HEAP16[$2>>1]|0;HEAP16[$6+2>>1]=HEAP16[$2+2>>1]|0;HEAP16[$6+4>>1]=HEAP16[$2+4>>1]|0;HEAP16[$6+6>>1]=HEAP16[$2+6>>1]|0;HEAP16[$6+8>>1]=HEAP16[$2+8>>1]|0;\n $7 = ((($1)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = $8 | 32;\n HEAP32[$7>>2] = $9;\n return;\n}\nfunction _png_colorspace_set_chromaticities($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $storemerge$i = 0, $storemerge$in$i = 0, dest = 0, label = 0, sp = 0, src = 0;\n var stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $4 = sp;\n $5 = (_png_colorspace_check_xy($4,$2)|0);\n switch ($5|0) {\n case 0:  {\n  $6 = ((($1)) + 74|0);\n  $7 = HEAP16[$6>>1]|0;\n  $8 = $7&65535;\n  $9 = $8 & 32768;\n  $10 = ($9|0)==(0);\n  if (!($10)) {\n   $$0 = 0;\n   STACKTOP = sp;return ($$0|0);\n  }\n  $11 = ($3|0)>(1);\n  $12 = $8 & 2;\n  $13 = ($12|0)==(0);\n  $or$cond$i = $11 | $13;\n  $$pre$i = ((($1)) + 4|0);\n  do {\n   if (!($or$cond$i)) {\n    $14 = (_png_colorspace_endpoints_match($2,$$pre$i,100)|0);\n    $15 = ($14|0)==(0);\n    if ($15) {\n     $16 = $8 | 32768;\n     $17 = $16&65535;\n     HEAP16[$6>>1] = $17;\n     _png_benign_error($0,18938);\n     $$0 = 0;\n     STACKTOP = sp;return ($$0|0);\n    } else {\n     $18 = ($3|0)==(0);\n     if ($18) {\n      $$0 = 1;\n     } else {\n      break;\n     }\n     STACKTOP = sp;return ($$0|0);\n    }\n   }\n  } while(0);\n  ;HEAP32[$$pre$i>>2]=HEAP32[$2>>2]|0;HEAP32[$$pre$i+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$$pre$i+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$$pre$i+12>>2]=HEAP32[$2+12>>2]|0;HEAP32[$$pre$i+16>>2]=HEAP32[$2+16>>2]|0;HEAP32[$$pre$i+20>>2]=HEAP32[$2+20>>2]|0;HEAP32[$$pre$i+24>>2]=HEAP32[$2+24>>2]|0;HEAP32[$$pre$i+28>>2]=HEAP32[$2+28>>2]|0;\n  $19 = ((($1)) + 36|0);\n  dest=$19; src=$4; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n  $20 = (_png_colorspace_endpoints_match($2,480,1000)|0);\n  $21 = ($20|0)==(0);\n  $22 = $8 & 65469;\n  $23 = $22 | 2;\n  $24 = $8 | 66;\n  $storemerge$in$i = $21 ? $23 : $24;\n  $storemerge$i = $storemerge$in$i&65535;\n  HEAP16[$6>>1] = $storemerge$i;\n  $$0 = 2;\n  STACKTOP = sp;return ($$0|0);\n  break;\n }\n case 1:  {\n  $25 = ((($1)) + 74|0);\n  $26 = HEAP16[$25>>1]|0;\n  $27 = $26&65535;\n  $28 = $27 | 32768;\n  $29 = $28&65535;\n  HEAP16[$25>>1] = $29;\n  _png_benign_error($0,18966);\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n  break;\n }\n default: {\n  $30 = ((($1)) + 74|0);\n  $31 = HEAP16[$30>>1]|0;\n  $32 = $31&65535;\n  $33 = $32 | 32768;\n  $34 = $33&65535;\n  HEAP16[$30>>1] = $34;\n  _png_error($0,18989);\n  // unreachable;\n }\n }\n return (0)|0;\n}\nfunction _png_colorspace_sync_info($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$pre193$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, $storemerge9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($1)) + 114|0);\n $3 = HEAP16[$2>>1]|0;\n $4 = $3&65535;\n $5 = $4 & 32768;\n $6 = ($5|0)==(0);\n if ($6) {\n  $19 = $4 & 128;\n  $20 = ($19|0)==(0);\n  $21 = ((($1)) + 8|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = $22 & -2049;\n  $24 = $22 | 2048;\n  $storemerge = $20 ? $23 : $24;\n  $25 = $3 & 2;\n  $26 = ($25<<16>>16)==(0);\n  $27 = $storemerge & -5;\n  $28 = $storemerge | 4;\n  $storemerge9 = $26 ? $27 : $28;\n  HEAP32[$21>>2] = $storemerge9;\n  $29 = $3 & 1;\n  $30 = ($29<<16>>16)==(0);\n  if ($30) {\n   $32 = $storemerge9 & -2;\n   HEAP32[$21>>2] = $32;\n   return;\n  } else {\n   $31 = $storemerge9 | 1;\n   HEAP32[$21>>2] = $31;\n   return;\n  }\n }\n $7 = ((($1)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = $8 & -6150;\n HEAP32[$7>>2] = $9;\n $10 = ($0|0)==(0|0);\n if ($10) {\n  return;\n }\n $$pre193$i = ((($1)) + 232|0);\n $11 = HEAP32[$$pre193$i>>2]|0;\n $12 = $11 & 16;\n $13 = ($12|0)==(0);\n if (!($13)) {\n  $14 = ((($1)) + 116|0);\n  $15 = HEAP32[$14>>2]|0;\n  _png_free($0,$15);\n  $16 = ((($1)) + 120|0);\n  $17 = HEAP32[$16>>2]|0;\n  _png_free($0,$17);\n  HEAP32[$14>>2] = 0;\n  HEAP32[$16>>2] = 0;\n  HEAP32[$7>>2] = $9;\n }\n $18 = $11 & -17;\n HEAP32[$$pre193$i>>2] = $18;\n return;\n}\nfunction _png_colorspace_check_xy($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i127$i = 0, $$0$i129$neg$i = 0, $$0191$ph$i = 0, $$0192$ph$i = 0, $$0195$i = 0, $$0196$i = 0, $$1$ph$i = 0, $$1193$ph$i = 0, $$2$ph$i = 0, $$2194$ph$i = 0, $$op$i = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0;\n var $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $134 = 0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0;\n var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;\n var $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0;\n var $196 = 0.0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;\n var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0, $230 = 0.0;\n var $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;\n var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0;\n var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0;\n var $or$cond$i$i = 0, $or$cond$i100$i = 0, $or$cond$i105$i = 0, $or$cond$i110$i = 0, $or$cond$i115$i = 0, $or$cond$i125$i = 0, $or$cond$i126$i = 0, $or$cond$i128$i = 0, $or$cond$i90$i = 0, $or$cond$i95$i = 0, $or$cond3$i$i = 0, $or$cond3$i101$i = 0, $or$cond3$i106$i = 0, $or$cond3$i111$i = 0, $or$cond3$i116$i = 0, $or$cond3$i121$i = 0, $or$cond3$i130$i = 0, $or$cond3$i134$i = 0, $or$cond3$i138$i = 0, $or$cond3$i142$i = 0;\n var $or$cond3$i146$i = 0, $or$cond3$i150$i = 0, $or$cond3$i155$i = 0, $or$cond3$i160$i = 0, $or$cond3$i165$i = 0, $or$cond3$i91$i = 0, $or$cond3$i96$i = 0, $or$cond80$i = 0, $or$cond83$i = 0, $or$cond86$i = 0, $or$cond89$i = 0, $storemerge = 0, $storemerge$i = 0, $storemerge203$i = 0, $storemerge204$i = 0, $storemerge205$i = 0, $storemerge206$i = 0, $storemerge207$i = 0, $storemerge208$i = 0, $storemerge209$i = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp;\n $3 = HEAP32[$1>>2]|0;\n $4 = ($3>>>0)>(100000);\n if ($4) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $5 = ((($1)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)<(0);\n $8 = (100000 - ($3))|0;\n $9 = ($6|0)>($8|0);\n $or$cond80$i = $7 | $9;\n if ($or$cond80$i) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $10 = ((($1)) + 8|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11>>>0)>(100000);\n if ($12) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $13 = ((($1)) + 12|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)<(0);\n $16 = (100000 - ($11))|0;\n $17 = ($14|0)>($16|0);\n $or$cond83$i = $15 | $17;\n if ($or$cond83$i) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $18 = ((($1)) + 16|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($19>>>0)>(100000);\n if ($20) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $21 = ((($1)) + 20|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ($22|0)<(0);\n $24 = (100000 - ($19))|0;\n $25 = ($22|0)>($24|0);\n $or$cond86$i = $23 | $25;\n if ($or$cond86$i) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $26 = ((($1)) + 24|0);\n $27 = HEAP32[$26>>2]|0;\n $28 = ($27>>>0)>(100000);\n if ($28) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $29 = ((($1)) + 28|0);\n $30 = HEAP32[$29>>2]|0;\n $31 = ($30|0)<(0);\n $32 = (100000 - ($27))|0;\n $33 = ($30|0)>($32|0);\n $or$cond89$i = $31 | $33;\n if ($or$cond89$i) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $34 = (($11) - ($19))|0;\n $35 = (($6) - ($22))|0;\n $36 = ($34|0)==(0);\n $37 = ($35|0)==(0);\n $or$cond$i$i = $36 | $37;\n do {\n  if ($or$cond$i$i) {\n   $$0192$ph$i = 0;\n  } else {\n   $38 = (+($34|0));\n   $39 = (+($35|0));\n   $40 = $38 * $39;\n   $41 = $40 / 7.0;\n   $42 = $41 + 0.5;\n   $43 = (+Math_floor((+$42)));\n   $44 = $43 <= 2147483647.0;\n   $45 = $43 >= -2147483648.0;\n   $or$cond3$i$i = $44 & $45;\n   if ($or$cond3$i$i) {\n    $46 = (~~(($43)));\n    $$0192$ph$i = $46;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $47 = (($14) - ($22))|0;\n $48 = (($3) - ($19))|0;\n $49 = ($47|0)==(0);\n $50 = ($48|0)==(0);\n $or$cond$i90$i = $50 | $49;\n do {\n  if ($or$cond$i90$i) {\n   $$0191$ph$i = 0;\n  } else {\n   $51 = (+($47|0));\n   $52 = (+($48|0));\n   $53 = $52 * $51;\n   $54 = $53 / 7.0;\n   $55 = $54 + 0.5;\n   $56 = (+Math_floor((+$55)));\n   $57 = $56 <= 2147483647.0;\n   $58 = $56 >= -2147483648.0;\n   $or$cond3$i91$i = $57 & $58;\n   if ($or$cond3$i91$i) {\n    $59 = (~~(($56)));\n    $$0191$ph$i = $59;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $60 = (($$0192$ph$i) - ($$0191$ph$i))|0;\n $61 = (($30) - ($22))|0;\n $62 = ($61|0)==(0);\n $or$cond$i95$i = $36 | $62;\n do {\n  if ($or$cond$i95$i) {\n   $$1193$ph$i = 0;\n  } else {\n   $63 = (+($34|0));\n   $64 = (+($61|0));\n   $65 = $63 * $64;\n   $66 = $65 / 7.0;\n   $67 = $66 + 0.5;\n   $68 = (+Math_floor((+$67)));\n   $69 = $68 <= 2147483647.0;\n   $70 = $68 >= -2147483648.0;\n   $or$cond3$i96$i = $69 & $70;\n   if ($or$cond3$i96$i) {\n    $71 = (~~(($68)));\n    $$1193$ph$i = $71;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $72 = (($27) - ($19))|0;\n $73 = ($72|0)==(0);\n $or$cond$i100$i = $49 | $73;\n do {\n  if ($or$cond$i100$i) {\n   $$1$ph$i = 0;\n  } else {\n   $74 = (+($47|0));\n   $75 = (+($72|0));\n   $76 = $74 * $75;\n   $77 = $76 / 7.0;\n   $78 = $77 + 0.5;\n   $79 = (+Math_floor((+$78)));\n   $80 = $79 <= 2147483647.0;\n   $81 = $79 >= -2147483648.0;\n   $or$cond3$i101$i = $80 & $81;\n   if ($or$cond3$i101$i) {\n    $82 = (~~(($79)));\n    $$1$ph$i = $82;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $83 = (($$1193$ph$i) - ($$1$ph$i))|0;\n $84 = ($83|0)==(0);\n if ($84) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $85 = ($30|0)==(0);\n $86 = ($60|0)==(0);\n $or$cond$i105$i = $85 | $86;\n do {\n  if ($or$cond$i105$i) {\n   $$0196$i = 0;\n  } else {\n   $87 = (+($30|0));\n   $88 = (+($60|0));\n   $89 = $87 * $88;\n   $90 = (+($83|0));\n   $91 = $89 / $90;\n   $92 = $91 + 0.5;\n   $93 = (+Math_floor((+$92)));\n   $94 = $93 <= 2147483647.0;\n   $95 = $93 >= -2147483648.0;\n   $or$cond3$i106$i = $94 & $95;\n   if ($or$cond3$i106$i) {\n    $96 = (~~(($93)));\n    $$0196$i = $96;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $97 = ($$0196$i|0)>($30|0);\n if (!($97)) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $or$cond$i110$i = $37 | $73;\n do {\n  if ($or$cond$i110$i) {\n   $$2194$ph$i = 0;\n  } else {\n   $98 = (+($35|0));\n   $99 = (+($72|0));\n   $100 = $98 * $99;\n   $101 = $100 / 7.0;\n   $102 = $101 + 0.5;\n   $103 = (+Math_floor((+$102)));\n   $104 = $103 <= 2147483647.0;\n   $105 = $103 >= -2147483648.0;\n   $or$cond3$i111$i = $104 & $105;\n   if ($or$cond3$i111$i) {\n    $106 = (~~(($103)));\n    $$2194$ph$i = $106;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $or$cond$i115$i = $50 | $62;\n do {\n  if ($or$cond$i115$i) {\n   $$2$ph$i = 0;\n  } else {\n   $107 = (+($48|0));\n   $108 = (+($61|0));\n   $109 = $107 * $108;\n   $110 = $109 / 7.0;\n   $111 = $110 + 0.5;\n   $112 = (+Math_floor((+$111)));\n   $113 = $112 <= 2147483647.0;\n   $114 = $112 >= -2147483648.0;\n   $or$cond3$i116$i = $113 & $114;\n   if ($or$cond3$i116$i) {\n    $115 = (~~(($112)));\n    $$2$ph$i = $115;\n    break;\n   } else {\n    $$0 = 2;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $116 = (($$2194$ph$i) - ($$2$ph$i))|0;\n $117 = ($116|0)==(0);\n if ($117) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n do {\n  if ($or$cond$i105$i) {\n   $$0195$i = 0;\n  } else {\n   $118 = (+($30|0));\n   $119 = (+($60|0));\n   $120 = $118 * $119;\n   $121 = (+($116|0));\n   $122 = $120 / $121;\n   $123 = $122 + 0.5;\n   $124 = (+Math_floor((+$123)));\n   $125 = $124 <= 2147483647.0;\n   $126 = $124 >= -2147483648.0;\n   $or$cond3$i121$i = $125 & $126;\n   if ($or$cond3$i121$i) {\n    $127 = (~~(($124)));\n    $$0195$i = $127;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n $128 = ($$0195$i|0)>($30|0);\n if (!($128)) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $129 = (+($30|0));\n $130 = 1.0E+10 / $129;\n $131 = $130 + 0.5;\n $132 = (+Math_floor((+$131)));\n $133 = $132 <= 2147483647.0;\n $134 = $132 >= -2147483648.0;\n $or$cond$i125$i = $133 & $134;\n $135 = (~~(($132)));\n $$0$i$i = $or$cond$i125$i ? $135 : 0;\n $136 = (+($$0196$i|0));\n $137 = 1.0E+10 / $136;\n $138 = $137 + 0.5;\n $139 = (+Math_floor((+$138)));\n $140 = $139 <= 2147483647.0;\n $141 = $139 >= -2147483648.0;\n $or$cond$i126$i = $140 & $141;\n $142 = (~~(($139)));\n $$0$i127$i = $or$cond$i126$i ? $142 : 0;\n $143 = (($$0$i$i) - ($$0$i127$i))|0;\n $144 = (+($$0195$i|0));\n $145 = 1.0E+10 / $144;\n $146 = $145 + 0.5;\n $147 = (+Math_floor((+$146)));\n $148 = $147 <= 2147483647.0;\n $149 = $147 >= -2147483648.0;\n $or$cond$i128$i = $148 & $149;\n $150 = (~~(($147)));\n $$op$i = (0 - ($150))|0;\n $$0$i129$neg$i = $or$cond$i128$i ? $$op$i : 0;\n $151 = (($143) + ($$0$i129$neg$i))|0;\n $152 = ($151|0)<(1);\n if ($152) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $153 = ($$0196$i|0)==(0);\n if ($153) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $154 = ($3|0)==(0);\n do {\n  if ($154) {\n   $storemerge$i = 0;\n  } else {\n   $155 = (+($3|0));\n   $156 = $155 * 1.0E+5;\n   $157 = $156 / $136;\n   $158 = $157 + 0.5;\n   $159 = (+Math_floor((+$158)));\n   $160 = $159 <= 2147483647.0;\n   $161 = $159 >= -2147483648.0;\n   $or$cond3$i130$i = $160 & $161;\n   if ($or$cond3$i130$i) {\n    $162 = (~~(($159)));\n    $storemerge$i = $162;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$0>>2] = $storemerge$i;\n $163 = ((($0)) + 4|0);\n $164 = HEAP32[$5>>2]|0;\n $165 = ($164|0)==(0);\n do {\n  if ($165) {\n   $storemerge203$i = 0;\n  } else {\n   $166 = (+($164|0));\n   $167 = $166 * 1.0E+5;\n   $168 = $167 / $136;\n   $169 = $168 + 0.5;\n   $170 = (+Math_floor((+$169)));\n   $171 = $170 <= 2147483647.0;\n   $172 = $170 >= -2147483648.0;\n   $or$cond3$i134$i = $171 & $172;\n   if ($or$cond3$i134$i) {\n    $173 = (~~(($170)));\n    $storemerge203$i = $173;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$163>>2] = $storemerge203$i;\n $174 = ((($0)) + 8|0);\n $175 = HEAP32[$1>>2]|0;\n $176 = (100000 - ($175))|0;\n $177 = HEAP32[$5>>2]|0;\n $178 = (($176) - ($177))|0;\n $179 = ($178|0)==(0);\n do {\n  if ($179) {\n   $storemerge204$i = 0;\n  } else {\n   $180 = (+($178|0));\n   $181 = $180 * 1.0E+5;\n   $182 = $181 / $136;\n   $183 = $182 + 0.5;\n   $184 = (+Math_floor((+$183)));\n   $185 = $184 <= 2147483647.0;\n   $186 = $184 >= -2147483648.0;\n   $or$cond3$i138$i = $185 & $186;\n   if ($or$cond3$i138$i) {\n    $187 = (~~(($184)));\n    $storemerge204$i = $187;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$174>>2] = $storemerge204$i;\n $188 = ((($0)) + 12|0);\n $189 = HEAP32[$10>>2]|0;\n $190 = ($$0195$i|0)==(0);\n if ($190) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $191 = ($189|0)==(0);\n do {\n  if ($191) {\n   $storemerge205$i = 0;\n  } else {\n   $192 = (+($189|0));\n   $193 = $192 * 1.0E+5;\n   $194 = $193 / $144;\n   $195 = $194 + 0.5;\n   $196 = (+Math_floor((+$195)));\n   $197 = $196 <= 2147483647.0;\n   $198 = $196 >= -2147483648.0;\n   $or$cond3$i142$i = $197 & $198;\n   if ($or$cond3$i142$i) {\n    $199 = (~~(($196)));\n    $storemerge205$i = $199;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$188>>2] = $storemerge205$i;\n $200 = ((($0)) + 16|0);\n $201 = HEAP32[$13>>2]|0;\n $202 = ($201|0)==(0);\n do {\n  if ($202) {\n   $storemerge206$i = 0;\n  } else {\n   $203 = (+($201|0));\n   $204 = $203 * 1.0E+5;\n   $205 = $204 / $144;\n   $206 = $205 + 0.5;\n   $207 = (+Math_floor((+$206)));\n   $208 = $207 <= 2147483647.0;\n   $209 = $207 >= -2147483648.0;\n   $or$cond3$i146$i = $208 & $209;\n   if ($or$cond3$i146$i) {\n    $210 = (~~(($207)));\n    $storemerge206$i = $210;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$200>>2] = $storemerge206$i;\n $211 = ((($0)) + 20|0);\n $212 = HEAP32[$10>>2]|0;\n $213 = (100000 - ($212))|0;\n $214 = HEAP32[$13>>2]|0;\n $215 = (($213) - ($214))|0;\n $216 = ($215|0)==(0);\n do {\n  if ($216) {\n   $storemerge207$i = 0;\n  } else {\n   $217 = (+($215|0));\n   $218 = $217 * 1.0E+5;\n   $219 = $218 / $144;\n   $220 = $219 + 0.5;\n   $221 = (+Math_floor((+$220)));\n   $222 = $221 <= 2147483647.0;\n   $223 = $221 >= -2147483648.0;\n   $or$cond3$i150$i = $222 & $223;\n   if ($or$cond3$i150$i) {\n    $224 = (~~(($221)));\n    $storemerge207$i = $224;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$211>>2] = $storemerge207$i;\n $225 = ((($0)) + 24|0);\n $226 = HEAP32[$18>>2]|0;\n $227 = ($226|0)==(0);\n do {\n  if ($227) {\n   $storemerge208$i = 0;\n  } else {\n   $228 = (+($226|0));\n   $229 = (+($151|0));\n   $230 = $229 * $228;\n   $231 = $230 / 1.0E+5;\n   $232 = $231 + 0.5;\n   $233 = (+Math_floor((+$232)));\n   $234 = $233 <= 2147483647.0;\n   $235 = $233 >= -2147483648.0;\n   $or$cond3$i155$i = $234 & $235;\n   if ($or$cond3$i155$i) {\n    $236 = (~~(($233)));\n    $storemerge208$i = $236;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$225>>2] = $storemerge208$i;\n $237 = ((($0)) + 28|0);\n $238 = HEAP32[$21>>2]|0;\n $239 = ($238|0)==(0);\n do {\n  if ($239) {\n   $storemerge209$i = 0;\n  } else {\n   $240 = (+($238|0));\n   $241 = (+($151|0));\n   $242 = $241 * $240;\n   $243 = $242 / 1.0E+5;\n   $244 = $243 + 0.5;\n   $245 = (+Math_floor((+$244)));\n   $246 = $245 <= 2147483647.0;\n   $247 = $245 >= -2147483648.0;\n   $or$cond3$i160$i = $246 & $247;\n   if ($or$cond3$i160$i) {\n    $248 = (~~(($245)));\n    $storemerge209$i = $248;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$237>>2] = $storemerge209$i;\n $249 = ((($0)) + 32|0);\n $250 = HEAP32[$18>>2]|0;\n $251 = (100000 - ($250))|0;\n $252 = HEAP32[$21>>2]|0;\n $253 = (($251) - ($252))|0;\n $254 = ($253|0)==(0);\n do {\n  if ($254) {\n   $storemerge = 0;\n  } else {\n   $255 = (+($253|0));\n   $256 = (+($151|0));\n   $257 = $256 * $255;\n   $258 = $257 / 1.0E+5;\n   $259 = $258 + 0.5;\n   $260 = (+Math_floor((+$259)));\n   $261 = $260 <= 2147483647.0;\n   $262 = $260 >= -2147483648.0;\n   $or$cond3$i165$i = $261 & $262;\n   if ($or$cond3$i165$i) {\n    $263 = (~~(($260)));\n    $storemerge = $263;\n    break;\n   } else {\n    $$0 = 1;\n    STACKTOP = sp;return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$249>>2] = $storemerge;\n $264 = (_png_xy_from_XYZ($2,$0)|0);\n $265 = ($264|0)==(0);\n if (!($265)) {\n  $$0 = $264;\n  STACKTOP = sp;return ($$0|0);\n }\n $266 = (_png_colorspace_endpoints_match($1,$2,5)|0);\n $267 = ($266|0)==(0);\n $$ = $267&1;\n $$0 = $$;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _png_colorspace_endpoints_match($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond50 = 0, $or$cond52 = 0, $or$cond54 = 0, $or$cond56 = 0, $or$cond58 = 0, $or$cond60 = 0, $or$cond62 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 24|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($1)) + 24|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($6) - ($2))|0;\n $8 = ($4|0)<($7|0);\n $9 = (($6) + ($2))|0;\n $10 = ($4|0)>($9|0);\n $or$cond = $8 | $10;\n if ($or$cond) {\n  return 0;\n }\n $11 = ((($0)) + 28|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($1)) + 28|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (($14) - ($2))|0;\n $16 = ($12|0)<($15|0);\n $17 = (($14) + ($2))|0;\n $18 = ($12|0)>($17|0);\n $or$cond50 = $16 | $18;\n if ($or$cond50) {\n  return 0;\n }\n $19 = HEAP32[$0>>2]|0;\n $20 = HEAP32[$1>>2]|0;\n $21 = (($20) - ($2))|0;\n $22 = ($19|0)<($21|0);\n $23 = (($20) + ($2))|0;\n $24 = ($19|0)>($23|0);\n $or$cond52 = $22 | $24;\n if ($or$cond52) {\n  return 0;\n }\n $25 = ((($0)) + 4|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = ((($1)) + 4|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = (($28) - ($2))|0;\n $30 = ($26|0)<($29|0);\n $31 = (($28) + ($2))|0;\n $32 = ($26|0)>($31|0);\n $or$cond54 = $30 | $32;\n if ($or$cond54) {\n  return 0;\n }\n $33 = ((($0)) + 8|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($1)) + 8|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = (($36) - ($2))|0;\n $38 = ($34|0)<($37|0);\n $39 = (($36) + ($2))|0;\n $40 = ($34|0)>($39|0);\n $or$cond56 = $38 | $40;\n if ($or$cond56) {\n  return 0;\n }\n $41 = ((($0)) + 12|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = ((($1)) + 12|0);\n $44 = HEAP32[$43>>2]|0;\n $45 = (($44) - ($2))|0;\n $46 = ($42|0)<($45|0);\n $47 = (($44) + ($2))|0;\n $48 = ($42|0)>($47|0);\n $or$cond58 = $46 | $48;\n if ($or$cond58) {\n  return 0;\n }\n $49 = ((($0)) + 16|0);\n $50 = HEAP32[$49>>2]|0;\n $51 = ((($1)) + 16|0);\n $52 = HEAP32[$51>>2]|0;\n $53 = (($52) - ($2))|0;\n $54 = ($50|0)<($53|0);\n $55 = (($52) + ($2))|0;\n $56 = ($50|0)>($55|0);\n $or$cond60 = $54 | $56;\n if ($or$cond60) {\n  return 0;\n } else {\n  $57 = ((($0)) + 20|0);\n  $58 = HEAP32[$57>>2]|0;\n  $59 = ((($1)) + 20|0);\n  $60 = HEAP32[$59>>2]|0;\n  $61 = (($60) - ($2))|0;\n  $62 = ($58|0)<($61|0);\n  $63 = (($60) + ($2))|0;\n  $64 = ($58|0)>($63|0);\n  $or$cond62 = $62 | $64;\n  $65 = $or$cond62&1;\n  $$ = $65 ^ 1;\n  return ($$|0);\n }\n return (0)|0;\n}\nfunction _png_benign_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $2 = sp;\n $3 = ((($0)) + 212|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 1048576;\n $6 = ($5|0)==(0);\n $7 = ((($0)) + 208|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = $8 & 32768;\n $10 = ($9|0)!=(0);\n if ($6) {\n  if (!($10)) {\n   _png_error($0,$1);\n   // unreachable;\n  }\n  $14 = ((($0)) + 376|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = ($15|0)==(0);\n  if ($16) {\n   _png_error($0,$1);\n   // unreachable;\n  } else {\n   _png_chunk_error($0,$1);\n   // unreachable;\n  }\n }\n if ($10) {\n  $11 = ((($0)) + 376|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = ($12|0)==(0);\n  if (!($13)) {\n   _png_format_buffer($12,$2,$1);\n   _png_warning($0,$2);\n   STACKTOP = sp;return;\n  }\n }\n _png_warning($0,$1);\n STACKTOP = sp;return;\n}\nfunction _png_format_buffer($$0$44$val,$0,$1) {\n $$0$44$val = $$0$44$val|0;\n $0 = $0|0;\n $1 = $1|0;\n var $$02 = 0, $$1$1 = 0, $$1$2 = 0, $$1$3 = 0, $$1$in = 0, $$1$in$1 = 0, $$1$in$2 = 0, $$1$in$3 = 0, $$2$lcssa = 0, $$21 = 0, $$off = 0, $$off$1 = 0, $$off$2 = 0, $$off$3 = 0, $$off49 = 0, $$off49$1 = 0, $$off49$2 = 0, $$off49$3 = 0, $$sink = 0, $$sink5 = 0;\n var $$sink6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;\n var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $$0$44$val >>> 24;\n $$off = (($2) + -65)|0;\n $3 = ($$off>>>0)>(57);\n $$off49 = (($2) + -91)|0;\n $4 = ($$off49>>>0)<(6);\n $5 = $3 | $4;\n if ($5) {\n  HEAP8[$0>>0] = 91;\n  $6 = $$0$44$val >>> 28;\n  $7 = (29280 + ($6)|0);\n  $8 = HEAP8[$7>>0]|0;\n  $9 = ((($0)) + 1|0);\n  HEAP8[$9>>0] = $8;\n  $10 = $2 & 15;\n  $11 = (29280 + ($10)|0);\n  $12 = HEAP8[$11>>0]|0;\n  $13 = ((($0)) + 2|0);\n  HEAP8[$13>>0] = $12;\n  $14 = ((($0)) + 3|0);\n  HEAP8[$14>>0] = 93;\n  $$1$in = 4;\n } else {\n  $15 = $2&255;\n  HEAP8[$0>>0] = $15;\n  $$1$in = 1;\n }\n $16 = $$0$44$val >>> 16;\n $17 = $16 & 255;\n $$off$1 = (($17) + -65)|0;\n $18 = ($$off$1>>>0)>(57);\n $$off49$1 = (($17) + -91)|0;\n $19 = ($$off49$1>>>0)<(6);\n $20 = $18 | $19;\n if ($20) {\n  $35 = (($$1$in) + 1)|0;\n  $36 = $$0$44$val >>> 20;\n  $37 = $36 & 15;\n  $38 = (29280 + ($37)|0);\n  $39 = HEAP8[$38>>0]|0;\n  $40 = $$1$in | 2;\n  $41 = (($0) + ($35)|0);\n  HEAP8[$41>>0] = $39;\n  $42 = $16 & 15;\n  $43 = (29280 + ($42)|0);\n  $44 = HEAP8[$43>>0]|0;\n  $45 = (($$1$in) + 3)|0;\n  $46 = (($0) + ($40)|0);\n  HEAP8[$46>>0] = $44;\n  $47 = (($0) + ($45)|0);\n  HEAP8[$47>>0] = 93;\n  $$1$in$1 = $45;$$sink = 91;\n } else {\n  $34 = $16&255;\n  $$1$in$1 = $$1$in;$$sink = $34;\n }\n $48 = (($0) + ($$1$in)|0);\n HEAP8[$48>>0] = $$sink;\n $$1$1 = (($$1$in$1) + 1)|0;\n $49 = $$0$44$val >>> 8;\n $50 = $49 & 255;\n $$off$2 = (($50) + -65)|0;\n $51 = ($$off$2>>>0)>(57);\n $$off49$2 = (($50) + -91)|0;\n $52 = ($$off49$2>>>0)<(6);\n $53 = $51 | $52;\n if ($53) {\n  $55 = (($$1$in$1) + 2)|0;\n  $56 = $$0$44$val >>> 12;\n  $57 = $56 & 15;\n  $58 = (29280 + ($57)|0);\n  $59 = HEAP8[$58>>0]|0;\n  $60 = (($$1$in$1) + 3)|0;\n  $61 = (($0) + ($55)|0);\n  HEAP8[$61>>0] = $59;\n  $62 = $49 & 15;\n  $63 = (29280 + ($62)|0);\n  $64 = HEAP8[$63>>0]|0;\n  $65 = (($$1$in$1) + 4)|0;\n  $66 = (($0) + ($60)|0);\n  HEAP8[$66>>0] = $64;\n  $67 = (($0) + ($65)|0);\n  HEAP8[$67>>0] = 93;\n  $$1$in$2 = $65;$$sink5 = 91;\n } else {\n  $54 = $49&255;\n  $$1$in$2 = $$1$1;$$sink5 = $54;\n }\n $68 = (($0) + ($$1$1)|0);\n HEAP8[$68>>0] = $$sink5;\n $$1$2 = (($$1$in$2) + 1)|0;\n $69 = $$0$44$val & 255;\n $$off$3 = (($69) + -65)|0;\n $70 = ($$off$3>>>0)>(57);\n $$off49$3 = (($69) + -91)|0;\n $71 = ($$off49$3>>>0)<(6);\n $72 = $70 | $71;\n if ($72) {\n  $74 = (($$1$in$2) + 2)|0;\n  $75 = $$0$44$val >>> 4;\n  $76 = $75 & 15;\n  $77 = (29280 + ($76)|0);\n  $78 = HEAP8[$77>>0]|0;\n  $79 = (($$1$in$2) + 3)|0;\n  $80 = (($0) + ($74)|0);\n  HEAP8[$80>>0] = $78;\n  $81 = $$0$44$val & 15;\n  $82 = (29280 + ($81)|0);\n  $83 = HEAP8[$82>>0]|0;\n  $84 = (($$1$in$2) + 4)|0;\n  $85 = (($0) + ($79)|0);\n  HEAP8[$85>>0] = $83;\n  $86 = (($0) + ($84)|0);\n  HEAP8[$86>>0] = 93;\n  $$1$in$3 = $84;$$sink6 = 91;\n } else {\n  $73 = $$0$44$val&255;\n  $$1$in$3 = $$1$2;$$sink6 = $73;\n }\n $87 = (($0) + ($$1$2)|0);\n HEAP8[$87>>0] = $$sink6;\n $$1$3 = (($$1$in$3) + 1)|0;\n $88 = ($1|0)==(0|0);\n if ($88) {\n  $21 = (($0) + ($$1$3)|0);\n  HEAP8[$21>>0] = 0;\n  return;\n }\n $22 = (($$1$in$3) + 2)|0;\n $23 = (($0) + ($$1$3)|0);\n HEAP8[$23>>0] = 58;\n $24 = (($$1$in$3) + 3)|0;\n $25 = (($0) + ($22)|0);\n HEAP8[$25>>0] = 32;\n $$02 = 0;$$21 = $24;\n while(1) {\n  $26 = (($1) + ($$02)|0);\n  $27 = HEAP8[$26>>0]|0;\n  $28 = ($27<<24>>24)==(0);\n  if ($28) {\n   $$2$lcssa = $$21;\n   break;\n  }\n  $29 = (($$02) + 1)|0;\n  $30 = (($$21) + 1)|0;\n  $31 = (($0) + ($$21)|0);\n  HEAP8[$31>>0] = $27;\n  $32 = ($29|0)<(195);\n  if ($32) {\n   $$02 = $29;$$21 = $30;\n  } else {\n   $$2$lcssa = $30;\n   break;\n  }\n }\n $33 = (($0) + ($$2$lcssa)|0);\n HEAP8[$33>>0] = 0;\n return;\n}\nfunction _png_chunk_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$idx = 0, $$idx$val = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $2 = sp;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  _png_error(0,$1);\n  // unreachable;\n } else {\n  $$idx = ((($0)) + 376|0);\n  $$idx$val = HEAP32[$$idx>>2]|0;\n  _png_format_buffer($$idx$val,$2,$1);\n  _png_error($0,$2);\n  // unreachable;\n }\n}\nfunction _png_xy_from_XYZ($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0;\n var $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0, $129 = 0, $13 = 0.0, $130 = 0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0;\n var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $or$cond3$i = 0, $or$cond3$i55 = 0, $or$cond3$i59 = 0, $or$cond3$i63 = 0, $or$cond3$i67 = 0, $or$cond3$i71 = 0, $or$cond3$i75 = 0, $or$cond3$i79 = 0, $storemerge = 0, $storemerge83 = 0;\n var $storemerge84 = 0, $storemerge85 = 0, $storemerge86 = 0, $storemerge87 = 0, $storemerge88 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($1)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (($4) + ($2))|0;\n $6 = ((($1)) + 8|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (($5) + ($7))|0;\n $9 = ($8|0)==(0);\n if ($9) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $10 = ($2|0)==(0);\n do {\n  if ($10) {\n   $storemerge = 0;\n  } else {\n   $11 = (+($2|0));\n   $12 = $11 * 1.0E+5;\n   $13 = (+($8|0));\n   $14 = $12 / $13;\n   $15 = $14 + 0.5;\n   $16 = (+Math_floor((+$15)));\n   $17 = $16 <= 2147483647.0;\n   $18 = $16 >= -2147483648.0;\n   $or$cond3$i = $17 & $18;\n   if ($or$cond3$i) {\n    $19 = (~~(($16)));\n    $storemerge = $19;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$0>>2] = $storemerge;\n $20 = ((($0)) + 4|0);\n $21 = HEAP32[$3>>2]|0;\n $22 = ($21|0)==(0);\n do {\n  if ($22) {\n   $storemerge83 = 0;\n  } else {\n   $23 = (+($21|0));\n   $24 = $23 * 1.0E+5;\n   $25 = (+($8|0));\n   $26 = $24 / $25;\n   $27 = $26 + 0.5;\n   $28 = (+Math_floor((+$27)));\n   $29 = $28 <= 2147483647.0;\n   $30 = $28 >= -2147483648.0;\n   $or$cond3$i55 = $29 & $30;\n   if ($or$cond3$i55) {\n    $31 = (~~(($28)));\n    $storemerge83 = $31;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$20>>2] = $storemerge83;\n $32 = HEAP32[$1>>2]|0;\n $33 = HEAP32[$3>>2]|0;\n $34 = ((($1)) + 12|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = ((($1)) + 16|0);\n $37 = HEAP32[$36>>2]|0;\n $38 = (($37) + ($35))|0;\n $39 = ((($1)) + 20|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = (($38) + ($40))|0;\n $42 = ((($0)) + 8|0);\n $43 = ($41|0)==(0);\n if ($43) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $44 = ($35|0)==(0);\n do {\n  if ($44) {\n   $storemerge84 = 0;\n  } else {\n   $45 = (+($35|0));\n   $46 = $45 * 1.0E+5;\n   $47 = (+($41|0));\n   $48 = $46 / $47;\n   $49 = $48 + 0.5;\n   $50 = (+Math_floor((+$49)));\n   $51 = $50 <= 2147483647.0;\n   $52 = $50 >= -2147483648.0;\n   $or$cond3$i59 = $51 & $52;\n   if ($or$cond3$i59) {\n    $53 = (~~(($50)));\n    $storemerge84 = $53;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$42>>2] = $storemerge84;\n $54 = ((($0)) + 12|0);\n $55 = HEAP32[$36>>2]|0;\n $56 = ($55|0)==(0);\n do {\n  if ($56) {\n   $storemerge85 = 0;\n  } else {\n   $57 = (+($55|0));\n   $58 = $57 * 1.0E+5;\n   $59 = (+($41|0));\n   $60 = $58 / $59;\n   $61 = $60 + 0.5;\n   $62 = (+Math_floor((+$61)));\n   $63 = $62 <= 2147483647.0;\n   $64 = $62 >= -2147483648.0;\n   $or$cond3$i63 = $63 & $64;\n   if ($or$cond3$i63) {\n    $65 = (~~(($62)));\n    $storemerge85 = $65;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$54>>2] = $storemerge85;\n $66 = (($41) + ($8))|0;\n $67 = HEAP32[$34>>2]|0;\n $68 = (($67) + ($32))|0;\n $69 = HEAP32[$36>>2]|0;\n $70 = (($69) + ($33))|0;\n $71 = ((($1)) + 24|0);\n $72 = HEAP32[$71>>2]|0;\n $73 = ((($1)) + 28|0);\n $74 = HEAP32[$73>>2]|0;\n $75 = (($74) + ($72))|0;\n $76 = ((($1)) + 32|0);\n $77 = HEAP32[$76>>2]|0;\n $78 = (($75) + ($77))|0;\n $79 = ((($0)) + 16|0);\n $80 = ($78|0)==(0);\n if ($80) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $81 = ($72|0)==(0);\n do {\n  if ($81) {\n   $storemerge86 = 0;\n  } else {\n   $82 = (+($72|0));\n   $83 = $82 * 1.0E+5;\n   $84 = (+($78|0));\n   $85 = $83 / $84;\n   $86 = $85 + 0.5;\n   $87 = (+Math_floor((+$86)));\n   $88 = $87 <= 2147483647.0;\n   $89 = $87 >= -2147483648.0;\n   $or$cond3$i67 = $88 & $89;\n   if ($or$cond3$i67) {\n    $90 = (~~(($87)));\n    $storemerge86 = $90;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$79>>2] = $storemerge86;\n $91 = ((($0)) + 20|0);\n $92 = HEAP32[$73>>2]|0;\n $93 = ($92|0)==(0);\n do {\n  if ($93) {\n   $storemerge87 = 0;\n  } else {\n   $94 = (+($92|0));\n   $95 = $94 * 1.0E+5;\n   $96 = (+($78|0));\n   $97 = $95 / $96;\n   $98 = $97 + 0.5;\n   $99 = (+Math_floor((+$98)));\n   $100 = $99 <= 2147483647.0;\n   $101 = $99 >= -2147483648.0;\n   $or$cond3$i71 = $100 & $101;\n   if ($or$cond3$i71) {\n    $102 = (~~(($99)));\n    $storemerge87 = $102;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$91>>2] = $storemerge87;\n $103 = (($66) + ($78))|0;\n $104 = HEAP32[$71>>2]|0;\n $105 = (($68) + ($104))|0;\n $106 = HEAP32[$73>>2]|0;\n $107 = ((($0)) + 24|0);\n $108 = ($103|0)==(0);\n if ($108) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $109 = ($105|0)==(0);\n do {\n  if ($109) {\n   $storemerge88 = 0;\n  } else {\n   $110 = (+($105|0));\n   $111 = $110 * 1.0E+5;\n   $112 = (+($103|0));\n   $113 = $111 / $112;\n   $114 = $113 + 0.5;\n   $115 = (+Math_floor((+$114)));\n   $116 = $115 <= 2147483647.0;\n   $117 = $115 >= -2147483648.0;\n   $or$cond3$i75 = $116 & $117;\n   if ($or$cond3$i75) {\n    $118 = (~~(($115)));\n    $storemerge88 = $118;\n    break;\n   } else {\n    $$0 = 1;\n    return ($$0|0);\n   }\n  }\n } while(0);\n HEAP32[$107>>2] = $storemerge88;\n $119 = (($70) + ($106))|0;\n $120 = ((($0)) + 28|0);\n $121 = ($119|0)==(0);\n if ($121) {\n  HEAP32[$120>>2] = 0;\n  $$0 = 0;\n  return ($$0|0);\n }\n $122 = (+($119|0));\n $123 = $122 * 1.0E+5;\n $124 = (+($103|0));\n $125 = $123 / $124;\n $126 = $125 + 0.5;\n $127 = (+Math_floor((+$126)));\n $128 = $127 <= 2147483647.0;\n $129 = $127 >= -2147483648.0;\n $or$cond3$i79 = $128 & $129;\n if (!($or$cond3$i79)) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $130 = (~~(($127)));\n HEAP32[$120>>2] = $130;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _png_fixed($0,$1,$2) {\n $0 = $0|0;\n $1 = +$1;\n $2 = $2|0;\n var $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $1 * 1.0E+5;\n $4 = $3 + 0.5;\n $5 = (+Math_floor((+$4)));\n $6 = $5 > 2147483647.0;\n $7 = $5 < -2147483648.0;\n $or$cond = $6 | $7;\n if ($or$cond) {\n  _png_fixed_error($0,$2);\n  // unreachable;\n } else {\n  $8 = (~~(($5)));\n  return ($8|0);\n }\n return (0)|0;\n}\nfunction _png_fixed_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$1 = 0, $$old1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $2 = sp;\n dest=$2; src=19028; stop=dest+24|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));\n $3 = ($1|0)==(0|0);\n L1: do {\n  if ($3) {\n   $$1 = 0;\n  } else {\n   $$0 = 0;\n   while(1) {\n    $4 = (($1) + ($$0)|0);\n    $5 = HEAP8[$4>>0]|0;\n    $6 = ($5<<24>>24)==(0);\n    if ($6) {\n     $$1 = $$0;\n     break L1;\n    }\n    $7 = (($$0) + 24)|0;\n    $8 = (($2) + ($7)|0);\n    HEAP8[$8>>0] = $5;\n    $9 = (($$0) + 1)|0;\n    $$old1 = ($9|0)<(195);\n    if ($$old1) {\n     $$0 = $9;\n    } else {\n     $$1 = $9;\n     break;\n    }\n   }\n  }\n } while(0);\n $10 = (($$1) + 24)|0;\n $11 = (($2) + ($10)|0);\n HEAP8[$11>>0] = 0;\n _png_error($0,$2);\n // unreachable;\n}\nfunction _png_colorspace_set_gamma($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$off = 0, $$off$i$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert17 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre18 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0.0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $or$cond = 0, $or$cond13$i = 0, $or$cond3$i$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$off = (($2) + -16)|0;\n $3 = ($$off>>>0)>(624999984);\n if ($3) {\n  $$phi$trans$insert17 = ((($1)) + 74|0);\n  $$pre18 = HEAP16[$$phi$trans$insert17>>1]|0;\n  $$0 = 19128;$$pre$phiZ2D = $$phi$trans$insert17;$32 = $$pre18;\n } else {\n  $4 = ((($0)) + 208|0);\n  $5 = HEAP32[$4>>2]|0;\n  $6 = $5 & 32768;\n  $7 = ($6|0)==(0);\n  $$phi$trans$insert = ((($1)) + 74|0);\n  $$pre = HEAP16[$$phi$trans$insert>>1]|0;\n  $8 = $$pre & 8;\n  $9 = ($8<<16>>16)==(0);\n  $or$cond = $7 | $9;\n  if ($or$cond) {\n   $10 = ($$pre<<16>>16)<(0);\n   if ($10) {\n    return;\n   }\n   $11 = $$pre & 1;\n   $12 = ($11<<16>>16)==(0);\n   do {\n    if (!($12)) {\n     $13 = HEAP32[$1>>2]|0;\n     $14 = ($2|0)==(0);\n     $15 = ($13|0)==(0);\n     $or$cond13$i = $14 | $15;\n     if (!($or$cond13$i)) {\n      $16 = (+($13|0));\n      $17 = $16 * 1.0E+5;\n      $18 = (+($2|0));\n      $19 = $17 / $18;\n      $20 = $19 + 0.5;\n      $21 = (+Math_floor((+$20)));\n      $22 = $21 <= 2147483647.0;\n      $23 = $21 >= -2147483648.0;\n      $or$cond3$i$i = $22 & $23;\n      if ($or$cond3$i$i) {\n       $24 = (~~(($21)));\n       $$off$i$i = (($24) + -95000)|0;\n       $25 = ($$off$i$i>>>0)>(10000);\n       if (!($25)) {\n        break;\n       }\n      }\n     }\n     $26 = $$pre & 32;\n     $27 = ($26<<16>>16)==(0);\n     if ($27) {\n      _png_chunk_report($0,19053,0);\n      break;\n     }\n     _png_chunk_report($0,19096,2);\n     return;\n    }\n   } while(0);\n   HEAP32[$1>>2] = $2;\n   $28 = $$pre&65535;\n   $29 = $28 | 9;\n   $30 = $29&65535;\n   HEAP16[$$phi$trans$insert>>1] = $30;\n   return;\n  } else {\n   $$0 = 24641;$$pre$phiZ2D = $$phi$trans$insert;$32 = $$pre;\n  }\n }\n $31 = $32&65535;\n $33 = $31 | 32768;\n $34 = $33&65535;\n HEAP16[$$pre$phiZ2D>>1] = $34;\n _png_chunk_report($0,$$0,1);\n return;\n}\nfunction _png_chunk_report($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$idx$i = 0, $$idx$i$i = 0, $$idx$val$i = 0, $$idx$val$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 32768;\n $7 = ($6|0)==(0);\n if (!($7)) {\n  $8 = ($2|0)<(2);\n  if ($8) {\n   $$idx$i = ((($0)) + 376|0);\n   $$idx$val$i = HEAP32[$$idx$i>>2]|0;\n   _png_format_buffer($$idx$val$i,$3,$1);\n   _png_warning($0,$3);\n   STACKTOP = sp;return;\n  }\n  $9 = ((($0)) + 212|0);\n  $10 = HEAP32[$9>>2]|0;\n  $11 = $10 & 1048576;\n  $12 = ($11|0)==(0);\n  if ($12) {\n   _png_chunk_error($0,$1);\n   // unreachable;\n  }\n  $$idx$i$i = ((($0)) + 376|0);\n  $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;\n  _png_format_buffer($$idx$val$i$i,$3,$1);\n  _png_warning($0,$3);\n  STACKTOP = sp;return;\n }\n $13 = ($2|0)<(1);\n $14 = ((($0)) + 212|0);\n $15 = HEAP32[$14>>2]|0;\n if ($13) {\n  $16 = $15 & 2097152;\n  $17 = ($16|0)==(0);\n  if ($17) {\n   _png_error($0,$1);\n   // unreachable;\n  }\n  _png_warning($0,$1);\n  STACKTOP = sp;return;\n } else {\n  $18 = $15 & 4194304;\n  $19 = ($18|0)==(0);\n  if ($19) {\n   _png_error($0,$1);\n   // unreachable;\n  }\n  _png_warning($0,$1);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_set_gAMA($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = +$2;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_png_fixed($0,$2,19153)|0);\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond$i = $4 | $5;\n if ($or$cond$i) {\n  return;\n }\n $6 = ((($1)) + 40|0);\n _png_colorspace_set_gamma($0,$6,$3);\n _png_colorspace_sync_info($0,$1);\n return;\n}\nfunction _png_set_hIST($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$022 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n $4 = ($1|0)==(0|0);\n $or$cond = $3 | $4;\n if ($or$cond) {\n  return;\n }\n $5 = ((($1)) + 20|0);\n $6 = HEAP16[$5>>1]|0;\n $7 = (($6) + -1)<<16>>16;\n $8 = ($7&65535)>(255);\n if ($8) {\n  _png_warning($0,19166);\n  return;\n }\n _png_free_data($0,$1,8,0);\n $9 = (_png_malloc_warn($0,512)|0);\n $10 = ((($1)) + 204|0);\n HEAP32[$10>>2] = $9;\n $11 = ($9|0)==(0|0);\n if ($11) {\n  _png_warning($0,19212);\n  return;\n }\n $12 = ((($1)) + 232|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = $13 | 8;\n HEAP32[$12>>2] = $14;\n $15 = HEAP16[$5>>1]|0;\n $16 = ($15<<16>>16)==(0);\n if (!($16)) {\n  $17 = HEAP16[$5>>1]|0;\n  $18 = $17&65535;\n  $$022 = 0;\n  while(1) {\n   $19 = (($2) + ($$022<<1)|0);\n   $20 = HEAP16[$19>>1]|0;\n   $21 = (($9) + ($$022<<1)|0);\n   HEAP16[$21>>1] = $20;\n   $22 = (($$022) + 1)|0;\n   $23 = ($22|0)<($18|0);\n   if ($23) {\n    $$022 = $22;\n   } else {\n    break;\n   }\n  }\n }\n $24 = ((($1)) + 8|0);\n $25 = HEAP32[$24>>2]|0;\n $26 = $25 | 64;\n HEAP32[$24>>2] = $26;\n return;\n}\nfunction _png_free_data($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre172 = 0, $$pre173 = 0, $$pre174 = 0, $$pre175 = 0, $$pre177 = 0, $$pre178 = 0, $$pre179 = 0, $$pre181 = 0, $$pre182 = 0, $$pre184 = 0, $$pre185 = 0, $$pre186 = 0, $$pre187 = 0, $$pre189 = 0, $$pre190 = 0, $$pre190$pre = 0, $$pre193 = 0;\n var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;\n var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;\n var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;\n var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;\n var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;\n var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;\n var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;\n var $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond = $4 | $5;\n if ($or$cond) {\n  return;\n }\n $6 = ((($1)) + 136|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)==(0|0);\n do {\n  if ($8) {\n   $$pre193 = ((($1)) + 232|0);\n   $$pre$phiZ2D = $$pre193;\n  } else {\n   $9 = $2 & 16384;\n   $10 = ((($1)) + 232|0);\n   $11 = HEAP32[$10>>2]|0;\n   $12 = $9 & $11;\n   $13 = ($12|0)==(0);\n   if ($13) {\n    $$pre$phiZ2D = $10;\n   } else {\n    $14 = ($3|0)==(-1);\n    if (!($14)) {\n     $22 = (((($7) + (($3*28)|0)|0)) + 4|0);\n     $23 = HEAP32[$22>>2]|0;\n     _png_free($0,$23);\n     $24 = HEAP32[$6>>2]|0;\n     $25 = (((($24) + (($3*28)|0)|0)) + 4|0);\n     HEAP32[$25>>2] = 0;\n     $$pre$phiZ2D = $10;\n     break;\n    }\n    $15 = ((($1)) + 128|0);\n    $16 = HEAP32[$15>>2]|0;\n    $17 = ($16|0)>(0);\n    if ($17) {\n     $18 = ((($7)) + 4|0);\n     $19 = HEAP32[$18>>2]|0;\n     _png_free($0,$19);\n     $20 = HEAP32[$15>>2]|0;\n     $21 = ($20|0)>(1);\n     if ($21) {\n      $27 = 1;\n      while(1) {\n       $$pre = HEAP32[$6>>2]|0;\n       $26 = (((($$pre) + (($27*28)|0)|0)) + 4|0);\n       $28 = HEAP32[$26>>2]|0;\n       _png_free($0,$28);\n       $29 = (($27) + 1)|0;\n       $30 = HEAP32[$15>>2]|0;\n       $31 = ($29|0)<($30|0);\n       if ($31) {\n        $27 = $29;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre172 = HEAP32[$6>>2]|0;\n     $32 = $$pre172;\n    } else {\n     $32 = $7;\n    }\n    _png_free($0,$32);\n    HEAP32[$6>>2] = 0;\n    HEAP32[$15>>2] = 0;\n    $$pre$phiZ2D = $10;\n   }\n  }\n } while(0);\n $33 = $2 & 8192;\n $34 = HEAP32[$$pre$phiZ2D>>2]|0;\n $35 = $33 & $34;\n $36 = ($35|0)==(0);\n if ($36) {\n  $45 = $34;\n } else {\n  $37 = ((($1)) + 8|0);\n  $38 = HEAP32[$37>>2]|0;\n  $39 = $38 & -17;\n  HEAP32[$37>>2] = $39;\n  $40 = ((($1)) + 156|0);\n  $41 = HEAP32[$40>>2]|0;\n  _png_free($0,$41);\n  HEAP32[$40>>2] = 0;\n  $42 = ((($1)) + 22|0);\n  HEAP16[$42>>1] = 0;\n  $$pre173 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $45 = $$pre173;\n }\n $43 = $2 & 256;\n $44 = $43 & $45;\n $46 = ($44|0)==(0);\n if ($46) {\n  $56 = $45;\n } else {\n  $47 = ((($1)) + 256|0);\n  $48 = HEAP32[$47>>2]|0;\n  _png_free($0,$48);\n  $49 = ((($1)) + 260|0);\n  $50 = HEAP32[$49>>2]|0;\n  _png_free($0,$50);\n  HEAP32[$47>>2] = 0;\n  HEAP32[$49>>2] = 0;\n  $51 = ((($1)) + 8|0);\n  $52 = HEAP32[$51>>2]|0;\n  $53 = $52 & -16385;\n  HEAP32[$51>>2] = $53;\n  $$pre174 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $56 = $$pre174;\n }\n $54 = $2 & 128;\n $55 = $54 & $56;\n $57 = ($55|0)==(0);\n if ($57) {\n  $84 = $56;\n } else {\n  $58 = ((($1)) + 208|0);\n  $59 = HEAP32[$58>>2]|0;\n  _png_free($0,$59);\n  $60 = ((($1)) + 220|0);\n  $61 = HEAP32[$60>>2]|0;\n  _png_free($0,$61);\n  HEAP32[$58>>2] = 0;\n  HEAP32[$60>>2] = 0;\n  $62 = ((($1)) + 224|0);\n  $63 = HEAP32[$62>>2]|0;\n  $64 = ($63|0)==(0|0);\n  if (!($64)) {\n   $65 = ((($1)) + 229|0);\n   $66 = HEAP8[$65>>0]|0;\n   $67 = ($66<<24>>24)==(0);\n   if ($67) {\n    $78 = $63;\n   } else {\n    $68 = HEAP32[$63>>2]|0;\n    _png_free($0,$68);\n    $69 = HEAP8[$65>>0]|0;\n    $70 = ($69&255)>(1);\n    if ($70) {\n     $72 = 1;\n     while(1) {\n      $$pre175 = HEAP32[$62>>2]|0;\n      $71 = (($$pre175) + ($72<<2)|0);\n      $73 = HEAP32[$71>>2]|0;\n      _png_free($0,$73);\n      $74 = (($72) + 1)|0;\n      $75 = HEAP8[$65>>0]|0;\n      $76 = $75&255;\n      $77 = ($74|0)<($76|0);\n      if ($77) {\n       $72 = $74;\n      } else {\n       break;\n      }\n     }\n    }\n    $$pre177 = HEAP32[$62>>2]|0;\n    $78 = $$pre177;\n   }\n   _png_free($0,$78);\n   HEAP32[$62>>2] = 0;\n  }\n  $79 = ((($1)) + 8|0);\n  $80 = HEAP32[$79>>2]|0;\n  $81 = $80 & -1025;\n  HEAP32[$79>>2] = $81;\n  $$pre178 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $84 = $$pre178;\n }\n $82 = $2 & 16;\n $83 = $82 & $84;\n $85 = ($83|0)==(0);\n if (!($85)) {\n  $86 = ((($1)) + 116|0);\n  $87 = HEAP32[$86>>2]|0;\n  _png_free($0,$87);\n  $88 = ((($1)) + 120|0);\n  $89 = HEAP32[$88>>2]|0;\n  _png_free($0,$89);\n  HEAP32[$86>>2] = 0;\n  HEAP32[$88>>2] = 0;\n  $90 = ((($1)) + 8|0);\n  $91 = HEAP32[$90>>2]|0;\n  $92 = $91 & -4097;\n  HEAP32[$90>>2] = $92;\n }\n $93 = ((($1)) + 244|0);\n $94 = HEAP32[$93>>2]|0;\n $95 = ($94|0)==(0|0);\n do {\n  if (!($95)) {\n   $96 = $2 & 32;\n   $97 = HEAP32[$$pre$phiZ2D>>2]|0;\n   $98 = $96 & $97;\n   $99 = ($98|0)==(0);\n   if (!($99)) {\n    $100 = ($3|0)==(-1);\n    if (!($100)) {\n     $110 = (($94) + ($3<<4)|0);\n     $111 = HEAP32[$110>>2]|0;\n     _png_free($0,$111);\n     $112 = HEAP32[$93>>2]|0;\n     $113 = (((($112) + ($3<<4)|0)) + 8|0);\n     $114 = HEAP32[$113>>2]|0;\n     _png_free($0,$114);\n     $115 = HEAP32[$93>>2]|0;\n     $116 = (($115) + ($3<<4)|0);\n     HEAP32[$116>>2] = 0;\n     $117 = (((($115) + ($3<<4)|0)) + 8|0);\n     HEAP32[$117>>2] = 0;\n     break;\n    }\n    $101 = ((($1)) + 248|0);\n    $102 = HEAP32[$101>>2]|0;\n    $103 = ($102|0)>(0);\n    if ($103) {\n     $104 = HEAP32[$94>>2]|0;\n     _png_free($0,$104);\n     $105 = HEAP32[$93>>2]|0;\n     $106 = ((($105)) + 8|0);\n     $107 = HEAP32[$106>>2]|0;\n     _png_free($0,$107);\n     $108 = HEAP32[$101>>2]|0;\n     $109 = ($108|0)>(1);\n     if ($109) {\n      $119 = 1;\n      while(1) {\n       $$pre179 = HEAP32[$93>>2]|0;\n       $118 = (($$pre179) + ($119<<4)|0);\n       $120 = HEAP32[$118>>2]|0;\n       _png_free($0,$120);\n       $121 = HEAP32[$93>>2]|0;\n       $122 = (((($121) + ($119<<4)|0)) + 8|0);\n       $123 = HEAP32[$122>>2]|0;\n       _png_free($0,$123);\n       $124 = (($119) + 1)|0;\n       $125 = HEAP32[$101>>2]|0;\n       $126 = ($124|0)<($125|0);\n       if ($126) {\n        $119 = $124;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre181 = HEAP32[$93>>2]|0;\n     $127 = $$pre181;\n    } else {\n     $127 = $94;\n    }\n    _png_free($0,$127);\n    HEAP32[$93>>2] = 0;\n    HEAP32[$101>>2] = 0;\n    $128 = ((($1)) + 8|0);\n    $129 = HEAP32[$128>>2]|0;\n    $130 = $129 & -8193;\n    HEAP32[$128>>2] = $130;\n   }\n  }\n } while(0);\n $131 = ((($1)) + 236|0);\n $132 = HEAP32[$131>>2]|0;\n $133 = ($132|0)==(0|0);\n do {\n  if (!($133)) {\n   $134 = $2 & 512;\n   $135 = HEAP32[$$pre$phiZ2D>>2]|0;\n   $136 = $134 & $135;\n   $137 = ($136|0)==(0);\n   if (!($137)) {\n    $138 = ($3|0)==(-1);\n    if (!($138)) {\n     $146 = (((($132) + (($3*20)|0)|0)) + 8|0);\n     $147 = HEAP32[$146>>2]|0;\n     _png_free($0,$147);\n     $148 = HEAP32[$131>>2]|0;\n     $149 = (((($148) + (($3*20)|0)|0)) + 8|0);\n     HEAP32[$149>>2] = 0;\n     break;\n    }\n    $139 = ((($1)) + 240|0);\n    $140 = HEAP32[$139>>2]|0;\n    $141 = ($140|0)>(0);\n    if ($141) {\n     $142 = ((($132)) + 8|0);\n     $143 = HEAP32[$142>>2]|0;\n     _png_free($0,$143);\n     $144 = HEAP32[$139>>2]|0;\n     $145 = ($144|0)>(1);\n     if ($145) {\n      $151 = 1;\n      while(1) {\n       $$pre182 = HEAP32[$131>>2]|0;\n       $150 = (((($$pre182) + (($151*20)|0)|0)) + 8|0);\n       $152 = HEAP32[$150>>2]|0;\n       _png_free($0,$152);\n       $153 = (($151) + 1)|0;\n       $154 = HEAP32[$139>>2]|0;\n       $155 = ($153|0)<($154|0);\n       if ($155) {\n        $151 = $153;\n       } else {\n        break;\n       }\n      }\n     }\n     $$pre184 = HEAP32[$131>>2]|0;\n     $156 = $$pre184;\n    } else {\n     $156 = $132;\n    }\n    _png_free($0,$156);\n    HEAP32[$131>>2] = 0;\n    HEAP32[$139>>2] = 0;\n   }\n  }\n } while(0);\n $157 = $2 & 8;\n $158 = HEAP32[$$pre$phiZ2D>>2]|0;\n $159 = $157 & $158;\n $160 = ($159|0)==(0);\n if ($160) {\n  $168 = $158;\n } else {\n  $161 = ((($1)) + 204|0);\n  $162 = HEAP32[$161>>2]|0;\n  _png_free($0,$162);\n  HEAP32[$161>>2] = 0;\n  $163 = ((($1)) + 8|0);\n  $164 = HEAP32[$163>>2]|0;\n  $165 = $164 & -65;\n  HEAP32[$163>>2] = $165;\n  $$pre185 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $168 = $$pre185;\n }\n $166 = $2 & 4096;\n $167 = $166 & $168;\n $169 = ($167|0)==(0);\n if ($169) {\n  $178 = $168;\n } else {\n  $170 = ((($1)) + 16|0);\n  $171 = HEAP32[$170>>2]|0;\n  _png_free($0,$171);\n  HEAP32[$170>>2] = 0;\n  $172 = ((($1)) + 8|0);\n  $173 = HEAP32[$172>>2]|0;\n  $174 = $173 & -9;\n  HEAP32[$172>>2] = $174;\n  $175 = ((($1)) + 20|0);\n  HEAP16[$175>>1] = 0;\n  $$pre186 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $178 = $$pre186;\n }\n $176 = $2 & 64;\n $177 = $176 & $178;\n $179 = ($177|0)==(0);\n if ($179) {\n  $203 = $178;\n } else {\n  $180 = ((($1)) + 264|0);\n  $181 = HEAP32[$180>>2]|0;\n  $182 = ($181|0)==(0|0);\n  if ($182) {\n   $$pre190 = $178;\n  } else {\n   $183 = ((($1)) + 4|0);\n   $184 = HEAP32[$183>>2]|0;\n   $185 = ($184|0)==(0);\n   if ($185) {\n    $195 = $181;\n   } else {\n    $186 = HEAP32[$181>>2]|0;\n    _png_free($0,$186);\n    $187 = HEAP32[$183>>2]|0;\n    $188 = ($187>>>0)>(1);\n    if ($188) {\n     $190 = 1;\n     while(1) {\n      $$pre187 = HEAP32[$180>>2]|0;\n      $189 = (($$pre187) + ($190<<2)|0);\n      $191 = HEAP32[$189>>2]|0;\n      _png_free($0,$191);\n      $192 = (($190) + 1)|0;\n      $193 = HEAP32[$183>>2]|0;\n      $194 = ($192>>>0)<($193>>>0);\n      if ($194) {\n       $190 = $192;\n      } else {\n       break;\n      }\n     }\n    }\n    $$pre189 = HEAP32[$180>>2]|0;\n    $195 = $$pre189;\n   }\n   _png_free($0,$195);\n   HEAP32[$180>>2] = 0;\n   $$pre190$pre = HEAP32[$$pre$phiZ2D>>2]|0;\n   $$pre190 = $$pre190$pre;\n  }\n  $196 = ((($1)) + 8|0);\n  $197 = HEAP32[$196>>2]|0;\n  $198 = $197 & -32769;\n  HEAP32[$196>>2] = $198;\n  $203 = $$pre190;\n }\n $199 = ($3|0)==(-1);\n $200 = $2 & -16929;\n $$ = $199 ? $2 : $200;\n $201 = $$ ^ -1;\n $202 = $203 & $201;\n HEAP32[$$pre$phiZ2D>>2] = $202;\n return;\n}\nfunction _png_set_IHDR($0,$1,$2,$3,$4,$5,$6,$7,$8) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n $8 = $8|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $9 = ($0|0)==(0|0);\n $10 = ($1|0)==(0|0);\n $or$cond = $9 | $10;\n if ($or$cond) {\n  return;\n }\n HEAP32[$1>>2] = $2;\n $11 = ((($1)) + 4|0);\n HEAP32[$11>>2] = $3;\n $12 = $4&255;\n $13 = ((($1)) + 24|0);\n HEAP8[$13>>0] = $12;\n $14 = $5&255;\n $15 = ((($1)) + 25|0);\n HEAP8[$15>>0] = $14;\n $16 = $7&255;\n $17 = ((($1)) + 26|0);\n HEAP8[$17>>0] = $16;\n $18 = $8&255;\n $19 = ((($1)) + 27|0);\n HEAP8[$19>>0] = $18;\n $20 = $6&255;\n $21 = ((($1)) + 28|0);\n HEAP8[$21>>0] = $20;\n $22 = $4 & 255;\n $23 = $5 & 255;\n $24 = $6 & 255;\n $25 = $7 & 255;\n $26 = $8 & 255;\n _png_check_IHDR($0,$2,$3,$22,$23,$24,$25,$26);\n $27 = HEAP8[$15>>0]|0;\n $28 = ($27<<24>>24)==(3);\n if ($28) {\n  $29 = ((($1)) + 29|0);\n  HEAP8[$29>>0] = 1;\n  $38 = 1;\n } else {\n  $30 = $27 & 2;\n  $31 = ((($1)) + 29|0);\n  $32 = $30 | 1;\n  HEAP8[$31>>0] = $32;\n  $33 = $27 & 4;\n  $34 = ($33<<24>>24)==(0);\n  if ($34) {\n   $38 = $32;\n  } else {\n   $35 = ((($1)) + 29|0);\n   $36 = (($32) + 1)<<24>>24;\n   HEAP8[$35>>0] = $36;\n   $38 = $36;\n  }\n }\n $37 = $38&255;\n $39 = HEAP8[$13>>0]|0;\n $40 = $39&255;\n $41 = Math_imul($40, $37)|0;\n $42 = $41&255;\n $43 = ((($1)) + 30|0);\n HEAP8[$43>>0] = $42;\n $44 = $41 & 255;\n $45 = ($44>>>0)>(7);\n if ($45) {\n  $46 = $44 >>> 3;\n  $47 = Math_imul($46, $2)|0;\n  $52 = $47;\n } else {\n  $48 = Math_imul($44, $2)|0;\n  $49 = (($48) + 7)|0;\n  $50 = $49 >>> 3;\n  $52 = $50;\n }\n $51 = ((($1)) + 12|0);\n HEAP32[$51>>2] = $52;\n return;\n}\nfunction _png_check_IHDR($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$1 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$2 = 0, $$3 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $8 = 0, $9 = 0, $or$cond = 0;\n var $or$cond15 = 0, $or$cond21 = 0, $or$cond23 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $8 = ($1|0)==(0);\n if ($8) {\n  _png_warning($0,19252);\n  $$2 = 1;\n } else {\n  $9 = ($1|0)<(0);\n  if ($9) {\n   _png_warning($0,19280);\n   $$1 = 1;\n  } else {\n   $$1 = 0;\n  }\n  $10 = (($1) + 7)|0;\n  $11 = $10 & -8;\n  $12 = ($11>>>0)>(536870904);\n  if ($12) {\n   _png_warning($0,19308);\n   $$2 = 1;\n  } else {\n   $$2 = $$1;\n  }\n }\n $13 = ((($0)) + 748|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14>>>0)<($1>>>0);\n if ($15) {\n  _png_warning($0,19355);\n  $$3 = 1;\n } else {\n  $$3 = $$2;\n }\n $16 = ($2|0)==(0);\n if ($16) {\n  _png_warning($0,19394);\n  $$5 = 1;\n } else {\n  $17 = ($2|0)<(0);\n  if ($17) {\n   _png_warning($0,19423);\n   $$5 = 1;\n  } else {\n   $$5 = $$3;\n  }\n }\n $18 = ((($0)) + 752|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($19>>>0)<($2>>>0);\n if ($20) {\n  _png_warning($0,19452);\n  $$6 = 1;\n } else {\n  $$6 = $$5;\n }\n switch ($3|0) {\n case 1: case 2: case 4: case 8: case 16:  {\n  $$7 = $$6;\n  break;\n }\n default: {\n  _png_warning($0,19492);\n  $$7 = 1;\n }\n }\n $21 = $4 | 4;\n $22 = ($21|0)==(5);\n $23 = ($4>>>0)>(6);\n $24 = $23 | $22;\n if ($24) {\n  _png_warning($0,19518);\n  $$8 = 1;\n } else {\n  $$8 = $$7;\n }\n $25 = ($4|0)==(3);\n $26 = ($3|0)>(8);\n $or$cond15 = $26 & $25;\n if ($or$cond15) {\n  label = 21;\n } else {\n  $27 = ($4|0)==(4);\n  $28 = ($21|0)==(6);\n  $29 = $27 | $28;\n  $30 = ($3|0)<(8);\n  $or$cond21 = $30 & $29;\n  if ($or$cond21) {\n   label = 21;\n  } else {\n   $$9 = $$8;\n  }\n }\n if ((label|0) == 21) {\n  _png_warning($0,19545);\n  $$9 = 1;\n }\n $31 = ($5|0)>(1);\n if ($31) {\n  _png_warning($0,19594);\n  $$10 = 1;\n } else {\n  $$10 = $$9;\n }\n $32 = ($6|0)==(0);\n if ($32) {\n  $$11 = $$10;\n } else {\n  _png_warning($0,19627);\n  $$11 = 1;\n }\n $33 = ((($0)) + 208|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = $34 & 4096;\n $36 = ($35|0)==(0);\n if (!($36)) {\n  $37 = ((($0)) + 708|0);\n  $38 = HEAP32[$37>>2]|0;\n  $39 = ($38|0)==(0);\n  if (!($39)) {\n   _png_warning($0,26681);\n  }\n }\n $40 = ($7|0)==(0);\n if ($40) {\n  $$13 = $$11;\n } else {\n  $41 = ((($0)) + 708|0);\n  $42 = HEAP32[$41>>2]|0;\n  $43 = $42 & 4;\n  $44 = ($43|0)!=(0);\n  $45 = ($7|0)==(64);\n  $or$cond23 = $45 & $44;\n  if ($or$cond23) {\n   $46 = HEAP32[$33>>2]|0;\n   $47 = $46 & 4096;\n   $48 = ($47|0)==(0);\n   $49 = ($21|0)==(6);\n   $or$cond = $49 & $48;\n   if ($or$cond) {\n    $$12 = $$11;$51 = $46;\n   } else {\n    label = 32;\n   }\n  } else {\n   label = 32;\n  }\n  if ((label|0) == 32) {\n   _png_warning($0,19662);\n   $$pre = HEAP32[$33>>2]|0;\n   $$12 = 1;$51 = $$pre;\n  }\n  $50 = $51 & 4096;\n  $52 = ($50|0)==(0);\n  if ($52) {\n   $$13 = $$12;\n  } else {\n   _png_warning($0,19692);\n   _png_error($0,19722);\n   // unreachable;\n  }\n }\n $53 = ($$13|0)==(1);\n if ($53) {\n  _png_error($0,19722);\n  // unreachable;\n } else {\n  return;\n }\n}\nfunction _png_set_oFFs($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($0|0)==(0|0);\n $6 = ($1|0)==(0|0);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  return;\n }\n $7 = ((($1)) + 180|0);\n HEAP32[$7>>2] = $2;\n $8 = ((($1)) + 184|0);\n HEAP32[$8>>2] = $3;\n $9 = $4&255;\n $10 = ((($1)) + 188|0);\n HEAP8[$10>>0] = $9;\n $11 = ((($1)) + 8|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = $12 | 256;\n HEAP32[$11>>2] = $13;\n return;\n}\nfunction _png_set_pCAL($0,$1,$2,$3,$4,$5,$6,$7,$8) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n $8 = $8|0;\n var $$088 = 0, $$187 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $9 = 0;\n var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $9 = ($0|0)==(0|0);\n $10 = ($1|0)==(0|0);\n $or$cond = $9 | $10;\n $11 = ($2|0)==(0|0);\n $or$cond3 = $or$cond | $11;\n $12 = ($7|0)==(0|0);\n $or$cond5 = $or$cond3 | $12;\n if ($or$cond5) {\n  return;\n }\n $13 = ($6|0)>(0);\n $14 = ($8|0)==(0|0);\n $or$cond7 = $13 & $14;\n if ($or$cond7) {\n  return;\n }\n $15 = (_strlen($2)|0);\n $16 = (($15) + 1)|0;\n $17 = ($5>>>0)>(3);\n if ($17) {\n  _png_error($0,19740);\n  // unreachable;\n }\n $18 = ($6>>>0)>(255);\n if ($18) {\n  _png_error($0,19767);\n  // unreachable;\n }\n $19 = ($6|0)==(0);\n L13: do {\n  if (!($19)) {\n   $$088 = 0;\n   while(1) {\n    $22 = (($8) + ($$088<<2)|0);\n    $23 = HEAP32[$22>>2]|0;\n    $24 = ($23|0)==(0|0);\n    if ($24) {\n     label = 11;\n     break;\n    }\n    $25 = (_strlen($23)|0);\n    $26 = (_png_check_fp_string($23,$25)|0);\n    $27 = ($26|0)==(0);\n    $20 = (($$088) + 1)|0;\n    if ($27) {\n     label = 11;\n     break;\n    }\n    $21 = ($20|0)<($6|0);\n    if ($21) {\n     $$088 = $20;\n    } else {\n     break L13;\n    }\n   }\n   if ((label|0) == 11) {\n    _png_error($0,19796);\n    // unreachable;\n   }\n  }\n } while(0);\n $28 = (_png_malloc_warn($0,$16)|0);\n $29 = ((($1)) + 208|0);\n HEAP32[$29>>2] = $28;\n $30 = ($28|0)==(0|0);\n if ($30) {\n  _png_warning($0,19830);\n  return;\n }\n _memcpy(($28|0),($2|0),($16|0))|0;\n $31 = ((($1)) + 212|0);\n HEAP32[$31>>2] = $3;\n $32 = ((($1)) + 216|0);\n HEAP32[$32>>2] = $4;\n $33 = $5&255;\n $34 = ((($1)) + 228|0);\n HEAP8[$34>>0] = $33;\n $35 = $6&255;\n $36 = ((($1)) + 229|0);\n HEAP8[$36>>0] = $35;\n $37 = (_strlen($7)|0);\n $38 = (($37) + 1)|0;\n $39 = (_png_malloc_warn($0,$38)|0);\n $40 = ((($1)) + 220|0);\n HEAP32[$40>>2] = $39;\n $41 = ($39|0)==(0|0);\n if ($41) {\n  _png_warning($0,19867);\n  return;\n }\n _memcpy(($39|0),($7|0),($38|0))|0;\n $42 = $6 << 2;\n $43 = (($42) + 4)|0;\n $44 = (_png_malloc_warn($0,$43)|0);\n $45 = ((($1)) + 224|0);\n HEAP32[$45>>2] = $44;\n $46 = ($44|0)==(0|0);\n if ($46) {\n  _png_warning($0,19902);\n  return;\n }\n _memset(($44|0),0,($43|0))|0;\n L34: do {\n  if ($13) {\n   $$187 = 0;\n   while(1) {\n    $47 = (($8) + ($$187<<2)|0);\n    $48 = HEAP32[$47>>2]|0;\n    $49 = (_strlen($48)|0);\n    $50 = (($49) + 1)|0;\n    $51 = (_png_malloc_warn($0,$50)|0);\n    $52 = HEAP32[$45>>2]|0;\n    $53 = (($52) + ($$187<<2)|0);\n    HEAP32[$53>>2] = $51;\n    $54 = HEAP32[$45>>2]|0;\n    $55 = (($54) + ($$187<<2)|0);\n    $56 = HEAP32[$55>>2]|0;\n    $57 = ($56|0)==(0|0);\n    if ($57) {\n     break;\n    }\n    $58 = HEAP32[$47>>2]|0;\n    _memcpy(($56|0),($58|0),($50|0))|0;\n    $59 = (($$187) + 1)|0;\n    $60 = ($59|0)<($6|0);\n    if ($60) {\n     $$187 = $59;\n    } else {\n     break L34;\n    }\n   }\n   _png_warning($0,19938);\n   return;\n  }\n } while(0);\n $61 = ((($1)) + 8|0);\n $62 = HEAP32[$61>>2]|0;\n $63 = $62 | 1024;\n HEAP32[$61>>2] = $63;\n $64 = ((($1)) + 232|0);\n $65 = HEAP32[$64>>2]|0;\n $66 = $65 | 128;\n HEAP32[$64>>2] = $66;\n return;\n}\nfunction _png_check_fp_string($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp + 4|0;\n $3 = sp;\n HEAP32[$2>>2] = 0;\n HEAP32[$3>>2] = 0;\n $4 = (_png_check_fp_number($0,$1,$2,$3)|0);\n $5 = ($4|0)==(0);\n do {\n  if ($5) {\n   $$0 = 0;\n  } else {\n   $6 = HEAP32[$3>>2]|0;\n   $7 = ($6|0)==($1|0);\n   if (!($7)) {\n    $8 = (($0) + ($6)|0);\n    $9 = HEAP8[$8>>0]|0;\n    $10 = ($9<<24>>24)==(0);\n    if (!($10)) {\n     $$0 = 0;\n     break;\n    }\n   }\n   $11 = HEAP32[$2>>2]|0;\n   $$0 = $11;\n  }\n } while(0);\n STACKTOP = sp;return ($$0|0);\n}\nfunction _png_check_fp_number($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$041 = 0, $$042$lcssa = 0, $$04249 = 0, $$043$lcssa = 0, $$04348 = 0, $$144 = 0, $$245 = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = HEAP32[$2>>2]|0;\n $5 = HEAP32[$3>>2]|0;\n $6 = ($5>>>0)<($1>>>0);\n L1: do {\n  if ($6) {\n   $$04249 = $5;$$04348 = $4;\n   while(1) {\n    $7 = (($0) + ($$04249)|0);\n    $8 = HEAP8[$7>>0]|0;\n    $9 = $8 << 24 >> 24;\n    switch ($9|0) {\n    case 43:  {\n     $$041 = 4;\n     break;\n    }\n    case 45:  {\n     $$041 = 132;\n     break;\n    }\n    case 46:  {\n     $$041 = 16;\n     break;\n    }\n    case 48:  {\n     $$041 = 8;\n     break;\n    }\n    case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {\n     $$041 = 264;\n     break;\n    }\n    case 101: case 69:  {\n     $$041 = 32;\n     break;\n    }\n    default: {\n     $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n     break L1;\n    }\n    }\n    $10 = $$04348 & 3;\n    $11 = $$041 | $10;\n    $trunc = $11&255;\n    $trunc$clear = $trunc & 63;\n    L11: do {\n     switch ($trunc$clear<<24>>24) {\n     case 4:  {\n      $12 = $$04348 & 60;\n      $13 = ($12|0)==(0);\n      if (!($13)) {\n       $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n       break L1;\n      }\n      $14 = $$041 | $$04348;\n      $$245 = $14;\n      break;\n     }\n     case 16:  {\n      $15 = $$04348 & 16;\n      $16 = ($15|0)==(0);\n      if (!($16)) {\n       $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n       break L1;\n      }\n      $17 = $$04348 & 8;\n      $18 = ($17|0)==(0);\n      if ($18) {\n       $20 = $$04348 & 448;\n       $21 = $20 | $$041;\n       $22 = $21 | 1;\n       $$245 = $22;\n       break L11;\n      } else {\n       $19 = $$041 | $$04348;\n       $$245 = $19;\n       break L11;\n      }\n      break;\n     }\n     case 8:  {\n      $23 = $$04348 & 16;\n      $24 = ($23|0)==(0);\n      $25 = $$04348 & 384;\n      $26 = $25 | 17;\n      $$144 = $24 ? $$04348 : $26;\n      $27 = $$144 | $$041;\n      $28 = $27 | 64;\n      $$245 = $28;\n      break;\n     }\n     case 32:  {\n      $29 = $$04348 & 8;\n      $30 = ($29|0)==(0);\n      if ($30) {\n       $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n       break L1;\n      }\n      $31 = $$04348 & 448;\n      $32 = $31 | 2;\n      $$245 = $32;\n      break;\n     }\n     case 9:  {\n      $33 = $$04348 | $$041;\n      $34 = $33 | 64;\n      $$245 = $34;\n      break;\n     }\n     case 33:  {\n      $35 = $$04348 & 8;\n      $36 = ($35|0)==(0);\n      if ($36) {\n       $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n       break L1;\n      }\n      $37 = $$04348 & 448;\n      $38 = $37 | 2;\n      $$245 = $38;\n      break;\n     }\n     case 6:  {\n      $39 = $$04348 & 60;\n      $40 = ($39|0)==(0);\n      if (!($40)) {\n       $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n       break L1;\n      }\n      $41 = $$04348 | 4;\n      $$245 = $41;\n      break;\n     }\n     case 10:  {\n      $42 = $$04348 | 72;\n      $$245 = $42;\n      break;\n     }\n     default: {\n      $$042$lcssa = $$04249;$$043$lcssa = $$04348;\n      break L1;\n     }\n     }\n    } while(0);\n    $43 = (($$04249) + 1)|0;\n    $44 = ($43>>>0)<($1>>>0);\n    if ($44) {\n     $$04249 = $43;$$04348 = $$245;\n    } else {\n     $$042$lcssa = $43;$$043$lcssa = $$245;\n     break L1;\n    }\n   }\n  } else {\n   $$042$lcssa = $5;$$043$lcssa = $4;\n  }\n } while(0);\n HEAP32[$2>>2] = $$043$lcssa;\n HEAP32[$3>>2] = $$042$lcssa;\n $45 = $$043$lcssa >>> 3;\n $$lobit = $45 & 1;\n return ($$lobit|0);\n}\nfunction _png_set_sCAL_s($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$cmp = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($0|0)==(0|0);\n $6 = ($1|0)==(0|0);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  return;\n }\n $$off = (($2) + -1)|0;\n $$cmp = ($$off>>>0)>(1);\n if ($$cmp) {\n  _png_error($0,19977);\n  // unreachable;\n }\n $7 = ($3|0)==(0|0);\n if ($7) {\n  _png_error($0,19995);\n  // unreachable;\n }\n $8 = (_strlen($3)|0);\n $9 = ($8|0)==(0);\n if ($9) {\n  _png_error($0,19995);\n  // unreachable;\n }\n $10 = HEAP8[$3>>0]|0;\n $11 = ($10<<24>>24)==(45);\n if ($11) {\n  _png_error($0,19995);\n  // unreachable;\n }\n $12 = (_png_check_fp_string($3,$8)|0);\n $13 = ($12|0)==(0);\n if ($13) {\n  _png_error($0,19995);\n  // unreachable;\n }\n $14 = ($4|0)==(0|0);\n if ($14) {\n  _png_error($0,20014);\n  // unreachable;\n }\n $15 = (_strlen($4)|0);\n $16 = ($15|0)==(0);\n if ($16) {\n  _png_error($0,20014);\n  // unreachable;\n }\n $17 = HEAP8[$4>>0]|0;\n $18 = ($17<<24>>24)==(45);\n if ($18) {\n  _png_error($0,20014);\n  // unreachable;\n }\n $19 = (_png_check_fp_string($4,$15)|0);\n $20 = ($19|0)==(0);\n if ($20) {\n  _png_error($0,20014);\n  // unreachable;\n }\n $21 = $2&255;\n $22 = ((($1)) + 252|0);\n HEAP8[$22>>0] = $21;\n $23 = (($8) + 1)|0;\n $24 = (_png_malloc_warn($0,$23)|0);\n $25 = ((($1)) + 256|0);\n HEAP32[$25>>2] = $24;\n $26 = ($24|0)==(0|0);\n if ($26) {\n  _png_warning($0,20034);\n  return;\n }\n _memcpy(($24|0),($3|0),($23|0))|0;\n $27 = (($15) + 1)|0;\n $28 = (_png_malloc_warn($0,$27)|0);\n $29 = ((($1)) + 260|0);\n HEAP32[$29>>2] = $28;\n $30 = ($28|0)==(0|0);\n if ($30) {\n  $31 = HEAP32[$25>>2]|0;\n  _png_free($0,$31);\n  HEAP32[$25>>2] = 0;\n  _png_warning($0,20034);\n  return;\n } else {\n  _memcpy(($28|0),($4|0),($27|0))|0;\n  $32 = ((($1)) + 8|0);\n  $33 = HEAP32[$32>>2]|0;\n  $34 = $33 | 16384;\n  HEAP32[$32>>2] = $34;\n  $35 = ((($1)) + 232|0);\n  $36 = HEAP32[$35>>2]|0;\n  $37 = $36 | 256;\n  HEAP32[$35>>2] = $37;\n  return;\n }\n}\nfunction _png_set_pHYs($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($0|0)==(0|0);\n $6 = ($1|0)==(0|0);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  return;\n }\n $7 = ((($1)) + 192|0);\n HEAP32[$7>>2] = $2;\n $8 = ((($1)) + 196|0);\n HEAP32[$8>>2] = $3;\n $9 = $4&255;\n $10 = ((($1)) + 200|0);\n HEAP8[$10>>0] = $9;\n $11 = ((($1)) + 8|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = $12 | 128;\n HEAP32[$11>>2] = $13;\n return;\n}\nfunction _png_set_PLTE($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond = $4 | $5;\n if ($or$cond) {\n  return;\n }\n $6 = ($3>>>0)>(256);\n if ($6) {\n  $7 = ((($1)) + 25|0);\n  $8 = HEAP8[$7>>0]|0;\n  $9 = ($8<<24>>24)==(3);\n  if ($9) {\n   _png_error($0,20081);\n   // unreachable;\n  }\n  _png_warning($0,20081);\n  return;\n }\n $10 = ($3|0)!=(0);\n $11 = ($2|0)==(0|0);\n $or$cond5 = $11 & $10;\n if ($or$cond5) {\n  _png_error($0,20104);\n  // unreachable;\n }\n $12 = ($3|0)==(0);\n if ($12) {\n  $13 = ((($0)) + 708|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = $14 & 1;\n  $16 = ($15|0)==(0);\n  if ($16) {\n   _png_error($0,20104);\n   // unreachable;\n  }\n }\n _png_free_data($0,$1,4096,0);\n $17 = (_png_calloc($0,768)|0);\n $18 = ((($0)) + 416|0);\n HEAP32[$18>>2] = $17;\n $19 = $17;\n if ($10) {\n  $20 = ($3*3)|0;\n  _memcpy(($17|0),($2|0),($20|0))|0;\n }\n $21 = ((($1)) + 16|0);\n HEAP32[$21>>2] = $19;\n $22 = $3&65535;\n $23 = ((($0)) + 420|0);\n HEAP16[$23>>1] = $22;\n $24 = ((($1)) + 20|0);\n HEAP16[$24>>1] = $22;\n $25 = ((($1)) + 232|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = $26 | 4096;\n HEAP32[$25>>2] = $27;\n $28 = ((($1)) + 8|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = $29 | 8;\n HEAP32[$28>>2] = $30;\n return;\n}\nfunction _png_set_sBIT($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n $4 = ($1|0)==(0|0);\n $or$cond = $3 | $4;\n $5 = ($2|0)==(0|0);\n $or$cond3 = $or$cond | $5;\n if ($or$cond3) {\n  return;\n }\n $6 = ((($1)) + 148|0);\n ;HEAP8[$6>>0]=HEAP8[$2>>0]|0;HEAP8[$6+1>>0]=HEAP8[$2+1>>0]|0;HEAP8[$6+2>>0]=HEAP8[$2+2>>0]|0;HEAP8[$6+3>>0]=HEAP8[$2+3>>0]|0;HEAP8[$6+4>>0]=HEAP8[$2+4>>0]|0;\n $7 = ((($1)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = $8 | 2;\n HEAP32[$7>>2] = $9;\n return;\n}\nfunction _png_set_sRGB($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n $4 = ($1|0)==(0|0);\n $or$cond = $3 | $4;\n if ($or$cond) {\n  return;\n }\n $5 = ((($1)) + 40|0);\n (_png_colorspace_set_sRGB($0,$5,$2)|0);\n _png_colorspace_sync_info($0,$1);\n return;\n}\nfunction _png_colorspace_set_sRGB($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$off$i$i = 0, $$pre = 0, $$pre29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond3$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n $3 = ((($1)) + 74|0);\n $4 = HEAP16[$3>>1]|0;\n $5 = $4&65535;\n $6 = $5 & 32768;\n $7 = ($6|0)==(0);\n if (!($7)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $8 = ($2>>>0)>(3);\n if ($8) {\n  _png_icc_profile_error($0,$1,20120,$2,20125);\n  $$0 = 0;\n  return ($$0|0);\n }\n $9 = $5 & 4;\n $10 = ($9|0)==(0);\n if ($10) {\n  $18 = $4;\n } else {\n  $11 = ((($1)) + 72|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = $12 & 65535;\n  $14 = ($13|0)==($2|0);\n  $15 = $12 >>> 16;\n  $16 = $15&65535;\n  if ($14) {\n   $18 = $16;\n  } else {\n   _png_icc_profile_error($0,$1,20120,$2,20155);\n   $$0 = 0;\n   return ($$0|0);\n  }\n }\n $17 = $18&65535;\n $19 = $17 & 32;\n $20 = ($19|0)==(0);\n if (!($20)) {\n  _png_benign_error($0,20186);\n  $$0 = 0;\n  return ($$0|0);\n }\n $21 = $17 & 2;\n $22 = ($21|0)==(0);\n if ($22) {\n  $27 = $18;\n } else {\n  $23 = ((($1)) + 4|0);\n  $24 = (_png_colorspace_endpoints_match(480,$23,100)|0);\n  $25 = ($24|0)==(0);\n  if ($25) {\n   _png_chunk_report($0,20221,2);\n   $$pre = HEAP16[$3>>1]|0;\n   $27 = $$pre;\n  } else {\n   $27 = $18;\n  }\n }\n $26 = $27 & 1;\n $28 = ($26<<16>>16)==(0);\n do {\n  if ($28) {\n   $43 = $27;\n  } else {\n   $29 = HEAP32[$1>>2]|0;\n   $30 = ($29|0)==(0);\n   if (!($30)) {\n    $31 = (+($29|0));\n    $32 = $31 * 1.0E+5;\n    $33 = $32 / 45455.0;\n    $34 = $33 + 0.5;\n    $35 = (+Math_floor((+$34)));\n    $36 = $35 <= 2147483647.0;\n    $37 = $35 >= -2147483648.0;\n    $or$cond3$i$i = $36 & $37;\n    if ($or$cond3$i$i) {\n     $38 = (~~(($35)));\n     $$off$i$i = (($38) + -95000)|0;\n     $39 = ($$off$i$i>>>0)>(10000);\n     if (!($39)) {\n      $43 = $27;\n      break;\n     }\n    }\n   }\n   _png_chunk_report($0,19096,2);\n   $$pre29 = HEAP16[$3>>1]|0;\n   $43 = $$pre29;\n  }\n } while(0);\n $40 = $2&65535;\n $41 = ((($1)) + 72|0);\n HEAP16[$41>>1] = $40;\n $42 = $43&65535;\n $44 = ((($1)) + 4|0);\n ;HEAP32[$44>>2]=HEAP32[480>>2]|0;HEAP32[$44+4>>2]=HEAP32[480+4>>2]|0;HEAP32[$44+8>>2]=HEAP32[480+8>>2]|0;HEAP32[$44+12>>2]=HEAP32[480+12>>2]|0;HEAP32[$44+16>>2]=HEAP32[480+16>>2]|0;HEAP32[$44+20>>2]=HEAP32[480+20>>2]|0;HEAP32[$44+24>>2]=HEAP32[480+24>>2]|0;HEAP32[$44+28>>2]=HEAP32[480+28>>2]|0;\n $45 = ((($1)) + 36|0);\n dest=$45; src=512; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n HEAP32[$1>>2] = 45455;\n $46 = $42 | 231;\n $47 = $46&65535;\n HEAP16[$3>>1] = $47;\n $$0 = 1;\n return ($$0|0);\n}\nfunction _png_icc_profile_error($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0 = 0, $$0$i$i = 0, $$0$i10$i = 0, $$0$i12$i = 0, $$0$i14$i = 0, $$off$i$i = 0, $$off$i$i1 = 0, $$off$i10$i = 0, $$off$i11$i = 0, $$off$i13$i = 0, $$off$i16$i = 0, $$off$i4$i = 0, $$off$i9$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0;\n var $or$cond$i11$i = 0, $or$cond$i17$i = 0, $or$cond$i5$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $5 = sp + 24|0;\n $6 = sp;\n $7 = ($1|0)!=(0|0);\n if ($7) {\n  $8 = ((($1)) + 74|0);\n  $9 = HEAP16[$8>>1]|0;\n  $10 = $9&65535;\n  $11 = $10 | 32768;\n  $12 = $11&65535;\n  HEAP16[$8>>1] = $12;\n }\n $13 = (_png_safecat($5,196,0,20252)|0);\n $14 = (($13) + 79)|0;\n $15 = (_png_safecat($5,$14,$13,$2)|0);\n $16 = (_png_safecat($5,196,$15,20262)|0);\n $17 = $3 >>> 24;\n $18 = ($17|0)==(32);\n $$off$i$i = (($17) + -48)|0;\n $19 = ($$off$i$i>>>0)<(10);\n $or$cond$i$i = $18 | $19;\n $20 = $17 & 223;\n $21 = (($20) + -65)|0;\n $22 = ($21>>>0)<(26);\n $23 = $22 | $or$cond$i$i;\n if ($23) {\n  $24 = $3 >>> 16;\n  $25 = $24 & 255;\n  $26 = ($25|0)==(32);\n  $$off$i16$i = (($25) + -48)|0;\n  $27 = ($$off$i16$i>>>0)<(10);\n  $or$cond$i17$i = $26 | $27;\n  $28 = $24 & 223;\n  $29 = (($28) + -65)|0;\n  $30 = ($29>>>0)<(26);\n  $31 = $30 | $or$cond$i17$i;\n  if ($31) {\n   $32 = $3 >>> 8;\n   $33 = $32 & 255;\n   $34 = ($33|0)==(32);\n   $$off$i10$i = (($33) + -48)|0;\n   $35 = ($$off$i10$i>>>0)<(10);\n   $or$cond$i11$i = $34 | $35;\n   $36 = $32 & 223;\n   $37 = (($36) + -65)|0;\n   $38 = ($37>>>0)<(26);\n   $39 = $38 | $or$cond$i11$i;\n   if ($39) {\n    $40 = $3 & 255;\n    $41 = ($40|0)==(32);\n    $$off$i4$i = (($40) + -48)|0;\n    $42 = ($$off$i4$i>>>0)<(10);\n    $or$cond$i5$i = $41 | $42;\n    $43 = $3 & 223;\n    $44 = (($43) + -65)|0;\n    $45 = ($44>>>0)<(26);\n    $46 = $45 | $or$cond$i5$i;\n    if ($46) {\n     $47 = (($5) + ($16)|0);\n     HEAP8[$47>>0] = 39;\n     $$off$i$i1 = (($17) + -32)|0;\n     $48 = ($$off$i$i1>>>0)<(95);\n     $49 = $17&255;\n     $$0$i$i = $48 ? $49 : 63;\n     $50 = ((($47)) + 1|0);\n     HEAP8[$50>>0] = $$0$i$i;\n     $$off$i13$i = (($25) + -32)|0;\n     $51 = ($$off$i13$i>>>0)<(95);\n     $52 = $24&255;\n     $$0$i14$i = $51 ? $52 : 63;\n     $53 = ((($47)) + 2|0);\n     HEAP8[$53>>0] = $$0$i14$i;\n     $$off$i11$i = (($33) + -32)|0;\n     $54 = ($$off$i11$i>>>0)<(95);\n     $55 = $32&255;\n     $$0$i12$i = $54 ? $55 : 63;\n     $56 = ((($47)) + 3|0);\n     HEAP8[$56>>0] = $$0$i12$i;\n     $$off$i9$i = (($40) + -32)|0;\n     $57 = ($$off$i9$i>>>0)<(95);\n     $58 = $3&255;\n     $$0$i10$i = $57 ? $58 : 63;\n     $59 = ((($47)) + 4|0);\n     HEAP8[$59>>0] = $$0$i10$i;\n     $60 = ((($47)) + 5|0);\n     HEAP8[$60>>0] = 39;\n     $61 = (($16) + 6)|0;\n     $62 = (($16) + 7)|0;\n     $63 = (($5) + ($61)|0);\n     HEAP8[$63>>0] = 58;\n     $64 = (($16) + 8)|0;\n     $65 = (($5) + ($62)|0);\n     HEAP8[$65>>0] = 32;\n     $$0 = $64;\n     (_png_safecat($5,196,$$0,$4)|0);\n     $70 = $7 ? 2 : 1;\n     _png_chunk_report($0,$5,$70);\n     STACKTOP = sp;return;\n    }\n   }\n  }\n }\n $66 = ((($6)) + 24|0);\n $67 = (_png_format_number($6,$66,3,$3)|0);\n $68 = (_png_safecat($5,196,$16,$67)|0);\n $69 = (_png_safecat($5,196,$68,20266)|0);\n $$0 = $69;\n (_png_safecat($5,196,$$0,$4)|0);\n $70 = $7 ? 2 : 1;\n _png_chunk_report($0,$5,$70);\n STACKTOP = sp;return;\n}\nfunction _png_safecat($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$01216 = 0, $$017 = 0, $$1 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;\n var $or$cond14 = 0, $or$cond1415 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)!=(0|0);\n $5 = ($2>>>0)<($1>>>0);\n $or$cond = $4 & $5;\n if (!($or$cond)) {\n  $$2 = $2;\n  return ($$2|0);\n }\n $6 = ($3|0)==(0|0);\n if ($6) {\n  $$1 = $2;\n } else {\n  $7 = HEAP8[$3>>0]|0;\n  $8 = ($7<<24>>24)!=(0);\n  $9 = (($1) + -1)|0;\n  $10 = ($9>>>0)>($2>>>0);\n  $or$cond1415 = $10 & $8;\n  if ($or$cond1415) {\n   $$01216 = $2;$$017 = $3;$14 = $7;\n   while(1) {\n    $11 = ((($$017)) + 1|0);\n    $12 = (($$01216) + 1)|0;\n    $13 = (($0) + ($$01216)|0);\n    HEAP8[$13>>0] = $14;\n    $15 = HEAP8[$11>>0]|0;\n    $16 = ($15<<24>>24)!=(0);\n    $17 = ($12>>>0)<($9>>>0);\n    $or$cond14 = $17 & $16;\n    if ($or$cond14) {\n     $$01216 = $12;$$017 = $11;$14 = $15;\n    } else {\n     $$1 = $12;\n     break;\n    }\n   }\n  } else {\n   $$1 = $2;\n  }\n }\n $18 = (($0) + ($$1)|0);\n HEAP8[$18>>0] = 0;\n $$2 = $$1;\n return ($$2|0);\n}\nfunction _png_format_number($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0$ph$be = 0, $$0$ph82 = 0, $$034$ph81 = 0, $$03461 = 0, $$03461$us65 = 0, $$037$ph80 = 0, $$03753 = 0, $$03760 = 0, $$03760$us66 = 0, $$038$ph$be = 0, $$038$ph79 = 0, $$03859 = 0, $$03859$us67 = 0, $$040$lcssa = 0, $$040$ph$be = 0, $$040$ph78 = 0, $$04058 = 0, $$04058$us68 = 0, $$1 = 0, $$139 = 0;\n var $$139$ph = 0, $$141 = 0, $$2 = 0, $$236 = 0, $$242 = 0, $$242$ph = 0, $$3 = 0, $$3$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond43 = 0, $or$cond43$us = 0, $or$cond43$us69 = 0, $or$cond46 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($1)) + -1|0);\n HEAP8[$4>>0] = 0;\n $5 = ($4>>>0)>($0>>>0);\n if (!($5)) {\n  $$040$lcssa = $4;\n  return ($$040$lcssa|0);\n }\n $6 = ($2|0)==(5);\n $$0$ph82 = 0;$$034$ph81 = 1;$$037$ph80 = 0;$$038$ph79 = $3;$$040$ph78 = $4;\n L4: while(1) {\n  L6: do {\n   switch ($2|0) {\n   case 2:  {\n    $$03461$us65 = 1;$$03760$us66 = 0;$$03859$us67 = $3;$$04058$us68 = $4;\n    label = 5;\n    break L4;\n    break;\n   }\n   case 5:  {\n    $7 = ($$038$ph79|0)!=(0);\n    $8 = ($$037$ph80|0)<($$034$ph81|0);\n    $or$cond43$us = $7 | $8;\n    if (!($or$cond43$us)) {\n     $$040$lcssa = $$040$ph78;\n     label = 22;\n     break L4;\n    }\n    $20 = (($$038$ph79>>>0) % 10)&-1;\n    $21 = $$0$ph82 | $20;\n    $22 = ($21|0)==(0);\n    $23 = ((($$040$ph78)) + -1|0);\n    if ($22) {\n     $$1 = $$0$ph82;$$141 = $$040$ph78;\n    } else {\n     $24 = (20270 + ($20)|0);\n     $25 = HEAP8[$24>>0]|0;\n     HEAP8[$23>>0] = $25;\n     $$1 = 1;$$141 = $23;\n    }\n    $26 = (($$038$ph79>>>0) / 10)&-1;\n    $$03753 = $$037$ph80;$$139 = $26;$$2 = $$1;$$242 = $$141;$$3 = 5;\n    break;\n   }\n   default: {\n    $$03461 = $$034$ph81;$$03760 = $$037$ph80;$$03859 = $$038$ph79;$$04058 = $$040$ph78;\n    while(1) {\n     $18 = ($$03859|0)!=(0);\n     $19 = ($$03760|0)<($$03461|0);\n     $or$cond43 = $18 | $19;\n     if (!($or$cond43)) {\n      $$040$lcssa = $$04058;\n      label = 22;\n      break L4;\n     }\n     switch ($2|0) {\n     case 3:  {\n      $$236 = $$03461;\n      label = 14;\n      break;\n     }\n     case 4:  {\n      $$236 = 2;\n      label = 14;\n      break;\n     }\n     case 1:  {\n      $27 = (($$03859>>>0) % 10)&-1;\n      $28 = (20270 + ($27)|0);\n      $29 = HEAP8[$28>>0]|0;\n      $30 = ((($$04058)) + -1|0);\n      HEAP8[$30>>0] = $29;\n      $31 = (($$03859>>>0) / 10)&-1;\n      $$139$ph = $31;$$242$ph = $30;$$3$ph = $$03461;\n      break;\n     }\n     default: {\n      $$03753 = $$03760;$$139 = 0;$$2 = $$0$ph82;$$242 = $$04058;$$3 = $$03461;\n      break L6;\n     }\n     }\n     if ((label|0) == 14) {\n      label = 0;\n      $32 = $$03859 & 15;\n      $33 = (20270 + ($32)|0);\n      $34 = HEAP8[$33>>0]|0;\n      $35 = ((($$04058)) + -1|0);\n      HEAP8[$35>>0] = $34;\n      $36 = $$03859 >>> 4;\n      $$139$ph = $36;$$242$ph = $35;$$3$ph = $$236;\n     }\n     $37 = (($$03760) + 1)|0;\n     $38 = ($$242$ph>>>0)>($0>>>0);\n     if ($38) {\n      $$03461 = $$3$ph;$$03760 = $37;$$03859 = $$139$ph;$$04058 = $$242$ph;\n     } else {\n      $$040$lcssa = $$242$ph;\n      label = 22;\n      break L4;\n     }\n    }\n   }\n   }\n  } while(0);\n  $39 = (($$03753) + 1)|0;\n  $40 = ($39|0)==(5);\n  $or$cond = $6 & $40;\n  $41 = ($$242>>>0)>($0>>>0);\n  $or$cond46 = $or$cond & $41;\n  do {\n   if ($or$cond46) {\n    $42 = ($$2|0)==(0);\n    if (!($42)) {\n     $43 = ((($$242)) + -1|0);\n     HEAP8[$43>>0] = 46;\n     $$0$ph$be = $$2;$$038$ph$be = $$139;$$040$ph$be = $43;\n     break;\n    }\n    $45 = ($$139|0)==(0);\n    if ($45) {\n     $46 = ((($$242)) + -1|0);\n     HEAP8[$46>>0] = 48;\n     $$0$ph$be = 0;$$038$ph$be = 0;$$040$ph$be = $46;\n    } else {\n     $$0$ph$be = 0;$$038$ph$be = $$139;$$040$ph$be = $$242;\n    }\n   } else {\n    $$0$ph$be = $$2;$$038$ph$be = $$139;$$040$ph$be = $$242;\n   }\n  } while(0);\n  $44 = ($$040$ph$be>>>0)>($0>>>0);\n  if ($44) {\n   $$0$ph82 = $$0$ph$be;$$034$ph81 = $$3;$$037$ph80 = $39;$$038$ph79 = $$038$ph$be;$$040$ph78 = $$040$ph$be;\n  } else {\n   $$040$lcssa = $$040$ph$be;\n   label = 22;\n   break;\n  }\n }\n if ((label|0) == 5) {\n  while(1) {\n   label = 0;\n   $9 = ($$03859$us67|0)!=(0);\n   $10 = ($$03760$us66|0)<($$03461$us65|0);\n   $or$cond43$us69 = $9 | $10;\n   if (!($or$cond43$us69)) {\n    $$040$lcssa = $$04058$us68;\n    label = 22;\n    break;\n   }\n   $11 = (($$03859$us67>>>0) % 10)&-1;\n   $12 = (20270 + ($11)|0);\n   $13 = HEAP8[$12>>0]|0;\n   $14 = ((($$04058$us68)) + -1|0);\n   HEAP8[$14>>0] = $13;\n   $15 = (($$03859$us67>>>0) / 10)&-1;\n   $16 = (($$03760$us66) + 1)|0;\n   $17 = ($14>>>0)>($0>>>0);\n   if ($17) {\n    $$03461$us65 = 2;$$03760$us66 = $16;$$03859$us67 = $15;$$04058$us68 = $14;\n    label = 5;\n   } else {\n    $$040$lcssa = $14;\n    label = 22;\n    break;\n   }\n  }\n  if ((label|0) == 22) {\n   return ($$040$lcssa|0);\n  }\n }\n else if ((label|0) == 22) {\n  return ($$040$lcssa|0);\n }\n return (0)|0;\n}\nfunction _png_app_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 212|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 4194304;\n $5 = ($4|0)==(0);\n if ($5) {\n  _png_error($0,$1);\n  // unreachable;\n } else {\n  _png_warning($0,$1);\n  return;\n }\n}\nfunction _png_icc_check_header($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;\n var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;\n var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;\n var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;\n var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $switch$split112D = 0, $switch$split142D = 0, $switch$split172D = 0;\n var $switch$split202D = 0, $switch$split22D = 0, $switch$split2D = 0, $switch$split52D = 0, $switch$split82D = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $6 = sp + 24|0;\n $7 = sp;\n $8 = HEAP8[$4>>0]|0;\n $9 = $8&255;\n $10 = $9 << 24;\n $11 = ((($4)) + 1|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12&255;\n $14 = $13 << 16;\n $15 = $14 | $10;\n $16 = ((($4)) + 2|0);\n $17 = HEAP8[$16>>0]|0;\n $18 = $17&255;\n $19 = $18 << 8;\n $20 = $15 | $19;\n $21 = ((($4)) + 3|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $20 | $23;\n $25 = ($24|0)==($3|0);\n if (!($25)) {\n  _png_icc_profile_error($0,$1,$2,$24,20489);\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $26 = ((($4)) + 8|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = ($27&255)<(4);\n $29 = $3 & 3;\n $30 = ($29|0)==(0);\n $or$cond = $30 | $28;\n if (!($or$cond)) {\n  _png_icc_profile_error($0,$1,$2,$3,20519);\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $31 = ((($4)) + 128|0);\n $32 = HEAP8[$31>>0]|0;\n $33 = $32&255;\n $34 = $33 << 24;\n $35 = ((($4)) + 129|0);\n $36 = HEAP8[$35>>0]|0;\n $37 = $36&255;\n $38 = $37 << 16;\n $39 = $38 | $34;\n $40 = ((($4)) + 130|0);\n $41 = HEAP8[$40>>0]|0;\n $42 = $41&255;\n $43 = $42 << 8;\n $44 = $39 | $43;\n $45 = ((($4)) + 131|0);\n $46 = HEAP8[$45>>0]|0;\n $47 = $46&255;\n $48 = $44 | $47;\n $49 = ($48>>>0)>(357913930);\n if (!($49)) {\n  $50 = ($48*12)|0;\n  $51 = (($50) + 132)|0;\n  $52 = ($51>>>0)>($3>>>0);\n  if (!($52)) {\n   $53 = ((($4)) + 64|0);\n   $54 = HEAP8[$53>>0]|0;\n   $55 = $54&255;\n   $56 = $55 << 24;\n   $57 = ((($4)) + 65|0);\n   $58 = HEAP8[$57>>0]|0;\n   $59 = $58&255;\n   $60 = $59 << 16;\n   $61 = $60 | $56;\n   $62 = ((($4)) + 66|0);\n   $63 = HEAP8[$62>>0]|0;\n   $64 = $63&255;\n   $65 = $64 << 8;\n   $66 = $61 | $65;\n   $67 = ((($4)) + 67|0);\n   $68 = HEAP8[$67>>0]|0;\n   $69 = $68&255;\n   $70 = $66 | $69;\n   $71 = ($70>>>0)>(65534);\n   if ($71) {\n    _png_icc_profile_error($0,$1,$2,$70,20554);\n    $$0 = 0;\n    STACKTOP = sp;return ($$0|0);\n   }\n   $72 = ($70>>>0)>(3);\n   if ($72) {\n    _png_icc_profile_error($0,0,$2,$70,20579);\n   }\n   $73 = ((($4)) + 36|0);\n   $74 = HEAP8[$73>>0]|0;\n   $75 = $74&255;\n   $76 = $75 << 24;\n   $77 = ((($4)) + 37|0);\n   $78 = HEAP8[$77>>0]|0;\n   $79 = $78&255;\n   $80 = $79 << 16;\n   $81 = $80 | $76;\n   $82 = ((($4)) + 38|0);\n   $83 = HEAP8[$82>>0]|0;\n   $84 = $83&255;\n   $85 = $84 << 8;\n   $86 = $81 | $85;\n   $87 = ((($4)) + 39|0);\n   $88 = HEAP8[$87>>0]|0;\n   $89 = $88&255;\n   $90 = $86 | $89;\n   $91 = ($90|0)==(1633907568);\n   if (!($91)) {\n    _png_icc_profile_error($0,$1,$2,$90,20608);\n    $$0 = 0;\n    STACKTOP = sp;return ($$0|0);\n   }\n   $92 = ((($4)) + 68|0);\n   $93 = (_memcmp($92,20626,12)|0);\n   $94 = ($93|0)==(0);\n   if (!($94)) {\n    $95 = (_png_safecat($6,196,0,20252)|0);\n    $96 = (($95) + 79)|0;\n    $97 = (_png_safecat($6,$96,$95,$2)|0);\n    $98 = (_png_safecat($6,196,$97,20262)|0);\n    $99 = ((($7)) + 24|0);\n    $100 = (_png_format_number($7,$99,3,0)|0);\n    $101 = (_png_safecat($6,196,$98,$100)|0);\n    $102 = (_png_safecat($6,196,$101,20266)|0);\n    (_png_safecat($6,196,$102,20638)|0);\n    _png_chunk_report($0,$6,1);\n   }\n   $103 = ((($4)) + 16|0);\n   $104 = HEAP8[$103>>0]|0;\n   $105 = $104&255;\n   $106 = $105 << 24;\n   $107 = ((($4)) + 17|0);\n   $108 = HEAP8[$107>>0]|0;\n   $109 = $108&255;\n   $110 = $109 << 16;\n   $111 = $110 | $106;\n   $112 = ((($4)) + 18|0);\n   $113 = HEAP8[$112>>0]|0;\n   $114 = $113&255;\n   $115 = $114 << 8;\n   $116 = $111 | $115;\n   $117 = ((($4)) + 19|0);\n   $118 = HEAP8[$117>>0]|0;\n   $119 = $118&255;\n   $120 = $116 | $119;\n   $switch$split2D = ($120|0)<(1380401696);\n   L26: do {\n    if ($switch$split2D) {\n     switch ($120|0) {\n     case 1196573017:  {\n      break;\n     }\n     default: {\n      label = 21;\n      break L26;\n     }\n     }\n     $123 = $5 & 2;\n     $124 = ($123|0)==(0);\n     if (!($124)) {\n      _png_icc_profile_error($0,$1,$2,1196573017,20711);\n      $$0 = 0;\n      STACKTOP = sp;return ($$0|0);\n     }\n    } else {\n     switch ($120|0) {\n     case 1380401696:  {\n      break;\n     }\n     default: {\n      label = 21;\n      break L26;\n     }\n     }\n     $121 = $5 & 2;\n     $122 = ($121|0)==(0);\n     if ($122) {\n      _png_icc_profile_error($0,$1,$2,1380401696,20664);\n      $$0 = 0;\n      STACKTOP = sp;return ($$0|0);\n     }\n    }\n   } while(0);\n   if ((label|0) == 21) {\n    _png_icc_profile_error($0,$1,$2,$120,20753);\n    $$0 = 0;\n    STACKTOP = sp;return ($$0|0);\n   }\n   $125 = ((($4)) + 12|0);\n   $126 = HEAP8[$125>>0]|0;\n   $127 = $126&255;\n   $128 = $127 << 24;\n   $129 = ((($4)) + 13|0);\n   $130 = HEAP8[$129>>0]|0;\n   $131 = $130&255;\n   $132 = $131 << 16;\n   $133 = $132 | $128;\n   $134 = ((($4)) + 14|0);\n   $135 = HEAP8[$134>>0]|0;\n   $136 = $135&255;\n   $137 = $136 << 8;\n   $138 = $133 | $137;\n   $139 = ((($4)) + 15|0);\n   $140 = HEAP8[$139>>0]|0;\n   $141 = $140&255;\n   $142 = $138 | $141;\n   $switch$split22D = ($142|0)<(1852662636);\n   L39: do {\n    if ($switch$split22D) {\n     $switch$split82D = ($142|0)<(1818848875);\n     if ($switch$split82D) {\n      switch ($142|0) {\n      case 1633842036:  {\n       break;\n      }\n      default: {\n       label = 26;\n       break L39;\n      }\n      }\n      _png_icc_profile_error($0,$1,$2,1633842036,20785);\n      $$0 = 0;\n      STACKTOP = sp;return ($$0|0);\n     }\n     $switch$split142D = ($142|0)<(1835955314);\n     if (!($switch$split142D)) {\n      switch ($142|0) {\n      case 1835955314:  {\n       break L39;\n       break;\n      }\n      default: {\n       label = 26;\n       break L39;\n      }\n      }\n     }\n     switch ($142|0) {\n     case 1818848875:  {\n      break;\n     }\n     default: {\n      label = 26;\n      break L39;\n     }\n     }\n     _png_icc_profile_error($0,$1,$2,1818848875,20823);\n     $$0 = 0;\n     STACKTOP = sp;return ($$0|0);\n    } else {\n     $switch$split112D = ($142|0)<(1935896178);\n     if (!($switch$split112D)) {\n      $switch$split202D = ($142|0)<(1936744803);\n      if ($switch$split202D) {\n       switch ($142|0) {\n       case 1935896178:  {\n        break L39;\n        break;\n       }\n       default: {\n        label = 26;\n        break L39;\n       }\n       }\n      } else {\n       switch ($142|0) {\n       case 1936744803:  {\n        break L39;\n        break;\n       }\n       default: {\n        label = 26;\n        break L39;\n       }\n       }\n      }\n     }\n     $switch$split172D = ($142|0)<(1886549106);\n     if (!($switch$split172D)) {\n      switch ($142|0) {\n      case 1886549106:  {\n       break L39;\n       break;\n      }\n      default: {\n       label = 26;\n       break L39;\n      }\n      }\n     }\n     switch ($142|0) {\n     case 1852662636:  {\n      break;\n     }\n     default: {\n      label = 26;\n      break L39;\n     }\n     }\n     _png_icc_profile_error($0,0,$2,1852662636,20863);\n    }\n   } while(0);\n   if ((label|0) == 26) {\n    _png_icc_profile_error($0,0,$2,$142,20903);\n   }\n   $143 = ((($4)) + 20|0);\n   $144 = HEAP8[$143>>0]|0;\n   $145 = $144&255;\n   $146 = $145 << 24;\n   $147 = ((($4)) + 21|0);\n   $148 = HEAP8[$147>>0]|0;\n   $149 = $148&255;\n   $150 = $149 << 16;\n   $151 = $150 | $146;\n   $152 = ((($4)) + 22|0);\n   $153 = HEAP8[$152>>0]|0;\n   $154 = $153&255;\n   $155 = $154 << 8;\n   $156 = $151 | $155;\n   $157 = ((($4)) + 23|0);\n   $158 = HEAP8[$157>>0]|0;\n   $159 = $158&255;\n   $160 = $156 | $159;\n   $switch$split52D = ($160|0)<(1482250784);\n   L65: do {\n    if ($switch$split52D) {\n     switch ($160|0) {\n     case 1281450528:  {\n      $$0 = 1;\n      break;\n     }\n     default: {\n      break L65;\n     }\n     }\n     STACKTOP = sp;return ($$0|0);\n    } else {\n     switch ($160|0) {\n     case 1482250784:  {\n      $$0 = 1;\n      break;\n     }\n     default: {\n      break L65;\n     }\n     }\n     STACKTOP = sp;return ($$0|0);\n    }\n   } while(0);\n   _png_icc_profile_error($0,$1,$2,$160,20934);\n   $$0 = 0;\n   STACKTOP = sp;return ($$0|0);\n  }\n }\n _png_icc_profile_error($0,$1,$2,$48,20534);\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _png_icc_check_tag_table($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$04751 = 0, $$04850 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ((($4)) + 128|0);\n $6 = HEAP8[$5>>0]|0;\n $7 = $6&255;\n $8 = $7 << 24;\n $9 = ((($4)) + 129|0);\n $10 = HEAP8[$9>>0]|0;\n $11 = $10&255;\n $12 = $11 << 16;\n $13 = $12 | $8;\n $14 = ((($4)) + 130|0);\n $15 = HEAP8[$14>>0]|0;\n $16 = $15&255;\n $17 = $16 << 8;\n $18 = $13 | $17;\n $19 = ((($4)) + 131|0);\n $20 = HEAP8[$19>>0]|0;\n $21 = $20&255;\n $22 = $18 | $21;\n $23 = ($22|0)==(0);\n if ($23) {\n  $$2 = 1;\n  return ($$2|0);\n }\n $24 = ((($4)) + 132|0);\n $$04751 = 0;$$04850 = $24;\n while(1) {\n  $25 = HEAP8[$$04850>>0]|0;\n  $26 = $25&255;\n  $27 = $26 << 24;\n  $28 = ((($$04850)) + 1|0);\n  $29 = HEAP8[$28>>0]|0;\n  $30 = $29&255;\n  $31 = $30 << 16;\n  $32 = $31 | $27;\n  $33 = ((($$04850)) + 2|0);\n  $34 = HEAP8[$33>>0]|0;\n  $35 = $34&255;\n  $36 = $35 << 8;\n  $37 = $32 | $36;\n  $38 = ((($$04850)) + 3|0);\n  $39 = HEAP8[$38>>0]|0;\n  $40 = $39&255;\n  $41 = $37 | $40;\n  $42 = ((($$04850)) + 4|0);\n  $43 = HEAP8[$42>>0]|0;\n  $44 = $43&255;\n  $45 = $44 << 24;\n  $46 = ((($$04850)) + 5|0);\n  $47 = HEAP8[$46>>0]|0;\n  $48 = $47&255;\n  $49 = $48 << 16;\n  $50 = $49 | $45;\n  $51 = ((($$04850)) + 6|0);\n  $52 = HEAP8[$51>>0]|0;\n  $53 = $52&255;\n  $54 = $53 << 8;\n  $55 = $50 | $54;\n  $56 = ((($$04850)) + 7|0);\n  $57 = HEAP8[$56>>0]|0;\n  $58 = $57&255;\n  $59 = $55 | $58;\n  $60 = ((($$04850)) + 8|0);\n  $61 = HEAP8[$60>>0]|0;\n  $62 = $61&255;\n  $63 = $62 << 24;\n  $64 = ((($$04850)) + 9|0);\n  $65 = HEAP8[$64>>0]|0;\n  $66 = $65&255;\n  $67 = $66 << 16;\n  $68 = $67 | $63;\n  $69 = ((($$04850)) + 10|0);\n  $70 = HEAP8[$69>>0]|0;\n  $71 = $70&255;\n  $72 = $71 << 8;\n  $73 = $68 | $72;\n  $74 = ((($$04850)) + 11|0);\n  $75 = HEAP8[$74>>0]|0;\n  $76 = $75&255;\n  $77 = $73 | $76;\n  $78 = $58 & 3;\n  $79 = ($78|0)==(0);\n  if (!($79)) {\n   _png_icc_profile_error($0,0,$2,$41,20415);\n  }\n  $80 = ($59>>>0)>($3>>>0);\n  $81 = (($3) - ($59))|0;\n  $82 = ($77>>>0)>($81>>>0);\n  $or$cond = $80 | $82;\n  if ($or$cond) {\n   break;\n  }\n  $83 = (($$04751) + 1)|0;\n  $84 = ((($$04850)) + 12|0);\n  $85 = ($83>>>0)<($22>>>0);\n  if ($85) {\n   $$04751 = $83;$$04850 = $84;\n  } else {\n   $$2 = 1;\n   label = 8;\n   break;\n  }\n }\n if ((label|0) == 8) {\n  return ($$2|0);\n }\n _png_icc_profile_error($0,$1,$2,$41,20457);\n $$2 = 0;\n return ($$2|0);\n}\nfunction _png_icc_set_sRGB($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0$off$i = 0, $$06270$i = 0, $$06369$i = 0, $$066$i = 0, $$071$i = 0, $$1$i = 0, $$164$i = 0, $$2$i = 0, $$265$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;\n var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;\n var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;\n var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;\n var $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 644|0);\n $5 = HEAP8[$4>>0]|0;\n $6 = $5 & 48;\n $7 = ($6<<24>>24)==(48);\n if ($7) {\n  return;\n }\n $8 = ((($2)) + 84|0);\n $9 = HEAP8[$8>>0]|0;\n $10 = $9&255;\n $11 = $10 << 24;\n $12 = ((($2)) + 85|0);\n $13 = HEAP8[$12>>0]|0;\n $14 = $13&255;\n $15 = $14 << 16;\n $16 = $15 | $11;\n $17 = ((($2)) + 86|0);\n $18 = HEAP8[$17>>0]|0;\n $19 = $18&255;\n $20 = $19 << 8;\n $21 = $16 | $20;\n $22 = ((($2)) + 87|0);\n $23 = HEAP8[$22>>0]|0;\n $24 = $23&255;\n $25 = $21 | $24;\n $26 = ((($2)) + 88|0);\n $27 = ((($2)) + 89|0);\n $28 = ((($2)) + 90|0);\n $29 = ((($2)) + 91|0);\n $30 = ((($2)) + 92|0);\n $31 = ((($2)) + 93|0);\n $32 = ((($2)) + 94|0);\n $33 = ((($2)) + 95|0);\n $34 = ((($2)) + 96|0);\n $35 = ((($2)) + 97|0);\n $36 = ((($2)) + 98|0);\n $37 = ((($2)) + 99|0);\n $38 = ((($2)) + 1|0);\n $39 = ((($2)) + 2|0);\n $40 = ((($2)) + 3|0);\n $41 = ((($2)) + 64|0);\n $42 = ((($2)) + 65|0);\n $43 = ((($2)) + 66|0);\n $44 = ((($2)) + 67|0);\n $$06270$i = 65536;$$06369$i = 0;$$071$i = 0;\n while(1) {\n  $45 = (((548 + ($$071$i<<5)|0)) + 12|0);\n  $46 = HEAP32[$45>>2]|0;\n  $47 = ($25|0)==($46|0);\n  if ($47) {\n   $48 = HEAP8[$26>>0]|0;\n   $49 = $48&255;\n   $50 = $49 << 24;\n   $51 = HEAP8[$27>>0]|0;\n   $52 = $51&255;\n   $53 = $52 << 16;\n   $54 = $53 | $50;\n   $55 = HEAP8[$28>>0]|0;\n   $56 = $55&255;\n   $57 = $56 << 8;\n   $58 = $54 | $57;\n   $59 = HEAP8[$29>>0]|0;\n   $60 = $59&255;\n   $61 = $58 | $60;\n   $62 = (((548 + ($$071$i<<5)|0)) + 16|0);\n   $63 = HEAP32[$62>>2]|0;\n   $64 = ($61|0)==($63|0);\n   if ($64) {\n    $65 = HEAP8[$30>>0]|0;\n    $66 = $65&255;\n    $67 = $66 << 24;\n    $68 = HEAP8[$31>>0]|0;\n    $69 = $68&255;\n    $70 = $69 << 16;\n    $71 = $70 | $67;\n    $72 = HEAP8[$32>>0]|0;\n    $73 = $72&255;\n    $74 = $73 << 8;\n    $75 = $71 | $74;\n    $76 = HEAP8[$33>>0]|0;\n    $77 = $76&255;\n    $78 = $75 | $77;\n    $79 = (((548 + ($$071$i<<5)|0)) + 20|0);\n    $80 = HEAP32[$79>>2]|0;\n    $81 = ($78|0)==($80|0);\n    if ($81) {\n     $82 = HEAP8[$34>>0]|0;\n     $83 = $82&255;\n     $84 = $83 << 24;\n     $85 = HEAP8[$35>>0]|0;\n     $86 = $85&255;\n     $87 = $86 << 16;\n     $88 = $87 | $84;\n     $89 = HEAP8[$36>>0]|0;\n     $90 = $89&255;\n     $91 = $90 << 8;\n     $92 = $88 | $91;\n     $93 = HEAP8[$37>>0]|0;\n     $94 = $93&255;\n     $95 = $92 | $94;\n     $96 = (((548 + ($$071$i<<5)|0)) + 24|0);\n     $97 = HEAP32[$96>>2]|0;\n     $98 = ($95|0)==($97|0);\n     if ($98) {\n      $99 = ($$06369$i|0)==(0);\n      if ($99) {\n       $100 = HEAP8[$2>>0]|0;\n       $101 = $100&255;\n       $102 = $101 << 24;\n       $103 = HEAP8[$38>>0]|0;\n       $104 = $103&255;\n       $105 = $104 << 16;\n       $106 = $105 | $102;\n       $107 = HEAP8[$39>>0]|0;\n       $108 = $107&255;\n       $109 = $108 << 8;\n       $110 = $106 | $109;\n       $111 = HEAP8[$40>>0]|0;\n       $112 = $111&255;\n       $113 = $110 | $112;\n       $114 = HEAP8[$41>>0]|0;\n       $115 = $114&255;\n       $116 = $115 << 24;\n       $117 = HEAP8[$42>>0]|0;\n       $118 = $117&255;\n       $119 = $118 << 16;\n       $120 = $119 | $116;\n       $121 = HEAP8[$43>>0]|0;\n       $122 = $121&255;\n       $123 = $122 << 8;\n       $124 = $120 | $123;\n       $125 = HEAP8[$44>>0]|0;\n       $126 = $125&255;\n       $127 = $124 | $126;\n       $$1$i = $127;$$164$i = $113;\n      } else {\n       $$1$i = $$06270$i;$$164$i = $$06369$i;\n      }\n      $128 = (((548 + ($$071$i<<5)|0)) + 8|0);\n      $129 = HEAP32[$128>>2]|0;\n      $130 = ($$164$i|0)==($129|0);\n      if ($130) {\n       $131 = (((548 + ($$071$i<<5)|0)) + 30|0);\n       $132 = HEAP16[$131>>1]|0;\n       $133 = $132&65535;\n       $134 = ($$1$i|0)==($133|0);\n       if ($134) {\n        break;\n       } else {\n        $$2$i = $$1$i;$$265$i = $$164$i;\n       }\n      } else {\n       $$2$i = $$1$i;$$265$i = $$164$i;\n      }\n     } else {\n      $$2$i = $$06270$i;$$265$i = $$06369$i;\n     }\n    } else {\n     $$2$i = $$06270$i;$$265$i = $$06369$i;\n    }\n   } else {\n    $$2$i = $$06270$i;$$265$i = $$06369$i;\n   }\n  } else {\n   $$2$i = $$06270$i;$$265$i = $$06369$i;\n  }\n  $149 = (($$071$i) + 1)|0;\n  $150 = ($149>>>0)<(7);\n  if ($150) {\n   $$06270$i = $$2$i;$$06369$i = $$265$i;$$071$i = $149;\n  } else {\n   label = 22;\n   break;\n  }\n }\n if ((label|0) == 22) {\n  return;\n }\n $135 = ($3|0)==(0);\n if ($135) {\n  $136 = (_adler32(0,0,0)|0);\n  $137 = (_adler32($136,$2,$$164$i)|0);\n  $$066$i = $137;\n } else {\n  $$066$i = $3;\n }\n $138 = (548 + ($$071$i<<5)|0);\n $139 = HEAP32[$138>>2]|0;\n $140 = ($$066$i|0)==($139|0);\n if ($140) {\n  $141 = (_crc32(0,0,0)|0);\n  $142 = (_crc32($141,$2,$$164$i)|0);\n  $143 = (((548 + ($$071$i<<5)|0)) + 4|0);\n  $144 = HEAP32[$143>>2]|0;\n  $145 = ($142|0)==($144|0);\n  if ($145) {\n   $$0$off$i = (($$071$i) + -5)|0;\n   $146 = ($$0$off$i>>>0)<(2);\n   if ($146) {\n    _png_chunk_report($0,20287,2);\n   } else {\n    $147 = (($$071$i) + -4)|0;\n    $148 = ($147>>>0)<(3);\n    if ($148) {\n     _png_chunk_report($0,20316,0);\n    }\n   }\n   $151 = HEAP8[$41>>0]|0;\n   $152 = $151&255;\n   $153 = $152 << 24;\n   $154 = HEAP8[$42>>0]|0;\n   $155 = $154&255;\n   $156 = $155 << 16;\n   $157 = $156 | $153;\n   $158 = HEAP8[$43>>0]|0;\n   $159 = $158&255;\n   $160 = $159 << 8;\n   $161 = $157 | $160;\n   $162 = HEAP8[$44>>0]|0;\n   $163 = $162&255;\n   $164 = $161 | $163;\n   (_png_colorspace_set_sRGB($0,$1,$164)|0);\n   return;\n  }\n }\n _png_chunk_report($0,20359,0);\n return;\n}\nfunction _png_set_text_2($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$0148 = 0, $$0144 = 0, $$0145 = 0, $$0147156 = 0, $$0148 = 0, $$0148$ = 0, $$0150 = 0, $$1146 = 0, $$4 = 0, $$off = 0, $$pn = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0;\n var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;\n var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;\n var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;\n var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;\n var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond = $4 | $5;\n $6 = ($3|0)<(1);\n $or$cond3 = $or$cond | $6;\n $7 = ($2|0)==(0|0);\n $or$cond5 = $7 | $or$cond3;\n if ($or$cond5) {\n  $$4 = 0;\n  return ($$4|0);\n }\n $8 = ((($1)) + 132|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($1)) + 128|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (($9) - ($11))|0;\n $13 = ($12|0)<($3|0);\n do {\n  if ($13) {\n   $14 = (2147483647 - ($11))|0;\n   $15 = ($14|0)<($3|0);\n   if (!($15)) {\n    $16 = (($11) + ($3))|0;\n    $17 = ($16|0)<(2147483639);\n    $18 = (($16) + 8)|0;\n    $19 = $18 & -8;\n    $$0150 = $17 ? $19 : 2147483647;\n    $20 = ((($1)) + 136|0);\n    $21 = HEAP32[$20>>2]|0;\n    $22 = (($$0150) - ($11))|0;\n    $23 = (_png_realloc_array($0,$21,$11,$22,28)|0);\n    $24 = ($23|0)==(0|0);\n    if (!($24)) {\n     $25 = HEAP32[$20>>2]|0;\n     _png_free($0,$25);\n     HEAP32[$20>>2] = $23;\n     $26 = ((($1)) + 232|0);\n     $27 = HEAP32[$26>>2]|0;\n     $28 = $27 | 16384;\n     HEAP32[$26>>2] = $28;\n     HEAP32[$8>>2] = $$0150;\n     break;\n    }\n   }\n   _png_chunk_report($0,20962,1);\n   $$4 = 1;\n   return ($$4|0);\n  }\n } while(0);\n $29 = ($3|0)>(0);\n if (!($29)) {\n  $$4 = 0;\n  return ($$4|0);\n }\n $30 = ((($1)) + 136|0);\n $$0147156 = 0;\n L15: while(1) {\n  $31 = HEAP32[$10>>2]|0;\n  $32 = HEAP32[$30>>2]|0;\n  $33 = (($32) + (($31*28)|0)|0);\n  $34 = (((($2) + (($$0147156*28)|0)|0)) + 4|0);\n  $35 = HEAP32[$34>>2]|0;\n  $36 = ($35|0)==(0|0);\n  do {\n   if (!($36)) {\n    $37 = (($2) + (($$0147156*28)|0)|0);\n    $38 = HEAP32[$37>>2]|0;\n    $$off = (($38) + 1)|0;\n    $39 = ($$off>>>0)>(3);\n    if ($39) {\n     _png_chunk_report($0,20983,1);\n     break;\n    }\n    $40 = (_strlen($35)|0);\n    $41 = ($38|0)<(1);\n    if ($41) {\n     $$0144 = 0;$$1146 = 0;\n    } else {\n     $42 = (((($2) + (($$0147156*28)|0)|0)) + 20|0);\n     $43 = HEAP32[$42>>2]|0;\n     $44 = ($43|0)==(0|0);\n     if ($44) {\n      $$0145 = 0;\n     } else {\n      $45 = (_strlen($43)|0);\n      $$0145 = $45;\n     }\n     $46 = (((($2) + (($$0147156*28)|0)|0)) + 24|0);\n     $47 = HEAP32[$46>>2]|0;\n     $48 = ($47|0)==(0|0);\n     if ($48) {\n      $$0144 = 0;$$1146 = $$0145;\n     } else {\n      $49 = (_strlen($47)|0);\n      $$0144 = $49;$$1146 = $$0145;\n     }\n    }\n    $50 = (((($2) + (($$0147156*28)|0)|0)) + 8|0);\n    $51 = HEAP32[$50>>2]|0;\n    $52 = ($51|0)==(0|0);\n    if ($52) {\n     label = 19;\n    } else {\n     $53 = HEAP8[$51>>0]|0;\n     $54 = ($53<<24>>24)==(0);\n     if ($54) {\n      label = 19;\n     } else {\n      $56 = (_strlen($51)|0);\n      HEAP32[$33>>2] = $38;\n      $$0148 = $56;\n     }\n    }\n    do {\n     if ((label|0) == 19) {\n      label = 0;\n      $55 = ($38|0)>(0);\n      if ($55) {\n       HEAP32[$33>>2] = 1;\n       $$0148 = 0;\n       break;\n      } else {\n       HEAP32[$33>>2] = -1;\n       $$0148 = 0;\n       break;\n      }\n     }\n    } while(0);\n    $57 = (($40) + 4)|0;\n    $58 = (($57) + ($$1146))|0;\n    $59 = (($58) + ($$0144))|0;\n    $60 = (($59) + ($$0148))|0;\n    $61 = (_png_malloc_base($0,$60)|0);\n    $62 = (((($32) + (($31*28)|0)|0)) + 4|0);\n    HEAP32[$62>>2] = $61;\n    $63 = ($61|0)==(0|0);\n    if ($63) {\n     break L15;\n    }\n    $64 = HEAP32[$34>>2]|0;\n    _memcpy(($61|0),($64|0),($40|0))|0;\n    $65 = HEAP32[$62>>2]|0;\n    $66 = (($65) + ($40)|0);\n    HEAP8[$66>>0] = 0;\n    $67 = HEAP32[$37>>2]|0;\n    $68 = ($67|0)>(0);\n    if ($68) {\n     $69 = HEAP32[$62>>2]|0;\n     $70 = (($69) + ($40)|0);\n     $71 = ((($70)) + 1|0);\n     $72 = (((($32) + (($31*28)|0)|0)) + 20|0);\n     HEAP32[$72>>2] = $71;\n     $73 = (((($2) + (($$0147156*28)|0)|0)) + 20|0);\n     $74 = HEAP32[$73>>2]|0;\n     _memcpy(($71|0),($74|0),($$1146|0))|0;\n     $75 = HEAP32[$72>>2]|0;\n     $76 = (($75) + ($$1146)|0);\n     HEAP8[$76>>0] = 0;\n     $77 = HEAP32[$72>>2]|0;\n     $78 = (($77) + ($$1146)|0);\n     $79 = ((($78)) + 1|0);\n     $80 = (((($32) + (($31*28)|0)|0)) + 24|0);\n     HEAP32[$80>>2] = $79;\n     $81 = (((($2) + (($$0147156*28)|0)|0)) + 24|0);\n     $82 = HEAP32[$81>>2]|0;\n     _memcpy(($79|0),($82|0),($$0144|0))|0;\n     $83 = HEAP32[$80>>2]|0;\n     $84 = (($83) + ($$0144)|0);\n     HEAP8[$84>>0] = 0;\n     $85 = HEAP32[$80>>2]|0;\n     $86 = (($85) + ($$0144)|0);\n     $$pn = $86;\n    } else {\n     $87 = (((($32) + (($31*28)|0)|0)) + 20|0);\n     HEAP32[$87>>2] = 0;\n     $88 = (((($32) + (($31*28)|0)|0)) + 24|0);\n     HEAP32[$88>>2] = 0;\n     $89 = HEAP32[$62>>2]|0;\n     $90 = (($89) + ($40)|0);\n     $$pn = $90;\n    }\n    $91 = ((($$pn)) + 1|0);\n    $92 = (((($32) + (($31*28)|0)|0)) + 8|0);\n    HEAP32[$92>>2] = $91;\n    $93 = ($$0148|0)==(0);\n    if ($93) {\n     $96 = $91;\n    } else {\n     $94 = HEAP32[$50>>2]|0;\n     _memcpy(($91|0),($94|0),($$0148|0))|0;\n     $$pre = HEAP32[$92>>2]|0;\n     $96 = $$pre;\n    }\n    $95 = (($96) + ($$0148)|0);\n    HEAP8[$95>>0] = 0;\n    $97 = HEAP32[$33>>2]|0;\n    $98 = ($97|0)>(0);\n    $99 = (((($32) + (($31*28)|0)|0)) + 12|0);\n    $$$0148 = $98 ? 0 : $$0148;\n    $$0148$ = $98 ? $$0148 : 0;\n    HEAP32[$99>>2] = $$$0148;\n    $100 = (((($32) + (($31*28)|0)|0)) + 16|0);\n    HEAP32[$100>>2] = $$0148$;\n    $101 = HEAP32[$10>>2]|0;\n    $102 = (($101) + 1)|0;\n    HEAP32[$10>>2] = $102;\n   }\n  } while(0);\n  $103 = (($$0147156) + 1)|0;\n  $104 = ($103|0)<($3|0);\n  if ($104) {\n   $$0147156 = $103;\n  } else {\n   $$4 = 0;\n   label = 32;\n   break;\n  }\n }\n if ((label|0) == 32) {\n  return ($$4|0);\n }\n _png_chunk_report($0,21021,1);\n $$4 = 1;\n return ($$4|0);\n}\nfunction _png_set_tIME($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n $4 = ($1|0)==(0|0);\n $or$cond = $3 | $4;\n $5 = ($2|0)==(0|0);\n $or$cond3 = $or$cond | $5;\n if ($or$cond3) {\n  return;\n }\n $6 = ((($0)) + 208|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = $7 & 512;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  return;\n }\n $10 = ((($2)) + 2|0);\n $11 = HEAP16[$10>>1]|0;\n $12 = $11&255;\n $13 = (($12) + -1)<<24>>24;\n $14 = ($13&255)>(11);\n if (!($14)) {\n  $15 = ($11&65535) >>> 8;\n  $16 = $15&255;\n  $17 = (($16) + -1)<<24>>24;\n  $18 = ($17&255)>(30);\n  if (!($18)) {\n   $19 = ((($2)) + 4|0);\n   $20 = HEAP16[$19>>1]|0;\n   $21 = $20&255;\n   $22 = ($21&255)>(23);\n   if (!($22)) {\n    $23 = ($20&65535) >>> 8;\n    $24 = $23&255;\n    $25 = ($24&255)>(59);\n    if (!($25)) {\n     $26 = ((($2)) + 6|0);\n     $27 = HEAP8[$26>>0]|0;\n     $28 = ($27&255)>(60);\n     if (!($28)) {\n      $29 = ((($1)) + 140|0);\n      $30 = $2;\n      $31 = $30;\n      $32 = HEAPU16[$31>>1]|(HEAPU16[$31+2>>1]<<16);\n      $33 = (($30) + 4)|0;\n      $34 = $33;\n      $35 = HEAPU16[$34>>1]|(HEAPU16[$34+2>>1]<<16);\n      $36 = $29;\n      $37 = $36;\n      HEAP16[$37>>1]=$32&65535;HEAP16[$37+2>>1]=$32>>>16;\n      $38 = (($36) + 4)|0;\n      $39 = $38;\n      HEAP16[$39>>1]=$35&65535;HEAP16[$39+2>>1]=$35>>>16;\n      $40 = ((($1)) + 8|0);\n      $41 = HEAP32[$40>>2]|0;\n      $42 = $41 | 512;\n      HEAP32[$40>>2] = $42;\n      return;\n     }\n    }\n   }\n  }\n }\n _png_warning($0,21047);\n return;\n}\nfunction _png_set_tRNS($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$mask = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($0|0)==(0|0);\n $6 = ($1|0)==(0|0);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  return;\n }\n $7 = ($2|0)==(0|0);\n if (!($7)) {\n  _png_free_data($0,$1,8192,0);\n  $8 = (_png_malloc($0,256)|0);\n  $9 = ((($1)) + 156|0);\n  HEAP32[$9>>2] = $8;\n  $10 = ((($0)) + 528|0);\n  HEAP32[$10>>2] = $8;\n  $$off = (($3) + -1)|0;\n  $11 = ($$off>>>0)<(256);\n  if ($11) {\n   _memcpy(($8|0),($2|0),($3|0))|0;\n  }\n }\n $12 = ($4|0)==(0|0);\n if ($12) {\n  $42 = $3&65535;\n  $43 = ((($1)) + 22|0);\n  HEAP16[$43>>1] = $42;\n  $44 = ($3|0)==(0);\n  if ($44) {\n   return;\n  }\n } else {\n  $13 = ((($1)) + 24|0);\n  $14 = HEAP16[$13>>1]|0;\n  $15 = $14&255;\n  $16 = ($15&255)<(16);\n  L12: do {\n   if ($16) {\n    $17 = ($14&65535) >>> 8;\n    $18 = $17&255;\n    $$mask = $14 & 255;\n    $19 = $$mask&65535;\n    $20 = 1 << $19;\n    switch ($18<<24>>24) {\n    case 0:  {\n     $21 = ((($4)) + 8|0);\n     $22 = HEAP16[$21>>1]|0;\n     $23 = $22&65535;\n     $24 = ($23|0)<($20|0);\n     if ($24) {\n      break L12;\n     }\n     break;\n    }\n    case 2:  {\n     $25 = ((($4)) + 2|0);\n     $26 = HEAP16[$25>>1]|0;\n     $27 = $26&65535;\n     $28 = ($27|0)<($20|0);\n     if ($28) {\n      $29 = ((($4)) + 4|0);\n      $30 = HEAP16[$29>>1]|0;\n      $31 = $30&65535;\n      $32 = ($31|0)<($20|0);\n      if ($32) {\n       $33 = ((($4)) + 6|0);\n       $34 = HEAP16[$33>>1]|0;\n       $35 = $34&65535;\n       $36 = ($35|0)<($20|0);\n       if ($36) {\n        break L12;\n       }\n      }\n     }\n     break;\n    }\n    default: {\n     break L12;\n    }\n    }\n    _png_warning($0,21075);\n   }\n  } while(0);\n  $37 = ((($1)) + 160|0);\n  ;HEAP16[$37>>1]=HEAP16[$4>>1]|0;HEAP16[$37+2>>1]=HEAP16[$4+2>>1]|0;HEAP16[$37+4>>1]=HEAP16[$4+4>>1]|0;HEAP16[$37+6>>1]=HEAP16[$4+6>>1]|0;HEAP16[$37+8>>1]=HEAP16[$4+8>>1]|0;\n  $38 = ($3|0)==(0);\n  $39 = $3&65535;\n  $40 = $38 ? 1 : $39;\n  $41 = ((($1)) + 22|0);\n  HEAP16[$41>>1] = $40;\n }\n $45 = ((($1)) + 8|0);\n $46 = HEAP32[$45>>2]|0;\n $47 = $46 | 16;\n HEAP32[$45>>2] = $47;\n $48 = ((($1)) + 232|0);\n $49 = HEAP32[$48>>2]|0;\n $50 = $49 | 8192;\n HEAP32[$48>>2] = $50;\n return;\n}\nfunction _png_set_sPLT($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$057 = 0, $$058 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond = $4 | $5;\n $6 = ($3|0)<(1);\n $or$cond3 = $or$cond | $6;\n $7 = ($2|0)==(0|0);\n $or$cond5 = $7 | $or$cond3;\n if ($or$cond5) {\n  return;\n }\n $8 = ((($1)) + 244|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($1)) + 248|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (_png_realloc_array($0,$9,$11,$3,16)|0);\n $13 = ($12|0)==(0|0);\n if ($13) {\n  _png_chunk_report($0,21125,1);\n  return;\n }\n $14 = HEAP32[$8>>2]|0;\n _png_free($0,$14);\n HEAP32[$8>>2] = $12;\n $15 = ((($1)) + 232|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = $16 | 32;\n HEAP32[$15>>2] = $17;\n $18 = HEAP32[$10>>2]|0;\n $19 = (($12) + ($18<<4)|0);\n $20 = ((($1)) + 8|0);\n $$0 = $2;$$057 = $19;$$058 = $3;\n while(1) {\n  $21 = HEAP32[$$0>>2]|0;\n  $22 = ($21|0)==(0|0);\n  if ($22) {\n   label = 7;\n  } else {\n   $23 = ((($$0)) + 8|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = ($24|0)==(0|0);\n   if ($25) {\n    label = 7;\n   } else {\n    $26 = ((($$0)) + 4|0);\n    $27 = HEAP8[$26>>0]|0;\n    $28 = ((($$057)) + 4|0);\n    HEAP8[$28>>0] = $27;\n    $29 = (_strlen($21)|0);\n    $30 = (($29) + 1)|0;\n    $31 = (_png_malloc_base($0,$30)|0);\n    HEAP32[$$057>>2] = $31;\n    $32 = ($31|0)==(0|0);\n    if ($32) {\n     break;\n    }\n    $33 = HEAP32[$$0>>2]|0;\n    _memcpy(($31|0),($33|0),($30|0))|0;\n    $34 = ((($$0)) + 12|0);\n    $35 = HEAP32[$34>>2]|0;\n    $36 = (_png_malloc_array($0,$35,10)|0);\n    $37 = ((($$057)) + 8|0);\n    HEAP32[$37>>2] = $36;\n    $38 = ($36|0)==(0|0);\n    if ($38) {\n     label = 10;\n     break;\n    }\n    $40 = HEAP32[$34>>2]|0;\n    $41 = ((($$057)) + 12|0);\n    HEAP32[$41>>2] = $40;\n    $42 = HEAP32[$23>>2]|0;\n    $43 = HEAP32[$34>>2]|0;\n    $44 = ($43*10)|0;\n    _memcpy(($36|0),($42|0),($44|0))|0;\n    $45 = HEAP32[$20>>2]|0;\n    $46 = $45 | 8192;\n    HEAP32[$20>>2] = $46;\n    $47 = HEAP32[$10>>2]|0;\n    $48 = (($47) + 1)|0;\n    HEAP32[$10>>2] = $48;\n    $49 = ((($$057)) + 16|0);\n    $$1 = $49;\n   }\n  }\n  if ((label|0) == 7) {\n   label = 0;\n   _png_app_error($0,21146);\n   $$1 = $$057;\n  }\n  $50 = ((($$0)) + 16|0);\n  $51 = (($$058) + -1)|0;\n  $52 = ($51|0)==(0);\n  if ($52) {\n   label = 15;\n   break;\n  } else {\n   $$0 = $50;$$057 = $$1;$$058 = $51;\n  }\n }\n if ((label|0) == 10) {\n  $39 = HEAP32[$$057>>2]|0;\n  _png_free($0,$39);\n  HEAP32[$$057>>2] = 0;\n }\n else if ((label|0) == 15) {\n  return;\n }\n $53 = ($$058|0)>(0);\n if (!($53)) {\n  return;\n }\n _png_chunk_report($0,21173,1);\n return;\n}\nfunction _png_set_unknown_chunks($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$04548 = 0, $$04647 = 0, $$049 = 0, $$1 = 0, $$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n $5 = ($1|0)==(0|0);\n $or$cond = $4 | $5;\n $6 = ($3|0)<(1);\n $or$cond3 = $or$cond | $6;\n $7 = ($2|0)==(0|0);\n $or$cond5 = $7 | $or$cond3;\n if ($or$cond5) {\n  return;\n }\n $8 = ((($1)) + 236|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($1)) + 240|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (_png_realloc_array($0,$9,$11,$3,20)|0);\n $13 = ($12|0)==(0|0);\n if ($13) {\n  _png_chunk_report($0,21192,1);\n  return;\n }\n $14 = HEAP32[$8>>2]|0;\n _png_free($0,$14);\n HEAP32[$8>>2] = $12;\n $15 = ((($1)) + 232|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = $16 | 512;\n HEAP32[$15>>2] = $17;\n $18 = ($3|0)>(0);\n if (!($18)) {\n  return;\n }\n $19 = HEAP32[$10>>2]|0;\n $20 = (($12) + (($19*20)|0)|0);\n $21 = ((($0)) + 208|0);\n $$04548 = $3;$$04647 = $2;$$049 = $20;\n while(1) {\n  $22 = HEAP32[$$04647>>2]|0;\n  HEAP32[$$049>>2] = $22;\n  $23 = ((($$049)) + 4|0);\n  HEAP8[$23>>0] = 0;\n  $24 = ((($$04647)) + 16|0);\n  $25 = HEAP8[$24>>0]|0;\n  $26 = $25&255;\n  $27 = $26 & 11;\n  $28 = ($27|0)==(0);\n  if ($28) {\n   $29 = HEAP32[$21>>2]|0;\n   $30 = $29 & 32768;\n   $31 = ($30|0)==(0);\n   if (!($31)) {\n    label = 9;\n    break;\n   }\n   _png_app_warning($0,21216);\n   $32 = HEAP32[$21>>2]|0;\n   $33 = $32 & 11;\n   $34 = ($33|0)==(0);\n   if ($34) {\n    label = 9;\n    break;\n   } else {\n    $$1$i = $33;\n   }\n  } else {\n   $$1$i = $27;\n  }\n  while(1) {\n   $35 = (0 - ($$1$i))|0;\n   $36 = $$1$i & $35;\n   $37 = ($$1$i|0)==($36|0);\n   $38 = $36 ^ $$1$i;\n   if ($37) {\n    break;\n   } else {\n    $$1$i = $38;\n   }\n  }\n  $39 = $$1$i&255;\n  $40 = ((($$049)) + 16|0);\n  HEAP8[$40>>0] = $39;\n  $41 = ((($$04647)) + 12|0);\n  $42 = HEAP32[$41>>2]|0;\n  $43 = ($42|0)==(0);\n  do {\n   if ($43) {\n    $44 = ((($$049)) + 8|0);\n    HEAP32[$44>>2] = 0;\n    $45 = ((($$049)) + 12|0);\n    HEAP32[$45>>2] = 0;\n    label = 16;\n   } else {\n    $46 = (_png_malloc_base($0,$42)|0);\n    $47 = ((($$049)) + 8|0);\n    HEAP32[$47>>2] = $46;\n    $48 = ($46|0)==(0|0);\n    if ($48) {\n     _png_chunk_report($0,21311,1);\n     $$1 = $$049;\n     break;\n    } else {\n     $49 = ((($$04647)) + 8|0);\n     $50 = HEAP32[$49>>2]|0;\n     $51 = HEAP32[$41>>2]|0;\n     _memcpy(($46|0),($50|0),($51|0))|0;\n     $52 = HEAP32[$41>>2]|0;\n     $53 = ((($$049)) + 12|0);\n     HEAP32[$53>>2] = $52;\n     label = 16;\n     break;\n    }\n   }\n  } while(0);\n  if ((label|0) == 16) {\n   label = 0;\n   $54 = ((($$049)) + 20|0);\n   $55 = HEAP32[$10>>2]|0;\n   $56 = (($55) + 1)|0;\n   HEAP32[$10>>2] = $56;\n   $$1 = $54;\n  }\n  $57 = (($$04548) + -1)|0;\n  $58 = ((($$04647)) + 20|0);\n  $59 = ($$04548|0)>(1);\n  if ($59) {\n   $$04548 = $57;$$04647 = $58;$$049 = $$1;\n  } else {\n   label = 18;\n   break;\n  }\n }\n if ((label|0) == 9) {\n  _png_error($0,21268);\n  // unreachable;\n }\n else if ((label|0) == 18) {\n  return;\n }\n}\nfunction _png_app_warning($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 212|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 2097152;\n $5 = ($4|0)==(0);\n if ($5) {\n  _png_error($0,$1);\n  // unreachable;\n } else {\n  _png_warning($0,$1);\n  return;\n }\n}\nfunction _png_set_keep_unknown_chunks($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$017$i = 0, $$018$lcssa$i = 0, $$01821$i = 0, $$01821$i$us = 0, $$022$i = 0, $$022$i$us = 0, $$07389 = 0, $$07588 = 0, $$076$lcssa = 0, $$07691 = 0, $$077 = 0, $$079 = 0, $$082 = 0, $$092 = 0, $$092$us = 0, $$174 = 0, $$17887 = 0, $$190 = 0, $$2 = 0;\n var $$281 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond98 = 0, $exitcond99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  return;\n }\n $5 = ($1>>>0)>(3);\n if ($5) {\n  _png_app_error($0,21340);\n  return;\n }\n $6 = ($3|0)<(1);\n if ($6) {\n  $7 = ((($0)) + 688|0);\n  HEAP32[$7>>2] = $1;\n  $8 = ($3|0)==(0);\n  if ($8) {\n   return;\n  } else {\n   $$077 = 17;$$082 = 21425;\n  }\n } else {\n  $9 = ($2|0)==(0|0);\n  if ($9) {\n   _png_app_error($0,21382);\n   return;\n  } else {\n   $$077 = $3;$$082 = $2;\n  }\n }\n $10 = ((($0)) + 692|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 696|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0|0);\n $$ = $14 ? 0 : $11;\n $15 = (($$) + ($$077))|0;\n $16 = ($15>>>0)>(858993459);\n if ($16) {\n  _png_app_error($0,21510);\n  return;\n }\n $17 = ($1|0)==(0);\n if ($17) {\n  $23 = ($$|0)==(0);\n  if ($23) {\n   $$281 = 0;$$3 = 0;\n  } else {\n   $$079 = $13;\n   label = 14;\n  }\n } else {\n  $18 = ($15*5)|0;\n  $19 = (_png_malloc($0,$18)|0);\n  $20 = ($$|0)==(0);\n  if ($20) {\n   $$079 = $19;\n   label = 14;\n  } else {\n   $21 = ($$*5)|0;\n   $22 = HEAP32[$12>>2]|0;\n   _memcpy(($19|0),($22|0),($21|0))|0;\n   $$079 = $19;\n   label = 14;\n  }\n }\n do {\n  if ((label|0) == 14) {\n   $24 = ($$079|0)==(0|0);\n   if ($24) {\n    $$281 = 0;$$3 = 0;\n   } else {\n    $25 = ($$077|0)==(0);\n    if ($25) {\n     $$076$lcssa = $$;\n    } else {\n     $26 = $1&255;\n     if ($17) {\n      $27 = ($$|0)==(0);\n      $$092$us = 0;\n      while(1) {\n       $28 = ($$092$us*5)|0;\n       $29 = (($$082) + ($28)|0);\n       L32: do {\n        if (!($27)) {\n         $$01821$i$us = $$079;$$022$i$us = 0;\n         while(1) {\n          $30 = (_memcmp($$01821$i$us,$29,4)|0);\n          $31 = ($30|0)==(0);\n          if ($31) {\n           break;\n          }\n          $32 = (($$022$i$us) + 1)|0;\n          $33 = ((($$01821$i$us)) + 5|0);\n          $34 = ($32>>>0)<($$>>>0);\n          if ($34) {\n           $$01821$i$us = $33;$$022$i$us = $32;\n          } else {\n           break L32;\n          }\n         }\n         $35 = ((($$01821$i$us)) + 4|0);\n         HEAP8[$35>>0] = $26;\n        }\n       } while(0);\n       $36 = (($$092$us) + 1)|0;\n       $exitcond98 = ($36|0)==($$077|0);\n       if ($exitcond98) {\n        $$076$lcssa = $$;\n        break;\n       } else {\n        $$092$us = $36;\n       }\n      }\n     } else {\n      $$07691 = $$;$$092 = 0;\n      while(1) {\n       $38 = ($$092*5)|0;\n       $39 = (($$082) + ($38)|0);\n       $40 = ($$07691|0)==(0);\n       L40: do {\n        if ($40) {\n         $$018$lcssa$i = $$079;\n         label = 28;\n        } else {\n         $$01821$i = $$079;$$022$i = 0;\n         while(1) {\n          $41 = (_memcmp($$01821$i,$39,4)|0);\n          $42 = ($41|0)==(0);\n          if ($42) {\n           break;\n          }\n          $44 = (($$022$i) + 1)|0;\n          $45 = ((($$01821$i)) + 5|0);\n          $46 = ($44>>>0)<($$07691>>>0);\n          if ($46) {\n           $$01821$i = $45;$$022$i = $44;\n          } else {\n           $$018$lcssa$i = $45;\n           label = 28;\n           break L40;\n          }\n         }\n         $43 = ((($$01821$i)) + 4|0);\n         HEAP8[$43>>0] = $26;\n         $$017$i = $$07691;\n        }\n       } while(0);\n       if ((label|0) == 28) {\n        label = 0;\n        $47 = (($$07691) + 1)|0;\n        $48 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);\n        HEAP8[$$018$lcssa$i>>0]=$48&255;HEAP8[$$018$lcssa$i+1>>0]=($48>>8)&255;HEAP8[$$018$lcssa$i+2>>0]=($48>>16)&255;HEAP8[$$018$lcssa$i+3>>0]=$48>>24;\n        $49 = ((($$018$lcssa$i)) + 4|0);\n        HEAP8[$49>>0] = $26;\n        $$017$i = $47;\n       }\n       $50 = (($$092) + 1)|0;\n       $exitcond99 = ($50|0)==($$077|0);\n       if ($exitcond99) {\n        $$076$lcssa = $$017$i;\n        break;\n       } else {\n        $$07691 = $$017$i;$$092 = $50;\n       }\n      }\n     }\n    }\n    $37 = ($$076$lcssa|0)==(0);\n    if (!($37)) {\n     $$07389 = $$079;$$07588 = $$079;$$17887 = 0;$$190 = 0;\n     while(1) {\n      $51 = ((($$07588)) + 4|0);\n      $52 = HEAP8[$51>>0]|0;\n      $53 = ($52<<24>>24)==(0);\n      if ($53) {\n       $$174 = $$07389;$$2 = $$17887;\n      } else {\n       $54 = ($$07389|0)==($$07588|0);\n       if (!($54)) {\n        ;HEAP8[$$07389>>0]=HEAP8[$$07588>>0]|0;HEAP8[$$07389+1>>0]=HEAP8[$$07588+1>>0]|0;HEAP8[$$07389+2>>0]=HEAP8[$$07588+2>>0]|0;HEAP8[$$07389+3>>0]=HEAP8[$$07588+3>>0]|0;HEAP8[$$07389+4>>0]=HEAP8[$$07588+4>>0]|0;\n       }\n       $55 = ((($$07389)) + 5|0);\n       $56 = (($$17887) + 1)|0;\n       $$174 = $55;$$2 = $56;\n      }\n      $57 = (($$190) + 1)|0;\n      $58 = ((($$07588)) + 5|0);\n      $exitcond = ($57|0)==($$076$lcssa|0);\n      if ($exitcond) {\n       break;\n      } else {\n       $$07389 = $$174;$$07588 = $58;$$17887 = $$2;$$190 = $57;\n      }\n     }\n     $59 = ($$2|0)==(0);\n     if (!($59)) {\n      $$281 = $$079;$$3 = $$2;\n      break;\n     }\n    }\n    $60 = HEAP32[$12>>2]|0;\n    $61 = ($60|0)==($$079|0);\n    if ($61) {\n     $$281 = 0;$$3 = 0;\n    } else {\n     _png_free($0,$$079);\n     $$281 = 0;$$3 = 0;\n    }\n   }\n  }\n } while(0);\n HEAP32[$10>>2] = $$3;\n $62 = HEAP32[$12>>2]|0;\n $63 = ($62|0)==($$281|0);\n if ($63) {\n  return;\n }\n $64 = ($62|0)==(0|0);\n if (!($64)) {\n  _png_free($0,$62);\n }\n HEAP32[$12>>2] = $$281;\n return;\n}\nfunction _png_set_read_user_chunk_fn($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 684|0);\n HEAP32[$4>>2] = $2;\n $5 = ((($0)) + 680|0);\n HEAP32[$5>>2] = $1;\n return;\n}\nfunction _png_free_buffer_list($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if ($3) {\n  return;\n }\n HEAP32[$1>>2] = 0;\n $$0 = $2;\n while(1) {\n  $4 = HEAP32[$$0>>2]|0;\n  _png_free($0,$$0);\n  $5 = ($4|0)==(0|0);\n  if ($5) {\n   break;\n  } else {\n   $$0 = $4;\n  }\n }\n return;\n}\nfunction _png_do_write_transformations($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$i = 0, $$0$i = 0, $$0100119$i = 0, $$0101118$i = 0, $$0102127$i = 0, $$0103113$i = 0, $$0103146$i = 0, $$0104145$i = 0, $$0106144$i = 0, $$0108143$i = 0, $$0110142$i = 0, $$0111126$i = 0, $$0112$i = 0, $$0113$$i = 0, $$0113125$i = 0, $$0115135$i = 0, $$0116134$i = 0, $$0118133$i = 0, $$0120132$i = 0, $$0122131$i = 0;\n var $$0123124$i = 0, $$0128$i = 0, $$0142$lcssa$i = 0, $$0142180$i = 0, $$0144179$i = 0, $$0145167$i = 0, $$0146166$i = 0, $$0147186$i = 0, $$0148185$i = 0, $$0149$lcssa$i = 0, $$0149171$i = 0, $$0151$i = 0, $$0152170$i = 0, $$0153165$i = 0, $$0154$lcssa$i = 0, $$0154164$i = 0, $$0156177$i = 0, $$0157176$i = 0, $$07397$i = 0, $$07496$i = 0;\n var $$07594$i = 0, $$07693$i = 0, $$07887$i = 0, $$07990$i = 0, $$08089$i = 0, $$088$i = 0, $$094110$i = 0, $$095123$i = 0, $$096122$i = 0, $$098115$i = 0, $$1$i = 0, $$1$i42 = 0, $$1105$i = 0, $$1107$i = 0, $$1109$i = 0, $$1112$i = 0, $$1117$i = 0, $$1119$i = 0, $$1121$i = 0, $$1143$i = 0;\n var $$1150$i = 0, $$1155$i = 0, $$2$i = 0, $$lobit = 0, $$pn$i = 0, $$pn158$i = 0, $$pn159$i = 0, $$pn193$i = 0, $$pre = 0, $$pre$phi$iZ2D = 0, $$pre63 = 0, $$pre64 = 0, $$pre65 = 0, $$pre66 = 0, $$pre67 = 0, $$pre68 = 0, $$sink192$i = 0, $10 = 0, $100 = 0, $101 = 0;\n var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;\n var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;\n var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;\n var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;\n var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;\n var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;\n var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;\n var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;\n var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;\n var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;\n var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;\n var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;\n var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;\n var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;\n var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i37 = 0, $exitcond$i40 = 0, $exitcond$i44 = 0, $exitcond102$i = 0, $exitcond103$i = 0, $exitcond104$i = 0, $exitcond128$i = 0, $exitcond129$i = 0, $exitcond130$i = 0, $exitcond153$i = 0, $exitcond154$i = 0, $exitcond190$i = 0, $exitcond191$i = 0, $or$cond$i = 0, $or$cond160$i = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp + 16|0;\n $3 = sp;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  STACKTOP = sp;return;\n }\n $5 = ((($0)) + 216|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1048576;\n $8 = ($7|0)==(0);\n if ($8) {\n  $16 = $6;\n } else {\n  $9 = ((($0)) + 196|0);\n  $10 = HEAP32[$9>>2]|0;\n  $11 = ($10|0)==(0|0);\n  if ($11) {\n   $16 = $6;\n  } else {\n   $12 = ((($0)) + 384|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = ((($13)) + 1|0);\n   FUNCTION_TABLE_viii[$10 & 127]($0,$1,$14);\n   $$pre = HEAP32[$5>>2]|0;\n   $16 = $$pre;\n  }\n }\n $15 = $16 & 32768;\n $17 = ($15|0)==(0);\n if ($17) {\n  $26 = $16;\n } else {\n  $18 = ((($0)) + 384|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = ((($19)) + 1|0);\n  $21 = ((($0)) + 212|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = $22 >>> 7;\n  $$lobit = $23 & 1;\n  $24 = $$lobit ^ 1;\n  _png_do_strip_channel($1,$20,$24);\n  $$pre63 = HEAP32[$5>>2]|0;\n  $26 = $$pre63;\n }\n $25 = $26 & 65536;\n $27 = ($25|0)==(0);\n if ($27) {\n  $32 = $26;\n } else {\n  $28 = ((($0)) + 384|0);\n  $29 = HEAP32[$28>>2]|0;\n  $30 = ((($29)) + 1|0);\n  _png_do_packswap($1,$30);\n  $$pre64 = HEAP32[$5>>2]|0;\n  $32 = $$pre64;\n }\n $31 = $32 & 4;\n $33 = ($31|0)==(0);\n if ($33) {\n  $105 = $32;\n } else {\n  $34 = ((($0)) + 384|0);\n  $35 = HEAP32[$34>>2]|0;\n  $36 = ((($35)) + 1|0);\n  $37 = ((($0)) + 436|0);\n  $38 = HEAP8[$37>>0]|0;\n  $39 = $38&255;\n  $40 = ((($1)) + 9|0);\n  $41 = HEAP8[$40>>0]|0;\n  $42 = ($41<<24>>24)==(8);\n  if ($42) {\n   $43 = ((($1)) + 10|0);\n   $44 = HEAP8[$43>>0]|0;\n   $45 = ($44<<24>>24)==(1);\n   if ($45) {\n    switch ($38<<24>>24) {\n    case 1:  {\n     $46 = HEAP32[$1>>2]|0;\n     $47 = ($46|0)==(0);\n     if ($47) {\n      $$pre$phi$iZ2D = $1;\n     } else {\n      $$0102127$i = $36;$$0111126$i = 128;$$0113125$i = 0;$$0123124$i = 0;$$0128$i = $36;\n      while(1) {\n       $48 = HEAP8[$$0128$i>>0]|0;\n       $49 = ($48<<24>>24)==(0);\n       $50 = $49 ? 0 : $$0111126$i;\n       $$0113$$i = $50 | $$0113125$i;\n       $51 = ((($$0128$i)) + 1|0);\n       $52 = ($$0111126$i|0)>(1);\n       if ($52) {\n        $53 = $$0111126$i >> 1;\n        $$1$i = $$0102127$i;$$1112$i = $53;$$2$i = $$0113$$i;\n       } else {\n        $54 = $$0113$$i&255;\n        HEAP8[$$0102127$i>>0] = $54;\n        $55 = ((($$0102127$i)) + 1|0);\n        $$1$i = $55;$$1112$i = 128;$$2$i = 0;\n       }\n       $56 = (($$0123124$i) + 1)|0;\n       $exitcond$i = ($56|0)==($46|0);\n       if ($exitcond$i) {\n        break;\n       } else {\n        $$0102127$i = $$1$i;$$0111126$i = $$1112$i;$$0113125$i = $$2$i;$$0123124$i = $56;$$0128$i = $51;\n       }\n      }\n      $57 = ($$1112$i|0)==(128);\n      if ($57) {\n       $$pre$phi$iZ2D = $1;\n      } else {\n       $58 = $$2$i&255;\n       HEAP8[$$1$i>>0] = $58;\n       $$pre$phi$iZ2D = $1;\n      }\n     }\n     break;\n    }\n    case 2:  {\n     $59 = HEAP32[$1>>2]|0;\n     $60 = ($59|0)==(0);\n     if ($60) {\n      $$pre$phi$iZ2D = $1;\n     } else {\n      $$0115135$i = 0;$$0116134$i = 0;$$0118133$i = 6;$$0120132$i = $36;$$0122131$i = $36;\n      while(1) {\n       $61 = HEAP8[$$0122131$i>>0]|0;\n       $62 = $61&255;\n       $63 = $62 & 3;\n       $64 = $63 << $$0118133$i;\n       $65 = $64 | $$0116134$i;\n       $66 = ($$0118133$i|0)==(0);\n       if ($66) {\n        $67 = $65&255;\n        HEAP8[$$0120132$i>>0] = $67;\n        $68 = ((($$0120132$i)) + 1|0);\n        $$1117$i = 0;$$1119$i = 6;$$1121$i = $68;\n       } else {\n        $69 = (($$0118133$i) + -2)|0;\n        $$1117$i = $65;$$1119$i = $69;$$1121$i = $$0120132$i;\n       }\n       $70 = ((($$0122131$i)) + 1|0);\n       $71 = (($$0115135$i) + 1)|0;\n       $exitcond153$i = ($71|0)==($59|0);\n       if ($exitcond153$i) {\n        break;\n       } else {\n        $$0115135$i = $71;$$0116134$i = $$1117$i;$$0118133$i = $$1119$i;$$0120132$i = $$1121$i;$$0122131$i = $70;\n       }\n      }\n      $72 = ($$1119$i|0)==(6);\n      if ($72) {\n       $$pre$phi$iZ2D = $1;\n      } else {\n       $73 = $$1117$i&255;\n       HEAP8[$$1121$i>>0] = $73;\n       $$pre$phi$iZ2D = $1;\n      }\n     }\n     break;\n    }\n    case 4:  {\n     $74 = HEAP32[$1>>2]|0;\n     $75 = ($74|0)==(0);\n     if ($75) {\n      $$pre$phi$iZ2D = $1;\n     } else {\n      $$0103146$i = 0;$$0104145$i = 0;$$0106144$i = 4;$$0108143$i = $36;$$0110142$i = $36;\n      while(1) {\n       $76 = HEAP8[$$0110142$i>>0]|0;\n       $77 = $76&255;\n       $78 = $77 & 15;\n       $79 = $78 << $$0106144$i;\n       $80 = $79 | $$0104145$i;\n       $81 = ($$0106144$i|0)==(0);\n       if ($81) {\n        $82 = $80&255;\n        HEAP8[$$0108143$i>>0] = $82;\n        $83 = ((($$0108143$i)) + 1|0);\n        $$1105$i = 0;$$1107$i = 4;$$1109$i = $83;\n       } else {\n        $84 = (($$0106144$i) + -4)|0;\n        $$1105$i = $80;$$1107$i = $84;$$1109$i = $$0108143$i;\n       }\n       $85 = ((($$0110142$i)) + 1|0);\n       $86 = (($$0103146$i) + 1)|0;\n       $exitcond154$i = ($86|0)==($74|0);\n       if ($exitcond154$i) {\n        break;\n       } else {\n        $$0103146$i = $86;$$0104145$i = $$1105$i;$$0106144$i = $$1107$i;$$0108143$i = $$1109$i;$$0110142$i = $85;\n       }\n      }\n      $87 = ($$1107$i|0)==(4);\n      if ($87) {\n       $$pre$phi$iZ2D = $1;\n      } else {\n       $88 = $$1105$i&255;\n       HEAP8[$$1109$i>>0] = $88;\n       $$pre$phi$iZ2D = $1;\n      }\n     }\n     break;\n    }\n    default: {\n     $$pre$phi$iZ2D = $1;\n    }\n    }\n    HEAP8[$40>>0] = $38;\n    $89 = HEAP8[$43>>0]|0;\n    $90 = $89&255;\n    $91 = Math_imul($90, $39)|0;\n    $92 = $91&255;\n    $93 = ((($1)) + 11|0);\n    HEAP8[$93>>0] = $92;\n    $94 = $91 & 255;\n    $95 = ($94>>>0)>(7);\n    $96 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n    if ($95) {\n     $97 = $94 >>> 3;\n     $98 = Math_imul($97, $96)|0;\n     $103 = $98;\n    } else {\n     $99 = Math_imul($94, $96)|0;\n     $100 = (($99) + 7)|0;\n     $101 = $100 >>> 3;\n     $103 = $101;\n    }\n    $102 = ((($1)) + 4|0);\n    HEAP32[$102>>2] = $103;\n    $$pre65 = HEAP32[$5>>2]|0;\n    $105 = $$pre65;\n   } else {\n    $105 = $32;\n   }\n  } else {\n   $105 = $32;\n  }\n }\n $104 = $105 & 16;\n $106 = ($104|0)==(0);\n if ($106) {\n  $111 = $105;\n } else {\n  $107 = ((($0)) + 384|0);\n  $108 = HEAP32[$107>>2]|0;\n  $109 = ((($108)) + 1|0);\n  _png_do_swap($1,$109);\n  $$pre66 = HEAP32[$5>>2]|0;\n  $111 = $$pre66;\n }\n $110 = $111 & 8;\n $112 = ($110|0)==(0);\n if ($112) {\n  $226 = $111;\n } else {\n  $113 = ((($0)) + 384|0);\n  $114 = HEAP32[$113>>2]|0;\n  $115 = ((($114)) + 1|0);\n  $116 = ((($1)) + 8|0);\n  $117 = HEAP16[$116>>1]|0;\n  $118 = $117&255;\n  $119 = ($118<<24>>24)==(3);\n  $120 = ($117&65535) >>> 8;\n  $121 = $120&255;\n  if ($119) {\n   $226 = $111;\n  } else {\n   $122 = $118 & 2;\n   $123 = ($122<<24>>24)==(0);\n   $124 = $120&65535;\n   if ($123) {\n    $140 = ((($0)) + 524|0);\n    $141 = HEAP8[$140>>0]|0;\n    $142 = $141&255;\n    $$0$i = 1;$$pn193$i = $142;\n   } else {\n    $125 = ((($0)) + 521|0);\n    $126 = HEAP8[$125>>0]|0;\n    $127 = $126&255;\n    $128 = ((($0)) + 522|0);\n    $129 = HEAP8[$128>>0]|0;\n    $130 = $129&255;\n    $131 = (($124) - ($130))|0;\n    $132 = ((($2)) + 4|0);\n    HEAP32[$132>>2] = $131;\n    $133 = ((($3)) + 4|0);\n    HEAP32[$133>>2] = $130;\n    $134 = ((($0)) + 523|0);\n    $135 = HEAP8[$134>>0]|0;\n    $136 = $135&255;\n    $137 = (($124) - ($136))|0;\n    $138 = ((($2)) + 8|0);\n    HEAP32[$138>>2] = $137;\n    $139 = ((($3)) + 8|0);\n    HEAP32[$139>>2] = $136;\n    $$0$i = 3;$$pn193$i = $127;\n   }\n   $$sink192$i = (($124) - ($$pn193$i))|0;\n   HEAP32[$2>>2] = $$sink192$i;\n   HEAP32[$3>>2] = $$pn193$i;\n   $143 = $118 & 4;\n   $144 = ($143<<24>>24)==(0);\n   if ($144) {\n    $$1$i42 = $$0$i;\n   } else {\n    $145 = ((($0)) + 525|0);\n    $146 = HEAP8[$145>>0]|0;\n    $147 = $146&255;\n    $148 = (($124) - ($147))|0;\n    $149 = (($2) + ($$0$i<<2)|0);\n    HEAP32[$149>>2] = $148;\n    $150 = (($3) + ($$0$i<<2)|0);\n    HEAP32[$150>>2] = $147;\n    $151 = (($$0$i) + 1)|0;\n    $$1$i42 = $151;\n   }\n   $152 = ($121&255)<(8);\n   do {\n    if ($152) {\n     $153 = ((($1)) + 4|0);\n     $154 = HEAP32[$153>>2]|0;\n     $155 = ((($0)) + 524|0);\n     $156 = HEAP8[$155>>0]|0;\n     $157 = ($156<<24>>24)==(1);\n     $158 = ($121<<24>>24)==(2);\n     $or$cond$i = $158 & $157;\n     if ($or$cond$i) {\n      $$0151$i = 85;\n     } else {\n      $159 = ($121<<24>>24)==(4);\n      $160 = ($156<<24>>24)==(3);\n      $or$cond160$i = $159 & $160;\n      $$$i = $or$cond160$i ? 17 : 255;\n      $$0151$i = $$$i;\n     }\n     $161 = ($154|0)==(0);\n     if (!($161)) {\n      $$0145167$i = $115;$$0146166$i = 0;\n      while(1) {\n       $162 = HEAP8[$$0145167$i>>0]|0;\n       $163 = $162&255;\n       $164 = HEAP32[$2>>2]|0;\n       $165 = HEAP32[$3>>2]|0;\n       $166 = (0 - ($165))|0;\n       $167 = ($164|0)>($166|0);\n       if ($167) {\n        $$0153165$i = $164;$$0154164$i = 0;\n        while(1) {\n         $168 = ($$0153165$i|0)>(0);\n         if ($168) {\n          $169 = $163 << $$0153165$i;\n          $$pn159$i = $169;\n         } else {\n          $170 = (0 - ($$0153165$i))|0;\n          $171 = $163 >>> $170;\n          $172 = $171 & $$0151$i;\n          $$pn159$i = $172;\n         }\n         $$1155$i = $$pn159$i | $$0154164$i;\n         $173 = (($$0153165$i) - ($165))|0;\n         $174 = ($173|0)>($166|0);\n         if ($174) {\n          $$0153165$i = $173;$$0154164$i = $$1155$i;\n         } else {\n          $$0154$lcssa$i = $$1155$i;\n          break;\n         }\n        }\n       } else {\n        $$0154$lcssa$i = 0;\n       }\n       $175 = $$0154$lcssa$i&255;\n       HEAP8[$$0145167$i>>0] = $175;\n       $176 = (($$0146166$i) + 1)|0;\n       $177 = ((($$0145167$i)) + 1|0);\n       $exitcond$i44 = ($176|0)==($154|0);\n       if ($exitcond$i44) {\n        break;\n       } else {\n        $$0145167$i = $177;$$0146166$i = $176;\n       }\n      }\n     }\n    } else {\n     $178 = ($121<<24>>24)==(8);\n     $179 = HEAP32[$1>>2]|0;\n     $180 = Math_imul($179, $$1$i42)|0;\n     $181 = ($180|0)!=(0);\n     if ($178) {\n      if ($181) {\n       $$0156177$i = 0;$$0157176$i = $115;\n      } else {\n       break;\n      }\n      while(1) {\n       $182 = (($$0156177$i>>>0) % ($$1$i42>>>0))&-1;\n       $183 = HEAP8[$$0157176$i>>0]|0;\n       $184 = $183&255;\n       $185 = (($2) + ($182<<2)|0);\n       $186 = HEAP32[$185>>2]|0;\n       $187 = (($3) + ($182<<2)|0);\n       $188 = HEAP32[$187>>2]|0;\n       $189 = (0 - ($188))|0;\n       $190 = ($186|0)>($189|0);\n       if ($190) {\n        $$0149171$i = 0;$$0152170$i = $186;\n        while(1) {\n         $191 = ($$0152170$i|0)>(0);\n         $192 = $184 << $$0152170$i;\n         $193 = (0 - ($$0152170$i))|0;\n         $194 = $184 >>> $193;\n         $$pn158$i = $191 ? $192 : $194;\n         $$1150$i = $$pn158$i | $$0149171$i;\n         $195 = (($$0152170$i) - ($188))|0;\n         $196 = ($195|0)>($189|0);\n         if ($196) {\n          $$0149171$i = $$1150$i;$$0152170$i = $195;\n         } else {\n          $$0149$lcssa$i = $$1150$i;\n          break;\n         }\n        }\n       } else {\n        $$0149$lcssa$i = 0;\n       }\n       $197 = $$0149$lcssa$i&255;\n       HEAP8[$$0157176$i>>0] = $197;\n       $198 = (($$0156177$i) + 1)|0;\n       $199 = ((($$0157176$i)) + 1|0);\n       $exitcond190$i = ($198|0)==($180|0);\n       if ($exitcond190$i) {\n        break;\n       } else {\n        $$0156177$i = $198;$$0157176$i = $199;\n       }\n      }\n     } else {\n      if ($181) {\n       $$0147186$i = 0;$$0148185$i = $115;\n      } else {\n       break;\n      }\n      while(1) {\n       $200 = (($$0147186$i>>>0) % ($$1$i42>>>0))&-1;\n       $201 = HEAP8[$$0148185$i>>0]|0;\n       $202 = $201&255;\n       $203 = $202 << 8;\n       $204 = ((($$0148185$i)) + 1|0);\n       $205 = HEAP8[$204>>0]|0;\n       $206 = $205&255;\n       $207 = $203 | $206;\n       $208 = (($2) + ($200<<2)|0);\n       $209 = HEAP32[$208>>2]|0;\n       $210 = (($3) + ($200<<2)|0);\n       $211 = HEAP32[$210>>2]|0;\n       $212 = (0 - ($211))|0;\n       $213 = ($209|0)>($212|0);\n       if ($213) {\n        $$0142180$i = 0;$$0144179$i = $209;\n        while(1) {\n         $214 = ($$0144179$i|0)>(0);\n         $215 = $207 << $$0144179$i;\n         $216 = (0 - ($$0144179$i))|0;\n         $217 = $207 >>> $216;\n         $$pn$i = $214 ? $215 : $217;\n         $$1143$i = $$pn$i | $$0142180$i;\n         $218 = (($$0144179$i) - ($211))|0;\n         $219 = ($218|0)>($212|0);\n         if ($219) {\n          $$0142180$i = $$1143$i;$$0144179$i = $218;\n         } else {\n          $$0142$lcssa$i = $$1143$i;\n          break;\n         }\n        }\n       } else {\n        $$0142$lcssa$i = 0;\n       }\n       $220 = $$0142$lcssa$i >>> 8;\n       $221 = $220&255;\n       HEAP8[$$0148185$i>>0] = $221;\n       $222 = $$0142$lcssa$i&255;\n       $223 = ((($$0148185$i)) + 2|0);\n       HEAP8[$204>>0] = $222;\n       $224 = (($$0147186$i) + 1)|0;\n       $exitcond191$i = ($224|0)==($180|0);\n       if ($exitcond191$i) {\n        break;\n       } else {\n        $$0147186$i = $224;$$0148185$i = $223;\n       }\n      }\n     }\n    }\n   } while(0);\n   $$pre67 = HEAP32[$5>>2]|0;\n   $226 = $$pre67;\n  }\n }\n $225 = $226 & 131072;\n $227 = ($225|0)==(0);\n L99: do {\n  if (!($227)) {\n   $228 = ((($0)) + 384|0);\n   $229 = HEAP32[$228>>2]|0;\n   $230 = ((($229)) + 1|0);\n   $231 = ((($1)) + 8|0);\n   $232 = HEAP16[$231>>1]|0;\n   $233 = $232&255;\n   $234 = ($232&65535) >>> 8;\n   $235 = $234&255;\n   switch ($233<<24>>24) {\n   case 6:  {\n    $236 = ($235<<24>>24)==(8);\n    $237 = HEAP32[$1>>2]|0;\n    $238 = ($237|0)!=(0);\n    if ($236) {\n     if ($238) {\n      $$0112$i = $230;$$094110$i = 0;\n     } else {\n      break L99;\n     }\n     while(1) {\n      $239 = ((($$0112$i)) + 1|0);\n      $240 = HEAP8[$$0112$i>>0]|0;\n      $241 = ((($$0112$i)) + 2|0);\n      $242 = HEAP8[$239>>0]|0;\n      HEAP8[$$0112$i>>0] = $242;\n      $243 = ((($$0112$i)) + 3|0);\n      $244 = HEAP8[$241>>0]|0;\n      HEAP8[$239>>0] = $244;\n      $245 = ((($$0112$i)) + 4|0);\n      $246 = HEAP8[$243>>0]|0;\n      HEAP8[$241>>0] = $246;\n      HEAP8[$243>>0] = $240;\n      $247 = (($$094110$i) + 1)|0;\n      $exitcond$i40 = ($247|0)==($237|0);\n      if ($exitcond$i40) {\n       break;\n      } else {\n       $$0112$i = $245;$$094110$i = $247;\n      }\n     }\n    } else {\n     if ($238) {\n      $$0103113$i = 0;$$098115$i = $230;\n     } else {\n      break L99;\n     }\n     while(1) {\n      $248 = ((($$098115$i)) + 1|0);\n      $249 = HEAP8[$$098115$i>>0]|0;\n      $250 = ((($$098115$i)) + 2|0);\n      $251 = HEAP8[$248>>0]|0;\n      $252 = ((($$098115$i)) + 3|0);\n      $253 = HEAP8[$250>>0]|0;\n      HEAP8[$$098115$i>>0] = $253;\n      $254 = ((($$098115$i)) + 4|0);\n      $255 = HEAP8[$252>>0]|0;\n      HEAP8[$248>>0] = $255;\n      $256 = ((($$098115$i)) + 5|0);\n      $257 = HEAP8[$254>>0]|0;\n      HEAP8[$250>>0] = $257;\n      $258 = ((($$098115$i)) + 6|0);\n      $259 = HEAP8[$256>>0]|0;\n      HEAP8[$252>>0] = $259;\n      $260 = ((($$098115$i)) + 7|0);\n      $261 = HEAP8[$258>>0]|0;\n      HEAP8[$254>>0] = $261;\n      $262 = ((($$098115$i)) + 8|0);\n      $263 = HEAP8[$260>>0]|0;\n      HEAP8[$256>>0] = $263;\n      HEAP8[$258>>0] = $249;\n      HEAP8[$260>>0] = $251;\n      $264 = (($$0103113$i) + 1)|0;\n      $exitcond128$i = ($264|0)==($237|0);\n      if ($exitcond128$i) {\n       break;\n      } else {\n       $$0103113$i = $264;$$098115$i = $262;\n      }\n     }\n    }\n    break;\n   }\n   case 4:  {\n    $265 = ($235<<24>>24)==(8);\n    $266 = HEAP32[$1>>2]|0;\n    $267 = ($266|0)!=(0);\n    if ($265) {\n     if ($267) {\n      $$0100119$i = 0;$$0101118$i = $230;\n     } else {\n      break L99;\n     }\n     while(1) {\n      $268 = ((($$0101118$i)) + 1|0);\n      $269 = HEAP8[$$0101118$i>>0]|0;\n      $270 = ((($$0101118$i)) + 2|0);\n      $271 = HEAP8[$268>>0]|0;\n      HEAP8[$$0101118$i>>0] = $271;\n      HEAP8[$268>>0] = $269;\n      $272 = (($$0100119$i) + 1)|0;\n      $exitcond129$i = ($272|0)==($266|0);\n      if ($exitcond129$i) {\n       break;\n      } else {\n       $$0100119$i = $272;$$0101118$i = $270;\n      }\n     }\n    } else {\n     if ($267) {\n      $$095123$i = 0;$$096122$i = $230;\n     } else {\n      break L99;\n     }\n     while(1) {\n      $273 = ((($$096122$i)) + 1|0);\n      $274 = HEAP8[$$096122$i>>0]|0;\n      $275 = ((($$096122$i)) + 2|0);\n      $276 = HEAP8[$273>>0]|0;\n      $277 = ((($$096122$i)) + 3|0);\n      $278 = HEAP8[$275>>0]|0;\n      HEAP8[$$096122$i>>0] = $278;\n      $279 = ((($$096122$i)) + 4|0);\n      $280 = HEAP8[$277>>0]|0;\n      HEAP8[$273>>0] = $280;\n      HEAP8[$275>>0] = $274;\n      HEAP8[$277>>0] = $276;\n      $281 = (($$095123$i) + 1)|0;\n      $exitcond130$i = ($281|0)==($266|0);\n      if ($exitcond130$i) {\n       break;\n      } else {\n       $$095123$i = $281;$$096122$i = $279;\n      }\n     }\n    }\n    break;\n   }\n   default: {\n    break L99;\n   }\n   }\n  }\n } while(0);\n $282 = HEAP32[$5>>2]|0;\n $283 = $282 & 524288;\n $284 = ($283|0)==(0);\n L119: do {\n  if (!($284)) {\n   $285 = ((($0)) + 384|0);\n   $286 = HEAP32[$285>>2]|0;\n   $287 = ((($286)) + 1|0);\n   $288 = ((($1)) + 8|0);\n   $289 = HEAP16[$288>>1]|0;\n   $290 = $289&255;\n   $291 = ($289&65535) >>> 8;\n   $292 = $291&255;\n   switch ($290<<24>>24) {\n   case 6:  {\n    $293 = ($292<<24>>24)==(8);\n    $294 = HEAP32[$1>>2]|0;\n    $295 = ($294|0)!=(0);\n    if ($293) {\n     if ($295) {\n      $$07887$i = 0;$$088$i = $287;\n     } else {\n      break L119;\n     }\n     while(1) {\n      $296 = ((($$088$i)) + 3|0);\n      $297 = ((($$088$i)) + 4|0);\n      $298 = HEAP8[$296>>0]|0;\n      $299 = $298&255;\n      $300 = $299 ^ 255;\n      $301 = $300&255;\n      HEAP8[$296>>0] = $301;\n      $302 = (($$07887$i) + 1)|0;\n      $exitcond$i37 = ($302|0)==($294|0);\n      if ($exitcond$i37) {\n       break;\n      } else {\n       $$07887$i = $302;$$088$i = $297;\n      }\n     }\n    } else {\n     if ($295) {\n      $$07990$i = 0;$$08089$i = $287;\n     } else {\n      break L119;\n     }\n     while(1) {\n      $303 = ((($$08089$i)) + 6|0);\n      $304 = ((($$08089$i)) + 7|0);\n      $305 = HEAP8[$303>>0]|0;\n      $306 = $305&255;\n      $307 = $306 ^ 255;\n      $308 = $307&255;\n      HEAP8[$303>>0] = $308;\n      $309 = ((($$08089$i)) + 8|0);\n      $310 = HEAP8[$304>>0]|0;\n      $311 = $310&255;\n      $312 = $311 ^ 255;\n      $313 = $312&255;\n      HEAP8[$304>>0] = $313;\n      $314 = (($$07990$i) + 1)|0;\n      $exitcond102$i = ($314|0)==($294|0);\n      if ($exitcond102$i) {\n       break;\n      } else {\n       $$07990$i = $314;$$08089$i = $309;\n      }\n     }\n    }\n    break;\n   }\n   case 4:  {\n    $315 = ($292<<24>>24)==(8);\n    $316 = HEAP32[$1>>2]|0;\n    $317 = ($316|0)!=(0);\n    if ($315) {\n     if ($317) {\n      $$07594$i = 0;$$07693$i = $287;\n     } else {\n      break L119;\n     }\n     while(1) {\n      $318 = ((($$07693$i)) + 1|0);\n      $319 = ((($$07693$i)) + 2|0);\n      $320 = HEAP8[$318>>0]|0;\n      $321 = $320&255;\n      $322 = $321 ^ 255;\n      $323 = $322&255;\n      HEAP8[$318>>0] = $323;\n      $324 = (($$07594$i) + 1)|0;\n      $exitcond103$i = ($324|0)==($316|0);\n      if ($exitcond103$i) {\n       break;\n      } else {\n       $$07594$i = $324;$$07693$i = $319;\n      }\n     }\n    } else {\n     if ($317) {\n      $$07397$i = 0;$$07496$i = $287;\n     } else {\n      break L119;\n     }\n     while(1) {\n      $325 = ((($$07496$i)) + 2|0);\n      $326 = ((($$07496$i)) + 3|0);\n      $327 = HEAP8[$325>>0]|0;\n      $328 = $327&255;\n      $329 = $328 ^ 255;\n      $330 = $329&255;\n      HEAP8[$325>>0] = $330;\n      $331 = ((($$07496$i)) + 4|0);\n      $332 = HEAP8[$326>>0]|0;\n      $333 = $332&255;\n      $334 = $333 ^ 255;\n      $335 = $334&255;\n      HEAP8[$326>>0] = $335;\n      $336 = (($$07397$i) + 1)|0;\n      $exitcond104$i = ($336|0)==($316|0);\n      if ($exitcond104$i) {\n       break;\n      } else {\n       $$07397$i = $336;$$07496$i = $331;\n      }\n     }\n    }\n    break;\n   }\n   default: {\n    break L119;\n   }\n   }\n  }\n } while(0);\n $337 = HEAP32[$5>>2]|0;\n $338 = $337 & 1;\n $339 = ($338|0)==(0);\n if ($339) {\n  $344 = $337;\n } else {\n  $340 = ((($0)) + 384|0);\n  $341 = HEAP32[$340>>2]|0;\n  $342 = ((($341)) + 1|0);\n  _png_do_bgr($1,$342);\n  $$pre68 = HEAP32[$5>>2]|0;\n  $344 = $$pre68;\n }\n $343 = $344 & 32;\n $345 = ($343|0)==(0);\n if ($345) {\n  STACKTOP = sp;return;\n }\n $346 = ((($0)) + 384|0);\n $347 = HEAP32[$346>>2]|0;\n $348 = ((($347)) + 1|0);\n _png_do_invert($1,$348);\n STACKTOP = sp;return;\n}\nfunction _png_do_strip_channel($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$ph = 0, $$0$ph101 = 0, $$074$lcssa = 0, $$074$ph = 0, $$07481 = 0, $$082 = 0, $$1$ph = 0, $$1$ph104 = 0, $$175$lcssa = 0, $$175$ph = 0, $$17583 = 0, $$184 = 0, $$2$ph = 0, $$2$ph108 = 0, $$276 = 0, $$289 = 0, $$3$ph = 0, $$3$ph112 = 0, $$377$lcssa = 0, $$377$ph = 0;\n var $$37788 = 0, $$394 = 0, $$4$lcssa = 0, $$4$ph = 0, $$493 = 0, $$5 = 0, $$6 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;\n var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;\n var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;\n var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $scevgep = 0, $scevgep102 = 0, $scevgep103 = 0, $scevgep105 = 0, $scevgep105106 = 0, $scevgep107 = 0, $scevgep109 = 0, $scevgep109110 = 0, $scevgep111 = 0, $scevgep113 = 0, $scevgep113114 = 0, $scevgep115 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (($1) + ($4)|0);\n $6 = ((($0)) + 10|0);\n $7 = HEAP8[$6>>0]|0;\n switch ($7<<24>>24) {\n case 2:  {\n  $8 = ((($0)) + 9|0);\n  $9 = HEAP8[$8>>0]|0;\n  switch ($9<<24>>24) {\n  case 8:  {\n   $10 = ($2|0)==(0);\n   $11 = ((($1)) + 2|0);\n   $12 = ((($1)) + 1|0);\n   $$074$ph = $10 ? $12 : $1;\n   $$0$ph = $10 ? $11 : $12;\n   $13 = ($$0$ph>>>0)<($5>>>0);\n   if ($13) {\n    $$0$ph101 = $$0$ph;\n    $14 = (($4) + -1)|0;\n    $15 = (($14) - ($$0$ph101))|0;\n    $scevgep = (($1) + ($15)|0);\n    $scevgep102 = $scevgep;\n    $16 = $scevgep102 >>> 1;\n    $17 = (($16) + 1)|0;\n    $$07481 = $$074$ph;$$082 = $$0$ph;\n    while(1) {\n     $18 = HEAP8[$$082>>0]|0;\n     $19 = ((($$07481)) + 1|0);\n     HEAP8[$$07481>>0] = $18;\n     $20 = ((($$082)) + 2|0);\n     $21 = ($20>>>0)<($5>>>0);\n     if ($21) {\n      $$07481 = $19;$$082 = $20;\n     } else {\n      break;\n     }\n    }\n    $scevgep103 = (($$074$ph) + ($17)|0);\n    $$074$lcssa = $scevgep103;\n   } else {\n    $$074$lcssa = $$074$ph;\n   }\n   $22 = ((($0)) + 11|0);\n   HEAP8[$22>>0] = 8;\n   $$276 = $$074$lcssa;\n   break;\n  }\n  case 16:  {\n   $23 = ($2|0)==(0);\n   $24 = ((($1)) + 4|0);\n   $25 = ((($1)) + 2|0);\n   $$175$ph = $23 ? $25 : $1;\n   $$1$ph = $23 ? $24 : $25;\n   $26 = ($$1$ph>>>0)<($5>>>0);\n   if ($26) {\n    $$1$ph104 = $$1$ph;\n    $27 = (($4) + -1)|0;\n    $28 = (($27) - ($$1$ph104))|0;\n    $scevgep105 = (($1) + ($28)|0);\n    $scevgep105106 = $scevgep105;\n    $29 = $scevgep105106 >>> 2;\n    $30 = $29 << 1;\n    $31 = (($30) + 2)|0;\n    $$17583 = $$175$ph;$$184 = $$1$ph;\n    while(1) {\n     $32 = ((($$184)) + 1|0);\n     $33 = HEAP8[$$184>>0]|0;\n     $34 = ((($$17583)) + 1|0);\n     HEAP8[$$17583>>0] = $33;\n     $35 = HEAP8[$32>>0]|0;\n     $36 = ((($$17583)) + 2|0);\n     HEAP8[$34>>0] = $35;\n     $37 = ((($$184)) + 4|0);\n     $38 = ($37>>>0)<($5>>>0);\n     if ($38) {\n      $$17583 = $36;$$184 = $37;\n     } else {\n      break;\n     }\n    }\n    $scevgep107 = (($$175$ph) + ($31)|0);\n    $$175$lcssa = $scevgep107;\n   } else {\n    $$175$lcssa = $$175$ph;\n   }\n   $39 = ((($0)) + 11|0);\n   HEAP8[$39>>0] = 16;\n   $$276 = $$175$lcssa;\n   break;\n  }\n  default: {\n   return;\n  }\n  }\n  HEAP8[$6>>0] = 1;\n  $40 = ((($0)) + 8|0);\n  $41 = HEAP8[$40>>0]|0;\n  $42 = ($41<<24>>24)==(4);\n  if ($42) {\n   HEAP8[$40>>0] = 0;\n   $$6 = $$276;\n  } else {\n   $$6 = $$276;\n  }\n  break;\n }\n case 4:  {\n  $43 = ((($0)) + 9|0);\n  $44 = HEAP8[$43>>0]|0;\n  switch ($44<<24>>24) {\n  case 8:  {\n   $45 = ($2|0)==(0);\n   $46 = ((($1)) + 4|0);\n   $47 = ((($1)) + 3|0);\n   $48 = ((($1)) + 1|0);\n   $$377$ph = $45 ? $47 : $1;\n   $$2$ph = $45 ? $46 : $48;\n   $49 = ($$2$ph>>>0)<($5>>>0);\n   if ($49) {\n    $$2$ph108 = $$2$ph;\n    $50 = (($4) + -1)|0;\n    $51 = (($50) - ($$2$ph108))|0;\n    $scevgep109 = (($1) + ($51)|0);\n    $scevgep109110 = $scevgep109;\n    $52 = $scevgep109110 >>> 2;\n    $53 = ($52*3)|0;\n    $54 = (($53) + 3)|0;\n    $$289 = $$2$ph;$$37788 = $$377$ph;\n    while(1) {\n     $55 = ((($$289)) + 1|0);\n     $56 = HEAP8[$$289>>0]|0;\n     $57 = ((($$37788)) + 1|0);\n     HEAP8[$$37788>>0] = $56;\n     $58 = ((($$289)) + 2|0);\n     $59 = HEAP8[$55>>0]|0;\n     $60 = ((($$37788)) + 2|0);\n     HEAP8[$57>>0] = $59;\n     $61 = HEAP8[$58>>0]|0;\n     $62 = ((($$37788)) + 3|0);\n     HEAP8[$60>>0] = $61;\n     $63 = ((($$289)) + 4|0);\n     $64 = ($63>>>0)<($5>>>0);\n     if ($64) {\n      $$289 = $63;$$37788 = $62;\n     } else {\n      break;\n     }\n    }\n    $scevgep111 = (($$377$ph) + ($54)|0);\n    $$377$lcssa = $scevgep111;\n   } else {\n    $$377$lcssa = $$377$ph;\n   }\n   $65 = ((($0)) + 11|0);\n   HEAP8[$65>>0] = 24;\n   $$5 = $$377$lcssa;\n   break;\n  }\n  case 16:  {\n   $66 = ($2|0)==(0);\n   $67 = ((($1)) + 8|0);\n   $68 = ((($1)) + 6|0);\n   $69 = ((($1)) + 2|0);\n   $$4$ph = $66 ? $68 : $1;\n   $$3$ph = $66 ? $67 : $69;\n   $70 = ($$3$ph>>>0)<($5>>>0);\n   if ($70) {\n    $$3$ph112 = $$3$ph;\n    $71 = (($4) + -1)|0;\n    $72 = (($71) - ($$3$ph112))|0;\n    $scevgep113 = (($1) + ($72)|0);\n    $scevgep113114 = $scevgep113;\n    $73 = $scevgep113114 >>> 3;\n    $74 = ($73*6)|0;\n    $75 = (($74) + 6)|0;\n    $$394 = $$3$ph;$$493 = $$4$ph;\n    while(1) {\n     $76 = ((($$394)) + 1|0);\n     $77 = HEAP8[$$394>>0]|0;\n     $78 = ((($$493)) + 1|0);\n     HEAP8[$$493>>0] = $77;\n     $79 = ((($$394)) + 2|0);\n     $80 = HEAP8[$76>>0]|0;\n     $81 = ((($$493)) + 2|0);\n     HEAP8[$78>>0] = $80;\n     $82 = ((($$394)) + 3|0);\n     $83 = HEAP8[$79>>0]|0;\n     $84 = ((($$493)) + 3|0);\n     HEAP8[$81>>0] = $83;\n     $85 = ((($$394)) + 4|0);\n     $86 = HEAP8[$82>>0]|0;\n     $87 = ((($$493)) + 4|0);\n     HEAP8[$84>>0] = $86;\n     $88 = ((($$394)) + 5|0);\n     $89 = HEAP8[$85>>0]|0;\n     $90 = ((($$493)) + 5|0);\n     HEAP8[$87>>0] = $89;\n     $91 = HEAP8[$88>>0]|0;\n     $92 = ((($$493)) + 6|0);\n     HEAP8[$90>>0] = $91;\n     $93 = ((($$394)) + 8|0);\n     $94 = ($93>>>0)<($5>>>0);\n     if ($94) {\n      $$394 = $93;$$493 = $92;\n     } else {\n      break;\n     }\n    }\n    $scevgep115 = (($$4$ph) + ($75)|0);\n    $$4$lcssa = $scevgep115;\n   } else {\n    $$4$lcssa = $$4$ph;\n   }\n   $95 = ((($0)) + 11|0);\n   HEAP8[$95>>0] = 48;\n   $$5 = $$4$lcssa;\n   break;\n  }\n  default: {\n   return;\n  }\n  }\n  HEAP8[$6>>0] = 3;\n  $96 = ((($0)) + 8|0);\n  $97 = HEAP8[$96>>0]|0;\n  $98 = ($97<<24>>24)==(6);\n  if ($98) {\n   HEAP8[$96>>0] = 2;\n   $$6 = $$5;\n  } else {\n   $$6 = $$5;\n  }\n  break;\n }\n default: {\n  return;\n }\n }\n $99 = $$6;\n $100 = $1;\n $101 = (($99) - ($100))|0;\n HEAP32[$3>>2] = $101;\n return;\n}\nfunction _png_do_packswap($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$01819 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 9|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = ($3&255)<(8);\n if (!($4)) {\n  return;\n }\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($1) + ($6)|0);\n switch ($3<<24>>24) {\n case 1:  {\n  $$0 = 22067;\n  break;\n }\n case 2:  {\n  $$0 = 21555;\n  break;\n }\n case 4:  {\n  $$0 = 21811;\n  break;\n }\n default: {\n  return;\n }\n }\n $8 = ($6|0)>(0);\n if ($8) {\n  $$01819 = $1;\n } else {\n  return;\n }\n while(1) {\n  $9 = HEAP8[$$01819>>0]|0;\n  $10 = $9&255;\n  $11 = (($$0) + ($10)|0);\n  $12 = HEAP8[$11>>0]|0;\n  HEAP8[$$01819>>0] = $12;\n  $13 = ((($$01819)) + 1|0);\n  $14 = ($13>>>0)<($7>>>0);\n  if ($14) {\n   $$01819 = $13;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _png_do_swap($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$01718 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 9|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = ($3<<24>>24)==(16);\n if (!($4)) {\n  return;\n }\n $5 = HEAP32[$0>>2]|0;\n $6 = ((($0)) + 10|0);\n $7 = HEAP8[$6>>0]|0;\n $8 = $7&255;\n $9 = Math_imul($8, $5)|0;\n $10 = ($9|0)==(0);\n if ($10) {\n  return;\n } else {\n  $$01718 = 0;$$019 = $1;\n }\n while(1) {\n  $11 = HEAP8[$$019>>0]|0;\n  $12 = ((($$019)) + 1|0);\n  $13 = HEAP8[$12>>0]|0;\n  HEAP8[$$019>>0] = $13;\n  HEAP8[$12>>0] = $11;\n  $14 = (($$01718) + 1)|0;\n  $15 = ((($$019)) + 2|0);\n  $exitcond = ($14|0)==($9|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01718 = $14;$$019 = $15;\n  }\n }\n return;\n}\nfunction _png_do_bgr($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$07395 = 0, $$07494 = 0, $$07586 = 0, $$07692 = 0, $$07791 = 0, $$07889 = 0, $$07988 = 0, $$087 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond100 = 0, $exitcond101 = 0, $exitcond102 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 8|0);\n $3 = HEAP16[$2>>1]|0;\n $4 = $3&255;\n $5 = $4 & 2;\n $6 = ($5<<24>>24)==(0);\n if ($6) {\n  return;\n }\n $7 = ($3&65535) >>> 8;\n $8 = $7&255;\n $9 = HEAP32[$0>>2]|0;\n switch ($8<<24>>24) {\n case 8:  {\n  switch ($4<<24>>24) {\n  case 2:  {\n   $11 = ($9|0)==(0);\n   if ($11) {\n    return;\n   } else {\n    $$07586 = 0;$$087 = $1;\n   }\n   while(1) {\n    $12 = HEAP8[$$087>>0]|0;\n    $13 = ((($$087)) + 2|0);\n    $14 = HEAP8[$13>>0]|0;\n    HEAP8[$$087>>0] = $14;\n    HEAP8[$13>>0] = $12;\n    $15 = (($$07586) + 1)|0;\n    $16 = ((($$087)) + 3|0);\n    $exitcond = ($15|0)==($9|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$07586 = $15;$$087 = $16;\n    }\n   }\n   return;\n   break;\n  }\n  case 6:  {\n   $10 = ($9|0)==(0);\n   if ($10) {\n    return;\n   } else {\n    $$07889 = $1;$$07988 = 0;\n   }\n   while(1) {\n    $17 = HEAP8[$$07889>>0]|0;\n    $18 = ((($$07889)) + 2|0);\n    $19 = HEAP8[$18>>0]|0;\n    HEAP8[$$07889>>0] = $19;\n    HEAP8[$18>>0] = $17;\n    $20 = (($$07988) + 1)|0;\n    $21 = ((($$07889)) + 4|0);\n    $exitcond100 = ($20|0)==($9|0);\n    if ($exitcond100) {\n     break;\n    } else {\n     $$07889 = $21;$$07988 = $20;\n    }\n   }\n   return;\n   break;\n  }\n  default: {\n   return;\n  }\n  }\n  break;\n }\n case 16:  {\n  switch ($4<<24>>24) {\n  case 2:  {\n   $23 = ($9|0)==(0);\n   if ($23) {\n    return;\n   } else {\n    $$07692 = 0;$$07791 = $1;\n   }\n   while(1) {\n    $24 = HEAP8[$$07791>>0]|0;\n    $25 = ((($$07791)) + 4|0);\n    $26 = HEAP8[$25>>0]|0;\n    HEAP8[$$07791>>0] = $26;\n    HEAP8[$25>>0] = $24;\n    $27 = ((($$07791)) + 1|0);\n    $28 = HEAP8[$27>>0]|0;\n    $29 = ((($$07791)) + 5|0);\n    $30 = HEAP8[$29>>0]|0;\n    HEAP8[$27>>0] = $30;\n    HEAP8[$29>>0] = $28;\n    $31 = (($$07692) + 1)|0;\n    $32 = ((($$07791)) + 6|0);\n    $exitcond101 = ($31|0)==($9|0);\n    if ($exitcond101) {\n     break;\n    } else {\n     $$07692 = $31;$$07791 = $32;\n    }\n   }\n   return;\n   break;\n  }\n  case 6:  {\n   $22 = ($9|0)==(0);\n   if ($22) {\n    return;\n   } else {\n    $$07395 = 0;$$07494 = $1;\n   }\n   while(1) {\n    $33 = HEAP8[$$07494>>0]|0;\n    $34 = ((($$07494)) + 4|0);\n    $35 = HEAP8[$34>>0]|0;\n    HEAP8[$$07494>>0] = $35;\n    HEAP8[$34>>0] = $33;\n    $36 = ((($$07494)) + 1|0);\n    $37 = HEAP8[$36>>0]|0;\n    $38 = ((($$07494)) + 5|0);\n    $39 = HEAP8[$38>>0]|0;\n    HEAP8[$36>>0] = $39;\n    HEAP8[$38>>0] = $37;\n    $40 = (($$07395) + 1)|0;\n    $41 = ((($$07494)) + 8|0);\n    $exitcond102 = ($40|0)==($9|0);\n    if ($exitcond102) {\n     break;\n    } else {\n     $$07395 = $40;$$07494 = $41;\n    }\n   }\n   return;\n   break;\n  }\n  default: {\n   return;\n  }\n  }\n  break;\n }\n default: {\n  return;\n }\n }\n}\nfunction _png_do_invert($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$04760 = 0, $$04859 = 0, $$04954 = 0, $$05057 = 0, $$05156 = 0, $$055 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 8|0);\n $3 = HEAP16[$2>>1]|0;\n $4 = $3&255;\n switch ($4<<24>>24) {\n case 0:  {\n  $5 = ((($0)) + 4|0);\n  $6 = HEAP32[$5>>2]|0;\n  $7 = ($6|0)==(0);\n  if ($7) {\n   return;\n  } else {\n   $$04954 = 0;$$055 = $1;\n  }\n  while(1) {\n   $8 = HEAP8[$$055>>0]|0;\n   $9 = $8&255;\n   $10 = $9 ^ 255;\n   $11 = $10&255;\n   HEAP8[$$055>>0] = $11;\n   $12 = ((($$055)) + 1|0);\n   $13 = (($$04954) + 1)|0;\n   $exitcond = ($13|0)==($6|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$04954 = $13;$$055 = $12;\n   }\n  }\n  return;\n  break;\n }\n case 4:  {\n  $14 = ($3&65535) >>> 8;\n  $15 = $14&255;\n  switch ($15<<24>>24) {\n  case 8:  {\n   $16 = ((($0)) + 4|0);\n   $17 = HEAP32[$16>>2]|0;\n   $18 = ($17|0)==(0);\n   if ($18) {\n    return;\n   } else {\n    $$05057 = 0;$$05156 = $1;\n   }\n   while(1) {\n    $19 = HEAP8[$$05156>>0]|0;\n    $20 = $19&255;\n    $21 = $20 ^ 255;\n    $22 = $21&255;\n    HEAP8[$$05156>>0] = $22;\n    $23 = ((($$05156)) + 2|0);\n    $24 = (($$05057) + 2)|0;\n    $25 = ($24>>>0)<($17>>>0);\n    if ($25) {\n     $$05057 = $24;$$05156 = $23;\n    } else {\n     break;\n    }\n   }\n   return;\n   break;\n  }\n  case 16:  {\n   $26 = ((($0)) + 4|0);\n   $27 = HEAP32[$26>>2]|0;\n   $28 = ($27|0)==(0);\n   if ($28) {\n    return;\n   } else {\n    $$04760 = 0;$$04859 = $1;\n   }\n   while(1) {\n    $29 = HEAP8[$$04859>>0]|0;\n    $30 = $29&255;\n    $31 = $30 ^ 255;\n    $32 = $31&255;\n    HEAP8[$$04859>>0] = $32;\n    $33 = ((($$04859)) + 1|0);\n    $34 = HEAP8[$33>>0]|0;\n    $35 = $34&255;\n    $36 = $35 ^ 255;\n    $37 = $36&255;\n    HEAP8[$33>>0] = $37;\n    $38 = ((($$04859)) + 4|0);\n    $39 = (($$04760) + 4)|0;\n    $40 = ($39>>>0)<($27>>>0);\n    if ($40) {\n     $$04760 = $39;$$04859 = $38;\n    } else {\n     break;\n    }\n   }\n   return;\n   break;\n  }\n  default: {\n   return;\n  }\n  }\n  break;\n }\n default: {\n  return;\n }\n }\n}\nfunction _png_write_sig($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = $1;\n $3 = $2;\n HEAP32[$3>>2] = 1196314761;\n $4 = (($2) + 4)|0;\n $5 = $4;\n HEAP32[$5>>2] = 169478669;\n $6 = ((($0)) + 800|0);\n HEAP32[$6>>2] = 18;\n $7 = ((($0)) + 441|0);\n $8 = HEAP8[$7>>0]|0;\n $9 = $8&255;\n $10 = (($1) + ($9)|0);\n $11 = (8 - ($9))|0;\n _png_write_data($0,$10,$11);\n $12 = HEAP8[$7>>0]|0;\n $13 = ($12&255)<(3);\n if (!($13)) {\n  STACKTOP = sp;return;\n }\n $14 = ((($0)) + 208|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = $15 | 4096;\n HEAP32[$14>>2] = $16;\n STACKTOP = sp;return;\n}\nfunction _png_write_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 180|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  _png_error($0,22323);\n  // unreachable;\n } else {\n  FUNCTION_TABLE_viii[$4 & 127]($0,$1,$2);\n  return;\n }\n}\nfunction _png_reset_crc($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_crc32(0,0,0)|0);\n $2 = ((($0)) + 412|0);\n HEAP32[$2>>2] = $1;\n return;\n}\nfunction _png_calculate_crc($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0 = 0, $$022 = 0, $$023 = 0, $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $not$ = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 376|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 536870912;\n $6 = ($5|0)==(0);\n $7 = ((($0)) + 212|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = $8 & 768;\n $not$ = ($9|0)!=(768);\n $10 = $8 & 2048;\n $11 = ($10|0)==(0);\n $$023 = $6 ? $11 : $not$;\n $12 = ($2|0)!=(0);\n $or$cond = $12 & $$023;\n if (!($or$cond)) {\n  return;\n }\n $13 = ((($0)) + 412|0);\n $14 = HEAP32[$13>>2]|0;\n $$0 = $1;$$022 = $14;$$024 = $2;\n while(1) {\n  $15 = ($$024|0)==(0);\n  $$ = $15 ? -1 : $$024;\n  $16 = (_crc32($$022,$$0,$$)|0);\n  $17 = (($$0) + ($$)|0);\n  $18 = (($$024) - ($$))|0;\n  $19 = ($18|0)==(0);\n  if ($19) {\n   break;\n  } else {\n   $$0 = $17;$$022 = $16;$$024 = $18;\n  }\n }\n HEAP32[$13>>2] = $16;\n return;\n}\nfunction _png_write_chunk($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;\n var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond3$i$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $4 = sp + 8|0;\n $5 = sp;\n $6 = HEAP8[$1>>0]|0;\n $7 = $6&255;\n $8 = $7 << 24;\n $9 = ((($1)) + 1|0);\n $10 = HEAP8[$9>>0]|0;\n $11 = $10&255;\n $12 = $11 << 16;\n $13 = $12 | $8;\n $14 = ((($1)) + 2|0);\n $15 = HEAP8[$14>>0]|0;\n $16 = $15&255;\n $17 = $16 << 8;\n $18 = $13 | $17;\n $19 = ((($1)) + 3|0);\n $20 = HEAP8[$19>>0]|0;\n $21 = $20&255;\n $22 = $18 | $21;\n $23 = ($0|0)==(0|0);\n if ($23) {\n  STACKTOP = sp;return;\n }\n $24 = ($3|0)<(0);\n if ($24) {\n  _png_error($0,22351);\n  // unreachable;\n }\n $25 = ((($0)) + 800|0);\n HEAP32[$25>>2] = 34;\n $26 = $3 >>> 24;\n $27 = $26&255;\n HEAP8[$5>>0] = $27;\n $28 = $3 >>> 16;\n $29 = $28&255;\n $30 = ((($5)) + 1|0);\n HEAP8[$30>>0] = $29;\n $31 = $3 >>> 8;\n $32 = $31&255;\n $33 = ((($5)) + 2|0);\n HEAP8[$33>>0] = $32;\n $34 = $3&255;\n $35 = ((($5)) + 3|0);\n HEAP8[$35>>0] = $34;\n $36 = ((($5)) + 4|0);\n HEAP8[$36>>0] = $6;\n $37 = ((($5)) + 5|0);\n HEAP8[$37>>0] = $10;\n $38 = ((($5)) + 6|0);\n HEAP8[$38>>0] = $15;\n $39 = ((($5)) + 7|0);\n HEAP8[$39>>0] = $20;\n _png_write_data($0,$5,8);\n $40 = ((($0)) + 376|0);\n HEAP32[$40>>2] = $22;\n _png_reset_crc($0);\n _png_calculate_crc($0,$36,4);\n HEAP32[$25>>2] = 66;\n $41 = ($2|0)!=(0|0);\n $42 = ($3|0)!=(0);\n $or$cond3$i$i = $41 & $42;\n if ($or$cond3$i$i) {\n  _png_write_data($0,$2,$3);\n  _png_calculate_crc($0,$2,$3);\n }\n HEAP32[$25>>2] = 130;\n $43 = ((($0)) + 412|0);\n $44 = HEAP32[$43>>2]|0;\n $45 = $44 >>> 24;\n $46 = $45&255;\n HEAP8[$4>>0] = $46;\n $47 = $44 >>> 16;\n $48 = $47&255;\n $49 = ((($4)) + 1|0);\n HEAP8[$49>>0] = $48;\n $50 = $44 >>> 8;\n $51 = $50&255;\n $52 = ((($4)) + 2|0);\n HEAP8[$52>>0] = $51;\n $53 = $44&255;\n $54 = ((($4)) + 3|0);\n HEAP8[$54>>0] = $53;\n _png_write_data($0,$4,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_IHDR($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$0 = 0, $$084 = 0, $$cmp = 0, $$mask = 0, $$old10 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;\n var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $notlhs = 0, $notrhs = 0, $or$cond11 = 0, $or$cond9$not = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $8 = sp + 24|0;\n $9 = sp + 16|0;\n $10 = sp;\n L1: do {\n  switch ($4|0) {\n  case 0:  {\n   switch ($3|0) {\n   case 16: case 8: case 4: case 2: case 1:  {\n    $11 = ((($0)) + 439|0);\n    HEAP8[$11>>0] = 1;\n    break L1;\n    break;\n   }\n   default: {\n    _png_error($0,22378);\n    // unreachable;\n   }\n   }\n   break;\n  }\n  case 2:  {\n   switch ($3|0) {\n   case 8: case 16:  {\n    $12 = ((($0)) + 439|0);\n    HEAP8[$12>>0] = 3;\n    break L1;\n    break;\n   }\n   default: {\n    _png_error($0,22416);\n    // unreachable;\n   }\n   }\n   break;\n  }\n  case 3:  {\n   switch ($3|0) {\n   case 8: case 4: case 2: case 1:  {\n    $13 = ((($0)) + 439|0);\n    HEAP8[$13>>0] = 1;\n    break L1;\n    break;\n   }\n   default: {\n    _png_error($0,22448);\n    // unreachable;\n   }\n   }\n   break;\n  }\n  case 4:  {\n   switch ($3|0) {\n   case 8: case 16:  {\n    $14 = ((($0)) + 439|0);\n    HEAP8[$14>>0] = 2;\n    break L1;\n    break;\n   }\n   default: {\n    _png_error($0,22485);\n    // unreachable;\n   }\n   }\n   break;\n  }\n  case 6:  {\n   switch ($3|0) {\n   case 8: case 16:  {\n    $15 = ((($0)) + 439|0);\n    HEAP8[$15>>0] = 4;\n    break L1;\n    break;\n   }\n   default: {\n    _png_error($0,22529);\n    // unreachable;\n   }\n   }\n   break;\n  }\n  default: {\n   _png_error($0,22562);\n   // unreachable;\n  }\n  }\n } while(0);\n $16 = ($5|0)==(0);\n if (!($16)) {\n  _png_warning($0,22597);\n }\n $17 = ((($0)) + 708|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = $18 & 4;\n $20 = ($19|0)==(0);\n if ($20) {\n  label = 23;\n } else {\n  $21 = ((($0)) + 208|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = $22 & 4096;\n  $24 = ($23|0)==(0);\n  if ($24) {\n   $25 = $4 | 4;\n   $notlhs = ($25|0)!=(6);\n   $notrhs = ($6|0)!=(64);\n   $or$cond9$not = $notlhs | $notrhs;\n   $26 = ($6|0)!=(0);\n   $or$cond11 = $26 & $or$cond9$not;\n   if ($or$cond11) {\n    label = 24;\n   } else {\n    $$084 = $6;\n   }\n  } else {\n   label = 23;\n  }\n }\n if ((label|0) == 23) {\n  $$old10 = ($6|0)==(0);\n  if ($$old10) {\n   $$084 = 0;\n  } else {\n   label = 24;\n  }\n }\n if ((label|0) == 24) {\n  _png_warning($0,22632);\n  $$084 = 0;\n }\n $$cmp = ($7>>>0)>(1);\n if ($$cmp) {\n  _png_warning($0,22662);\n  $$0 = 1;\n } else {\n  $$0 = $7;\n }\n $27 = $3&255;\n $28 = ((($0)) + 436|0);\n HEAP8[$28>>0] = $27;\n $29 = $4&255;\n $30 = ((($0)) + 435|0);\n HEAP8[$30>>0] = $29;\n $31 = $$0&255;\n $32 = ((($0)) + 432|0);\n HEAP8[$32>>0] = $31;\n $33 = $$084&255;\n $34 = ((($0)) + 712|0);\n HEAP8[$34>>0] = $33;\n $35 = ((($0)) + 744|0);\n HEAP8[$35>>0] = 0;\n $36 = ((($0)) + 348|0);\n HEAP32[$36>>2] = $1;\n $37 = ((($0)) + 352|0);\n HEAP32[$37>>2] = $2;\n $38 = ((($0)) + 439|0);\n $39 = HEAP8[$38>>0]|0;\n $40 = $39&255;\n $41 = Math_imul($40, $3)|0;\n $42 = $41&255;\n $43 = ((($0)) + 438|0);\n HEAP8[$43>>0] = $42;\n $44 = $41 & 255;\n $45 = ($44>>>0)>(7);\n if ($45) {\n  $46 = $44 >>> 3;\n  $47 = Math_imul($46, $1)|0;\n  $52 = $47;\n } else {\n  $48 = Math_imul($44, $1)|0;\n  $49 = (($48) + 7)|0;\n  $50 = $49 >>> 3;\n  $52 = $50;\n }\n $51 = ((($0)) + 364|0);\n HEAP32[$51>>2] = $52;\n $53 = ((($0)) + 360|0);\n HEAP32[$53>>2] = $1;\n $54 = ((($0)) + 437|0);\n HEAP8[$54>>0] = $27;\n $55 = ((($0)) + 440|0);\n HEAP8[$55>>0] = $39;\n $56 = $1 >>> 24;\n $57 = $56&255;\n HEAP8[$10>>0] = $57;\n $58 = $1 >>> 16;\n $59 = $58&255;\n $60 = ((($10)) + 1|0);\n HEAP8[$60>>0] = $59;\n $61 = $1 >>> 8;\n $62 = $61&255;\n $63 = ((($10)) + 2|0);\n HEAP8[$63>>0] = $62;\n $64 = $1&255;\n $65 = ((($10)) + 3|0);\n HEAP8[$65>>0] = $64;\n $66 = ((($10)) + 4|0);\n $67 = $2 >>> 24;\n $68 = $67&255;\n HEAP8[$66>>0] = $68;\n $69 = $2 >>> 16;\n $70 = $69&255;\n $71 = ((($10)) + 5|0);\n HEAP8[$71>>0] = $70;\n $72 = $2 >>> 8;\n $73 = $72&255;\n $74 = ((($10)) + 6|0);\n HEAP8[$74>>0] = $73;\n $75 = $2&255;\n $76 = ((($10)) + 7|0);\n HEAP8[$76>>0] = $75;\n $77 = ((($10)) + 8|0);\n HEAP8[$77>>0] = $27;\n $78 = ((($10)) + 9|0);\n HEAP8[$78>>0] = $29;\n $79 = ((($10)) + 10|0);\n HEAP8[$79>>0] = 0;\n $80 = ((($10)) + 11|0);\n HEAP8[$80>>0] = $33;\n $81 = ((($10)) + 12|0);\n HEAP8[$81>>0] = $31;\n $82 = ((($0)) + 800|0);\n HEAP32[$82>>2] = 34;\n HEAP8[$8>>0] = 0;\n $83 = ((($8)) + 1|0);\n HEAP8[$83>>0] = 0;\n $84 = ((($8)) + 2|0);\n HEAP8[$84>>0] = 0;\n $85 = ((($8)) + 3|0);\n HEAP8[$85>>0] = 13;\n $86 = ((($8)) + 4|0);\n HEAP8[$86>>0] = 73;\n $87 = ((($8)) + 5|0);\n HEAP8[$87>>0] = 72;\n $88 = ((($8)) + 6|0);\n HEAP8[$88>>0] = 68;\n $89 = ((($8)) + 7|0);\n HEAP8[$89>>0] = 82;\n _png_write_data($0,$8,8);\n $90 = ((($0)) + 376|0);\n HEAP32[$90>>2] = 1229472850;\n _png_reset_crc($0);\n _png_calculate_crc($0,$86,4);\n HEAP32[$82>>2] = 66;\n _png_write_data($0,$10,13);\n _png_calculate_crc($0,$10,13);\n HEAP32[$82>>2] = 130;\n $91 = ((($0)) + 412|0);\n $92 = HEAP32[$91>>2]|0;\n $93 = $92 >>> 24;\n $94 = $93&255;\n HEAP8[$9>>0] = $94;\n $95 = $92 >>> 16;\n $96 = $95&255;\n $97 = ((($9)) + 1|0);\n HEAP8[$97>>0] = $96;\n $98 = $92 >>> 8;\n $99 = $98&255;\n $100 = ((($9)) + 2|0);\n HEAP8[$100>>0] = $99;\n $101 = $92&255;\n $102 = ((($9)) + 3|0);\n HEAP8[$102>>0] = $101;\n _png_write_data($0,$9,4);\n $103 = ((($0)) + 434|0);\n $104 = HEAP16[$103>>1]|0;\n $105 = $104&255;\n $106 = ($105<<24>>24)==(0);\n if (!($106)) {\n  $110 = ((($0)) + 208|0);\n  HEAP32[$110>>2] = 1;\n  STACKTOP = sp;return;\n }\n $$mask = $104 & -256;\n $107 = ($$mask<<16>>16)==(768);\n if (!($107)) {\n  $108 = HEAP8[$28>>0]|0;\n  $109 = ($108&255)<(8);\n  if (!($109)) {\n   HEAP8[$103>>0] = -8;\n   $110 = ((($0)) + 208|0);\n   HEAP32[$110>>2] = 1;\n   STACKTOP = sp;return;\n  }\n }\n HEAP8[$103>>0] = 8;\n $110 = ((($0)) + 208|0);\n HEAP32[$110>>2] = 1;\n STACKTOP = sp;return;\n}\nfunction _png_write_PLTE($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$02627 = 0, $$028 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $exitcond30 = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp + 16|0;\n $4 = sp + 8|0;\n $5 = sp;\n $6 = ((($0)) + 708|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = $7 & 1;\n $9 = $8 | $2;\n $10 = ($9|0)==(0);\n $11 = ($2>>>0)>(256);\n $or$cond3 = $11 | $10;\n $12 = ((($0)) + 435|0);\n $13 = HEAP8[$12>>0]|0;\n if ($or$cond3) {\n  $14 = ($13<<24>>24)==(3);\n  if ($14) {\n   _png_error($0,22695);\n   // unreachable;\n  }\n  _png_warning($0,22695);\n  STACKTOP = sp;return;\n }\n $15 = $13 & 2;\n $16 = ($15<<24>>24)==(0);\n if ($16) {\n  _png_warning($0,22731);\n  STACKTOP = sp;return;\n }\n $17 = $2&65535;\n $18 = ((($0)) + 420|0);\n HEAP16[$18>>1] = $17;\n $19 = ($2*3)|0;\n $20 = ((($0)) + 800|0);\n HEAP32[$20>>2] = 34;\n $21 = $19 >>> 24;\n $22 = $21&255;\n HEAP8[$4>>0] = $22;\n $23 = $19 >>> 16;\n $24 = $23&255;\n $25 = ((($4)) + 1|0);\n HEAP8[$25>>0] = $24;\n $26 = $19 >>> 8;\n $27 = $26&255;\n $28 = ((($4)) + 2|0);\n HEAP8[$28>>0] = $27;\n $29 = $19&255;\n $30 = ((($4)) + 3|0);\n HEAP8[$30>>0] = $29;\n $31 = ((($4)) + 4|0);\n HEAP8[$31>>0] = 80;\n $32 = ((($4)) + 5|0);\n HEAP8[$32>>0] = 76;\n $33 = ((($4)) + 6|0);\n HEAP8[$33>>0] = 84;\n $34 = ((($4)) + 7|0);\n HEAP8[$34>>0] = 69;\n _png_write_data($0,$4,8);\n $35 = ((($0)) + 376|0);\n HEAP32[$35>>2] = 1347179589;\n _png_reset_crc($0);\n _png_calculate_crc($0,$31,4);\n HEAP32[$20>>2] = 66;\n $36 = ($2|0)==(0);\n if (!($36)) {\n  $37 = ((($5)) + 1|0);\n  $38 = ((($5)) + 2|0);\n  $$02627 = 0;$$028 = $1;\n  while(1) {\n   $39 = HEAP8[$$028>>0]|0;\n   HEAP8[$5>>0] = $39;\n   $40 = ((($$028)) + 1|0);\n   $41 = HEAP8[$40>>0]|0;\n   HEAP8[$37>>0] = $41;\n   $42 = ((($$028)) + 2|0);\n   $43 = HEAP8[$42>>0]|0;\n   HEAP8[$38>>0] = $43;\n   _png_write_data($0,$5,3);\n   _png_calculate_crc($0,$5,3);\n   $44 = (($$02627) + 1)|0;\n   $45 = ((($$028)) + 3|0);\n   $exitcond30 = ($44|0)==($2|0);\n   if ($exitcond30) {\n    break;\n   } else {\n    $$02627 = $44;$$028 = $45;\n   }\n  }\n }\n HEAP32[$20>>2] = 130;\n $46 = ((($0)) + 412|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = $47 >>> 24;\n $49 = $48&255;\n HEAP8[$3>>0] = $49;\n $50 = $47 >>> 16;\n $51 = $50&255;\n $52 = ((($3)) + 1|0);\n HEAP8[$52>>0] = $51;\n $53 = $47 >>> 8;\n $54 = $53&255;\n $55 = ((($3)) + 2|0);\n HEAP8[$55>>0] = $54;\n $56 = $47&255;\n $57 = ((($3)) + 3|0);\n HEAP8[$57>>0] = $56;\n _png_write_data($0,$3,4);\n $58 = ((($0)) + 208|0);\n $59 = HEAP32[$58>>2]|0;\n $60 = $59 | 2;\n HEAP32[$58>>2] = $60;\n STACKTOP = sp;return;\n}\nfunction _png_compress_IDAT($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$0$i = 0, $$0$i87 = 0, $$0$i92 = 0, $$029$i = 0, $$029$i91 = 0, $$pre = 0, $$pre$phi117Z2D = 0, $$pre$phi119Z2D = 0, $$pre$phi121Z2D = 0, $$pre$phiZ2D = 0, $$pre116 = 0, $$pre118 = 0, $$pre120 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;\n var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;\n var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;\n var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;\n var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;\n var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;\n var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$or$cond = 0, $notlhs = 0, $notrhs = 0, $or$cond$i = 0, $or$cond$i90 = 0;\n var $or$cond3 = 0, $or$cond31$i = 0, $or$cond31$i93 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $4 = sp + 24|0;\n $5 = sp + 16|0;\n $6 = sp + 8|0;\n $7 = sp;\n $8 = ((($0)) + 220|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(1229209940);\n do {\n  if ($10) {\n   $$pre = ((($0)) + 240|0);\n   $$pre116 = ((($0)) + 280|0);\n   $$pre118 = ((($0)) + 284|0);\n   $$pre120 = ((($0)) + 236|0);\n   $$pre$phi117Z2D = $$pre116;$$pre$phi119Z2D = $$pre118;$$pre$phi121Z2D = $$pre120;$$pre$phiZ2D = $$pre;\n  } else {\n   $11 = ((($0)) + 280|0);\n   $12 = HEAP32[$11>>2]|0;\n   $13 = ($12|0)==(0|0);\n   if ($13) {\n    $14 = ((($0)) + 284|0);\n    $15 = HEAP32[$14>>2]|0;\n    $16 = (($15) + 4)|0;\n    $17 = (_png_malloc($0,$16)|0);\n    HEAP32[$11>>2] = $17;\n    HEAP32[$17>>2] = 0;\n   } else {\n    $18 = HEAP32[$12>>2]|0;\n    $19 = ($18|0)==(0|0);\n    if (!($19)) {\n     HEAP32[$12>>2] = 0;\n     $$0$i = $18;\n     while(1) {\n      $20 = HEAP32[$$0$i>>2]|0;\n      _png_free($0,$$0$i);\n      $21 = ($20|0)==(0|0);\n      if ($21) {\n       break;\n      } else {\n       $$0$i = $20;\n      }\n     }\n    }\n   }\n   $22 = (_png_image_size($0)|0);\n   $23 = (_png_deflate_claim($0,1229209940,$22)|0);\n   $24 = ($23|0)==(0);\n   if ($24) {\n    $27 = HEAP32[$11>>2]|0;\n    $28 = ((($27)) + 4|0);\n    $29 = ((($0)) + 236|0);\n    HEAP32[$29>>2] = $28;\n    $30 = ((($0)) + 284|0);\n    $31 = HEAP32[$30>>2]|0;\n    $32 = ((($0)) + 240|0);\n    HEAP32[$32>>2] = $31;\n    $$pre$phi117Z2D = $11;$$pre$phi119Z2D = $30;$$pre$phi121Z2D = $29;$$pre$phiZ2D = $32;\n    break;\n   } else {\n    $25 = ((($0)) + 248|0);\n    $26 = HEAP32[$25>>2]|0;\n    _png_error($0,$26);\n    // unreachable;\n   }\n  }\n } while(0);\n $33 = ((($0)) + 224|0);\n HEAP32[$33>>2] = $1;\n $34 = ((($0)) + 228|0);\n HEAP32[$34>>2] = 0;\n $35 = ((($0)) + 208|0);\n $36 = ((($0)) + 744|0);\n $37 = ((($0)) + 800|0);\n $38 = ((($4)) + 1|0);\n $39 = ((($4)) + 2|0);\n $40 = ((($4)) + 3|0);\n $41 = ((($4)) + 4|0);\n $42 = ((($4)) + 5|0);\n $43 = ((($4)) + 6|0);\n $44 = ((($4)) + 7|0);\n $45 = ((($0)) + 376|0);\n $46 = ((($0)) + 412|0);\n $47 = ((($7)) + 1|0);\n $48 = ((($7)) + 2|0);\n $49 = ((($7)) + 3|0);\n $notrhs = ($3|0)==(0);\n $$0 = $2;\n while(1) {\n  HEAP32[$34>>2] = $$0;\n  $50 = (_deflate($33,$3)|0);\n  $51 = HEAP32[$34>>2]|0;\n  HEAP32[$34>>2] = 0;\n  $52 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $53 = ($52|0)==(0);\n  if ($53) {\n   $54 = HEAP32[$$pre$phi117Z2D>>2]|0;\n   $55 = ((($54)) + 4|0);\n   $56 = HEAP32[$$pre$phi119Z2D>>2]|0;\n   $57 = HEAP32[$35>>2]|0;\n   $58 = $57 & 4;\n   $59 = ($58|0)==(0);\n   if ($59) {\n    $60 = HEAP8[$36>>0]|0;\n    $61 = ($60<<24>>24)==(0);\n    if ($61) {\n     $62 = (_png_image_size($0)|0);\n     $63 = ($62>>>0)<(16385);\n     if ($63) {\n      $64 = HEAP8[$55>>0]|0;\n      $65 = $64&255;\n      $66 = $65 & 15;\n      $67 = ($66|0)==(8);\n      $68 = $65 & 240;\n      $69 = ($68>>>0)<(113);\n      $or$cond$i = $67 & $69;\n      if ($or$cond$i) {\n       $70 = $65 >>> 4;\n       $71 = (($70) + 7)|0;\n       $72 = 1 << $71;\n       $73 = ($72>>>0)<($62>>>0);\n       if (!($73)) {\n        $$0$i87 = $72;$$029$i = $70;\n        while(1) {\n         $74 = $$0$i87 >>> 1;\n         $75 = (($$029$i) + -1)|0;\n         $76 = ($75|0)==(0);\n         $77 = ($74>>>0)<($62>>>0);\n         $or$cond31$i = $76 | $77;\n         if ($or$cond31$i) {\n          break;\n         } else {\n          $$0$i87 = $74;$$029$i = $75;\n         }\n        }\n        $78 = $75 << 4;\n        $79 = $78 | 8;\n        $80 = $79&255;\n        HEAP8[$55>>0] = $80;\n        $81 = ((($54)) + 5|0);\n        $82 = HEAP8[$81>>0]|0;\n        $83 = $82&255;\n        $84 = $83 & 224;\n        $85 = $79 << 8;\n        $86 = $84 | $85;\n        $87 = (($86>>>0) % 31)&-1;\n        $88 = $87 | $84;\n        $89 = $88 ^ 31;\n        $90 = $89&255;\n        HEAP8[$81>>0] = $90;\n       }\n      }\n     }\n    }\n   }\n   $91 = ($56|0)<(0);\n   if ($91) {\n    label = 21;\n    break;\n   }\n   HEAP32[$37>>2] = 34;\n   $92 = $56 >>> 24;\n   $93 = $92&255;\n   HEAP8[$4>>0] = $93;\n   $94 = $56 >>> 16;\n   $95 = $94&255;\n   HEAP8[$38>>0] = $95;\n   $96 = $56 >>> 8;\n   $97 = $96&255;\n   HEAP8[$39>>0] = $97;\n   $98 = $56&255;\n   HEAP8[$40>>0] = $98;\n   HEAP8[$41>>0] = 73;\n   HEAP8[$42>>0] = 68;\n   HEAP8[$43>>0] = 65;\n   HEAP8[$44>>0] = 84;\n   _png_write_data($0,$4,8);\n   HEAP32[$45>>2] = 1229209940;\n   _png_reset_crc($0);\n   _png_calculate_crc($0,$41,4);\n   HEAP32[$37>>2] = 66;\n   $99 = ($56|0)==(0);\n   if (!($99)) {\n    _png_write_data($0,$55,$56);\n    _png_calculate_crc($0,$55,$56);\n   }\n   HEAP32[$37>>2] = 130;\n   $100 = HEAP32[$46>>2]|0;\n   $101 = $100 >>> 24;\n   $102 = $101&255;\n   HEAP8[$7>>0] = $102;\n   $103 = $100 >>> 16;\n   $104 = $103&255;\n   HEAP8[$47>>0] = $104;\n   $105 = $100 >>> 8;\n   $106 = $105&255;\n   HEAP8[$48>>0] = $106;\n   $107 = $100&255;\n   HEAP8[$49>>0] = $107;\n   _png_write_data($0,$7,4);\n   $108 = HEAP32[$35>>2]|0;\n   $109 = $108 | 4;\n   HEAP32[$35>>2] = $109;\n   HEAP32[$$pre$phi121Z2D>>2] = $55;\n   HEAP32[$$pre$phiZ2D>>2] = $56;\n   $notlhs = ($50|0)!=(0);\n   $not$or$cond = $notrhs | $notlhs;\n   if ($not$or$cond) {\n    $119 = $56;\n   } else {\n    $$0 = $51;\n    continue;\n   }\n  } else {\n   $119 = $52;\n  }\n  $110 = ($50|0)==(0);\n  if (!($110)) {\n   label = 29;\n   break;\n  }\n  $111 = ($51|0)==(0);\n  if ($111) {\n   label = 27;\n   break;\n  } else {\n   $$0 = $51;\n  }\n }\n if ((label|0) == 21) {\n  _png_error($0,22351);\n  // unreachable;\n }\n else if ((label|0) == 27) {\n  $112 = ($3|0)==(4);\n  if ($112) {\n   _png_error($0,22787);\n   // unreachable;\n  } else {\n   STACKTOP = sp;return;\n  }\n }\n else if ((label|0) == 29) {\n  $113 = ($50|0)==(1);\n  $114 = ($3|0)==(4);\n  $or$cond3 = $114 & $113;\n  if (!($or$cond3)) {\n   _png_zstream_error($0,$50);\n   $183 = ((($0)) + 248|0);\n   $184 = HEAP32[$183>>2]|0;\n   _png_error($0,$184);\n   // unreachable;\n  }\n  $115 = HEAP32[$$pre$phi117Z2D>>2]|0;\n  $116 = ((($115)) + 4|0);\n  $117 = HEAP32[$$pre$phi119Z2D>>2]|0;\n  $118 = (($117) - ($119))|0;\n  $120 = HEAP32[$35>>2]|0;\n  $121 = $120 & 4;\n  $122 = ($121|0)==(0);\n  if ($122) {\n   $123 = HEAP8[$36>>0]|0;\n   $124 = ($123<<24>>24)==(0);\n   if ($124) {\n    $125 = (_png_image_size($0)|0);\n    $126 = ($125>>>0)<(16385);\n    if ($126) {\n     $127 = HEAP8[$116>>0]|0;\n     $128 = $127&255;\n     $129 = $128 & 15;\n     $130 = ($129|0)==(8);\n     $131 = $128 & 240;\n     $132 = ($131>>>0)<(113);\n     $or$cond$i90 = $130 & $132;\n     if ($or$cond$i90) {\n      $133 = $128 >>> 4;\n      $134 = (($133) + 7)|0;\n      $135 = 1 << $134;\n      $136 = ($135>>>0)<($125>>>0);\n      if (!($136)) {\n       $$0$i92 = $135;$$029$i91 = $133;\n       while(1) {\n        $137 = $$0$i92 >>> 1;\n        $138 = (($$029$i91) + -1)|0;\n        $139 = ($138|0)==(0);\n        $140 = ($137>>>0)<($125>>>0);\n        $or$cond31$i93 = $139 | $140;\n        if ($or$cond31$i93) {\n         break;\n        } else {\n         $$0$i92 = $137;$$029$i91 = $138;\n        }\n       }\n       $141 = $138 << 4;\n       $142 = $141 | 8;\n       $143 = $142&255;\n       HEAP8[$116>>0] = $143;\n       $144 = ((($115)) + 5|0);\n       $145 = HEAP8[$144>>0]|0;\n       $146 = $145&255;\n       $147 = $146 & 224;\n       $148 = $142 << 8;\n       $149 = $147 | $148;\n       $150 = (($149>>>0) % 31)&-1;\n       $151 = $150 | $147;\n       $152 = $151 ^ 31;\n       $153 = $152&255;\n       HEAP8[$144>>0] = $153;\n      }\n     }\n    }\n   }\n  }\n  $154 = ($118|0)<(0);\n  if ($154) {\n   _png_error($0,22351);\n   // unreachable;\n  }\n  HEAP32[$37>>2] = 34;\n  $155 = $118 >>> 24;\n  $156 = $155&255;\n  HEAP8[$6>>0] = $156;\n  $157 = $118 >>> 16;\n  $158 = $157&255;\n  $159 = ((($6)) + 1|0);\n  HEAP8[$159>>0] = $158;\n  $160 = $118 >>> 8;\n  $161 = $160&255;\n  $162 = ((($6)) + 2|0);\n  HEAP8[$162>>0] = $161;\n  $163 = $118&255;\n  $164 = ((($6)) + 3|0);\n  HEAP8[$164>>0] = $163;\n  $165 = ((($6)) + 4|0);\n  HEAP8[$165>>0] = 73;\n  $166 = ((($6)) + 5|0);\n  HEAP8[$166>>0] = 68;\n  $167 = ((($6)) + 6|0);\n  HEAP8[$167>>0] = 65;\n  $168 = ((($6)) + 7|0);\n  HEAP8[$168>>0] = 84;\n  _png_write_data($0,$6,8);\n  HEAP32[$45>>2] = 1229209940;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$165,4);\n  HEAP32[$37>>2] = 66;\n  $169 = ($118|0)==(0);\n  if (!($169)) {\n   _png_write_data($0,$116,$118);\n   _png_calculate_crc($0,$116,$118);\n  }\n  HEAP32[$37>>2] = 130;\n  $170 = HEAP32[$46>>2]|0;\n  $171 = $170 >>> 24;\n  $172 = $171&255;\n  HEAP8[$5>>0] = $172;\n  $173 = $170 >>> 16;\n  $174 = $173&255;\n  $175 = ((($5)) + 1|0);\n  HEAP8[$175>>0] = $174;\n  $176 = $170 >>> 8;\n  $177 = $176&255;\n  $178 = ((($5)) + 2|0);\n  HEAP8[$178>>0] = $177;\n  $179 = $170&255;\n  $180 = ((($5)) + 3|0);\n  HEAP8[$180>>0] = $179;\n  _png_write_data($0,$5,4);\n  HEAP32[$$pre$phiZ2D>>2] = 0;\n  HEAP32[$$pre$phi121Z2D>>2] = 0;\n  $181 = HEAP32[$35>>2]|0;\n  $182 = $181 | 12;\n  HEAP32[$35>>2] = $182;\n  HEAP32[$8>>2] = 0;\n  STACKTOP = sp;return;\n }\n}\nfunction _png_image_size($0) {\n $0 = $0|0;\n var $$0 = 0, $$042 = 0, $$042$ph = 0, $$042$ph$us = 0, $$042$us = 0, $$043$ph = 0, $$043$ph$us = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;\n var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;\n var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 352|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 364|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 | $2;\n $6 = ($5>>>0)<(32768);\n if (!($6)) {\n  $$0 = -1;\n  return ($$0|0);\n }\n $7 = ((($0)) + 432|0);\n $8 = HEAP8[$7>>0]|0;\n $9 = ($8<<24>>24)==(0);\n if ($9) {\n  $87 = (($4) + 1)|0;\n  $88 = Math_imul($87, $2)|0;\n  $$0 = $88;\n  return ($$0|0);\n }\n $10 = ((($0)) + 348|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 438|0);\n $13 = HEAP8[$12>>0]|0;\n $14 = $13&255;\n $15 = (($11) + -1)|0;\n $16 = ($13&255)>(7);\n $17 = $14 >>> 3;\n $18 = (($2) + -1)|0;\n if ($16) {\n  $$042$ph$us = 0;$$043$ph$us = 0;\n  L9: while(1) {\n   $$042$us = $$042$ph$us;\n   while(1) {\n    $51 = ($$042$us|0)<(7);\n    if (!($51)) {\n     $$0 = $$043$ph$us;\n     break L9;\n    }\n    $19 = ($$042$us|0)>(1);\n    $20 = (7 - ($$042$us))|0;\n    $21 = $20 >> 1;\n    $22 = $19 ? $21 : 3;\n    $23 = 1 << $22;\n    $24 = $$042$us & 1;\n    $25 = (($$042$us) + 1)|0;\n    $26 = $25 >> 1;\n    $27 = (3 - ($26))|0;\n    $28 = $24 << $27;\n    $29 = $28 & 7;\n    $30 = (($15) + ($23))|0;\n    $31 = (($30) - ($29))|0;\n    $32 = $31 >>> $22;\n    $33 = ($32|0)==(0);\n    if ($33) {\n     $$042$us = $25;\n    } else {\n     break;\n    }\n   }\n   $34 = Math_imul($32, $17)|0;\n   $35 = (($34) + 1)|0;\n   $36 = ($$042$us|0)>(2);\n   $37 = (8 - ($$042$us))|0;\n   $38 = $37 >> 1;\n   $39 = $36 ? $38 : 3;\n   $40 = 1 << $39;\n   $41 = $24 ^ 1;\n   $42 = $$042$us >> 1;\n   $43 = (3 - ($42))|0;\n   $44 = $41 << $43;\n   $45 = $44 & 7;\n   $46 = (($18) + ($40))|0;\n   $47 = (($46) - ($45))|0;\n   $48 = $47 >>> $39;\n   $49 = Math_imul($35, $48)|0;\n   $50 = (($49) + ($$043$ph$us))|0;\n   $$042$ph$us = $25;$$043$ph$us = $50;\n  }\n  return ($$0|0);\n } else {\n  $$042$ph = 0;$$043$ph = 0;\n  L16: while(1) {\n   $$042 = $$042$ph;\n   while(1) {\n    $52 = ($$042|0)<(7);\n    if (!($52)) {\n     $$0 = $$043$ph;\n     break L16;\n    }\n    $53 = ($$042|0)>(1);\n    $54 = (7 - ($$042))|0;\n    $55 = $54 >> 1;\n    $56 = $53 ? $55 : 3;\n    $57 = 1 << $56;\n    $58 = $$042 & 1;\n    $59 = (($$042) + 1)|0;\n    $60 = $59 >> 1;\n    $61 = (3 - ($60))|0;\n    $62 = $58 << $61;\n    $63 = $62 & 7;\n    $64 = (($15) + ($57))|0;\n    $65 = (($64) - ($63))|0;\n    $66 = $65 >>> $56;\n    $67 = ($66|0)==(0);\n    if ($67) {\n     $$042 = $59;\n    } else {\n     break;\n    }\n   }\n   $68 = Math_imul($66, $14)|0;\n   $69 = (($68) + 7)|0;\n   $70 = $69 >>> 3;\n   $71 = (($70) + 1)|0;\n   $72 = ($$042|0)>(2);\n   $73 = (8 - ($$042))|0;\n   $74 = $73 >> 1;\n   $75 = $72 ? $74 : 3;\n   $76 = 1 << $75;\n   $77 = $58 ^ 1;\n   $78 = $$042 >> 1;\n   $79 = (3 - ($78))|0;\n   $80 = $77 << $79;\n   $81 = $80 & 7;\n   $82 = (($18) + ($76))|0;\n   $83 = (($82) - ($81))|0;\n   $84 = $83 >>> $75;\n   $85 = Math_imul($71, $84)|0;\n   $86 = (($85) + ($$043$ph))|0;\n   $$042$ph = $59;$$043$ph = $86;\n  }\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _png_deflate_claim($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$07687 = 0, $$077 = 0, $$078 = 0, $$079 = 0, $$080 = 0, $$081 = 0, $$089 = 0, $$184 = 0, $$188 = 0, $$2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0;\n var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;\n var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;\n var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;\n var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;\n var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $3 = sp;\n $4 = ((($0)) + 220|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0);\n do {\n  if (!($6)) {\n   $7 = $1 >>> 24;\n   $8 = $7&255;\n   HEAP8[$3>>0] = $8;\n   $9 = $1 >>> 16;\n   $10 = $9&255;\n   $11 = ((($3)) + 1|0);\n   HEAP8[$11>>0] = $10;\n   $12 = $1 >>> 8;\n   $13 = $12&255;\n   $14 = ((($3)) + 2|0);\n   HEAP8[$14>>0] = $13;\n   $15 = $1&255;\n   $16 = ((($3)) + 3|0);\n   HEAP8[$16>>0] = $15;\n   $17 = ((($3)) + 4|0);\n   HEAP8[$17>>0] = 58;\n   $18 = ((($3)) + 5|0);\n   HEAP8[$18>>0] = 32;\n   $19 = $5 >>> 24;\n   $20 = $19&255;\n   $21 = ((($3)) + 6|0);\n   HEAP8[$21>>0] = $20;\n   $22 = $5 >>> 16;\n   $23 = $22&255;\n   $24 = ((($3)) + 7|0);\n   HEAP8[$24>>0] = $23;\n   $25 = $5 >>> 8;\n   $26 = $25&255;\n   $27 = ((($3)) + 8|0);\n   HEAP8[$27>>0] = $26;\n   $28 = $5&255;\n   $29 = ((($3)) + 9|0);\n   HEAP8[$29>>0] = $28;\n   (_png_safecat($3,64,10,24545)|0);\n   _png_warning($0,$3);\n   $30 = HEAP32[$4>>2]|0;\n   $31 = ($30|0)==(1229209940);\n   if (!($31)) {\n    HEAP32[$4>>2] = 0;\n    break;\n   }\n   $32 = ((($0)) + 248|0);\n   HEAP32[$32>>2] = 23003;\n   $$184 = -2;\n   STACKTOP = sp;return ($$184|0);\n  }\n } while(0);\n $33 = ((($0)) + 288|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($0)) + 292|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = ((($0)) + 296|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = ((($0)) + 300|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = ($1|0)==(1229209940);\n do {\n  if ($41) {\n   $42 = ((($0)) + 212|0);\n   $43 = HEAP32[$42>>2]|0;\n   $44 = $43 & 1;\n   $45 = ($44|0)==(0);\n   if ($45) {\n    $48 = ((($0)) + 434|0);\n    $49 = HEAP8[$48>>0]|0;\n    $not$ = ($49<<24>>24)!=(8);\n    $$ = $not$&1;\n    $$077 = $$;$$078 = $40;$$079 = $38;$$080 = $36;$$081 = $34;\n    break;\n   } else {\n    $46 = ((($0)) + 304|0);\n    $47 = HEAP32[$46>>2]|0;\n    $$077 = $47;$$078 = $40;$$079 = $38;$$080 = $36;$$081 = $34;\n    break;\n   }\n  } else {\n   $50 = ((($0)) + 308|0);\n   $51 = HEAP32[$50>>2]|0;\n   $52 = ((($0)) + 312|0);\n   $53 = HEAP32[$52>>2]|0;\n   $54 = ((($0)) + 316|0);\n   $55 = HEAP32[$54>>2]|0;\n   $56 = ((($0)) + 320|0);\n   $57 = HEAP32[$56>>2]|0;\n   $58 = ((($0)) + 324|0);\n   $59 = HEAP32[$58>>2]|0;\n   $$077 = $59;$$078 = $57;$$079 = $55;$$080 = $53;$$081 = $51;\n  }\n } while(0);\n $60 = ($2>>>0)<(16385);\n if ($60) {\n  $61 = (($$079) + -1)|0;\n  $62 = 1 << $61;\n  $63 = (($2) + 262)|0;\n  $64 = ($63>>>0)>($62>>>0);\n  if ($64) {\n   $$2 = $$079;\n  } else {\n   $$089 = $62;$$188 = $$079;\n   while(1) {\n    $65 = $$089 >>> 1;\n    $66 = (($$188) + -1)|0;\n    $67 = ($63>>>0)>($65>>>0);\n    if ($67) {\n     $$2 = $66;\n     break;\n    } else {\n     $$089 = $65;$$188 = $66;\n    }\n   }\n  }\n } else {\n  $$2 = $$079;\n }\n $68 = ((($0)) + 212|0);\n $69 = HEAP32[$68>>2]|0;\n $70 = $69 & 2;\n $71 = ($70|0)==(0);\n do {\n  if ($71) {\n   $97 = $69;\n  } else {\n   $72 = ((($0)) + 328|0);\n   $73 = HEAP32[$72>>2]|0;\n   $74 = ($73|0)==($$081|0);\n   if ($74) {\n    $75 = ((($0)) + 332|0);\n    $76 = HEAP32[$75>>2]|0;\n    $77 = ($76|0)==($$080|0);\n    if ($77) {\n     $78 = ((($0)) + 336|0);\n     $79 = HEAP32[$78>>2]|0;\n     $80 = ($79|0)==($$2|0);\n     if ($80) {\n      $81 = ((($0)) + 340|0);\n      $82 = HEAP32[$81>>2]|0;\n      $83 = ($82|0)==($$078|0);\n      if ($83) {\n       $84 = ((($0)) + 344|0);\n       $85 = HEAP32[$84>>2]|0;\n       $86 = ($85|0)==($$077|0);\n       if ($86) {\n        $97 = $69;\n        break;\n       }\n      }\n     }\n    }\n   }\n   $87 = ((($0)) + 224|0);\n   $88 = (_deflateEnd($87)|0);\n   $89 = ($88|0)==(0);\n   if (!($89)) {\n    _png_warning($0,23018);\n   }\n   $90 = HEAP32[$68>>2]|0;\n   $91 = $90 & -3;\n   HEAP32[$68>>2] = $91;\n   $97 = $91;\n  }\n } while(0);\n $92 = ((($0)) + 224|0);\n HEAP32[$92>>2] = 0;\n $93 = ((($0)) + 228|0);\n HEAP32[$93>>2] = 0;\n $94 = ((($0)) + 236|0);\n HEAP32[$94>>2] = 0;\n $95 = ((($0)) + 240|0);\n HEAP32[$95>>2] = 0;\n $96 = $97 & 2;\n $98 = ($96|0)==(0);\n if ($98) {\n  $99 = (_deflateInit2_($92,$$081,$$080,$$2,$$078,$$077,24560,56)|0);\n  $100 = ($99|0)==(0);\n  if ($100) {\n   $101 = HEAP32[$68>>2]|0;\n   $102 = $101 | 2;\n   HEAP32[$68>>2] = $102;\n   label = 26;\n  } else {\n   $$07687 = $99;\n   label = 27;\n  }\n } else {\n  $103 = (_deflateReset($92)|0);\n  $104 = ($103|0)==(0);\n  if ($104) {\n   label = 26;\n  } else {\n   $$07687 = $103;\n   label = 27;\n  }\n }\n if ((label|0) == 26) {\n  HEAP32[$4>>2] = $1;\n  $$184 = 0;\n  STACKTOP = sp;return ($$184|0);\n }\n else if ((label|0) == 27) {\n  _png_zstream_error($0,$$07687);\n  $$184 = $$07687;\n  STACKTOP = sp;return ($$184|0);\n }\n return (0)|0;\n}\nfunction _png_zstream_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 248|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n L1: do {\n  if ($4) {\n   do {\n    switch ($1|0) {\n    case -7:  {\n     HEAP32[$2>>2] = 22980;\n     break L1;\n     break;\n    }\n    case 1:  {\n     HEAP32[$2>>2] = 22850;\n     break L1;\n     break;\n    }\n    case 2:  {\n     HEAP32[$2>>2] = 22878;\n     break L1;\n     break;\n    }\n    case -1:  {\n     HEAP32[$2>>2] = 22900;\n     break L1;\n     break;\n    }\n    case -2:  {\n     HEAP32[$2>>2] = 22914;\n     break L1;\n     break;\n    }\n    case -3:  {\n     HEAP32[$2>>2] = 22937;\n     break L1;\n     break;\n    }\n    case -4:  {\n     HEAP32[$2>>2] = 28416;\n     break L1;\n     break;\n    }\n    case -5:  {\n     HEAP32[$2>>2] = 24462;\n     break L1;\n     break;\n    }\n    case -6:  {\n     HEAP32[$2>>2] = 22955;\n     break L1;\n     break;\n    }\n    default: {\n     HEAP32[$2>>2] = 22822;\n     break L1;\n    }\n    }\n   } while(0);\n  }\n } while(0);\n return;\n}\nfunction _png_write_IEND($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = sp + 8|0;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  $22 = ((($0)) + 208|0);\n  $23 = HEAP32[$22>>2]|0;\n  $24 = $23 | 16;\n  HEAP32[$22>>2] = $24;\n  STACKTOP = sp;return;\n }\n $4 = ((($0)) + 800|0);\n HEAP32[$4>>2] = 34;\n $5 = ((($1)) + 4|0);\n HEAP32[$1>>2] = 0;\n HEAP8[$5>>0] = 73;\n $6 = ((($1)) + 5|0);\n HEAP8[$6>>0] = 69;\n $7 = ((($1)) + 6|0);\n HEAP8[$7>>0] = 78;\n $8 = ((($1)) + 7|0);\n HEAP8[$8>>0] = 68;\n _png_write_data($0,$1,8);\n $9 = ((($0)) + 376|0);\n HEAP32[$9>>2] = 1229278788;\n _png_reset_crc($0);\n _png_calculate_crc($0,$5,4);\n HEAP32[$4>>2] = 130;\n $10 = ((($0)) + 412|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = $11 >>> 24;\n $13 = $12&255;\n HEAP8[$2>>0] = $13;\n $14 = $11 >>> 16;\n $15 = $14&255;\n $16 = ((($2)) + 1|0);\n HEAP8[$16>>0] = $15;\n $17 = $11 >>> 8;\n $18 = $17&255;\n $19 = ((($2)) + 2|0);\n HEAP8[$19>>0] = $18;\n $20 = $11&255;\n $21 = ((($2)) + 3|0);\n HEAP8[$21>>0] = $20;\n _png_write_data($0,$2,4);\n $22 = ((($0)) + 208|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = $23 | 16;\n HEAP32[$22>>2] = $24;\n STACKTOP = sp;return;\n}\nfunction _png_write_gAMA_fixed($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp + 16|0;\n $3 = sp + 8|0;\n $4 = sp;\n $5 = $1 >>> 24;\n $6 = $5&255;\n HEAP8[$4>>0] = $6;\n $7 = $1 >>> 16;\n $8 = $7&255;\n $9 = ((($4)) + 1|0);\n HEAP8[$9>>0] = $8;\n $10 = $1 >>> 8;\n $11 = $10&255;\n $12 = ((($4)) + 2|0);\n HEAP8[$12>>0] = $11;\n $13 = $1&255;\n $14 = ((($4)) + 3|0);\n HEAP8[$14>>0] = $13;\n $15 = ($0|0)==(0|0);\n if ($15) {\n  STACKTOP = sp;return;\n }\n $16 = ((($0)) + 800|0);\n HEAP32[$16>>2] = 34;\n HEAP8[$3>>0] = 0;\n $17 = ((($3)) + 1|0);\n HEAP8[$17>>0] = 0;\n $18 = ((($3)) + 2|0);\n HEAP8[$18>>0] = 0;\n $19 = ((($3)) + 3|0);\n HEAP8[$19>>0] = 4;\n $20 = ((($3)) + 4|0);\n HEAP8[$20>>0] = 103;\n $21 = ((($3)) + 5|0);\n HEAP8[$21>>0] = 65;\n $22 = ((($3)) + 6|0);\n HEAP8[$22>>0] = 77;\n $23 = ((($3)) + 7|0);\n HEAP8[$23>>0] = 65;\n _png_write_data($0,$3,8);\n $24 = ((($0)) + 376|0);\n HEAP32[$24>>2] = 1732332865;\n _png_reset_crc($0);\n _png_calculate_crc($0,$20,4);\n HEAP32[$16>>2] = 66;\n _png_write_data($0,$4,4);\n _png_calculate_crc($0,$4,4);\n HEAP32[$16>>2] = 130;\n $25 = ((($0)) + 412|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = $26 >>> 24;\n $28 = $27&255;\n HEAP8[$2>>0] = $28;\n $29 = $26 >>> 16;\n $30 = $29&255;\n $31 = ((($2)) + 1|0);\n HEAP8[$31>>0] = $30;\n $32 = $26 >>> 8;\n $33 = $32&255;\n $34 = ((($2)) + 2|0);\n HEAP8[$34>>0] = $33;\n $35 = $26&255;\n $36 = ((($2)) + 3|0);\n HEAP8[$36>>0] = $35;\n _png_write_data($0,$2,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_sRGB($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp + 16|0;\n $3 = sp + 8|0;\n $4 = sp;\n $5 = ($1|0)>(3);\n if ($5) {\n  _png_warning($0,23046);\n }\n $6 = $1&255;\n HEAP8[$4>>0] = $6;\n $7 = ($0|0)==(0|0);\n if ($7) {\n  STACKTOP = sp;return;\n }\n $8 = ((($0)) + 800|0);\n HEAP32[$8>>2] = 34;\n HEAP8[$3>>0] = 0;\n $9 = ((($3)) + 1|0);\n HEAP8[$9>>0] = 0;\n $10 = ((($3)) + 2|0);\n HEAP8[$10>>0] = 0;\n $11 = ((($3)) + 3|0);\n HEAP8[$11>>0] = 1;\n $12 = ((($3)) + 4|0);\n HEAP8[$12>>0] = 115;\n $13 = ((($3)) + 5|0);\n HEAP8[$13>>0] = 82;\n $14 = ((($3)) + 6|0);\n HEAP8[$14>>0] = 71;\n $15 = ((($3)) + 7|0);\n HEAP8[$15>>0] = 66;\n _png_write_data($0,$3,8);\n $16 = ((($0)) + 376|0);\n HEAP32[$16>>2] = 1934772034;\n _png_reset_crc($0);\n _png_calculate_crc($0,$12,4);\n HEAP32[$8>>2] = 66;\n _png_write_data($0,$4,1);\n _png_calculate_crc($0,$4,1);\n HEAP32[$8>>2] = 130;\n $17 = ((($0)) + 412|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = $18 >>> 24;\n $20 = $19&255;\n HEAP8[$2>>0] = $20;\n $21 = $18 >>> 16;\n $22 = $21&255;\n $23 = ((($2)) + 1|0);\n HEAP8[$23>>0] = $22;\n $24 = $18 >>> 8;\n $25 = $24&255;\n $26 = ((($2)) + 2|0);\n HEAP8[$26>>0] = $25;\n $27 = $18&255;\n $28 = ((($2)) + 3|0);\n HEAP8[$28>>0] = $27;\n _png_write_data($0,$2,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_iCCP($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $$0$i46 = 0, $$0$i49 = 0, $$0$in$us$i = 0, $$0$us$i = 0, $$025$us$i = 0, $$026$us$i = 0, $$027$$025$i = 0, $$027$$025$i47 = 0, $$027$$025$us$i = 0, $$027$us$i = 0, $$lcssa$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i48 = 0, $or$cond$us$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1136|0);\n $3 = sp + 1128|0;\n $4 = sp + 1120|0;\n $5 = sp + 1036|0;\n $6 = sp;\n $7 = ($2|0)==(0|0);\n if ($7) {\n  _png_error($0,23086);\n  // unreachable;\n }\n $8 = HEAP8[$2>>0]|0;\n $9 = $8&255;\n $10 = $9 << 24;\n $11 = ((($2)) + 1|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12&255;\n $14 = $13 << 16;\n $15 = $14 | $10;\n $16 = ((($2)) + 2|0);\n $17 = HEAP8[$16>>0]|0;\n $18 = $17&255;\n $19 = $18 << 8;\n $20 = $15 | $19;\n $21 = ((($2)) + 3|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $20 | $23;\n $25 = ($24>>>0)<(132);\n if ($25) {\n  _png_error($0,23112);\n  // unreachable;\n }\n $26 = ((($2)) + 8|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = ($27&255)<(4);\n $29 = $23 & 3;\n $30 = ($29|0)==(0);\n $or$cond = $30 | $28;\n if (!($or$cond)) {\n  _png_error($0,23134);\n  // unreachable;\n }\n $31 = (_png_check_keyword($0,$1,$5)|0);\n $32 = ($31|0)==(0);\n if ($32) {\n  _png_error($0,23183);\n  // unreachable;\n }\n $33 = (($31) + 1)|0;\n $34 = (($5) + ($33)|0);\n HEAP8[$34>>0] = 0;\n $35 = (($31) + 2)|0;\n HEAP32[$6>>2] = $2;\n $36 = ((($6)) + 4|0);\n HEAP32[$36>>2] = $24;\n $37 = ((($6)) + 8|0);\n HEAP32[$37>>2] = 0;\n $38 = (_png_text_compress($0,1766015824,$6,$35)|0);\n $39 = ($38|0)==(0);\n if (!($39)) {\n  $40 = ((($0)) + 248|0);\n  $41 = HEAP32[$40>>2]|0;\n  _png_error($0,$41);\n  // unreachable;\n }\n $42 = HEAP32[$37>>2]|0;\n $43 = (($42) + ($35))|0;\n $44 = ($0|0)==(0|0);\n L16: do {\n  if ($44) {\n   $$0$i46 = HEAP32[(280)>>2]|0;\n   $62 = ($42>>>0)<(1024);\n   $$027$$025$i47 = $62 ? $42 : 1024;\n   $63 = (($42) - ($$027$$025$i47))|0;\n   $64 = ($63|0)==(0);\n   $65 = ($$0$i46|0)==(0|0);\n   $or$cond$i48 = $65 | $64;\n   if ($or$cond$i48) {\n    $$lcssa$i = $64;\n   } else {\n    $66 = HEAP32[(284)>>2]|0;\n    $$0$i49 = $$0$i46;$79 = $63;\n    while(1) {\n     $$0$i = HEAP32[$$0$i49>>2]|0;\n     $78 = ($66>>>0)>($79>>>0);\n     $$027$$025$i = $78 ? $79 : $66;\n     $80 = (($79) - ($$027$$025$i))|0;\n     $81 = ($80|0)==(0);\n     $82 = ($$0$i|0)==(0|0);\n     $or$cond$i = $82 | $81;\n     if ($or$cond$i) {\n      $$lcssa$i = $81;\n      break;\n     } else {\n      $$0$i49 = $$0$i;$79 = $80;\n     }\n    }\n   }\n  } else {\n   $45 = ((($0)) + 800|0);\n   HEAP32[$45>>2] = 34;\n   $46 = $43 >>> 24;\n   $47 = $46&255;\n   HEAP8[$3>>0] = $47;\n   $48 = $43 >>> 16;\n   $49 = $48&255;\n   $50 = ((($3)) + 1|0);\n   HEAP8[$50>>0] = $49;\n   $51 = $43 >>> 8;\n   $52 = $51&255;\n   $53 = ((($3)) + 2|0);\n   HEAP8[$53>>0] = $52;\n   $54 = $43&255;\n   $55 = ((($3)) + 3|0);\n   HEAP8[$55>>0] = $54;\n   $56 = ((($3)) + 4|0);\n   HEAP8[$56>>0] = 105;\n   $57 = ((($3)) + 5|0);\n   HEAP8[$57>>0] = 67;\n   $58 = ((($3)) + 6|0);\n   HEAP8[$58>>0] = 67;\n   $59 = ((($3)) + 7|0);\n   HEAP8[$59>>0] = 80;\n   _png_write_data($0,$3,8);\n   $60 = ((($0)) + 376|0);\n   HEAP32[$60>>2] = 1766015824;\n   _png_reset_crc($0);\n   _png_calculate_crc($0,$56,4);\n   HEAP32[$45>>2] = 66;\n   $61 = ($35|0)==(0);\n   if (!($61)) {\n    _png_write_data($0,$5,$35);\n    _png_calculate_crc($0,$5,$35);\n   }\n   $67 = HEAP32[$37>>2]|0;\n   $68 = ((($0)) + 280|0);\n   $69 = ((($0)) + 284|0);\n   $70 = ((($6)) + 12|0);\n   $$0$in$us$i = $68;$$025$us$i = 1024;$$026$us$i = $70;$$027$us$i = $67;\n   while(1) {\n    $$0$us$i = HEAP32[$$0$in$us$i>>2]|0;\n    $71 = ($$025$us$i>>>0)>($$027$us$i>>>0);\n    $$027$$025$us$i = $71 ? $$027$us$i : $$025$us$i;\n    $72 = ($$027$$025$us$i|0)==(0);\n    if (!($72)) {\n     _png_write_data($0,$$026$us$i,$$027$$025$us$i);\n     _png_calculate_crc($0,$$026$us$i,$$027$$025$us$i);\n    }\n    $73 = (($$027$us$i) - ($$027$$025$us$i))|0;\n    $74 = ($73|0)==(0);\n    $75 = ($$0$us$i|0)==(0|0);\n    $or$cond$us$i = $75 | $74;\n    if ($or$cond$us$i) {\n     $$lcssa$i = $74;\n     break L16;\n    }\n    $76 = HEAP32[$69>>2]|0;\n    $77 = ((($$0$us$i)) + 4|0);\n    $$0$in$us$i = $$0$us$i;$$025$us$i = $76;$$026$us$i = $77;$$027$us$i = $73;\n   }\n  }\n } while(0);\n if (!($$lcssa$i)) {\n  _png_error($0,23205);\n  // unreachable;\n }\n if ($44) {\n  STACKTOP = sp;return;\n }\n $83 = ((($0)) + 800|0);\n HEAP32[$83>>2] = 130;\n $84 = ((($0)) + 412|0);\n $85 = HEAP32[$84>>2]|0;\n $86 = $85 >>> 24;\n $87 = $86&255;\n HEAP8[$4>>0] = $87;\n $88 = $85 >>> 16;\n $89 = $88&255;\n $90 = ((($4)) + 1|0);\n HEAP8[$90>>0] = $89;\n $91 = $85 >>> 8;\n $92 = $91&255;\n $93 = ((($4)) + 2|0);\n HEAP8[$93>>0] = $92;\n $94 = $85&255;\n $95 = ((($4)) + 3|0);\n HEAP8[$95>>0] = $94;\n _png_write_data($0,$4,4);\n STACKTOP = sp;return;\n}\nfunction _png_check_keyword($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$042$us80 = 0, $$0 = 0, $$041$ph$be = 0, $$041$ph$lcssa = 0, $$041$ph97 = 0, $$042$ = 0, $$042$lcssa = 0, $$042$lcssa60 = 0, $$042$ph$be = 0, $$042$ph96 = 0, $$04265$us76 = 0, $$044$ph$be = 0, $$044$ph$lcssa = 0, $$044$ph89 = 0, $$047$lcssa = 0, $$047$ph88 = 0, $$04764$us77 = 0, $$048$ph$be = 0, $$048$ph$lcssa = 0, $$048$ph81 = 0;\n var $$2 = 0, $$246 = 0, $$250 = 0, $$lcssa55 = 0, $$lcssa58 = 0, $$off$us$us = 0, $$off$us78 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $or$cond = 0, $or$cond52$us$us = 0, $or$cond52$us79 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);\n $3 = sp;\n $4 = ($1|0)==(0|0);\n if ($4) {\n  HEAP8[$2>>0] = 0;\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $5 = HEAP8[$1>>0]|0;\n $6 = ($5<<24>>24)==(0);\n L5: do {\n  if ($6) {\n   $$041$ph$lcssa = 1;$$042$lcssa = 0;$$044$ph$lcssa = 0;$$047$lcssa = $1;$$048$ph$lcssa = $2;\n  } else {\n   $$041$ph97 = 1;$$042$ph96 = 0;$$044$ph89 = 0;$$047$ph88 = $1;$$048$ph81 = $2;$14 = $5;\n   while(1) {\n    $12 = ($$041$ph97|0)==(0);\n    L8: do {\n     if ($12) {\n      $13 = ((($$047$ph88)) + 1|0);\n      $$off$us$us = (($14) + -33)<<24>>24;\n      $15 = ($$off$us$us&255)<(94);\n      $16 = ($14&255)>(160);\n      $or$cond52$us$us = $16 | $15;\n      if ($or$cond52$us$us) {\n       $$042$lcssa60 = $$042$ph96;$$lcssa55 = $13;$$lcssa58 = $14;\n       label = 4;\n      } else {\n       $25 = $14&255;\n       HEAP8[$$048$ph81>>0] = 32;\n       $26 = ($14<<24>>24)==(32);\n       $$042$ = $26 ? $$042$ph96 : $25;\n       $$041$ph$be = 1;$$042$ph$be = $$042$;$8 = $13;\n      }\n     } else {\n      $$04265$us76 = $$042$ph96;$$04764$us77 = $$047$ph88;$18 = $14;\n      while(1) {\n       $17 = ((($$04764$us77)) + 1|0);\n       $$off$us78 = (($18) + -33)<<24>>24;\n       $19 = ($$off$us78&255)<(94);\n       $20 = ($18&255)>(160);\n       $or$cond52$us79 = $20 | $19;\n       if ($or$cond52$us79) {\n        $$042$lcssa60 = $$04265$us76;$$lcssa55 = $17;$$lcssa58 = $18;\n        label = 4;\n        break L8;\n       }\n       $21 = $18&255;\n       $22 = ($$04265$us76|0)==(0);\n       $$$042$us80 = $22 ? $21 : $$04265$us76;\n       $23 = HEAP8[$17>>0]|0;\n       $24 = ($23<<24>>24)==(0);\n       if ($24) {\n        $$041$ph$lcssa = $$041$ph97;$$042$lcssa = $$$042$us80;$$044$ph$lcssa = $$044$ph89;$$047$lcssa = $17;$$048$ph$lcssa = $$048$ph81;\n        break L5;\n       } else {\n        $$04265$us76 = $$$042$us80;$$04764$us77 = $17;$18 = $23;\n       }\n      }\n     }\n    } while(0);\n    if ((label|0) == 4) {\n     label = 0;\n     HEAP8[$$048$ph81>>0] = $$lcssa58;\n     $$041$ph$be = 0;$$042$ph$be = $$042$lcssa60;$8 = $$lcssa55;\n    }\n    $$044$ph$be = (($$044$ph89) + 1)|0;\n    $$048$ph$be = ((($$048$ph81)) + 1|0);\n    $7 = HEAP8[$8>>0]|0;\n    $9 = ($7<<24>>24)!=(0);\n    $10 = ($$044$ph$be>>>0)<(79);\n    $11 = $10 & $9;\n    if ($11) {\n     $$041$ph97 = $$041$ph$be;$$042$ph96 = $$042$ph$be;$$044$ph89 = $$044$ph$be;$$047$ph88 = $8;$$048$ph81 = $$048$ph$be;$14 = $7;\n    } else {\n     $$041$ph$lcssa = $$041$ph$be;$$042$lcssa = $$042$ph$be;$$044$ph$lcssa = $$044$ph$be;$$047$lcssa = $8;$$048$ph$lcssa = $$048$ph$be;\n     break;\n    }\n   }\n  }\n } while(0);\n $27 = ($$044$ph$lcssa|0)!=(0);\n $28 = ($$041$ph$lcssa|0)!=(0);\n $or$cond = $27 & $28;\n $29 = ((($$048$ph$lcssa)) + -1|0);\n $30 = ($$042$lcssa|0)==(0);\n $$250 = $or$cond ? $29 : $$048$ph$lcssa;\n $31 = $or$cond << 31 >> 31;\n $$246 = (($31) + ($$044$ph$lcssa))|0;\n $32 = $30 & $or$cond;\n $$2 = $32 ? 32 : $$042$lcssa;\n HEAP8[$$250>>0] = 0;\n $33 = ($$246|0)==(0);\n if ($33) {\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $34 = HEAP8[$$047$lcssa>>0]|0;\n $35 = ($34<<24>>24)==(0);\n if (!($35)) {\n  _png_warning($0,23278);\n  $$0 = $$246;\n  STACKTOP = sp;return ($$0|0);\n }\n $36 = ($$2|0)==(0);\n if ($36) {\n  $$0 = $$246;\n  STACKTOP = sp;return ($$0|0);\n }\n _png_warning_parameter($3,1,$1);\n _png_warning_parameter_signed($3,2,4,$$2);\n _png_formatted_warning($0,$3,23296);\n $$0 = $$246;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _png_text_compress($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$0$i = 0, $$029$i = 0, $$077 = 0, $$078 = 0, $$080 = 0, $$179 = 0, $$185 = 0, $$191 = 0, $$2 = 0, $$282 = 0, $$288 = 0, $$3 = 0, $$383 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;\n var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond3 = 0, $or$cond31$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($2)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (_png_deflate_claim($0,$1,$5)|0);\n $7 = ($6|0)==(0);\n if (!($7)) {\n  $$191 = $6;\n  return ($$191|0);\n }\n $8 = ((($0)) + 280|0);\n $9 = HEAP32[$4>>2]|0;\n $10 = HEAP32[$2>>2]|0;\n $11 = ((($0)) + 224|0);\n HEAP32[$11>>2] = $10;\n $12 = ((($0)) + 228|0);\n HEAP32[$12>>2] = 0;\n $13 = ((($2)) + 12|0);\n $14 = ((($0)) + 236|0);\n HEAP32[$14>>2] = $13;\n $15 = ((($0)) + 240|0);\n HEAP32[$15>>2] = 1024;\n $16 = ((($0)) + 284|0);\n $$077 = 1024;$$078 = $9;$$080 = $8;$17 = 1024;\n while(1) {\n  HEAP32[$12>>2] = $$078;\n  $18 = ($17|0)==(0);\n  do {\n   if ($18) {\n    $19 = (($$077) + ($3))|0;\n    $20 = ($19|0)<(0);\n    if ($20) {\n     $$179 = 0;$$185 = 2;$$288 = -4;$$3 = $$077;$$383 = $$080;\n    } else {\n     $21 = HEAP32[$$080>>2]|0;\n     $22 = ($21|0)==(0|0);\n     if ($22) {\n      $23 = HEAP32[$16>>2]|0;\n      $24 = (($23) + 4)|0;\n      $25 = (_png_malloc_base($0,$24)|0);\n      $26 = ($25|0)==(0|0);\n      if ($26) {\n       $$179 = 0;$$185 = 2;$$288 = -4;$$3 = $$077;$$383 = $$080;\n       break;\n      }\n      HEAP32[$25>>2] = 0;\n      HEAP32[$$080>>2] = $25;\n      $$0 = $25;\n     } else {\n      $$0 = $21;\n     }\n     $27 = ((($$0)) + 4|0);\n     HEAP32[$14>>2] = $27;\n     $28 = HEAP32[$16>>2]|0;\n     HEAP32[$15>>2] = $28;\n     $29 = (($28) + ($$077))|0;\n     $$2 = $29;$$282 = $$0;\n     label = 9;\n    }\n   } else {\n    $$2 = $$077;$$282 = $$080;\n    label = 9;\n   }\n  } while(0);\n  if ((label|0) == 9) {\n   label = 0;\n   $30 = (_deflate($11,4)|0);\n   $31 = HEAP32[$12>>2]|0;\n   HEAP32[$12>>2] = 0;\n   $$179 = $31;$$185 = 0;$$288 = $30;$$3 = $$2;$$383 = $$282;\n  }\n  $32 = $$185 | $$288;\n  $33 = ($32|0)==(0);\n  $$pre = HEAP32[$15>>2]|0;\n  if ($33) {\n   $$077 = $$3;$$078 = $$179;$$080 = $$383;$17 = $$pre;\n  } else {\n   break;\n  }\n }\n $34 = (($$3) - ($$pre))|0;\n HEAP32[$15>>2] = 0;\n $35 = ((($2)) + 8|0);\n HEAP32[$35>>2] = $34;\n $36 = (($34) + ($3))|0;\n $37 = ($36>>>0)>(2147483646);\n if ($37) {\n  $38 = ((($0)) + 248|0);\n  HEAP32[$38>>2] = 23253;\n  $39 = ((($0)) + 220|0);\n  HEAP32[$39>>2] = 0;\n  $$191 = -4;\n  return ($$191|0);\n }\n _png_zstream_error($0,$$288);\n $40 = ((($0)) + 220|0);\n HEAP32[$40>>2] = 0;\n $41 = ($$288|0)==(1);\n $42 = ($$179|0)==(0);\n $or$cond3 = $41 & $42;\n if (!($or$cond3)) {\n  $$191 = $$288;\n  return ($$191|0);\n }\n $43 = HEAP32[$4>>2]|0;\n $44 = ($43>>>0)<(16385);\n if (!($44)) {\n  $$191 = 0;\n  return ($$191|0);\n }\n $45 = HEAP8[$13>>0]|0;\n $46 = $45&255;\n $47 = $46 & 15;\n $48 = ($47|0)==(8);\n $49 = $46 & 240;\n $50 = ($49>>>0)<(113);\n $or$cond$i = $48 & $50;\n if (!($or$cond$i)) {\n  $$191 = 0;\n  return ($$191|0);\n }\n $51 = $46 >>> 4;\n $52 = (($51) + 7)|0;\n $53 = 1 << $52;\n $54 = ($53>>>0)<($43>>>0);\n if ($54) {\n  $$191 = 0;\n  return ($$191|0);\n } else {\n  $$0$i = $53;$$029$i = $51;\n }\n while(1) {\n  $55 = $$0$i >>> 1;\n  $56 = (($$029$i) + -1)|0;\n  $57 = ($56|0)==(0);\n  $58 = ($55>>>0)<($43>>>0);\n  $or$cond31$i = $57 | $58;\n  if ($or$cond31$i) {\n   break;\n  } else {\n   $$0$i = $55;$$029$i = $56;\n  }\n }\n $59 = $56 << 4;\n $60 = $59 | 8;\n $61 = $60&255;\n HEAP8[$13>>0] = $61;\n $62 = ((($2)) + 13|0);\n $63 = HEAP8[$62>>0]|0;\n $64 = $63&255;\n $65 = $64 & 224;\n $66 = $60 << 8;\n $67 = $65 | $66;\n $68 = (($67>>>0) % 31)&-1;\n $69 = $68 | $65;\n $70 = $69 ^ 31;\n $71 = $70&255;\n HEAP8[$62>>0] = $71;\n $$191 = 0;\n return ($$191|0);\n}\nfunction _png_warning_parameter($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$01216$i = 0, $$017$i = 0, $$1$i = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond14$i = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $$off = (($1) + -1)|0;\n $3 = ($$off>>>0)>(7);\n $4 = (($0) + ($$off<<5)|0);\n $5 = ($4|0)==(0|0);\n $or$cond = $3 | $5;\n if ($or$cond) {\n  return;\n }\n $6 = ($2|0)==(0|0);\n if ($6) {\n  $$1$i = 0;\n } else {\n  $7 = HEAP8[$2>>0]|0;\n  $8 = ($7<<24>>24)==(0);\n  if ($8) {\n   $$1$i = 0;\n  } else {\n   $$01216$i = 0;$$017$i = $2;$12 = $7;\n   while(1) {\n    $9 = ((($$017$i)) + 1|0);\n    $10 = (($$01216$i) + 1)|0;\n    $11 = ((($0) + ($$off<<5)|0) + ($$01216$i)|0);\n    HEAP8[$11>>0] = $12;\n    $13 = HEAP8[$9>>0]|0;\n    $14 = ($13<<24>>24)!=(0);\n    $15 = ($10>>>0)<(31);\n    $or$cond14$i = $15 & $14;\n    if ($or$cond14$i) {\n     $$01216$i = $10;$$017$i = $9;$12 = $13;\n    } else {\n     $$1$i = $10;\n     break;\n    }\n   }\n  }\n }\n $16 = ((($0) + ($$off<<5)|0) + ($$1$i)|0);\n HEAP8[$16>>0] = 0;\n return;\n}\nfunction _png_warning_parameter_signed($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$0 = 0, $$01216$i$i = 0, $$017$i$i = 0, $$1$i$i = 0, $$off$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond14$i$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $4 = sp;\n $5 = ($3|0)<(0);\n $6 = (0 - ($3))|0;\n $$ = $5 ? $6 : $3;\n $7 = ((($4)) + 24|0);\n $8 = (_png_format_number($4,$7,$2,$$)|0);\n $9 = ($8>>>0)>($4>>>0);\n $or$cond = $5 & $9;\n if ($or$cond) {\n  $10 = ((($8)) + -1|0);\n  HEAP8[$10>>0] = 45;\n  $$0 = $10;\n } else {\n  $$0 = $8;\n }\n $$off$i = (($1) + -1)|0;\n $11 = ($$off$i>>>0)>(7);\n $12 = (($0) + ($$off$i<<5)|0);\n $13 = ($12|0)==(0|0);\n $or$cond$i = $11 | $13;\n if ($or$cond$i) {\n  STACKTOP = sp;return;\n }\n $14 = ($$0|0)==(0|0);\n if ($14) {\n  $$1$i$i = 0;\n } else {\n  $15 = HEAP8[$$0>>0]|0;\n  $16 = ($15<<24>>24)==(0);\n  if ($16) {\n   $$1$i$i = 0;\n  } else {\n   $$01216$i$i = 0;$$017$i$i = $$0;$20 = $15;\n   while(1) {\n    $17 = ((($$017$i$i)) + 1|0);\n    $18 = (($$01216$i$i) + 1)|0;\n    $19 = ((($0) + ($$off$i<<5)|0) + ($$01216$i$i)|0);\n    HEAP8[$19>>0] = $20;\n    $21 = HEAP8[$17>>0]|0;\n    $22 = ($21<<24>>24)!=(0);\n    $23 = ($18>>>0)<(31);\n    $or$cond14$i$i = $23 & $22;\n    if ($or$cond14$i$i) {\n     $$01216$i$i = $18;$$017$i$i = $17;$20 = $21;\n    } else {\n     $$1$i$i = $18;\n     break;\n    }\n   }\n  }\n }\n $24 = ((($0) + ($$off$i<<5)|0) + ($$1$i$i)|0);\n HEAP8[$24>>0] = 0;\n STACKTOP = sp;return;\n}\nfunction _png_formatted_warning($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$us = 0, $$036$be$us = 0, $$03649 = 0, $$03649$us = 0, $$03744$us = 0, $$038$us = 0, $$039$be$us = 0, $$039$lcssa = 0, $$03947 = 0, $$03947$us = 0, $$140$lcssa$us = 0, $$14043$us = 0, $$2$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$us = 0, $or$cond42$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);\n $3 = sp;\n $4 = ($1|0)==(0|0);\n L1: do {\n  if ($4) {\n   $$03649 = $2;$$03947 = 0;\n   while(1) {\n    $30 = HEAP8[$$03649>>0]|0;\n    $31 = ($30<<24>>24)==(0);\n    if ($31) {\n     $$039$lcssa = $$03947;\n     break L1;\n    }\n    $32 = ((($$03649)) + 1|0);\n    $33 = (($$03947) + 1)|0;\n    $34 = (($3) + ($$03947)|0);\n    HEAP8[$34>>0] = $30;\n    $35 = ($33>>>0)<(191);\n    if ($35) {\n     $$03649 = $32;$$03947 = $33;\n    } else {\n     $$039$lcssa = $33;\n     break;\n    }\n   }\n  } else {\n   $$03649$us = $2;$$03947$us = 0;\n   while(1) {\n    $5 = HEAP8[$$03649$us>>0]|0;\n    switch ($5<<24>>24) {\n    case 0:  {\n     $$039$lcssa = $$03947$us;\n     break L1;\n     break;\n    }\n    case 64:  {\n     $6 = ((($$03649$us)) + 1|0);\n     $7 = HEAP8[$6>>0]|0;\n     $8 = ($7<<24>>24)==(0);\n     if ($8) {\n      $$2$us = $$03649$us;$28 = 64;\n      label = 11;\n     } else {\n      $$038$us = 0;\n      while(1) {\n       $9 = (23331 + ($$038$us)|0);\n       $10 = HEAP8[$9>>0]|0;\n       $11 = ($$038$us|0)!=(9);\n       $not$$us = ($10<<24>>24)!=($7<<24>>24);\n       $$$us = $11 & $not$$us;\n       $12 = (($$038$us) + 1)|0;\n       if ($$$us) {\n        $$038$us = $12;\n       } else {\n        break;\n       }\n      }\n      $13 = ($$038$us|0)<(8);\n      if ($13) {\n       $14 = (((($1) + ($$038$us<<5)|0)) + 32|0);\n       $15 = ($$03947$us>>>0)<(191);\n       L13: do {\n        if ($15) {\n         $16 = (($1) + ($$038$us<<5)|0);\n         $$03744$us = $16;$$14043$us = $$03947$us;\n         while(1) {\n          $17 = HEAP8[$$03744$us>>0]|0;\n          $18 = ($17<<24>>24)!=(0);\n          $19 = ($$03744$us>>>0)<($14>>>0);\n          $or$cond42$us = $19 & $18;\n          if (!($or$cond42$us)) {\n           $$140$lcssa$us = $$14043$us;\n           break L13;\n          }\n          $21 = ((($$03744$us)) + 1|0);\n          $22 = (($$14043$us) + 1)|0;\n          $23 = (($3) + ($$14043$us)|0);\n          HEAP8[$23>>0] = $17;\n          $24 = ($22>>>0)<(191);\n          if ($24) {\n           $$03744$us = $21;$$14043$us = $22;\n          } else {\n           $$140$lcssa$us = $22;\n           break;\n          }\n         }\n        } else {\n         $$140$lcssa$us = $$03947$us;\n        }\n       } while(0);\n       $20 = ((($$03649$us)) + 2|0);\n       $$036$be$us = $20;$$039$be$us = $$140$lcssa$us;\n      } else {\n       $$2$us = $6;$28 = $7;\n       label = 11;\n      }\n     }\n     break;\n    }\n    default: {\n     $$2$us = $$03649$us;$28 = $5;\n     label = 11;\n    }\n    }\n    if ((label|0) == 11) {\n     label = 0;\n     $25 = ((($$2$us)) + 1|0);\n     $26 = (($$03947$us) + 1)|0;\n     $27 = (($3) + ($$03947$us)|0);\n     HEAP8[$27>>0] = $28;\n     $$036$be$us = $25;$$039$be$us = $26;\n    }\n    $29 = ($$039$be$us>>>0)<(191);\n    if ($29) {\n     $$03649$us = $$036$be$us;$$03947$us = $$039$be$us;\n    } else {\n     $$039$lcssa = $$039$be$us;\n     break L1;\n    }\n   }\n  }\n } while(0);\n $36 = (($3) + ($$039$lcssa)|0);\n HEAP8[$36>>0] = 0;\n _png_warning($0,$3);\n STACKTOP = sp;return;\n}\nfunction _png_write_sPLT($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$041 = 0, $$041$us = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;\n var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;\n var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);\n $2 = sp + 104|0;\n $3 = sp + 96|0;\n $4 = sp + 16|0;\n $5 = sp;\n $6 = ((($1)) + 4|0);\n $7 = HEAP8[$6>>0]|0;\n $8 = ($7<<24>>24)==(8);\n $9 = $8 ? 6 : 10;\n $10 = ((($1)) + 12|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = HEAP32[$1>>2]|0;\n $13 = (_png_check_keyword($0,$12,$4)|0);\n $14 = ($13|0)==(0);\n if ($14) {\n  _png_error($0,23341);\n  // unreachable;\n }\n $15 = Math_imul($9, $11)|0;\n $16 = (($13) + 2)|0;\n $17 = (($16) + ($15))|0;\n $18 = ($0|0)==(0|0);\n if ($18) {\n  $136 = 0;\n } else {\n  $19 = ((($0)) + 800|0);\n  HEAP32[$19>>2] = 34;\n  $20 = $17 >>> 24;\n  $21 = $20&255;\n  HEAP8[$3>>0] = $21;\n  $22 = $17 >>> 16;\n  $23 = $22&255;\n  $24 = ((($3)) + 1|0);\n  HEAP8[$24>>0] = $23;\n  $25 = $17 >>> 8;\n  $26 = $25&255;\n  $27 = ((($3)) + 2|0);\n  HEAP8[$27>>0] = $26;\n  $28 = $17&255;\n  $29 = ((($3)) + 3|0);\n  HEAP8[$29>>0] = $28;\n  $30 = ((($3)) + 4|0);\n  HEAP8[$30>>0] = 115;\n  $31 = ((($3)) + 5|0);\n  HEAP8[$31>>0] = 80;\n  $32 = ((($3)) + 6|0);\n  HEAP8[$32>>0] = 76;\n  $33 = ((($3)) + 7|0);\n  HEAP8[$33>>0] = 84;\n  _png_write_data($0,$3,8);\n  $34 = ((($0)) + 376|0);\n  HEAP32[$34>>2] = 1934642260;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$30,4);\n  HEAP32[$19>>2] = 66;\n  $35 = (($13) + 1)|0;\n  $36 = ($35|0)==(0);\n  if (!($36)) {\n   _png_write_data($0,$4,$35);\n   _png_calculate_crc($0,$4,$35);\n  }\n  _png_write_data($0,$6,1);\n  _png_calculate_crc($0,$6,1);\n  $136 = 1;\n }\n $37 = ((($1)) + 8|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = HEAP32[$10>>2]|0;\n $40 = ($39|0)>(0);\n L11: do {\n  if ($40) {\n   $41 = ((($5)) + 1|0);\n   $42 = ((($5)) + 2|0);\n   $43 = ((($5)) + 3|0);\n   $44 = ((($5)) + 4|0);\n   $45 = ((($5)) + 5|0);\n   $46 = ((($5)) + 6|0);\n   $47 = ((($5)) + 7|0);\n   $48 = ((($5)) + 8|0);\n   $49 = ((($5)) + 9|0);\n   if ($136) {\n    $$041$us = $38;\n    while(1) {\n     $52 = HEAP8[$6>>0]|0;\n     $53 = ($52<<24>>24)==(8);\n     $54 = HEAP16[$$041$us>>1]|0;\n     $55 = ((($$041$us)) + 2|0);\n     $56 = HEAP16[$55>>1]|0;\n     $57 = ((($$041$us)) + 4|0);\n     $58 = HEAP16[$57>>1]|0;\n     $59 = ((($$041$us)) + 6|0);\n     $60 = HEAP16[$59>>1]|0;\n     $61 = ((($$041$us)) + 8|0);\n     $62 = HEAP16[$61>>1]|0;\n     if ($53) {\n      $78 = $54&255;\n      HEAP8[$5>>0] = $78;\n      $79 = $56&255;\n      HEAP8[$41>>0] = $79;\n      $80 = $58&255;\n      HEAP8[$42>>0] = $80;\n      $81 = $60&255;\n      HEAP8[$43>>0] = $81;\n      $82 = ($62&65535) >>> 8;\n      $83 = $82&255;\n      HEAP8[$44>>0] = $83;\n      $84 = $62&255;\n      HEAP8[$45>>0] = $84;\n     } else {\n      $63 = ($54&65535) >>> 8;\n      $64 = $63&255;\n      HEAP8[$5>>0] = $64;\n      $65 = $54&255;\n      HEAP8[$41>>0] = $65;\n      $66 = ($56&65535) >>> 8;\n      $67 = $66&255;\n      HEAP8[$42>>0] = $67;\n      $68 = $56&255;\n      HEAP8[$43>>0] = $68;\n      $69 = ($58&65535) >>> 8;\n      $70 = $69&255;\n      HEAP8[$44>>0] = $70;\n      $71 = $58&255;\n      HEAP8[$45>>0] = $71;\n      $72 = ($60&65535) >>> 8;\n      $73 = $72&255;\n      HEAP8[$46>>0] = $73;\n      $74 = $60&255;\n      HEAP8[$47>>0] = $74;\n      $75 = ($62&65535) >>> 8;\n      $76 = $75&255;\n      HEAP8[$48>>0] = $76;\n      $77 = $62&255;\n      HEAP8[$49>>0] = $77;\n     }\n     _png_write_data($0,$5,$9);\n     _png_calculate_crc($0,$5,$9);\n     $85 = ((($$041$us)) + 10|0);\n     $86 = HEAP32[$37>>2]|0;\n     $87 = HEAP32[$10>>2]|0;\n     $88 = (($86) + (($87*10)|0)|0);\n     $89 = ($85>>>0)<($88>>>0);\n     if ($89) {\n      $$041$us = $85;\n     } else {\n      break L11;\n     }\n    }\n   }\n   $$pre = HEAP8[$6>>0]|0;\n   $50 = ($$pre<<24>>24)==(8);\n   $51 = (($38) + (($39*10)|0)|0);\n   $$041 = $38;\n   while(1) {\n    $90 = HEAP16[$$041>>1]|0;\n    $91 = ((($$041)) + 2|0);\n    $92 = HEAP16[$91>>1]|0;\n    $93 = ((($$041)) + 4|0);\n    $94 = HEAP16[$93>>1]|0;\n    $95 = ((($$041)) + 6|0);\n    $96 = HEAP16[$95>>1]|0;\n    $97 = ((($$041)) + 8|0);\n    $98 = HEAP16[$97>>1]|0;\n    if ($50) {\n     $99 = $90&255;\n     HEAP8[$5>>0] = $99;\n     $100 = $92&255;\n     HEAP8[$41>>0] = $100;\n     $101 = $94&255;\n     HEAP8[$42>>0] = $101;\n     $102 = $96&255;\n     HEAP8[$43>>0] = $102;\n     $103 = ($98&65535) >>> 8;\n     $104 = $103&255;\n     HEAP8[$44>>0] = $104;\n     $105 = $98&255;\n     HEAP8[$45>>0] = $105;\n    } else {\n     $106 = ($90&65535) >>> 8;\n     $107 = $106&255;\n     HEAP8[$5>>0] = $107;\n     $108 = $90&255;\n     HEAP8[$41>>0] = $108;\n     $109 = ($92&65535) >>> 8;\n     $110 = $109&255;\n     HEAP8[$42>>0] = $110;\n     $111 = $92&255;\n     HEAP8[$43>>0] = $111;\n     $112 = ($94&65535) >>> 8;\n     $113 = $112&255;\n     HEAP8[$44>>0] = $113;\n     $114 = $94&255;\n     HEAP8[$45>>0] = $114;\n     $115 = ($96&65535) >>> 8;\n     $116 = $115&255;\n     HEAP8[$46>>0] = $116;\n     $117 = $96&255;\n     HEAP8[$47>>0] = $117;\n     $118 = ($98&65535) >>> 8;\n     $119 = $118&255;\n     HEAP8[$48>>0] = $119;\n     $120 = $98&255;\n     HEAP8[$49>>0] = $120;\n    }\n    $121 = ((($$041)) + 10|0);\n    $122 = ($121>>>0)<($51>>>0);\n    if ($122) {\n     $$041 = $121;\n    } else {\n     break;\n    }\n   }\n  }\n } while(0);\n if ($18) {\n  STACKTOP = sp;return;\n }\n $123 = ((($0)) + 800|0);\n HEAP32[$123>>2] = 130;\n $124 = ((($0)) + 412|0);\n $125 = HEAP32[$124>>2]|0;\n $126 = $125 >>> 24;\n $127 = $126&255;\n HEAP8[$2>>0] = $127;\n $128 = $125 >>> 16;\n $129 = $128&255;\n $130 = ((($2)) + 1|0);\n HEAP8[$130>>0] = $129;\n $131 = $125 >>> 8;\n $132 = $131&255;\n $133 = ((($2)) + 2|0);\n HEAP8[$133>>0] = $132;\n $134 = $125&255;\n $135 = ((($2)) + 3|0);\n HEAP8[$135>>0] = $134;\n _png_write_data($0,$2,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_sBIT($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$1 = 0, $$234 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp + 16|0;\n $4 = sp + 8|0;\n $5 = sp;\n $6 = $2 & 2;\n $7 = ($6|0)==(0);\n do {\n  if ($7) {\n   $25 = ((($1)) + 3|0);\n   $26 = HEAP8[$25>>0]|0;\n   $27 = ($26<<24>>24)==(0);\n   if (!($27)) {\n    $28 = ((($0)) + 437|0);\n    $29 = HEAP8[$28>>0]|0;\n    $30 = ($26&255)>($29&255);\n    if (!($30)) {\n     HEAP8[$5>>0] = $26;\n     $$1 = 1;\n     break;\n    }\n   }\n   _png_warning($0,23363);\n   STACKTOP = sp;return;\n  } else {\n   $8 = ($2|0)==(3);\n   if ($8) {\n    $14 = 8;\n   } else {\n    $9 = ((($0)) + 437|0);\n    $10 = HEAP8[$9>>0]|0;\n    $14 = $10;\n   }\n   $11 = HEAP8[$1>>0]|0;\n   $12 = (($11) + -1)<<24>>24;\n   $13 = ($12&255)<($14&255);\n   if ($13) {\n    $15 = ((($1)) + 1|0);\n    $16 = HEAP8[$15>>0]|0;\n    $17 = (($16) + -1)<<24>>24;\n    $18 = ($17&255)<($14&255);\n    if ($18) {\n     $19 = ((($1)) + 2|0);\n     $20 = HEAP8[$19>>0]|0;\n     $21 = (($20) + -1)<<24>>24;\n     $22 = ($21&255)<($14&255);\n     if ($22) {\n      HEAP8[$5>>0] = $11;\n      $23 = ((($5)) + 1|0);\n      HEAP8[$23>>0] = $16;\n      $24 = ((($5)) + 2|0);\n      HEAP8[$24>>0] = $20;\n      $$1 = 3;\n      break;\n     }\n    }\n   }\n   _png_warning($0,23363);\n   STACKTOP = sp;return;\n  }\n } while(0);\n $31 = $2 & 4;\n $32 = ($31|0)==(0);\n do {\n  if ($32) {\n   $41 = ($0|0)==(0|0);\n   if ($41) {\n    STACKTOP = sp;return;\n   } else {\n    $$234 = $$1;\n   }\n  } else {\n   $33 = ((($1)) + 4|0);\n   $34 = HEAP8[$33>>0]|0;\n   $35 = ($34<<24>>24)==(0);\n   if (!($35)) {\n    $36 = ((($0)) + 437|0);\n    $37 = HEAP8[$36>>0]|0;\n    $38 = ($34&255)>($37&255);\n    if (!($38)) {\n     $39 = (($$1) + 1)|0;\n     $40 = (($5) + ($$1)|0);\n     HEAP8[$40>>0] = $34;\n     $$234 = $39;\n     break;\n    }\n   }\n   _png_warning($0,23363);\n   STACKTOP = sp;return;\n  }\n } while(0);\n $42 = ((($0)) + 800|0);\n HEAP32[$42>>2] = 34;\n $43 = $$234 >>> 24;\n $44 = $43&255;\n HEAP8[$4>>0] = $44;\n $45 = $$234 >>> 16;\n $46 = $45&255;\n $47 = ((($4)) + 1|0);\n HEAP8[$47>>0] = $46;\n $48 = $$234 >>> 8;\n $49 = $48&255;\n $50 = ((($4)) + 2|0);\n HEAP8[$50>>0] = $49;\n $51 = $$234&255;\n $52 = ((($4)) + 3|0);\n HEAP8[$52>>0] = $51;\n $53 = ((($4)) + 4|0);\n HEAP8[$53>>0] = 115;\n $54 = ((($4)) + 5|0);\n HEAP8[$54>>0] = 66;\n $55 = ((($4)) + 6|0);\n HEAP8[$55>>0] = 73;\n $56 = ((($4)) + 7|0);\n HEAP8[$56>>0] = 84;\n _png_write_data($0,$4,8);\n $57 = ((($0)) + 376|0);\n HEAP32[$57>>2] = 1933723988;\n _png_reset_crc($0);\n _png_calculate_crc($0,$53,4);\n HEAP32[$42>>2] = 66;\n _png_write_data($0,$5,$$234);\n _png_calculate_crc($0,$5,$$234);\n HEAP32[$42>>2] = 130;\n $58 = ((($0)) + 412|0);\n $59 = HEAP32[$58>>2]|0;\n $60 = $59 >>> 24;\n $61 = $60&255;\n HEAP8[$3>>0] = $61;\n $62 = $59 >>> 16;\n $63 = $62&255;\n $64 = ((($3)) + 1|0);\n HEAP8[$64>>0] = $63;\n $65 = $59 >>> 8;\n $66 = $65&255;\n $67 = ((($3)) + 2|0);\n HEAP8[$67>>0] = $66;\n $68 = $59&255;\n $69 = ((($3)) + 3|0);\n HEAP8[$69>>0] = $68;\n _png_write_data($0,$3,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_cHRM_fixed($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $2 = sp + 40|0;\n $3 = sp + 32|0;\n $4 = sp;\n $5 = ((($1)) + 24|0);\n $6 = HEAP32[$5>>2]|0;\n _png_save_int_32($4,$6);\n $7 = ((($4)) + 4|0);\n $8 = ((($1)) + 28|0);\n $9 = HEAP32[$8>>2]|0;\n _png_save_int_32($7,$9);\n $10 = ((($4)) + 8|0);\n $11 = HEAP32[$1>>2]|0;\n _png_save_int_32($10,$11);\n $12 = ((($4)) + 12|0);\n $13 = ((($1)) + 4|0);\n $14 = HEAP32[$13>>2]|0;\n _png_save_int_32($12,$14);\n $15 = ((($4)) + 16|0);\n $16 = ((($1)) + 8|0);\n $17 = HEAP32[$16>>2]|0;\n _png_save_int_32($15,$17);\n $18 = ((($4)) + 20|0);\n $19 = ((($1)) + 12|0);\n $20 = HEAP32[$19>>2]|0;\n _png_save_int_32($18,$20);\n $21 = ((($4)) + 24|0);\n $22 = ((($1)) + 16|0);\n $23 = HEAP32[$22>>2]|0;\n _png_save_int_32($21,$23);\n $24 = ((($4)) + 28|0);\n $25 = ((($1)) + 20|0);\n $26 = HEAP32[$25>>2]|0;\n _png_save_int_32($24,$26);\n $27 = ($0|0)==(0|0);\n if ($27) {\n  STACKTOP = sp;return;\n }\n $28 = ((($0)) + 800|0);\n HEAP32[$28>>2] = 34;\n HEAP8[$3>>0] = 0;\n $29 = ((($3)) + 1|0);\n HEAP8[$29>>0] = 0;\n $30 = ((($3)) + 2|0);\n HEAP8[$30>>0] = 0;\n $31 = ((($3)) + 3|0);\n HEAP8[$31>>0] = 32;\n $32 = ((($3)) + 4|0);\n HEAP8[$32>>0] = 99;\n $33 = ((($3)) + 5|0);\n HEAP8[$33>>0] = 72;\n $34 = ((($3)) + 6|0);\n HEAP8[$34>>0] = 82;\n $35 = ((($3)) + 7|0);\n HEAP8[$35>>0] = 77;\n _png_write_data($0,$3,8);\n $36 = ((($0)) + 376|0);\n HEAP32[$36>>2] = 1665684045;\n _png_reset_crc($0);\n _png_calculate_crc($0,$32,4);\n HEAP32[$28>>2] = 66;\n _png_write_data($0,$4,32);\n _png_calculate_crc($0,$4,32);\n HEAP32[$28>>2] = 130;\n $37 = ((($0)) + 412|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = $38 >>> 24;\n $40 = $39&255;\n HEAP8[$2>>0] = $40;\n $41 = $38 >>> 16;\n $42 = $41&255;\n $43 = ((($2)) + 1|0);\n HEAP8[$43>>0] = $42;\n $44 = $38 >>> 8;\n $45 = $44&255;\n $46 = ((($2)) + 2|0);\n HEAP8[$46>>0] = $45;\n $47 = $38&255;\n $48 = ((($2)) + 3|0);\n HEAP8[$48>>0] = $47;\n _png_write_data($0,$2,4);\n STACKTOP = sp;return;\n}\nfunction _png_save_int_32($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $1 >>> 24;\n $3 = $2&255;\n HEAP8[$0>>0] = $3;\n $4 = $1 >>> 16;\n $5 = $4&255;\n $6 = ((($0)) + 1|0);\n HEAP8[$6>>0] = $5;\n $7 = $1 >>> 8;\n $8 = $7&255;\n $9 = ((($0)) + 2|0);\n HEAP8[$9>>0] = $8;\n $10 = $1&255;\n $11 = ((($0)) + 3|0);\n HEAP8[$11>>0] = $10;\n return;\n}\nfunction _png_write_tRNS($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;\n var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $5 = sp + 40|0;\n $6 = sp + 32|0;\n $7 = sp + 24|0;\n $8 = sp + 16|0;\n $9 = sp + 12|0;\n $10 = sp + 8|0;\n $11 = sp;\n switch ($4|0) {\n case 3:  {\n  $12 = ($3|0)<(1);\n  if (!($12)) {\n   $13 = ((($0)) + 420|0);\n   $14 = HEAP16[$13>>1]|0;\n   $15 = $14&65535;\n   $16 = ($15|0)<($3|0);\n   if (!($16)) {\n    $17 = ((($0)) + 800|0);\n    HEAP32[$17>>2] = 34;\n    $18 = $3 >>> 24;\n    $19 = $18&255;\n    HEAP8[$7>>0] = $19;\n    $20 = $3 >>> 16;\n    $21 = $20&255;\n    $22 = ((($7)) + 1|0);\n    HEAP8[$22>>0] = $21;\n    $23 = $3 >>> 8;\n    $24 = $23&255;\n    $25 = ((($7)) + 2|0);\n    HEAP8[$25>>0] = $24;\n    $26 = $3&255;\n    $27 = ((($7)) + 3|0);\n    HEAP8[$27>>0] = $26;\n    $28 = ((($7)) + 4|0);\n    HEAP8[$28>>0] = 116;\n    $29 = ((($7)) + 5|0);\n    HEAP8[$29>>0] = 82;\n    $30 = ((($7)) + 6|0);\n    HEAP8[$30>>0] = 78;\n    $31 = ((($7)) + 7|0);\n    HEAP8[$31>>0] = 83;\n    _png_write_data($0,$7,8);\n    $32 = ((($0)) + 376|0);\n    HEAP32[$32>>2] = 1951551059;\n    _png_reset_crc($0);\n    _png_calculate_crc($0,$28,4);\n    HEAP32[$17>>2] = 66;\n    $33 = ($1|0)==(0|0);\n    if (!($33)) {\n     _png_write_data($0,$1,$3);\n     _png_calculate_crc($0,$1,$3);\n    }\n    HEAP32[$17>>2] = 130;\n    $34 = ((($0)) + 412|0);\n    $35 = HEAP32[$34>>2]|0;\n    $36 = $35 >>> 24;\n    $37 = $36&255;\n    HEAP8[$10>>0] = $37;\n    $38 = $35 >>> 16;\n    $39 = $38&255;\n    $40 = ((($10)) + 1|0);\n    HEAP8[$40>>0] = $39;\n    $41 = $35 >>> 8;\n    $42 = $41&255;\n    $43 = ((($10)) + 2|0);\n    HEAP8[$43>>0] = $42;\n    $44 = $35&255;\n    $45 = ((($10)) + 3|0);\n    HEAP8[$45>>0] = $44;\n    _png_write_data($0,$10,4);\n    STACKTOP = sp;return;\n   }\n  }\n  _png_app_warning($0,23392);\n  STACKTOP = sp;return;\n  break;\n }\n case 0:  {\n  $46 = ((($2)) + 8|0);\n  $47 = HEAP16[$46>>1]|0;\n  $48 = $47&65535;\n  $49 = ((($0)) + 436|0);\n  $50 = HEAP8[$49>>0]|0;\n  $51 = $50&255;\n  $52 = 1 << $51;\n  $53 = ($48|0)<($52|0);\n  if ($53) {\n   $54 = ($47&65535) >>> 8;\n   $55 = $54&255;\n   HEAP8[$11>>0] = $55;\n   $56 = $47&255;\n   $57 = ((($11)) + 1|0);\n   HEAP8[$57>>0] = $56;\n   $58 = ((($0)) + 800|0);\n   HEAP32[$58>>2] = 34;\n   HEAP8[$8>>0] = 0;\n   $59 = ((($8)) + 1|0);\n   HEAP8[$59>>0] = 0;\n   $60 = ((($8)) + 2|0);\n   HEAP8[$60>>0] = 0;\n   $61 = ((($8)) + 3|0);\n   HEAP8[$61>>0] = 2;\n   $62 = ((($8)) + 4|0);\n   HEAP8[$62>>0] = 116;\n   $63 = ((($8)) + 5|0);\n   HEAP8[$63>>0] = 82;\n   $64 = ((($8)) + 6|0);\n   HEAP8[$64>>0] = 78;\n   $65 = ((($8)) + 7|0);\n   HEAP8[$65>>0] = 83;\n   _png_write_data($0,$8,8);\n   $66 = ((($0)) + 376|0);\n   HEAP32[$66>>2] = 1951551059;\n   _png_reset_crc($0);\n   _png_calculate_crc($0,$62,4);\n   HEAP32[$58>>2] = 66;\n   _png_write_data($0,$11,2);\n   _png_calculate_crc($0,$11,2);\n   HEAP32[$58>>2] = 130;\n   $67 = ((($0)) + 412|0);\n   $68 = HEAP32[$67>>2]|0;\n   $69 = $68 >>> 24;\n   $70 = $69&255;\n   HEAP8[$9>>0] = $70;\n   $71 = $68 >>> 16;\n   $72 = $71&255;\n   $73 = ((($9)) + 1|0);\n   HEAP8[$73>>0] = $72;\n   $74 = $68 >>> 8;\n   $75 = $74&255;\n   $76 = ((($9)) + 2|0);\n   HEAP8[$76>>0] = $75;\n   $77 = $68&255;\n   $78 = ((($9)) + 3|0);\n   HEAP8[$78>>0] = $77;\n   _png_write_data($0,$9,4);\n   STACKTOP = sp;return;\n  } else {\n   _png_app_warning($0,23439);\n   STACKTOP = sp;return;\n  }\n  break;\n }\n case 2:  {\n  $79 = ((($2)) + 2|0);\n  $80 = HEAP16[$79>>1]|0;\n  $81 = ($80&65535) >>> 8;\n  $82 = $81&255;\n  HEAP8[$11>>0] = $82;\n  $83 = $80&255;\n  $84 = ((($11)) + 1|0);\n  HEAP8[$84>>0] = $83;\n  $85 = ((($11)) + 2|0);\n  $86 = ((($2)) + 4|0);\n  $87 = HEAP16[$86>>1]|0;\n  $88 = ($87&65535) >>> 8;\n  $89 = $88&255;\n  HEAP8[$85>>0] = $89;\n  $90 = $87&255;\n  $91 = ((($11)) + 3|0);\n  HEAP8[$91>>0] = $90;\n  $92 = ((($11)) + 4|0);\n  $93 = ((($2)) + 6|0);\n  $94 = HEAP16[$93>>1]|0;\n  $95 = ($94&65535) >>> 8;\n  $96 = $95&255;\n  HEAP8[$92>>0] = $96;\n  $97 = $94&255;\n  $98 = ((($11)) + 5|0);\n  HEAP8[$98>>0] = $97;\n  $99 = ((($0)) + 436|0);\n  $100 = HEAP8[$99>>0]|0;\n  $101 = ($100<<24>>24)==(8);\n  if ($101) {\n   $102 = $88 | $81;\n   $103 = $102 | $95;\n   $104 = ($103<<16>>16)==(0);\n   if (!($104)) {\n    _png_app_warning($0,23503);\n    STACKTOP = sp;return;\n   }\n  }\n  $105 = ((($0)) + 800|0);\n  HEAP32[$105>>2] = 34;\n  HEAP8[$6>>0] = 0;\n  $106 = ((($6)) + 1|0);\n  HEAP8[$106>>0] = 0;\n  $107 = ((($6)) + 2|0);\n  HEAP8[$107>>0] = 0;\n  $108 = ((($6)) + 3|0);\n  HEAP8[$108>>0] = 6;\n  $109 = ((($6)) + 4|0);\n  HEAP8[$109>>0] = 116;\n  $110 = ((($6)) + 5|0);\n  HEAP8[$110>>0] = 82;\n  $111 = ((($6)) + 6|0);\n  HEAP8[$111>>0] = 78;\n  $112 = ((($6)) + 7|0);\n  HEAP8[$112>>0] = 83;\n  _png_write_data($0,$6,8);\n  $113 = ((($0)) + 376|0);\n  HEAP32[$113>>2] = 1951551059;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$109,4);\n  HEAP32[$105>>2] = 66;\n  _png_write_data($0,$11,6);\n  _png_calculate_crc($0,$11,6);\n  HEAP32[$105>>2] = 130;\n  $114 = ((($0)) + 412|0);\n  $115 = HEAP32[$114>>2]|0;\n  $116 = $115 >>> 24;\n  $117 = $116&255;\n  HEAP8[$5>>0] = $117;\n  $118 = $115 >>> 16;\n  $119 = $118&255;\n  $120 = ((($5)) + 1|0);\n  HEAP8[$120>>0] = $119;\n  $121 = $115 >>> 8;\n  $122 = $121&255;\n  $123 = ((($5)) + 2|0);\n  HEAP8[$123>>0] = $122;\n  $124 = $115&255;\n  $125 = ((($5)) + 3|0);\n  HEAP8[$125>>0] = $124;\n  _png_write_data($0,$5,4);\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  _png_app_warning($0,23567);\n  STACKTOP = sp;return;\n }\n }\n}\nfunction _png_write_bKGD($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;\n var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;\n var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $3 = sp + 48|0;\n $4 = sp + 40|0;\n $5 = sp + 32|0;\n $6 = sp + 24|0;\n $7 = sp + 16|0;\n $8 = sp + 8|0;\n $9 = sp;\n $10 = ($2|0)==(3);\n if ($10) {\n  $11 = ((($0)) + 420|0);\n  $12 = HEAP16[$11>>1]|0;\n  $13 = ($12<<16>>16)==(0);\n  if ($13) {\n   $14 = ((($0)) + 708|0);\n   $15 = HEAP32[$14>>2]|0;\n   $16 = $15 & 1;\n   $17 = ($16|0)==(0);\n   if ($17) {\n    label = 5;\n   } else {\n    $$pre = HEAP8[$1>>0]|0;\n    $22 = $$pre;\n   }\n  } else {\n   label = 5;\n  }\n  if ((label|0) == 5) {\n   $18 = HEAP8[$1>>0]|0;\n   $19 = $18&255;\n   $20 = $12&65535;\n   $21 = ($19>>>0)<($20>>>0);\n   if ($21) {\n    $22 = $18;\n   } else {\n    _png_warning($0,23606);\n    STACKTOP = sp;return;\n   }\n  }\n  HEAP8[$9>>0] = $22;\n  $23 = ((($0)) + 800|0);\n  HEAP32[$23>>2] = 34;\n  HEAP8[$7>>0] = 0;\n  $24 = ((($7)) + 1|0);\n  HEAP8[$24>>0] = 0;\n  $25 = ((($7)) + 2|0);\n  HEAP8[$25>>0] = 0;\n  $26 = ((($7)) + 3|0);\n  HEAP8[$26>>0] = 1;\n  $27 = ((($7)) + 4|0);\n  HEAP8[$27>>0] = 98;\n  $28 = ((($7)) + 5|0);\n  HEAP8[$28>>0] = 75;\n  $29 = ((($7)) + 6|0);\n  HEAP8[$29>>0] = 71;\n  $30 = ((($7)) + 7|0);\n  HEAP8[$30>>0] = 68;\n  _png_write_data($0,$7,8);\n  $31 = ((($0)) + 376|0);\n  HEAP32[$31>>2] = 1649100612;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$27,4);\n  HEAP32[$23>>2] = 66;\n  _png_write_data($0,$9,1);\n  _png_calculate_crc($0,$9,1);\n  HEAP32[$23>>2] = 130;\n  $32 = ((($0)) + 412|0);\n  $33 = HEAP32[$32>>2]|0;\n  $34 = $33 >>> 24;\n  $35 = $34&255;\n  HEAP8[$8>>0] = $35;\n  $36 = $33 >>> 16;\n  $37 = $36&255;\n  $38 = ((($8)) + 1|0);\n  HEAP8[$38>>0] = $37;\n  $39 = $33 >>> 8;\n  $40 = $39&255;\n  $41 = ((($8)) + 2|0);\n  HEAP8[$41>>0] = $40;\n  $42 = $33&255;\n  $43 = ((($8)) + 3|0);\n  HEAP8[$43>>0] = $42;\n  _png_write_data($0,$8,4);\n  STACKTOP = sp;return;\n }\n $44 = $2 & 2;\n $45 = ($44|0)==(0);\n if ($45) {\n  $93 = ((($1)) + 8|0);\n  $94 = HEAP16[$93>>1]|0;\n  $95 = $94&65535;\n  $96 = ((($0)) + 436|0);\n  $97 = HEAP8[$96>>0]|0;\n  $98 = $97&255;\n  $99 = 1 << $98;\n  $100 = ($95|0)<($99|0);\n  if ($100) {\n   $101 = ($94&65535) >>> 8;\n   $102 = $101&255;\n   HEAP8[$9>>0] = $102;\n   $103 = $94&255;\n   $104 = ((($9)) + 1|0);\n   HEAP8[$104>>0] = $103;\n   $105 = ((($0)) + 800|0);\n   HEAP32[$105>>2] = 34;\n   HEAP8[$4>>0] = 0;\n   $106 = ((($4)) + 1|0);\n   HEAP8[$106>>0] = 0;\n   $107 = ((($4)) + 2|0);\n   HEAP8[$107>>0] = 0;\n   $108 = ((($4)) + 3|0);\n   HEAP8[$108>>0] = 2;\n   $109 = ((($4)) + 4|0);\n   HEAP8[$109>>0] = 98;\n   $110 = ((($4)) + 5|0);\n   HEAP8[$110>>0] = 75;\n   $111 = ((($4)) + 6|0);\n   HEAP8[$111>>0] = 71;\n   $112 = ((($4)) + 7|0);\n   HEAP8[$112>>0] = 68;\n   _png_write_data($0,$4,8);\n   $113 = ((($0)) + 376|0);\n   HEAP32[$113>>2] = 1649100612;\n   _png_reset_crc($0);\n   _png_calculate_crc($0,$109,4);\n   HEAP32[$105>>2] = 66;\n   _png_write_data($0,$9,2);\n   _png_calculate_crc($0,$9,2);\n   HEAP32[$105>>2] = 130;\n   $114 = ((($0)) + 412|0);\n   $115 = HEAP32[$114>>2]|0;\n   $116 = $115 >>> 24;\n   $117 = $116&255;\n   HEAP8[$3>>0] = $117;\n   $118 = $115 >>> 16;\n   $119 = $118&255;\n   $120 = ((($3)) + 1|0);\n   HEAP8[$120>>0] = $119;\n   $121 = $115 >>> 8;\n   $122 = $121&255;\n   $123 = ((($3)) + 2|0);\n   HEAP8[$123>>0] = $122;\n   $124 = $115&255;\n   $125 = ((($3)) + 3|0);\n   HEAP8[$125>>0] = $124;\n   _png_write_data($0,$3,4);\n   STACKTOP = sp;return;\n  } else {\n   _png_warning($0,23703);\n   STACKTOP = sp;return;\n  }\n }\n $46 = ((($1)) + 2|0);\n $47 = HEAP16[$46>>1]|0;\n $48 = ($47&65535) >>> 8;\n $49 = $48&255;\n HEAP8[$9>>0] = $49;\n $50 = $47&255;\n $51 = ((($9)) + 1|0);\n HEAP8[$51>>0] = $50;\n $52 = ((($9)) + 2|0);\n $53 = ((($1)) + 4|0);\n $54 = HEAP16[$53>>1]|0;\n $55 = ($54&65535) >>> 8;\n $56 = $55&255;\n HEAP8[$52>>0] = $56;\n $57 = $54&255;\n $58 = ((($9)) + 3|0);\n HEAP8[$58>>0] = $57;\n $59 = ((($9)) + 4|0);\n $60 = ((($1)) + 6|0);\n $61 = HEAP16[$60>>1]|0;\n $62 = ($61&65535) >>> 8;\n $63 = $62&255;\n HEAP8[$59>>0] = $63;\n $64 = $61&255;\n $65 = ((($9)) + 5|0);\n HEAP8[$65>>0] = $64;\n $66 = ((($0)) + 436|0);\n $67 = HEAP8[$66>>0]|0;\n $68 = ($67<<24>>24)==(8);\n if ($68) {\n  $69 = $55 | $48;\n  $70 = $69 | $62;\n  $71 = ($70<<16>>16)==(0);\n  if (!($71)) {\n   _png_warning($0,23639);\n   STACKTOP = sp;return;\n  }\n }\n $72 = ((($0)) + 800|0);\n HEAP32[$72>>2] = 34;\n HEAP8[$5>>0] = 0;\n $73 = ((($5)) + 1|0);\n HEAP8[$73>>0] = 0;\n $74 = ((($5)) + 2|0);\n HEAP8[$74>>0] = 0;\n $75 = ((($5)) + 3|0);\n HEAP8[$75>>0] = 6;\n $76 = ((($5)) + 4|0);\n HEAP8[$76>>0] = 98;\n $77 = ((($5)) + 5|0);\n HEAP8[$77>>0] = 75;\n $78 = ((($5)) + 6|0);\n HEAP8[$78>>0] = 71;\n $79 = ((($5)) + 7|0);\n HEAP8[$79>>0] = 68;\n _png_write_data($0,$5,8);\n $80 = ((($0)) + 376|0);\n HEAP32[$80>>2] = 1649100612;\n _png_reset_crc($0);\n _png_calculate_crc($0,$76,4);\n HEAP32[$72>>2] = 66;\n _png_write_data($0,$9,6);\n _png_calculate_crc($0,$9,6);\n HEAP32[$72>>2] = 130;\n $81 = ((($0)) + 412|0);\n $82 = HEAP32[$81>>2]|0;\n $83 = $82 >>> 24;\n $84 = $83&255;\n HEAP8[$6>>0] = $84;\n $85 = $82 >>> 16;\n $86 = $85&255;\n $87 = ((($6)) + 1|0);\n HEAP8[$87>>0] = $86;\n $88 = $82 >>> 8;\n $89 = $88&255;\n $90 = ((($6)) + 2|0);\n HEAP8[$90>>0] = $89;\n $91 = $82&255;\n $92 = ((($6)) + 3|0);\n HEAP8[$92>>0] = $91;\n _png_write_data($0,$6,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_hIST($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond13 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp + 16|0;\n $4 = sp + 8|0;\n $5 = sp;\n $6 = ((($0)) + 420|0);\n $7 = HEAP16[$6>>1]|0;\n $8 = $7&65535;\n $9 = ($8|0)<($2|0);\n if ($9) {\n  _png_warning($0,23767);\n  STACKTOP = sp;return;\n }\n $10 = $2 << 1;\n $11 = ((($0)) + 800|0);\n HEAP32[$11>>2] = 34;\n $12 = $2 >>> 23;\n $13 = $12&255;\n HEAP8[$4>>0] = $13;\n $14 = $2 >>> 15;\n $15 = $14&255;\n $16 = ((($4)) + 1|0);\n HEAP8[$16>>0] = $15;\n $17 = $2 >>> 7;\n $18 = $17&255;\n $19 = ((($4)) + 2|0);\n HEAP8[$19>>0] = $18;\n $20 = $10&255;\n $21 = ((($4)) + 3|0);\n HEAP8[$21>>0] = $20;\n $22 = ((($4)) + 4|0);\n HEAP8[$22>>0] = 104;\n $23 = ((($4)) + 5|0);\n HEAP8[$23>>0] = 73;\n $24 = ((($4)) + 6|0);\n HEAP8[$24>>0] = 83;\n $25 = ((($4)) + 7|0);\n HEAP8[$25>>0] = 84;\n _png_write_data($0,$4,8);\n $26 = ((($0)) + 376|0);\n HEAP32[$26>>2] = 1749635924;\n _png_reset_crc($0);\n _png_calculate_crc($0,$22,4);\n HEAP32[$11>>2] = 66;\n $27 = ($2|0)>(0);\n if ($27) {\n  $28 = ((($5)) + 1|0);\n  $$011 = 0;\n  while(1) {\n   $29 = (($1) + ($$011<<1)|0);\n   $30 = HEAP16[$29>>1]|0;\n   $31 = ($30&65535) >>> 8;\n   $32 = $31&255;\n   HEAP8[$5>>0] = $32;\n   $33 = $30&255;\n   HEAP8[$28>>0] = $33;\n   _png_write_data($0,$5,2);\n   _png_calculate_crc($0,$5,2);\n   $34 = (($$011) + 1)|0;\n   $exitcond13 = ($34|0)==($2|0);\n   if ($exitcond13) {\n    break;\n   } else {\n    $$011 = $34;\n   }\n  }\n }\n HEAP32[$11>>2] = 130;\n $35 = ((($0)) + 412|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = $36 >>> 24;\n $38 = $37&255;\n HEAP8[$3>>0] = $38;\n $39 = $36 >>> 16;\n $40 = $39&255;\n $41 = ((($3)) + 1|0);\n HEAP8[$41>>0] = $40;\n $42 = $36 >>> 8;\n $43 = $42&255;\n $44 = ((($3)) + 2|0);\n HEAP8[$44>>0] = $43;\n $45 = $36&255;\n $46 = ((($3)) + 3|0);\n HEAP8[$46>>0] = $45;\n _png_write_data($0,$3,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_tEXt($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$021 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);\n $4 = sp + 88|0;\n $5 = sp + 80|0;\n $6 = sp;\n $7 = (_png_check_keyword($0,$1,$6)|0);\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_error($0,23813);\n  // unreachable;\n }\n $9 = ($2|0)==(0|0);\n if ($9) {\n  $$021 = 0;\n } else {\n  $10 = HEAP8[$2>>0]|0;\n  $11 = ($10<<24>>24)==(0);\n  if ($11) {\n   $$021 = 0;\n  } else {\n   $12 = (_strlen($2)|0);\n   $13 = (2147483646 - ($7))|0;\n   $14 = ($12>>>0)>($13>>>0);\n   if ($14) {\n    _png_error($0,23835);\n    // unreachable;\n   } else {\n    $$021 = $12;\n   }\n  }\n }\n $15 = (($7) + 1)|0;\n $16 = (($15) + ($$021))|0;\n $17 = ($0|0)==(0|0);\n if ($17) {\n  $50 = $4;\n  STACKTOP = sp;return;\n }\n $18 = ((($0)) + 800|0);\n HEAP32[$18>>2] = 34;\n $19 = $16 >>> 24;\n $20 = $19&255;\n HEAP8[$5>>0] = $20;\n $21 = $16 >>> 16;\n $22 = $21&255;\n $23 = ((($5)) + 1|0);\n HEAP8[$23>>0] = $22;\n $24 = $16 >>> 8;\n $25 = $24&255;\n $26 = ((($5)) + 2|0);\n HEAP8[$26>>0] = $25;\n $27 = $16&255;\n $28 = ((($5)) + 3|0);\n HEAP8[$28>>0] = $27;\n $29 = ((($5)) + 4|0);\n HEAP8[$29>>0] = 116;\n $30 = ((($5)) + 5|0);\n HEAP8[$30>>0] = 69;\n $31 = ((($5)) + 6|0);\n HEAP8[$31>>0] = 88;\n $32 = ((($5)) + 7|0);\n HEAP8[$32>>0] = 116;\n _png_write_data($0,$5,8);\n $33 = ((($0)) + 376|0);\n HEAP32[$33>>2] = 1950701684;\n _png_reset_crc($0);\n _png_calculate_crc($0,$29,4);\n HEAP32[$18>>2] = 66;\n $34 = ($15|0)==(0);\n if (!($34)) {\n  _png_write_data($0,$6,$15);\n  _png_calculate_crc($0,$6,$15);\n }\n $35 = ($$021|0)!=(0);\n $36 = ($2|0)!=(0|0);\n $or$cond = $35 & $36;\n if ($or$cond) {\n  _png_write_data($0,$2,$$021);\n  _png_calculate_crc($0,$2,$$021);\n }\n if ($17) {\n  $50 = $4;\n  STACKTOP = sp;return;\n }\n $37 = ((($0)) + 800|0);\n HEAP32[$37>>2] = 130;\n $38 = ((($0)) + 412|0);\n $39 = HEAP32[$38>>2]|0;\n $40 = $39 >>> 24;\n $41 = $40&255;\n HEAP8[$4>>0] = $41;\n $42 = $39 >>> 16;\n $43 = $42&255;\n $44 = ((($4)) + 1|0);\n HEAP8[$44>>0] = $43;\n $45 = $39 >>> 8;\n $46 = $45&255;\n $47 = ((($4)) + 2|0);\n HEAP8[$47>>0] = $46;\n $48 = $39&255;\n $49 = ((($4)) + 3|0);\n HEAP8[$49>>0] = $48;\n _png_write_data($0,$4,4);\n $50 = $4;\n STACKTOP = sp;return;\n}\nfunction _png_write_zTXt($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0$i = 0, $$0$i26 = 0, $$0$i29 = 0, $$0$in$us$i = 0, $$0$us$i = 0, $$025$us$i = 0, $$026$us$i = 0, $$027$$025$i = 0, $$027$$025$i27 = 0, $$027$$025$us$i = 0, $$027$us$i = 0, $$lcssa$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i28 = 0, $or$cond$us$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1136|0);\n $4 = sp + 1128|0;\n $5 = sp + 1120|0;\n $6 = sp + 1036|0;\n $7 = sp;\n switch ($3|0) {\n case -1:  {\n  _png_write_tEXt($0,$1,$2,0);\n  STACKTOP = sp;return;\n  break;\n }\n case 0:  {\n  $8 = (_png_check_keyword($0,$1,$6)|0);\n  $9 = ($8|0)==(0);\n  if ($9) {\n   _png_error($0,23886);\n   // unreachable;\n  }\n  $10 = (($8) + 1)|0;\n  $11 = (($6) + ($10)|0);\n  HEAP8[$11>>0] = 0;\n  $12 = (($8) + 2)|0;\n  $13 = ($2|0)==(0|0);\n  if ($13) {\n   $16 = 0;\n  } else {\n   $14 = (_strlen($2)|0);\n   $16 = $14;\n  }\n  HEAP32[$7>>2] = $2;\n  $15 = ((($7)) + 4|0);\n  HEAP32[$15>>2] = $16;\n  $17 = ((($7)) + 8|0);\n  HEAP32[$17>>2] = 0;\n  $18 = (_png_text_compress($0,2052348020,$7,$12)|0);\n  $19 = ($18|0)==(0);\n  if (!($19)) {\n   $20 = ((($0)) + 248|0);\n   $21 = HEAP32[$20>>2]|0;\n   _png_error($0,$21);\n   // unreachable;\n  }\n  $22 = HEAP32[$17>>2]|0;\n  $23 = (($22) + ($12))|0;\n  $24 = ($0|0)==(0|0);\n  L15: do {\n   if ($24) {\n    $$0$i26 = HEAP32[(280)>>2]|0;\n    $42 = ($22>>>0)<(1024);\n    $$027$$025$i27 = $42 ? $22 : 1024;\n    $43 = (($22) - ($$027$$025$i27))|0;\n    $44 = ($43|0)==(0);\n    $45 = ($$0$i26|0)==(0|0);\n    $or$cond$i28 = $45 | $44;\n    if ($or$cond$i28) {\n     $$lcssa$i = $44;\n    } else {\n     $46 = HEAP32[(284)>>2]|0;\n     $$0$i29 = $$0$i26;$59 = $43;\n     while(1) {\n      $$0$i = HEAP32[$$0$i29>>2]|0;\n      $58 = ($46>>>0)>($59>>>0);\n      $$027$$025$i = $58 ? $59 : $46;\n      $60 = (($59) - ($$027$$025$i))|0;\n      $61 = ($60|0)==(0);\n      $62 = ($$0$i|0)==(0|0);\n      $or$cond$i = $62 | $61;\n      if ($or$cond$i) {\n       $$lcssa$i = $61;\n       break;\n      } else {\n       $$0$i29 = $$0$i;$59 = $60;\n      }\n     }\n    }\n   } else {\n    $25 = ((($0)) + 800|0);\n    HEAP32[$25>>2] = 34;\n    $26 = $23 >>> 24;\n    $27 = $26&255;\n    HEAP8[$4>>0] = $27;\n    $28 = $23 >>> 16;\n    $29 = $28&255;\n    $30 = ((($4)) + 1|0);\n    HEAP8[$30>>0] = $29;\n    $31 = $23 >>> 8;\n    $32 = $31&255;\n    $33 = ((($4)) + 2|0);\n    HEAP8[$33>>0] = $32;\n    $34 = $23&255;\n    $35 = ((($4)) + 3|0);\n    HEAP8[$35>>0] = $34;\n    $36 = ((($4)) + 4|0);\n    HEAP8[$36>>0] = 122;\n    $37 = ((($4)) + 5|0);\n    HEAP8[$37>>0] = 84;\n    $38 = ((($4)) + 6|0);\n    HEAP8[$38>>0] = 88;\n    $39 = ((($4)) + 7|0);\n    HEAP8[$39>>0] = 116;\n    _png_write_data($0,$4,8);\n    $40 = ((($0)) + 376|0);\n    HEAP32[$40>>2] = 2052348020;\n    _png_reset_crc($0);\n    _png_calculate_crc($0,$36,4);\n    HEAP32[$25>>2] = 66;\n    $41 = ($12|0)==(0);\n    if (!($41)) {\n     _png_write_data($0,$6,$12);\n     _png_calculate_crc($0,$6,$12);\n    }\n    $47 = HEAP32[$17>>2]|0;\n    $48 = ((($0)) + 280|0);\n    $49 = ((($0)) + 284|0);\n    $50 = ((($7)) + 12|0);\n    $$0$in$us$i = $48;$$025$us$i = 1024;$$026$us$i = $50;$$027$us$i = $47;\n    while(1) {\n     $$0$us$i = HEAP32[$$0$in$us$i>>2]|0;\n     $51 = ($$025$us$i>>>0)>($$027$us$i>>>0);\n     $$027$$025$us$i = $51 ? $$027$us$i : $$025$us$i;\n     $52 = ($$027$$025$us$i|0)==(0);\n     if (!($52)) {\n      _png_write_data($0,$$026$us$i,$$027$$025$us$i);\n      _png_calculate_crc($0,$$026$us$i,$$027$$025$us$i);\n     }\n     $53 = (($$027$us$i) - ($$027$$025$us$i))|0;\n     $54 = ($53|0)==(0);\n     $55 = ($$0$us$i|0)==(0|0);\n     $or$cond$us$i = $55 | $54;\n     if ($or$cond$us$i) {\n      $$lcssa$i = $54;\n      break L15;\n     }\n     $56 = HEAP32[$49>>2]|0;\n     $57 = ((($$0$us$i)) + 4|0);\n     $$0$in$us$i = $$0$us$i;$$025$us$i = $56;$$026$us$i = $57;$$027$us$i = $53;\n    }\n   }\n  } while(0);\n  if (!($$lcssa$i)) {\n   _png_error($0,23205);\n   // unreachable;\n  }\n  if (!($24)) {\n   $63 = ((($0)) + 800|0);\n   HEAP32[$63>>2] = 130;\n   $64 = ((($0)) + 412|0);\n   $65 = HEAP32[$64>>2]|0;\n   $66 = $65 >>> 24;\n   $67 = $66&255;\n   HEAP8[$5>>0] = $67;\n   $68 = $65 >>> 16;\n   $69 = $68&255;\n   $70 = ((($5)) + 1|0);\n   HEAP8[$70>>0] = $69;\n   $71 = $65 >>> 8;\n   $72 = $71&255;\n   $73 = ((($5)) + 2|0);\n   HEAP8[$73>>0] = $72;\n   $74 = $65&255;\n   $75 = ((($5)) + 3|0);\n   HEAP8[$75>>0] = $74;\n   _png_write_data($0,$5,4);\n  }\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  _png_error($0,23855);\n  // unreachable;\n }\n }\n}\nfunction _png_write_iTXt($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$ = 0, $$0 = 0, $$0$i = 0, $$0$i71 = 0, $$0$i74 = 0, $$0$in$us$i = 0, $$0$us$i = 0, $$025$us$i = 0, $$026$us$i = 0, $$027$$025$i = 0, $$027$$025$i72 = 0, $$027$$025$us$i = 0, $$027$us$i = 0, $$054 = 0, $$055 = 0, $$057 = 0, $$1 = 0, $$58 = 0, $$lcssa$i = 0, $$pre = 0;\n var $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;\n var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i64 = 0, $or$cond$i6473 = 0, $or$cond$i65 = 0, $or$cond$us$i = 0;\n var $or$cond3$i59 = 0, $or$cond3$i62 = 0, $or$cond3$i66 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1136|0);\n $6 = sp + 1128|0;\n $7 = sp + 1120|0;\n $8 = sp + 1036|0;\n $9 = sp;\n $10 = (_png_check_keyword($0,$2,$8)|0);\n $11 = ($10|0)==(0);\n if ($11) {\n  _png_error($0,23908);\n  // unreachable;\n }\n switch ($1|0) {\n case -1: case 1:  {\n  $12 = (($10) + 1)|0;\n  $13 = (($8) + ($12)|0);\n  HEAP8[$13>>0] = 0;\n  $$0 = 0;$$055 = $12;\n  break;\n }\n case 2: case 0:  {\n  $14 = (($10) + 1)|0;\n  $15 = (($8) + ($14)|0);\n  HEAP8[$15>>0] = 1;\n  $$0 = 1;$$055 = $14;\n  break;\n }\n default: {\n  _png_error($0,23930);\n  // unreachable;\n }\n }\n $16 = (($$055) + 1)|0;\n $17 = (($8) + ($16)|0);\n HEAP8[$17>>0] = 0;\n $18 = (($$055) + 2)|0;\n $19 = ($3|0)==(0|0);\n $$ = $19 ? 31868 : $3;\n $20 = (_strlen($$)|0);\n $21 = (($20) + 1)|0;\n $22 = ($4|0)==(0|0);\n $$057 = $22 ? 31868 : $4;\n $23 = (_strlen($$057)|0);\n $24 = (($23) + 1)|0;\n $25 = ($5|0)==(0|0);\n $$58 = $25 ? 31868 : $5;\n $26 = (2147483645 - ($$055))|0;\n $27 = ($21>>>0)>($26>>>0);\n $28 = (($21) + ($18))|0;\n $$054 = $27 ? 2147483647 : $28;\n $29 = (2147483647 - ($$054))|0;\n $30 = ($24>>>0)>($29>>>0);\n $31 = (($$054) + ($24))|0;\n $$1 = $30 ? 2147483647 : $31;\n $32 = (_strlen($$58)|0);\n HEAP32[$9>>2] = $$58;\n $33 = ((($9)) + 4|0);\n HEAP32[$33>>2] = $32;\n $34 = ((($9)) + 8|0);\n HEAP32[$34>>2] = 0;\n do {\n  if ($$0) {\n   $35 = (_png_text_compress($0,1767135348,$9,$$1)|0);\n   $36 = ($35|0)==(0);\n   if ($36) {\n    $$pre = HEAP32[$34>>2]|0;\n    $42 = $$pre;\n    break;\n   } else {\n    $37 = ((($0)) + 248|0);\n    $38 = HEAP32[$37>>2]|0;\n    _png_error($0,$38);\n    // unreachable;\n   }\n  } else {\n   $39 = (2147483647 - ($$1))|0;\n   $40 = ($32>>>0)>($39>>>0);\n   if ($40) {\n    _png_error($0,23956);\n    // unreachable;\n   } else {\n    HEAP32[$34>>2] = $32;\n    $42 = $32;\n    break;\n   }\n  }\n } while(0);\n $41 = (($42) + ($$1))|0;\n $43 = ($0|0)==(0|0);\n if ($43) {\n  $87 = 0;\n } else {\n  $44 = ((($0)) + 800|0);\n  HEAP32[$44>>2] = 34;\n  $45 = $41 >>> 24;\n  $46 = $45&255;\n  HEAP8[$6>>0] = $46;\n  $47 = $41 >>> 16;\n  $48 = $47&255;\n  $49 = ((($6)) + 1|0);\n  HEAP8[$49>>0] = $48;\n  $50 = $41 >>> 8;\n  $51 = $50&255;\n  $52 = ((($6)) + 2|0);\n  HEAP8[$52>>0] = $51;\n  $53 = $41&255;\n  $54 = ((($6)) + 3|0);\n  HEAP8[$54>>0] = $53;\n  $55 = ((($6)) + 4|0);\n  HEAP8[$55>>0] = 105;\n  $56 = ((($6)) + 5|0);\n  HEAP8[$56>>0] = 84;\n  $57 = ((($6)) + 6|0);\n  HEAP8[$57>>0] = 88;\n  $58 = ((($6)) + 7|0);\n  HEAP8[$58>>0] = 116;\n  _png_write_data($0,$6,8);\n  $59 = ((($0)) + 376|0);\n  HEAP32[$59>>2] = 1767135348;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$55,4);\n  HEAP32[$44>>2] = 66;\n  $60 = ($18|0)==(0);\n  if (!($60)) {\n   _png_write_data($0,$8,$18);\n   _png_calculate_crc($0,$8,$18);\n  }\n  $61 = ($$|0)!=(0|0);\n  $62 = ($21|0)!=(0);\n  $or$cond3$i59 = $62 & $61;\n  if ($or$cond3$i59) {\n   _png_write_data($0,$$,$21);\n   _png_calculate_crc($0,$$,$21);\n  }\n  $63 = ($$057|0)!=(0|0);\n  $64 = ($24|0)!=(0);\n  $or$cond3$i62 = $64 & $63;\n  if ($or$cond3$i62) {\n   _png_write_data($0,$$057,$24);\n   _png_calculate_crc($0,$$057,$24);\n   $87 = 1;\n  } else {\n   $87 = 1;\n  }\n }\n $65 = HEAP32[$34>>2]|0;\n if ($$0) {\n  $66 = ((($0)) + 280|0);\n  $67 = ((($0)) + 284|0);\n  L32: do {\n   if ($43) {\n    $$0$i71 = HEAP32[$66>>2]|0;\n    $68 = ($65>>>0)<(1024);\n    $$027$$025$i72 = $68 ? $65 : 1024;\n    $69 = (($65) - ($$027$$025$i72))|0;\n    $70 = ($69|0)==(0);\n    $71 = ($$0$i71|0)==(0|0);\n    $or$cond$i6473 = $71 | $70;\n    if ($or$cond$i6473) {\n     $$lcssa$i = $70;\n    } else {\n     $72 = HEAP32[$67>>2]|0;\n     $$0$i74 = $$0$i71;$82 = $69;\n     while(1) {\n      $$0$i = HEAP32[$$0$i74>>2]|0;\n      $81 = ($72>>>0)>($82>>>0);\n      $$027$$025$i = $81 ? $82 : $72;\n      $83 = (($82) - ($$027$$025$i))|0;\n      $84 = ($83|0)==(0);\n      $85 = ($$0$i|0)==(0|0);\n      $or$cond$i64 = $85 | $84;\n      if ($or$cond$i64) {\n       $$lcssa$i = $84;\n       break;\n      } else {\n       $$0$i74 = $$0$i;$82 = $83;\n      }\n     }\n    }\n   } else {\n    $73 = ((($9)) + 12|0);\n    $$0$in$us$i = $66;$$025$us$i = 1024;$$026$us$i = $73;$$027$us$i = $65;\n    while(1) {\n     $$0$us$i = HEAP32[$$0$in$us$i>>2]|0;\n     $74 = ($$025$us$i>>>0)>($$027$us$i>>>0);\n     $$027$$025$us$i = $74 ? $$027$us$i : $$025$us$i;\n     $75 = ($$027$$025$us$i|0)==(0);\n     if (!($75)) {\n      _png_write_data($0,$$026$us$i,$$027$$025$us$i);\n      _png_calculate_crc($0,$$026$us$i,$$027$$025$us$i);\n     }\n     $76 = (($$027$us$i) - ($$027$$025$us$i))|0;\n     $77 = ($76|0)==(0);\n     $78 = ($$0$us$i|0)==(0|0);\n     $or$cond$us$i = $78 | $77;\n     if ($or$cond$us$i) {\n      $$lcssa$i = $77;\n      break L32;\n     }\n     $79 = HEAP32[$67>>2]|0;\n     $80 = ((($$0$us$i)) + 4|0);\n     $$0$in$us$i = $$0$us$i;$$025$us$i = $79;$$026$us$i = $80;$$027$us$i = $76;\n    }\n   }\n  } while(0);\n  if (!($$lcssa$i)) {\n   _png_error($0,23205);\n   // unreachable;\n  }\n } else {\n  $86 = ($$58|0)!=(0|0);\n  $or$cond$i65 = $86 & $87;\n  $88 = ($65|0)!=(0);\n  $or$cond3$i66 = $or$cond$i65 & $88;\n  if ($or$cond3$i66) {\n   _png_write_data($0,$$58,$65);\n   _png_calculate_crc($0,$$58,$65);\n  }\n }\n if ($43) {\n  STACKTOP = sp;return;\n }\n $89 = ((($0)) + 800|0);\n HEAP32[$89>>2] = 130;\n $90 = ((($0)) + 412|0);\n $91 = HEAP32[$90>>2]|0;\n $92 = $91 >>> 24;\n $93 = $92&255;\n HEAP8[$7>>0] = $93;\n $94 = $91 >>> 16;\n $95 = $94&255;\n $96 = ((($7)) + 1|0);\n HEAP8[$96>>0] = $95;\n $97 = $91 >>> 8;\n $98 = $97&255;\n $99 = ((($7)) + 2|0);\n HEAP8[$99>>0] = $98;\n $100 = $91&255;\n $101 = ((($7)) + 3|0);\n HEAP8[$101>>0] = $100;\n _png_write_data($0,$7,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_oFFs($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $4 = sp + 24|0;\n $5 = sp + 16|0;\n $6 = sp;\n $7 = ($3|0)>(1);\n if ($7) {\n  _png_warning($0,23989);\n }\n _png_save_int_32($6,$1);\n $8 = ((($6)) + 4|0);\n _png_save_int_32($8,$2);\n $9 = $3&255;\n $10 = ((($6)) + 8|0);\n HEAP8[$10>>0] = $9;\n $11 = ($0|0)==(0|0);\n if ($11) {\n  STACKTOP = sp;return;\n }\n $12 = ((($0)) + 800|0);\n HEAP32[$12>>2] = 34;\n HEAP8[$5>>0] = 0;\n $13 = ((($5)) + 1|0);\n HEAP8[$13>>0] = 0;\n $14 = ((($5)) + 2|0);\n HEAP8[$14>>0] = 0;\n $15 = ((($5)) + 3|0);\n HEAP8[$15>>0] = 9;\n $16 = ((($5)) + 4|0);\n HEAP8[$16>>0] = 111;\n $17 = ((($5)) + 5|0);\n HEAP8[$17>>0] = 70;\n $18 = ((($5)) + 6|0);\n HEAP8[$18>>0] = 70;\n $19 = ((($5)) + 7|0);\n HEAP8[$19>>0] = 115;\n _png_write_data($0,$5,8);\n $20 = ((($0)) + 376|0);\n HEAP32[$20>>2] = 1866876531;\n _png_reset_crc($0);\n _png_calculate_crc($0,$16,4);\n HEAP32[$12>>2] = 66;\n _png_write_data($0,$6,9);\n _png_calculate_crc($0,$6,9);\n HEAP32[$12>>2] = 130;\n $21 = ((($0)) + 412|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = $22 >>> 24;\n $24 = $23&255;\n HEAP8[$4>>0] = $24;\n $25 = $22 >>> 16;\n $26 = $25&255;\n $27 = ((($4)) + 1|0);\n HEAP8[$27>>0] = $26;\n $28 = $22 >>> 8;\n $29 = $28&255;\n $30 = ((($4)) + 2|0);\n HEAP8[$30>>0] = $29;\n $31 = $22&255;\n $32 = ((($4)) + 3|0);\n HEAP8[$32>>0] = $31;\n _png_write_data($0,$4,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_pCAL($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$054$lcssa = 0, $$05466 = 0, $$067 = 0, $$165$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $brmerge$demorgan = 0, $exitcond = 0, $exitcond71 = 0, $not$ = 0, $not$55 = 0;\n var $or$cond3$i57 = 0, $or$cond3$i60$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);\n $8 = sp + 104|0;\n $9 = sp + 96|0;\n $10 = sp + 80|0;\n $11 = sp;\n $12 = ($4|0)>(3);\n if ($12) {\n  _png_error($0,24027);\n  // unreachable;\n }\n $13 = (_png_check_keyword($0,$1,$11)|0);\n $14 = ($13|0)==(0);\n if ($14) {\n  _png_error($0,24069);\n  // unreachable;\n }\n $15 = (($13) + 1)|0;\n $16 = (_strlen($6)|0);\n $not$ = ($5|0)!=(0);\n $17 = $not$&1;\n $18 = (($16) + ($17))|0;\n $19 = (($13) + 11)|0;\n $20 = (($19) + ($18))|0;\n $21 = $5 << 2;\n $22 = (_png_malloc($0,$21)|0);\n $23 = ($5|0)>(0);\n if ($23) {\n  $24 = (($5) + -1)|0;\n  $$05466 = $20;$$067 = 0;\n  while(1) {\n   $25 = (($7) + ($$067<<2)|0);\n   $26 = HEAP32[$25>>2]|0;\n   $27 = (_strlen($26)|0);\n   $not$55 = ($$067|0)!=($24|0);\n   $28 = $not$55&1;\n   $29 = (($27) + ($28))|0;\n   $30 = (($22) + ($$067<<2)|0);\n   HEAP32[$30>>2] = $29;\n   $31 = (($29) + ($$05466))|0;\n   $32 = (($$067) + 1)|0;\n   $exitcond71 = ($32|0)==($5|0);\n   if ($exitcond71) {\n    $$054$lcssa = $31;\n    break;\n   } else {\n    $$05466 = $31;$$067 = $32;\n   }\n  }\n } else {\n  $$054$lcssa = $20;\n }\n $33 = ($0|0)==(0|0);\n if ($33) {\n  $58 = 0;\n } else {\n  $34 = ((($0)) + 800|0);\n  HEAP32[$34>>2] = 34;\n  $35 = $$054$lcssa >>> 24;\n  $36 = $35&255;\n  HEAP8[$9>>0] = $36;\n  $37 = $$054$lcssa >>> 16;\n  $38 = $37&255;\n  $39 = ((($9)) + 1|0);\n  HEAP8[$39>>0] = $38;\n  $40 = $$054$lcssa >>> 8;\n  $41 = $40&255;\n  $42 = ((($9)) + 2|0);\n  HEAP8[$42>>0] = $41;\n  $43 = $$054$lcssa&255;\n  $44 = ((($9)) + 3|0);\n  HEAP8[$44>>0] = $43;\n  $45 = ((($9)) + 4|0);\n  HEAP8[$45>>0] = 112;\n  $46 = ((($9)) + 5|0);\n  HEAP8[$46>>0] = 67;\n  $47 = ((($9)) + 6|0);\n  HEAP8[$47>>0] = 65;\n  $48 = ((($9)) + 7|0);\n  HEAP8[$48>>0] = 76;\n  _png_write_data($0,$9,8);\n  $49 = ((($0)) + 376|0);\n  HEAP32[$49>>2] = 1883455820;\n  _png_reset_crc($0);\n  _png_calculate_crc($0,$45,4);\n  HEAP32[$34>>2] = 66;\n  $50 = ($15|0)==(0);\n  if ($50) {\n   $58 = 1;\n  } else {\n   _png_write_data($0,$11,$15);\n   _png_calculate_crc($0,$11,$15);\n   $58 = 1;\n  }\n }\n _png_save_int_32($10,$2);\n $51 = ((($10)) + 4|0);\n _png_save_int_32($51,$3);\n $52 = $4&255;\n $53 = ((($10)) + 8|0);\n HEAP8[$53>>0] = $52;\n $54 = $5&255;\n $55 = ((($10)) + 9|0);\n HEAP8[$55>>0] = $54;\n if ($58) {\n  _png_write_data($0,$10,10);\n  _png_calculate_crc($0,$10,10);\n  $56 = ($6|0)!=(0|0);\n  $57 = ($18|0)!=(0);\n  $or$cond3$i57 = $57 & $56;\n  if ($or$cond3$i57) {\n   _png_write_data($0,$6,$18);\n   _png_calculate_crc($0,$6,$18);\n  }\n }\n $brmerge$demorgan = $23 & $58;\n if ($brmerge$demorgan) {\n  $$165$us = 0;\n  while(1) {\n   $59 = (($7) + ($$165$us<<2)|0);\n   $60 = HEAP32[$59>>2]|0;\n   $61 = (($22) + ($$165$us<<2)|0);\n   $62 = HEAP32[$61>>2]|0;\n   $63 = ($60|0)!=(0|0);\n   $64 = ($62|0)!=(0);\n   $or$cond3$i60$us = $63 & $64;\n   if ($or$cond3$i60$us) {\n    _png_write_data($0,$60,$62);\n    _png_calculate_crc($0,$60,$62);\n   }\n   $65 = (($$165$us) + 1)|0;\n   $exitcond = ($65|0)==($5|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$165$us = $65;\n   }\n  }\n }\n _png_free($0,$22);\n if ($33) {\n  STACKTOP = sp;return;\n }\n $66 = ((($0)) + 800|0);\n HEAP32[$66>>2] = 130;\n $67 = ((($0)) + 412|0);\n $68 = HEAP32[$67>>2]|0;\n $69 = $68 >>> 24;\n $70 = $69&255;\n HEAP8[$8>>0] = $70;\n $71 = $68 >>> 16;\n $72 = $71&255;\n $73 = ((($8)) + 1|0);\n HEAP8[$73>>0] = $72;\n $74 = $68 >>> 8;\n $75 = $74&255;\n $76 = ((($8)) + 2|0);\n HEAP8[$76>>0] = $75;\n $77 = $68&255;\n $78 = ((($8)) + 3|0);\n HEAP8[$78>>0] = $77;\n _png_write_data($0,$8,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_sCAL_s($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);\n $4 = sp + 72|0;\n $5 = sp + 64|0;\n $6 = sp;\n $7 = (_strlen($2)|0);\n $8 = (_strlen($3)|0);\n $9 = (($7) + 2)|0;\n $10 = (($9) + ($8))|0;\n $11 = ($10>>>0)>(64);\n if ($11) {\n  _png_warning($0,24091);\n  STACKTOP = sp;return;\n }\n $12 = $1&255;\n HEAP8[$6>>0] = $12;\n $13 = ((($6)) + 1|0);\n $14 = (($7) + 1)|0;\n _memcpy(($13|0),($2|0),($14|0))|0;\n $15 = (($6) + ($7)|0);\n $16 = ((($15)) + 2|0);\n _memcpy(($16|0),($3|0),($8|0))|0;\n $17 = ($0|0)==(0|0);\n if ($17) {\n  STACKTOP = sp;return;\n }\n $18 = ((($0)) + 800|0);\n HEAP32[$18>>2] = 34;\n $19 = $10 >>> 24;\n $20 = $19&255;\n HEAP8[$5>>0] = $20;\n $21 = $10 >>> 16;\n $22 = $21&255;\n $23 = ((($5)) + 1|0);\n HEAP8[$23>>0] = $22;\n $24 = $10 >>> 8;\n $25 = $24&255;\n $26 = ((($5)) + 2|0);\n HEAP8[$26>>0] = $25;\n $27 = $10&255;\n $28 = ((($5)) + 3|0);\n HEAP8[$28>>0] = $27;\n $29 = ((($5)) + 4|0);\n HEAP8[$29>>0] = 115;\n $30 = ((($5)) + 5|0);\n HEAP8[$30>>0] = 67;\n $31 = ((($5)) + 6|0);\n HEAP8[$31>>0] = 65;\n $32 = ((($5)) + 7|0);\n HEAP8[$32>>0] = 76;\n _png_write_data($0,$5,8);\n $33 = ((($0)) + 376|0);\n HEAP32[$33>>2] = 1933787468;\n _png_reset_crc($0);\n _png_calculate_crc($0,$29,4);\n HEAP32[$18>>2] = 66;\n $34 = ($10|0)==(0);\n if (!($34)) {\n  _png_write_data($0,$6,$10);\n  _png_calculate_crc($0,$6,$10);\n }\n HEAP32[$18>>2] = 130;\n $35 = ((($0)) + 412|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = $36 >>> 24;\n $38 = $37&255;\n HEAP8[$4>>0] = $38;\n $39 = $36 >>> 16;\n $40 = $39&255;\n $41 = ((($4)) + 1|0);\n HEAP8[$41>>0] = $40;\n $42 = $36 >>> 8;\n $43 = $42&255;\n $44 = ((($4)) + 2|0);\n HEAP8[$44>>0] = $43;\n $45 = $36&255;\n $46 = ((($4)) + 3|0);\n HEAP8[$46>>0] = $45;\n _png_write_data($0,$4,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_pHYs($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;\n var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $4 = sp + 16|0;\n $5 = sp + 12|0;\n $6 = sp;\n $7 = ($3|0)>(1);\n if ($7) {\n  _png_warning($0,24127);\n }\n $8 = $1 >>> 24;\n $9 = $8&255;\n HEAP8[$6>>0] = $9;\n $10 = $1 >>> 16;\n $11 = $10&255;\n $12 = ((($6)) + 1|0);\n HEAP8[$12>>0] = $11;\n $13 = $1 >>> 8;\n $14 = $13&255;\n $15 = ((($6)) + 2|0);\n HEAP8[$15>>0] = $14;\n $16 = $1&255;\n $17 = ((($6)) + 3|0);\n HEAP8[$17>>0] = $16;\n $18 = ((($6)) + 4|0);\n $19 = $2 >>> 24;\n $20 = $19&255;\n HEAP8[$18>>0] = $20;\n $21 = $2 >>> 16;\n $22 = $21&255;\n $23 = ((($6)) + 5|0);\n HEAP8[$23>>0] = $22;\n $24 = $2 >>> 8;\n $25 = $24&255;\n $26 = ((($6)) + 6|0);\n HEAP8[$26>>0] = $25;\n $27 = $2&255;\n $28 = ((($6)) + 7|0);\n HEAP8[$28>>0] = $27;\n $29 = $3&255;\n $30 = ((($6)) + 8|0);\n HEAP8[$30>>0] = $29;\n $31 = ($0|0)==(0|0);\n if ($31) {\n  STACKTOP = sp;return;\n }\n $32 = ((($0)) + 800|0);\n HEAP32[$32>>2] = 34;\n HEAP8[$4>>0] = 0;\n $33 = ((($4)) + 1|0);\n HEAP8[$33>>0] = 0;\n $34 = ((($4)) + 2|0);\n HEAP8[$34>>0] = 0;\n $35 = ((($4)) + 3|0);\n HEAP8[$35>>0] = 9;\n $36 = ((($4)) + 4|0);\n HEAP8[$36>>0] = 112;\n $37 = ((($4)) + 5|0);\n HEAP8[$37>>0] = 72;\n $38 = ((($4)) + 6|0);\n HEAP8[$38>>0] = 89;\n $39 = ((($4)) + 7|0);\n HEAP8[$39>>0] = 115;\n _png_write_data($0,$4,8);\n $40 = ((($0)) + 376|0);\n HEAP32[$40>>2] = 1883789683;\n _png_reset_crc($0);\n _png_calculate_crc($0,$36,4);\n HEAP32[$32>>2] = 66;\n _png_write_data($0,$6,9);\n _png_calculate_crc($0,$6,9);\n HEAP32[$32>>2] = 130;\n $41 = ((($0)) + 412|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = $42 >>> 24;\n $44 = $43&255;\n HEAP8[$5>>0] = $44;\n $45 = $42 >>> 16;\n $46 = $45&255;\n $47 = ((($5)) + 1|0);\n HEAP8[$47>>0] = $46;\n $48 = $42 >>> 8;\n $49 = $48&255;\n $50 = ((($5)) + 2|0);\n HEAP8[$50>>0] = $49;\n $51 = $42&255;\n $52 = ((($5)) + 3|0);\n HEAP8[$52>>0] = $51;\n _png_write_data($0,$5,4);\n STACKTOP = sp;return;\n}\nfunction _png_write_tIME($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp + 16|0;\n $3 = sp + 8|0;\n $4 = sp;\n $5 = ((($1)) + 2|0);\n $6 = HEAP16[$5>>1]|0;\n $7 = $6&255;\n $8 = (($7) + -1)<<24>>24;\n $9 = ($8&255)>(11);\n $10 = ($6&65535) >>> 8;\n $11 = $10&255;\n $12 = (($11) + -1)<<24>>24;\n $13 = ($12&255)>(30);\n $or$cond = $9 | $13;\n if (!($or$cond)) {\n  $14 = ((($1)) + 4|0);\n  $15 = HEAP16[$14>>1]|0;\n  $16 = $15&255;\n  $17 = ($16&255)>(23);\n  $18 = ($15&65535) >>> 8;\n  $19 = $18&255;\n  if (!($17)) {\n   $20 = ((($1)) + 6|0);\n   $21 = HEAP8[$20>>0]|0;\n   $22 = ($21&255)>(60);\n   if (!($22)) {\n    $23 = HEAP16[$1>>1]|0;\n    $24 = ($23&65535) >>> 8;\n    $25 = $24&255;\n    HEAP8[$4>>0] = $25;\n    $26 = $23&255;\n    $27 = ((($4)) + 1|0);\n    HEAP8[$27>>0] = $26;\n    $28 = ((($4)) + 2|0);\n    HEAP8[$28>>0] = $7;\n    $29 = ((($4)) + 3|0);\n    HEAP8[$29>>0] = $11;\n    $30 = ((($4)) + 4|0);\n    HEAP8[$30>>0] = $16;\n    $31 = ((($4)) + 5|0);\n    HEAP8[$31>>0] = $19;\n    $32 = ((($4)) + 6|0);\n    HEAP8[$32>>0] = $21;\n    $33 = ($0|0)==(0|0);\n    if ($33) {\n     STACKTOP = sp;return;\n    }\n    $34 = ((($0)) + 800|0);\n    HEAP32[$34>>2] = 34;\n    HEAP8[$3>>0] = 0;\n    $35 = ((($3)) + 1|0);\n    HEAP8[$35>>0] = 0;\n    $36 = ((($3)) + 2|0);\n    HEAP8[$36>>0] = 0;\n    $37 = ((($3)) + 3|0);\n    HEAP8[$37>>0] = 7;\n    $38 = ((($3)) + 4|0);\n    HEAP8[$38>>0] = 116;\n    $39 = ((($3)) + 5|0);\n    HEAP8[$39>>0] = 73;\n    $40 = ((($3)) + 6|0);\n    HEAP8[$40>>0] = 77;\n    $41 = ((($3)) + 7|0);\n    HEAP8[$41>>0] = 69;\n    _png_write_data($0,$3,8);\n    $42 = ((($0)) + 376|0);\n    HEAP32[$42>>2] = 1950960965;\n    _png_reset_crc($0);\n    _png_calculate_crc($0,$38,4);\n    HEAP32[$34>>2] = 66;\n    _png_write_data($0,$4,7);\n    _png_calculate_crc($0,$4,7);\n    HEAP32[$34>>2] = 130;\n    $43 = ((($0)) + 412|0);\n    $44 = HEAP32[$43>>2]|0;\n    $45 = $44 >>> 24;\n    $46 = $45&255;\n    HEAP8[$2>>0] = $46;\n    $47 = $44 >>> 16;\n    $48 = $47&255;\n    $49 = ((($2)) + 1|0);\n    HEAP8[$49>>0] = $48;\n    $50 = $44 >>> 8;\n    $51 = $50&255;\n    $52 = ((($2)) + 2|0);\n    HEAP8[$52>>0] = $51;\n    $53 = $44&255;\n    $54 = ((($2)) + 3|0);\n    HEAP8[$54>>0] = $53;\n    _png_write_data($0,$2,4);\n    STACKTOP = sp;return;\n   }\n  }\n }\n _png_warning($0,24165);\n STACKTOP = sp;return;\n}\nfunction _png_write_start_row($0) {\n $0 = $0|0;\n var $$pr = 0, $$pr51 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 440|0);\n $2 = HEAP8[$1>>0]|0;\n $3 = $2&255;\n $4 = ((($0)) + 437|0);\n $5 = HEAP8[$4>>0]|0;\n $6 = $5&255;\n $7 = Math_imul($6, $3)|0;\n $8 = ($7>>>0)>(7);\n $9 = ((($0)) + 348|0);\n $10 = HEAP32[$9>>2]|0;\n if ($8) {\n  $11 = $7 >>> 3;\n  $12 = Math_imul($11, $10)|0;\n  $17 = $12;\n } else {\n  $13 = Math_imul($7, $10)|0;\n  $14 = (($13) + 7)|0;\n  $15 = $14 >>> 3;\n  $17 = $15;\n }\n $16 = (($17) + 1)|0;\n $18 = ((($0)) + 438|0);\n $19 = HEAP8[$18>>0]|0;\n $20 = ((($0)) + 443|0);\n HEAP8[$20>>0] = $19;\n $21 = $7&255;\n $22 = ((($0)) + 442|0);\n HEAP8[$22>>0] = $21;\n $23 = (_png_malloc($0,$16)|0);\n $24 = ((($0)) + 384|0);\n HEAP32[$24>>2] = $23;\n HEAP8[$23>>0] = 0;\n $25 = ((($0)) + 434|0);\n $26 = HEAP8[$25>>0]|0;\n $27 = $26 & 16;\n $28 = ($27<<24>>24)==(0);\n if ($28) {\n  $34 = $26;\n } else {\n  $29 = ((($0)) + 364|0);\n  $30 = HEAP32[$29>>2]|0;\n  $31 = (($30) + 1)|0;\n  $32 = (_png_malloc($0,$31)|0);\n  $33 = ((($0)) + 388|0);\n  HEAP32[$33>>2] = $32;\n  HEAP8[$32>>0] = 1;\n  $$pr = HEAP8[$25>>0]|0;\n  $34 = $$pr;\n }\n $35 = ($34&255)>(31);\n if ($35) {\n  $36 = (_png_calloc($0,$16)|0);\n  $37 = ((($0)) + 380|0);\n  HEAP32[$37>>2] = $36;\n  $38 = HEAP8[$25>>0]|0;\n  $39 = $38 & 32;\n  $40 = ($39<<24>>24)==(0);\n  if ($40) {\n   $47 = $38;\n  } else {\n   $41 = ((($0)) + 364|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = (($42) + 1)|0;\n   $44 = (_png_malloc($0,$43)|0);\n   $45 = ((($0)) + 392|0);\n   HEAP32[$45>>2] = $44;\n   HEAP8[$44>>0] = 2;\n   $$pre = HEAP8[$25>>0]|0;\n   $47 = $$pre;\n  }\n  $46 = $47 & 64;\n  $48 = ($46<<24>>24)==(0);\n  if ($48) {\n   $54 = $47;\n  } else {\n   $49 = ((($0)) + 364|0);\n   $50 = HEAP32[$49>>2]|0;\n   $51 = (($50) + 1)|0;\n   $52 = (_png_malloc($0,$51)|0);\n   $53 = ((($0)) + 396|0);\n   HEAP32[$53>>2] = $52;\n   HEAP8[$52>>0] = 3;\n   $$pr51 = HEAP8[$25>>0]|0;\n   $54 = $$pr51;\n  }\n  $55 = ($54<<24>>24)<(0);\n  if ($55) {\n   $56 = ((($0)) + 364|0);\n   $57 = HEAP32[$56>>2]|0;\n   $58 = (($57) + 1)|0;\n   $59 = (_png_malloc($0,$58)|0);\n   $60 = ((($0)) + 400|0);\n   HEAP32[$60>>2] = $59;\n   HEAP8[$59>>0] = 4;\n  }\n }\n $61 = ((($0)) + 432|0);\n $62 = HEAP8[$61>>0]|0;\n $63 = ($62<<24>>24)==(0);\n if ($63) {\n  $80 = ((($0)) + 352|0);\n  $81 = HEAP32[$80>>2]|0;\n  $82 = ((($0)) + 356|0);\n  HEAP32[$82>>2] = $81;\n  $83 = HEAP32[$9>>2]|0;\n  $84 = ((($0)) + 360|0);\n  HEAP32[$84>>2] = $83;\n  return;\n }\n $64 = ((($0)) + 216|0);\n $65 = HEAP32[$64>>2]|0;\n $66 = $65 & 2;\n $67 = ($66|0)==(0);\n $68 = ((($0)) + 352|0);\n $69 = HEAP32[$68>>2]|0;\n if ($67) {\n  $70 = (($69) + 7)|0;\n  $71 = $70 >>> 3;\n  $72 = ((($0)) + 356|0);\n  HEAP32[$72>>2] = $71;\n  $73 = HEAP32[$9>>2]|0;\n  $74 = (($73) + 7)|0;\n  $75 = $74 >>> 3;\n  $76 = ((($0)) + 360|0);\n  HEAP32[$76>>2] = $75;\n  return;\n } else {\n  $77 = ((($0)) + 356|0);\n  HEAP32[$77>>2] = $69;\n  $78 = HEAP32[$9>>2]|0;\n  $79 = ((($0)) + 360|0);\n  HEAP32[$79>>2] = $78;\n  return;\n }\n}\nfunction _png_write_finish_row($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 372|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = (($2) + 1)|0;\n HEAP32[$1>>2] = $3;\n $4 = ((($0)) + 356|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($3>>>0)<($5>>>0);\n if ($6) {\n  return;\n }\n $7 = ((($0)) + 432|0);\n $8 = HEAP16[$7>>1]|0;\n $9 = $8&255;\n $10 = ($9<<24>>24)==(0);\n $11 = ($8&65535) >>> 8;\n $12 = $11&255;\n if (!($10)) {\n  HEAP32[$1>>2] = 0;\n  $13 = ((($0)) + 216|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = $14 & 2;\n  $16 = ($15|0)==(0);\n  if ($16) {\n   $17 = ((($0)) + 348|0);\n   $18 = ((($0)) + 433|0);\n   $19 = ((($0)) + 360|0);\n   $20 = ((($0)) + 352|0);\n   $24 = $12;\n   while(1) {\n    $23 = (($24) + 1)<<24>>24;\n    $25 = $23&255;\n    $26 = ($23&255)>(6);\n    if ($26) {\n     break;\n    }\n    $27 = HEAP32[$17>>2]|0;\n    $28 = (25562 + ($25)|0);\n    $29 = HEAP8[$28>>0]|0;\n    $30 = $29&255;\n    $31 = (25569 + ($25)|0);\n    $32 = HEAP8[$31>>0]|0;\n    $33 = $32&255;\n    $34 = (($27) + -1)|0;\n    $35 = (($34) + ($30))|0;\n    $36 = (($35) - ($33))|0;\n    $37 = (($36>>>0) / ($30>>>0))&-1;\n    HEAP32[$19>>2] = $37;\n    $38 = HEAP32[$20>>2]|0;\n    $39 = (26204 + ($25)|0);\n    $40 = HEAP8[$39>>0]|0;\n    $41 = $40&255;\n    $42 = (26211 + ($25)|0);\n    $43 = HEAP8[$42>>0]|0;\n    $44 = $43&255;\n    $45 = (($38) + -1)|0;\n    $46 = (($45) + ($41))|0;\n    $47 = (($46) - ($44))|0;\n    $48 = (($47>>>0) / ($41>>>0))&-1;\n    HEAP32[$4>>2] = $48;\n    $49 = ($30>>>0)>($36>>>0);\n    $50 = ($41>>>0)>($47>>>0);\n    $or$cond = $50 | $49;\n    if ($or$cond) {\n     $24 = $23;\n    } else {\n     break;\n    }\n   }\n   HEAP8[$18>>0] = $23;\n   $51 = $23;\n  } else {\n   $21 = ((($0)) + 433|0);\n   $22 = (($12) + 1)<<24>>24;\n   HEAP8[$21>>0] = $22;\n   $51 = $22;\n  }\n  $52 = ($51&255)<(7);\n  if ($52) {\n   $53 = ((($0)) + 380|0);\n   $54 = HEAP32[$53>>2]|0;\n   $55 = ($54|0)==(0|0);\n   if ($55) {\n    return;\n   }\n   $56 = ((($0)) + 440|0);\n   $57 = HEAP8[$56>>0]|0;\n   $58 = $57&255;\n   $59 = ((($0)) + 437|0);\n   $60 = HEAP8[$59>>0]|0;\n   $61 = $60&255;\n   $62 = Math_imul($61, $58)|0;\n   $63 = ($62>>>0)>(7);\n   $64 = ((($0)) + 348|0);\n   $65 = HEAP32[$64>>2]|0;\n   if ($63) {\n    $66 = $62 >>> 3;\n    $67 = Math_imul($66, $65)|0;\n    $72 = $67;\n   } else {\n    $68 = Math_imul($62, $65)|0;\n    $69 = (($68) + 7)|0;\n    $70 = $69 >>> 3;\n    $72 = $70;\n   }\n   $71 = (($72) + 1)|0;\n   _memset(($54|0),0,($71|0))|0;\n   return;\n  }\n }\n _png_compress_IDAT($0,0,0,4);\n return;\n}\nfunction _png_do_write_interlace($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0142167 = 0, $$0144164 = 0, $$0145163 = 0, $$0146166 = 0, $$0148165 = 0, $$0149185 = 0, $$0150175 = 0, $$0152184 = 0, $$0154183 = 0, $$0156182 = 0, $$0158174 = 0, $$0160173 = 0, $$0162172 = 0, $$0168 = 0, $$1 = 0, $$1143 = 0, $$1147 = 0, $$1151 = 0, $$1153 = 0, $$1155 = 0;\n var $$1157 = 0, $$1159 = 0, $$1161 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;\n var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;\n var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($2|0)<(6);\n if (!($3)) {\n  return;\n }\n $4 = ((($0)) + 11|0);\n $5 = HEAP8[$4>>0]|0;\n switch ($5<<24>>24) {\n case 1:  {\n  $6 = HEAP32[$0>>2]|0;\n  $7 = (25569 + ($2)|0);\n  $8 = HEAP8[$7>>0]|0;\n  $9 = $8&255;\n  $10 = ($9>>>0)<($6>>>0);\n  if ($10) {\n   $11 = (25562 + ($2)|0);\n   $12 = HEAP8[$11>>0]|0;\n   $13 = $12&255;\n   $$0142167 = 7;$$0146166 = 0;$$0148165 = $9;$$0168 = $1;\n   while(1) {\n    $14 = $$0148165 >>> 3;\n    $15 = (($1) + ($14)|0);\n    $16 = HEAP8[$15>>0]|0;\n    $17 = $16&255;\n    $18 = $$0148165 & 7;\n    $19 = $18 ^ 7;\n    $20 = $17 >>> $19;\n    $21 = $20 & 1;\n    $22 = $21 << $$0142167;\n    $23 = $22 | $$0146166;\n    $24 = ($$0142167|0)==(0);\n    if ($24) {\n     $25 = $23&255;\n     $26 = ((($$0168)) + 1|0);\n     HEAP8[$$0168>>0] = $25;\n     $$1 = $26;$$1143 = 7;$$1147 = 0;\n    } else {\n     $27 = (($$0142167) + -1)|0;\n     $$1 = $$0168;$$1143 = $27;$$1147 = $23;\n    }\n    $28 = (($13) + ($$0148165))|0;\n    $29 = ($28>>>0)<($6>>>0);\n    if ($29) {\n     $$0142167 = $$1143;$$0146166 = $$1147;$$0148165 = $28;$$0168 = $$1;\n    } else {\n     break;\n    }\n   }\n   $30 = ($$1143|0)==(7);\n   if ($30) {\n    $$pre$phiZ2D = $0;$107 = $8;\n   } else {\n    $31 = $$1147&255;\n    HEAP8[$$1>>0] = $31;\n    $$pre$phiZ2D = $0;$107 = $8;\n   }\n  } else {\n   $$pre$phiZ2D = $0;$107 = $8;\n  }\n  break;\n }\n case 2:  {\n  $32 = HEAP32[$0>>2]|0;\n  $33 = (25569 + ($2)|0);\n  $34 = HEAP8[$33>>0]|0;\n  $35 = $34&255;\n  $36 = ($35>>>0)<($32>>>0);\n  if ($36) {\n   $37 = (25562 + ($2)|0);\n   $38 = HEAP8[$37>>0]|0;\n   $39 = $38&255;\n   $$0150175 = $1;$$0158174 = 6;$$0160173 = 0;$$0162172 = $35;\n   while(1) {\n    $40 = $$0162172 >>> 2;\n    $41 = (($1) + ($40)|0);\n    $42 = HEAP8[$41>>0]|0;\n    $43 = $42&255;\n    $44 = $$0162172 << 1;\n    $45 = $44 & 6;\n    $46 = $45 ^ 6;\n    $47 = $43 >>> $46;\n    $48 = $47 & 3;\n    $49 = $48 << $$0158174;\n    $50 = $49 | $$0160173;\n    $51 = ($$0158174|0)==(0);\n    if ($51) {\n     $52 = $50&255;\n     $53 = ((($$0150175)) + 1|0);\n     HEAP8[$$0150175>>0] = $52;\n     $$1151 = $53;$$1159 = 6;$$1161 = 0;\n    } else {\n     $54 = (($$0158174) + -2)|0;\n     $$1151 = $$0150175;$$1159 = $54;$$1161 = $50;\n    }\n    $55 = (($39) + ($$0162172))|0;\n    $56 = ($55>>>0)<($32>>>0);\n    if ($56) {\n     $$0150175 = $$1151;$$0158174 = $$1159;$$0160173 = $$1161;$$0162172 = $55;\n    } else {\n     break;\n    }\n   }\n   $57 = ($$1159|0)==(6);\n   if ($57) {\n    $$pre$phiZ2D = $0;$107 = $34;\n   } else {\n    $58 = $$1161&255;\n    HEAP8[$$1151>>0] = $58;\n    $$pre$phiZ2D = $0;$107 = $34;\n   }\n  } else {\n   $$pre$phiZ2D = $0;$107 = $34;\n  }\n  break;\n }\n case 4:  {\n  $59 = HEAP32[$0>>2]|0;\n  $60 = (25569 + ($2)|0);\n  $61 = HEAP8[$60>>0]|0;\n  $62 = $61&255;\n  $63 = ($62>>>0)<($59>>>0);\n  if ($63) {\n   $64 = (25562 + ($2)|0);\n   $65 = HEAP8[$64>>0]|0;\n   $66 = $65&255;\n   $$0149185 = $62;$$0152184 = 0;$$0154183 = 4;$$0156182 = $1;\n   while(1) {\n    $67 = $$0149185 >>> 1;\n    $68 = (($1) + ($67)|0);\n    $69 = HEAP8[$68>>0]|0;\n    $70 = $69&255;\n    $71 = $$0149185 << 2;\n    $72 = $71 & 4;\n    $73 = $72 ^ 4;\n    $74 = $70 >>> $73;\n    $75 = $74 & 15;\n    $76 = $75 << $$0154183;\n    $77 = $76 | $$0152184;\n    $78 = ($$0154183|0)==(0);\n    if ($78) {\n     $79 = $77&255;\n     $80 = ((($$0156182)) + 1|0);\n     HEAP8[$$0156182>>0] = $79;\n     $$1153 = 0;$$1155 = 4;$$1157 = $80;\n    } else {\n     $81 = (($$0154183) + -4)|0;\n     $$1153 = $77;$$1155 = $81;$$1157 = $$0156182;\n    }\n    $82 = (($66) + ($$0149185))|0;\n    $83 = ($82>>>0)<($59>>>0);\n    if ($83) {\n     $$0149185 = $82;$$0152184 = $$1153;$$0154183 = $$1155;$$0156182 = $$1157;\n    } else {\n     break;\n    }\n   }\n   $84 = ($$1155|0)==(4);\n   if ($84) {\n    $$pre$phiZ2D = $0;$107 = $61;\n   } else {\n    $85 = $$1153&255;\n    HEAP8[$$1157>>0] = $85;\n    $$pre$phiZ2D = $0;$107 = $61;\n   }\n  } else {\n   $$pre$phiZ2D = $0;$107 = $61;\n  }\n  break;\n }\n default: {\n  $86 = $5&255;\n  $87 = HEAP32[$0>>2]|0;\n  $88 = $86 >>> 3;\n  $89 = (25569 + ($2)|0);\n  $90 = HEAP8[$89>>0]|0;\n  $91 = $90&255;\n  $92 = ($91>>>0)<($87>>>0);\n  if ($92) {\n   $93 = (25562 + ($2)|0);\n   $94 = HEAP8[$93>>0]|0;\n   $95 = $94&255;\n   $$0144164 = $91;$$0145163 = $1;\n   while(1) {\n    $96 = Math_imul($$0144164, $88)|0;\n    $97 = (($1) + ($96)|0);\n    $98 = ($$0145163|0)==($97|0);\n    if (!($98)) {\n     _memcpy(($$0145163|0),($97|0),($88|0))|0;\n    }\n    $99 = (($$0145163) + ($88)|0);\n    $100 = (($95) + ($$0144164))|0;\n    $101 = ($100>>>0)<($87>>>0);\n    if ($101) {\n     $$0144164 = $100;$$0145163 = $99;\n    } else {\n     $$pre$phiZ2D = $0;$107 = $90;\n     break;\n    }\n   }\n  } else {\n   $$pre$phiZ2D = $0;$107 = $90;\n  }\n }\n }\n $102 = HEAP32[$$pre$phiZ2D>>2]|0;\n $103 = (25562 + ($2)|0);\n $104 = HEAP8[$103>>0]|0;\n $105 = $104&255;\n $106 = $107&255;\n $108 = (($102) + -1)|0;\n $109 = (($108) + ($105))|0;\n $110 = (($109) - ($106))|0;\n $111 = (($110>>>0) / ($105>>>0))&-1;\n HEAP32[$$pre$phiZ2D>>2] = $111;\n $112 = HEAP8[$4>>0]|0;\n $113 = $112&255;\n $114 = ($112&255)>(7);\n if ($114) {\n  $115 = $113 >>> 3;\n  $116 = Math_imul($115, $111)|0;\n  $121 = $116;\n } else {\n  $117 = Math_imul($113, $111)|0;\n  $118 = (($117) + 7)|0;\n  $119 = $118 >>> 3;\n  $121 = $119;\n }\n $120 = ((($0)) + 4|0);\n HEAP32[$120>>2] = $121;\n return;\n}\nfunction _png_write_find_filter($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$lcssa = 0, $$0662$lcssa = 0, $$0662863 = 0, $$0663$lcssa = 0, $$0663862 = 0, $$0665861 = 0, $$0669 = 0, $$06761065 = 0, $$06761065$pn = 0, $$0677$lcssa = 0, $$06771064 = 0, $$06801063 = 0, $$0681$lcssa = 0, $$0681896 = 0, $$0683$lcssa = 0, $$0683895 = 0, $$0685894 = 0, $$0686$lcssa = 0, $$0686885 = 0, $$0690$lcssa = 0;\n var $$0690884 = 0, $$0695873 = 0, $$0696872 = 0, $$0697$lcssa = 0, $$0697883 = 0, $$0699 = 0, $$0699$lcssa = 0, $$0699881 = 0, $$0699886 = 0, $$0701$lcssa = 0, $$0701882 = 0, $$0703$lcssa = 0, $$07031056 = 0, $$0705$lcssa = 0, $$07051055 = 0, $$07071054 = 0, $$0708$lcssa = 0, $$07081010 = 0, $$07101004 = 0, $$0711$lcssa = 0;\n var $$0711853 = 0, $$0713846 = 0, $$0714845 = 0, $$0715$lcssa = 0, $$0715852 = 0, $$0717 = 0, $$0717$lcssa = 0, $$0717850 = 0, $$0717854 = 0, $$0719$lcssa = 0, $$0719851 = 0, $$0721$lcssa = 0, $$0721923 = 0, $$0723$lcssa = 0, $$0723922 = 0, $$0725921 = 0, $$0726$lcssa = 0, $$0726956 = 0, $$0728$lcssa = 0, $$0728955 = 0;\n var $$0730954 = 0, $$0731$lcssa = 0, $$0731944 = 0, $$0735$lcssa = 0, $$0735943 = 0, $$0740932 = 0, $$0741 = 0, $$0741$lcssa = 0, $$0741940 = 0, $$0741945 = 0, $$0743 = 0, $$0743$lcssa = 0, $$0743941 = 0, $$0743946 = 0, $$0745$lcssa = 0, $$0745942 = 0, $$0747$lcssa = 0, $$0747912 = 0, $$0749905 = 0, $$0750 = 0;\n var $$0750$lcssa = 0, $$0750909 = 0, $$0750913 = 0, $$0752 = 0, $$0752$lcssa = 0, $$0752910 = 0, $$0752914 = 0, $$0754$lcssa = 0, $$0754911 = 0, $$0756$lcssa = 0, $$0756974 = 0, $$0758$lcssa = 0, $$0758973 = 0, $$0760972 = 0, $$0761$lcssa = 0, $$0761996 = 0, $$0763$lcssa = 0, $$0763995 = 0, $$0765994 = 0, $$0766 = 0;\n var $$0766$lcssa = 0, $$07661008 = 0, $$07661011 = 0, $$0768984 = 0, $$0771983 = 0, $$0775985 = 0, $$0776986 = 0, $$0777987 = 0, $$0778965 = 0, $$0779966 = 0, $$0779966$pn = 0, $$0780967 = 0, $$0780967$pn = 0, $$0781968 = 0, $$0781968$pn = 0, $$0782$lcssa = 0, $$07821019 = 0, $$0784$lcssa = 0, $$07841018 = 0, $$07861017 = 0;\n var $$0787$lcssa = 0, $$07871048 = 0, $$0789$lcssa = 0, $$07891047 = 0, $$07911046 = 0, $$0792$lcssa = 0, $$07921038 = 0, $$0796$lcssa = 0, $$07961037 = 0, $$08011027 = 0, $$0802 = 0, $$0802$lcssa = 0, $$08021035 = 0, $$08021039 = 0, $$0804$lcssa = 0, $$08041036 = 0, $$0806$lcssa = 0, $$08061009 = 0, $$0841 = 0, $$1 = 0;\n var $$1664 = 0, $$1668 = 0, $$1682 = 0, $$1684 = 0, $$1687875 = 0, $$1689 = 0, $$1691874 = 0, $$1698871 = 0, $$1700870 = 0, $$1702869 = 0, $$1704 = 0, $$1706 = 0, $$17091005 = 0, $$1712847 = 0, $$1716844 = 0, $$1718843 = 0, $$1720842 = 0, $$1722 = 0, $$1724 = 0, $$1727 = 0;\n var $$1729 = 0, $$1732934 = 0, $$1734 = 0, $$1736933 = 0, $$1742931 = 0, $$1744930 = 0, $$1746929 = 0, $$1748906 = 0, $$1751904 = 0, $$1753903 = 0, $$1755902 = 0, $$1757 = 0, $$1759 = 0, $$1762 = 0, $$1764 = 0, $$17671003 = 0, $$1770 = 0, $$1772 = 0, $$1783 = 0, $$1785 = 0;\n var $$1788 = 0, $$1790 = 0, $$17931029 = 0, $$1795 = 0, $$17971028 = 0, $$18031026 = 0, $$18051025 = 0, $$18071002 = 0, $$2671 = 0, $$2692 = 0, $$2737 = 0, $$2798 = 0, $$3 = 0, $$31138 = 0, $$3774 = 0, $$4673 = 0, $$46731137 = 0, $$4694 = 0, $$4739 = 0, $$4800 = 0;\n var $$5 = 0, $$6675 = 0, $$7 = 0, $$825 = 0, $$826 = 0, $$827 = 0, $$828 = 0, $$829 = 0, $$830 = 0, $$831 = 0, $$832 = 0, $$833 = 0, $$pn814$pn = 0, $$pn815$pn = 0, $$pn816$pn = 0, $$pre = 0, $$pre1135 = 0, $10 = 0, $100 = 0, $101 = 0;\n var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;\n var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;\n var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;\n var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;\n var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;\n var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;\n var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;\n var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;\n var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;\n var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;\n var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;\n var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;\n var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;\n var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;\n var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;\n var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;\n var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;\n var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;\n var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;\n var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;\n var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;\n var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;\n var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;\n var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;\n var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;\n var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;\n var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;\n var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;\n var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;\n var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $div = 0, $div813 = 0, $exitcond = 0, $exitcond1100 = 0, $exitcond1103 = 0, $exitcond1104 = 0, $exitcond1108 = 0, $exitcond1109 = 0, $exitcond1110 = 0, $exitcond1114 = 0;\n var $exitcond1115 = 0, $exitcond1119 = 0, $exitcond1120 = 0, $exitcond1121 = 0, $exitcond1122 = 0, $exitcond1123 = 0, $exitcond1124 = 0, $exitcond1127 = 0, $exitcond1128 = 0, $exitcond1131 = 0, $exitcond1132 = 0, $exitcond1133 = 0, $exitcond1134 = 0, $not$ = 0, $or$cond = 0, $or$cond1069 = 0, $or$cond823 = 0, $or$cond824 = 0, $scevgep = 0, $scevgep1101 = 0;\n var $scevgep1102 = 0, $scevgep1105 = 0, $scevgep1106 = 0, $scevgep1107 = 0, $scevgep1111 = 0, $scevgep1112 = 0, $scevgep1113 = 0, $scevgep1116 = 0, $scevgep1117 = 0, $scevgep1118 = 0, $scevgep1125 = 0, $scevgep1126 = 0, $scevgep1129 = 0, $scevgep1130 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 434|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = ((($1)) + 4|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 621|0);\n $7 = HEAP8[$6>>0]|0;\n $8 = $7&255;\n $9 = ((($1)) + 11|0);\n $10 = HEAP8[$9>>0]|0;\n $11 = $10&255;\n $12 = (($11) + 7)|0;\n $13 = $12 >>> 3;\n $14 = ((($0)) + 380|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ((($0)) + 384|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = $3&255;\n $19 = $18 & 8;\n $20 = ($19|0)==(0);\n $21 = ($3<<24>>24)==(8);\n $or$cond = $21 | $20;\n if ($or$cond) {\n  $$0669 = 2147483647;\n } else {\n  $22 = ($5|0)==(0);\n  if ($22) {\n   $$0677$lcssa = 0;\n  } else {\n   $$06761065$pn = $17;$$06771064 = 0;$$06801063 = 0;\n   while(1) {\n    $$06761065 = ((($$06761065$pn)) + 1|0);\n    $23 = HEAP8[$$06761065>>0]|0;\n    $24 = $23&255;\n    $25 = ($23<<24>>24)>(-1);\n    $26 = (256 - ($24))|0;\n    $27 = $25 ? $24 : $26;\n    $28 = (($27) + ($$06771064))|0;\n    $29 = (($$06801063) + 1)|0;\n    $exitcond1134 = ($29|0)==($5|0);\n    if ($exitcond1134) {\n     $$0677$lcssa = $28;\n     break;\n    } else {\n     $$06761065$pn = $$06761065;$$06771064 = $28;$$06801063 = $29;\n    }\n   }\n  }\n  $30 = ((($0)) + 620|0);\n  $31 = HEAP8[$30>>0]|0;\n  $32 = ($31<<24>>24)==(2);\n  if ($32) {\n   $33 = $$0677$lcssa & 65535;\n   $34 = $$0677$lcssa >>> 10;\n   $35 = $34 & 4194240;\n   $36 = ($7<<24>>24)==(0);\n   if ($36) {\n    $$0703$lcssa = $35;$$0705$lcssa = $33;\n   } else {\n    $37 = ((($0)) + 624|0);\n    $38 = HEAP32[$37>>2]|0;\n    $39 = ((($0)) + 628|0);\n    $$07031056 = $35;$$07051055 = $33;$$07071054 = 0;\n    while(1) {\n     $40 = (($38) + ($$07071054)|0);\n     $41 = HEAP8[$40>>0]|0;\n     $42 = ($41<<24>>24)==(0);\n     if ($42) {\n      $43 = HEAP32[$39>>2]|0;\n      $44 = (($43) + ($$07071054<<1)|0);\n      $45 = HEAP16[$44>>1]|0;\n      $46 = $45&65535;\n      $47 = Math_imul($46, $$07051055)|0;\n      $48 = $47 >>> 8;\n      $49 = Math_imul($46, $$07031056)|0;\n      $50 = $49 >>> 8;\n      $$1704 = $50;$$1706 = $48;\n     } else {\n      $$1704 = $$07031056;$$1706 = $$07051055;\n     }\n     $51 = (($$07071054) + 1)|0;\n     $exitcond1133 = ($51|0)==($8|0);\n     if ($exitcond1133) {\n      $$0703$lcssa = $$1704;$$0705$lcssa = $$1706;\n      break;\n     } else {\n      $$07031056 = $$1704;$$07051055 = $$1706;$$07071054 = $51;\n     }\n    }\n   }\n   $52 = ((($0)) + 636|0);\n   $53 = HEAP32[$52>>2]|0;\n   $54 = HEAP16[$53>>1]|0;\n   $55 = $54&65535;\n   $56 = Math_imul($55, $$0703$lcssa)|0;\n   $57 = ($56>>>0)>(33553927);\n   $58 = $56 >>> 3;\n   $59 = Math_imul($55, $$0705$lcssa)|0;\n   $60 = $59 >>> 3;\n   $61 = $58 << 10;\n   $62 = (($61) + ($60))|0;\n   $$825 = $57 ? 2147483647 : $62;\n   $$0669 = $$825;\n  } else {\n   $$0669 = $$0677$lcssa;\n  }\n }\n $63 = ($3<<24>>24)==(16);\n if ($63) {\n  $64 = ((($17)) + 1|0);\n  $65 = ((($0)) + 388|0);\n  $66 = HEAP32[$65>>2]|0;\n  $$07661008 = ((($66)) + 1|0);\n  $67 = ($13|0)==(0);\n  if ($67) {\n   $$0708$lcssa = $64;$$0766$lcssa = $$07661008;$$0806$lcssa = 0;\n  } else {\n   $68 = (($13) + 1)|0;\n   $scevgep1125 = (($17) + ($68)|0);\n   $$07081010 = $64;$$07661011 = $$07661008;$$08061009 = 0;\n   while(1) {\n    $70 = HEAP8[$$07081010>>0]|0;\n    HEAP8[$$07661011>>0] = $70;\n    $71 = (($$08061009) + 1)|0;\n    $72 = ((($$07081010)) + 1|0);\n    $$0766 = ((($$07661011)) + 1|0);\n    $exitcond1127 = ($71|0)==($13|0);\n    if ($exitcond1127) {\n     break;\n    } else {\n     $$07081010 = $72;$$07661011 = $$0766;$$08061009 = $71;\n    }\n   }\n   $scevgep1126 = (($66) + ($68)|0);\n   $$0708$lcssa = $scevgep1125;$$0766$lcssa = $scevgep1126;$$0806$lcssa = $13;\n  }\n  $69 = ($$0806$lcssa>>>0)<($5>>>0);\n  if ($69) {\n   $$07101004 = $64;$$17091005 = $$0708$lcssa;$$17671003 = $$0766$lcssa;$$18071002 = $$0806$lcssa;\n   while(1) {\n    $73 = HEAP8[$$17091005>>0]|0;\n    $74 = $73&255;\n    $75 = HEAP8[$$07101004>>0]|0;\n    $76 = $75&255;\n    $77 = (($74) - ($76))|0;\n    $78 = $77&255;\n    HEAP8[$$17671003>>0] = $78;\n    $79 = (($$18071002) + 1)|0;\n    $80 = ((($$17091005)) + 1|0);\n    $81 = ((($$07101004)) + 1|0);\n    $82 = ((($$17671003)) + 1|0);\n    $exitcond1124 = ($79|0)==($5|0);\n    if ($exitcond1124) {\n     break;\n    } else {\n     $$07101004 = $81;$$17091005 = $80;$$17671003 = $82;$$18071002 = $79;\n    }\n   }\n  }\n  $83 = HEAP32[$65>>2]|0;\n  $$1668 = $83;$$2671 = $$0669;\n } else {\n  $84 = $18 & 16;\n  $85 = ($84|0)==(0);\n  if ($85) {\n   $$1668 = $17;$$2671 = $$0669;\n  } else {\n   $86 = ((($0)) + 620|0);\n   $87 = HEAP8[$86>>0]|0;\n   $88 = ($87<<24>>24)==(2);\n   if ($88) {\n    $89 = $$0669 & 65535;\n    $90 = $$0669 >>> 10;\n    $91 = $90 & 4194240;\n    $92 = ($7<<24>>24)==(0);\n    if ($92) {\n     $$0787$lcssa = $89;$$0789$lcssa = $91;\n    } else {\n     $93 = ((($0)) + 624|0);\n     $94 = HEAP32[$93>>2]|0;\n     $95 = ((($0)) + 632|0);\n     $$07871048 = $89;$$07891047 = $91;$$07911046 = 0;\n     while(1) {\n      $96 = (($94) + ($$07911046)|0);\n      $97 = HEAP8[$96>>0]|0;\n      $98 = ($97<<24>>24)==(1);\n      if ($98) {\n       $99 = HEAP32[$95>>2]|0;\n       $100 = (($99) + ($$07911046<<1)|0);\n       $101 = HEAP16[$100>>1]|0;\n       $102 = $101&65535;\n       $103 = Math_imul($102, $$07871048)|0;\n       $104 = $103 >>> 8;\n       $105 = Math_imul($102, $$07891047)|0;\n       $106 = $105 >>> 8;\n       $$1788 = $104;$$1790 = $106;\n      } else {\n       $$1788 = $$07871048;$$1790 = $$07891047;\n      }\n      $107 = (($$07911046) + 1)|0;\n      $exitcond1132 = ($107|0)==($8|0);\n      if ($exitcond1132) {\n       $$0787$lcssa = $$1788;$$0789$lcssa = $$1790;\n       break;\n      } else {\n       $$07871048 = $$1788;$$07891047 = $$1790;$$07911046 = $107;\n      }\n     }\n    }\n    $108 = ((($0)) + 640|0);\n    $109 = HEAP32[$108>>2]|0;\n    $110 = ((($109)) + 2|0);\n    $111 = HEAP16[$110>>1]|0;\n    $112 = $111&65535;\n    $113 = Math_imul($112, $$0789$lcssa)|0;\n    $114 = ($113>>>0)>(33553927);\n    $115 = $113 >>> 3;\n    $116 = Math_imul($112, $$0787$lcssa)|0;\n    $117 = $116 >>> 3;\n    $118 = $115 << 10;\n    $119 = (($118) + ($117))|0;\n    $$826 = $114 ? 2147483647 : $119;\n    $$1795 = $$826;\n   } else {\n    $$1795 = $$0669;\n   }\n   $120 = ((($17)) + 1|0);\n   $121 = ((($0)) + 388|0);\n   $122 = HEAP32[$121>>2]|0;\n   $$08021035 = ((($122)) + 1|0);\n   $123 = ($13|0)==(0);\n   if ($123) {\n    $$0792$lcssa = 0;$$0796$lcssa = 0;$$0802$lcssa = $$08021035;$$0804$lcssa = $120;\n   } else {\n    $124 = (($13) + 1)|0;\n    $scevgep1129 = (($17) + ($124)|0);\n    $$07921038 = 0;$$07961037 = 0;$$08021039 = $$08021035;$$08041036 = $120;\n    while(1) {\n     $126 = HEAP8[$$08041036>>0]|0;\n     HEAP8[$$08021039>>0] = $126;\n     $127 = $126&255;\n     $128 = ($126<<24>>24)>(-1);\n     $129 = (256 - ($127))|0;\n     $130 = $128 ? $127 : $129;\n     $131 = (($130) + ($$07961037))|0;\n     $132 = (($$07921038) + 1)|0;\n     $133 = ((($$08041036)) + 1|0);\n     $$0802 = ((($$08021039)) + 1|0);\n     $exitcond1131 = ($132|0)==($13|0);\n     if ($exitcond1131) {\n      break;\n     } else {\n      $$07921038 = $132;$$07961037 = $131;$$08021039 = $$0802;$$08041036 = $133;\n     }\n    }\n    $scevgep1130 = (($122) + ($124)|0);\n    $$0792$lcssa = $13;$$0796$lcssa = $131;$$0802$lcssa = $scevgep1130;$$0804$lcssa = $scevgep1129;\n   }\n   $125 = ($$0792$lcssa>>>0)<($5>>>0);\n   L48: do {\n    if ($125) {\n     $$08011027 = $120;$$17931029 = $$0792$lcssa;$$17971028 = $$0796$lcssa;$$18031026 = $$0802$lcssa;$$18051025 = $$0804$lcssa;\n     while(1) {\n      $134 = HEAP8[$$18051025>>0]|0;\n      $135 = $134&255;\n      $136 = HEAP8[$$08011027>>0]|0;\n      $137 = $136&255;\n      $138 = (($135) - ($137))|0;\n      $139 = $138&255;\n      HEAP8[$$18031026>>0] = $139;\n      $140 = $138 & 255;\n      $141 = ($140>>>0)<(128);\n      $142 = (256 - ($140))|0;\n      $143 = $141 ? $140 : $142;\n      $144 = (($143) + ($$17971028))|0;\n      $145 = ($144>>>0)>($$1795>>>0);\n      if ($145) {\n       $$2798 = $144;\n       break L48;\n      }\n      $146 = (($$17931029) + 1)|0;\n      $147 = ((($$18051025)) + 1|0);\n      $148 = ((($$08011027)) + 1|0);\n      $149 = ((($$18031026)) + 1|0);\n      $150 = ($146>>>0)<($5>>>0);\n      if ($150) {\n       $$08011027 = $148;$$17931029 = $146;$$17971028 = $144;$$18031026 = $149;$$18051025 = $147;\n      } else {\n       $$2798 = $144;\n       break;\n      }\n     }\n    } else {\n     $$2798 = $$0796$lcssa;\n    }\n   } while(0);\n   $151 = HEAP8[$86>>0]|0;\n   $152 = ($151<<24>>24)==(2);\n   if ($152) {\n    $153 = $$2798 & 65535;\n    $154 = $$2798 >>> 10;\n    $155 = $154 & 4194240;\n    $156 = ($7<<24>>24)==(0);\n    if ($156) {\n     $$0782$lcssa = $153;$$0784$lcssa = $155;\n    } else {\n     $157 = ((($0)) + 624|0);\n     $158 = HEAP32[$157>>2]|0;\n     $159 = ((($0)) + 632|0);\n     $$07821019 = $153;$$07841018 = $155;$$07861017 = 0;\n     while(1) {\n      $160 = (($158) + ($$07861017)|0);\n      $161 = HEAP8[$160>>0]|0;\n      $162 = ($161<<24>>24)==(1);\n      if ($162) {\n       $163 = HEAP32[$159>>2]|0;\n       $164 = (($163) + ($$07861017<<1)|0);\n       $165 = HEAP16[$164>>1]|0;\n       $166 = $165&65535;\n       $167 = Math_imul($166, $$07821019)|0;\n       $168 = $167 >>> 8;\n       $169 = Math_imul($166, $$07841018)|0;\n       $170 = $169 >>> 8;\n       $$1783 = $168;$$1785 = $170;\n      } else {\n       $$1783 = $$07821019;$$1785 = $$07841018;\n      }\n      $171 = (($$07861017) + 1)|0;\n      $exitcond1128 = ($171|0)==($8|0);\n      if ($exitcond1128) {\n       $$0782$lcssa = $$1783;$$0784$lcssa = $$1785;\n       break;\n      } else {\n       $$07821019 = $$1783;$$07841018 = $$1785;$$07861017 = $171;\n      }\n     }\n    }\n    $172 = ((($0)) + 640|0);\n    $173 = HEAP32[$172>>2]|0;\n    $174 = ((($173)) + 2|0);\n    $175 = HEAP16[$174>>1]|0;\n    $176 = $175&65535;\n    $177 = Math_imul($176, $$0784$lcssa)|0;\n    $178 = ($177>>>0)>(33553927);\n    $179 = $177 >>> 3;\n    $180 = Math_imul($176, $$0782$lcssa)|0;\n    $181 = $180 >>> 3;\n    $182 = $179 << 10;\n    $183 = (($182) + ($181))|0;\n    $$827 = $178 ? 2147483647 : $183;\n    $$4800 = $$827;\n   } else {\n    $$4800 = $$2798;\n   }\n   $184 = ($$4800>>>0)<($$0669>>>0);\n   if ($184) {\n    $185 = HEAP32[$121>>2]|0;\n    $$1668 = $185;$$2671 = $$4800;\n   } else {\n    $$1668 = $17;$$2671 = $$0669;\n   }\n  }\n }\n $186 = ($3<<24>>24)==(32);\n if ($186) {\n  $187 = ((($0)) + 392|0);\n  $188 = HEAP32[$187>>2]|0;\n  $189 = ($5|0)==(0);\n  if ($189) {\n   $$31138 = $188;$$46731137 = $$2671;\n   label = 76;\n  } else {\n   $$0778965 = 0;$$0779966$pn = $15;$$0780967$pn = $188;$$0781968$pn = $17;\n   while(1) {\n    $$0779966 = ((($$0779966$pn)) + 1|0);\n    $$0780967 = ((($$0780967$pn)) + 1|0);\n    $$0781968 = ((($$0781968$pn)) + 1|0);\n    $190 = HEAP8[$$0781968>>0]|0;\n    $191 = $190&255;\n    $192 = HEAP8[$$0779966>>0]|0;\n    $193 = $192&255;\n    $194 = (($191) - ($193))|0;\n    $195 = $194&255;\n    HEAP8[$$0780967>>0] = $195;\n    $196 = (($$0778965) + 1)|0;\n    $exitcond1121 = ($196|0)==($5|0);\n    if ($exitcond1121) {\n     break;\n    } else {\n     $$0778965 = $196;$$0779966$pn = $$0779966;$$0780967$pn = $$0780967;$$0781968$pn = $$0781968;\n    }\n   }\n   $$pre1135 = HEAP32[$187>>2]|0;\n   $$3 = $$pre1135;$$4673 = $$2671;\n   label = 68;\n  }\n } else {\n  $197 = $18 & 32;\n  $198 = ($197|0)==(0);\n  if ($198) {\n   $$3 = $$1668;$$4673 = $$2671;\n   label = 68;\n  } else {\n   $199 = ((($0)) + 620|0);\n   $200 = HEAP8[$199>>0]|0;\n   $201 = ($200<<24>>24)==(2);\n   if ($201) {\n    $202 = $$2671 & 65535;\n    $203 = $$2671 >>> 10;\n    $204 = $203 & 4194240;\n    $205 = ($7<<24>>24)==(0);\n    if ($205) {\n     $$0761$lcssa = $202;$$0763$lcssa = $204;\n    } else {\n     $206 = ((($0)) + 624|0);\n     $207 = HEAP32[$206>>2]|0;\n     $208 = ((($0)) + 632|0);\n     $$0761996 = $202;$$0763995 = $204;$$0765994 = 0;\n     while(1) {\n      $209 = (($207) + ($$0765994)|0);\n      $210 = HEAP8[$209>>0]|0;\n      $211 = ($210<<24>>24)==(2);\n      if ($211) {\n       $212 = HEAP32[$208>>2]|0;\n       $213 = (($212) + ($$0765994<<1)|0);\n       $214 = HEAP16[$213>>1]|0;\n       $215 = $214&65535;\n       $216 = Math_imul($215, $$0761996)|0;\n       $217 = $216 >>> 8;\n       $218 = Math_imul($215, $$0763995)|0;\n       $219 = $218 >>> 8;\n       $$1762 = $217;$$1764 = $219;\n      } else {\n       $$1762 = $$0761996;$$1764 = $$0763995;\n      }\n      $220 = (($$0765994) + 1)|0;\n      $exitcond1123 = ($220|0)==($8|0);\n      if ($exitcond1123) {\n       $$0761$lcssa = $$1762;$$0763$lcssa = $$1764;\n       break;\n      } else {\n       $$0761996 = $$1762;$$0763995 = $$1764;$$0765994 = $220;\n      }\n     }\n    }\n    $221 = ((($0)) + 640|0);\n    $222 = HEAP32[$221>>2]|0;\n    $223 = ((($222)) + 4|0);\n    $224 = HEAP16[$223>>1]|0;\n    $225 = $224&65535;\n    $226 = Math_imul($225, $$0763$lcssa)|0;\n    $227 = ($226>>>0)>(33553927);\n    $228 = $226 >>> 3;\n    $229 = Math_imul($225, $$0761$lcssa)|0;\n    $230 = $229 >>> 3;\n    $231 = $228 << 10;\n    $232 = (($231) + ($230))|0;\n    $$828 = $227 ? 2147483647 : $232;\n    $$1770 = $$828;\n   } else {\n    $$1770 = $$2671;\n   }\n   $233 = ((($0)) + 392|0);\n   $234 = ($5|0)==(0);\n   if ($234) {\n    $$1772 = 0;$250 = $200;\n   } else {\n    $235 = HEAP32[$233>>2]|0;\n    $$0768984 = 0;$$0771983 = 0;$$pn814$pn = $17;$$pn815$pn = $235;$$pn816$pn = $15;\n    while(1) {\n     $$0775985 = ((($$pn816$pn)) + 1|0);\n     $$0776986 = ((($$pn815$pn)) + 1|0);\n     $$0777987 = ((($$pn814$pn)) + 1|0);\n     $236 = HEAP8[$$0777987>>0]|0;\n     $237 = $236&255;\n     $238 = HEAP8[$$0775985>>0]|0;\n     $239 = $238&255;\n     $240 = (($237) - ($239))|0;\n     $241 = $240&255;\n     HEAP8[$$0776986>>0] = $241;\n     $242 = $240 & 255;\n     $243 = ($242>>>0)<(128);\n     $244 = (256 - ($242))|0;\n     $245 = $243 ? $242 : $244;\n     $246 = (($245) + ($$0771983))|0;\n     $247 = ($246>>>0)<=($$1770>>>0);\n     $248 = (($$0768984) + 1)|0;\n     $249 = ($248>>>0)<($5>>>0);\n     $or$cond1069 = $247 & $249;\n     if ($or$cond1069) {\n      $$0768984 = $248;$$0771983 = $246;$$pn814$pn = $$0777987;$$pn815$pn = $$0776986;$$pn816$pn = $$0775985;\n     } else {\n      break;\n     }\n    }\n    $$pre = HEAP8[$199>>0]|0;\n    $$1772 = $246;$250 = $$pre;\n   }\n   $251 = ($250<<24>>24)==(2);\n   if ($251) {\n    $252 = $$1772 & 65535;\n    $253 = $$1772 >>> 10;\n    $254 = $253 & 4194240;\n    $255 = ($7<<24>>24)==(0);\n    if ($255) {\n     $$0756$lcssa = $252;$$0758$lcssa = $254;\n    } else {\n     $256 = ((($0)) + 624|0);\n     $257 = HEAP32[$256>>2]|0;\n     $258 = ((($0)) + 628|0);\n     $$0756974 = $252;$$0758973 = $254;$$0760972 = 0;\n     while(1) {\n      $259 = (($257) + ($$0760972)|0);\n      $260 = HEAP8[$259>>0]|0;\n      $261 = ($260<<24>>24)==(2);\n      if ($261) {\n       $262 = HEAP32[$258>>2]|0;\n       $263 = (($262) + ($$0760972<<1)|0);\n       $264 = HEAP16[$263>>1]|0;\n       $265 = $264&65535;\n       $266 = Math_imul($265, $$0756974)|0;\n       $267 = $266 >>> 8;\n       $268 = Math_imul($265, $$0758973)|0;\n       $269 = $268 >>> 8;\n       $$1757 = $267;$$1759 = $269;\n      } else {\n       $$1757 = $$0756974;$$1759 = $$0758973;\n      }\n      $270 = (($$0760972) + 1)|0;\n      $exitcond1122 = ($270|0)==($8|0);\n      if ($exitcond1122) {\n       $$0756$lcssa = $$1757;$$0758$lcssa = $$1759;\n       break;\n      } else {\n       $$0756974 = $$1757;$$0758973 = $$1759;$$0760972 = $270;\n      }\n     }\n    }\n    $271 = ((($0)) + 636|0);\n    $272 = HEAP32[$271>>2]|0;\n    $273 = ((($272)) + 4|0);\n    $274 = HEAP16[$273>>1]|0;\n    $275 = $274&65535;\n    $276 = Math_imul($275, $$0758$lcssa)|0;\n    $277 = ($276>>>0)>(33553927);\n    $278 = $276 >>> 3;\n    $279 = Math_imul($275, $$0756$lcssa)|0;\n    $280 = $279 >>> 3;\n    $281 = $278 << 10;\n    $282 = (($281) + ($280))|0;\n    $$829 = $277 ? 2147483647 : $282;\n    $$3774 = $$829;\n   } else {\n    $$3774 = $$1772;\n   }\n   $283 = ($$3774>>>0)<($$2671>>>0);\n   if ($283) {\n    $284 = HEAP32[$233>>2]|0;\n    $$3 = $284;$$4673 = $$3774;\n    label = 68;\n   } else {\n    $$3 = $$1668;$$4673 = $$2671;\n    label = 68;\n   }\n  }\n }\n if ((label|0) == 68) {\n  $285 = ($3<<24>>24)==(64);\n  if ($285) {\n   $286 = ((($17)) + 1|0);\n   $287 = ((($0)) + 396|0);\n   $288 = HEAP32[$287>>2]|0;\n   $$0750909 = ((($15)) + 1|0);\n   $$0752910 = ((($288)) + 1|0);\n   $289 = ($13|0)==(0);\n   if ($289) {\n    $$0747$lcssa = 0;$$0750$lcssa = $$0750909;$$0752$lcssa = $$0752910;$$0754$lcssa = $286;\n   } else {\n    $290 = (($13) + 1)|0;\n    $scevgep1112 = (($15) + ($290)|0);\n    $$0747912 = 0;$$0750913 = $$0750909;$$0752914 = $$0752910;$$0754911 = $286;\n    while(1) {\n     $292 = ((($$0754911)) + 1|0);\n     $293 = HEAP8[$$0754911>>0]|0;\n     $294 = $293&255;\n     $295 = HEAP8[$$0750913>>0]|0;\n     $div813 = ($295&255) >>> 1;\n     $296 = $div813&255;\n     $297 = (($294) - ($296))|0;\n     $298 = $297&255;\n     HEAP8[$$0752914>>0] = $298;\n     $299 = (($$0747912) + 1)|0;\n     $$0750 = ((($$0750913)) + 1|0);\n     $$0752 = ((($$0752914)) + 1|0);\n     $exitcond1114 = ($299|0)==($13|0);\n     if ($exitcond1114) {\n      break;\n     } else {\n      $$0747912 = $299;$$0750913 = $$0750;$$0752914 = $$0752;$$0754911 = $292;\n     }\n    }\n    $scevgep1111 = (($17) + ($290)|0);\n    $scevgep1113 = (($288) + ($290)|0);\n    $$0747$lcssa = $13;$$0750$lcssa = $scevgep1112;$$0752$lcssa = $scevgep1113;$$0754$lcssa = $scevgep1111;\n   }\n   $291 = ($$0747$lcssa>>>0)<($5>>>0);\n   if ($291) {\n    $$0749905 = $286;$$1748906 = $$0747$lcssa;$$1751904 = $$0750$lcssa;$$1753903 = $$0752$lcssa;$$1755902 = $$0754$lcssa;\n    while(1) {\n     $300 = ((($$1755902)) + 1|0);\n     $301 = HEAP8[$$1755902>>0]|0;\n     $302 = $301&255;\n     $303 = ((($$1751904)) + 1|0);\n     $304 = HEAP8[$$1751904>>0]|0;\n     $305 = $304&255;\n     $306 = ((($$0749905)) + 1|0);\n     $307 = HEAP8[$$0749905>>0]|0;\n     $308 = $307&255;\n     $309 = (($308) + ($305))|0;\n     $310 = $309 >>> 1;\n     $311 = (($302) - ($310))|0;\n     $312 = $311&255;\n     $313 = ((($$1753903)) + 1|0);\n     HEAP8[$$1753903>>0] = $312;\n     $314 = (($$1748906) + 1)|0;\n     $exitcond1110 = ($314|0)==($5|0);\n     if ($exitcond1110) {\n      break;\n     } else {\n      $$0749905 = $306;$$1748906 = $314;$$1751904 = $303;$$1753903 = $313;$$1755902 = $300;\n     }\n    }\n   }\n   $315 = HEAP32[$287>>2]|0;\n   $$5 = $315;$$6675 = $$4673;\n  } else {\n   $$31138 = $$3;$$46731137 = $$4673;\n   label = 76;\n  }\n }\n if ((label|0) == 76) {\n  $316 = $18 & 64;\n  $317 = ($316|0)==(0);\n  if ($317) {\n   $$5 = $$31138;$$6675 = $$46731137;\n  } else {\n   $318 = ((($0)) + 620|0);\n   $319 = HEAP8[$318>>0]|0;\n   $320 = ($319<<24>>24)==(2);\n   if ($320) {\n    $321 = $$46731137 & 65535;\n    $322 = $$46731137 >>> 10;\n    $323 = $322 & 4194240;\n    $324 = ($7<<24>>24)==(0);\n    if ($324) {\n     $$0726$lcssa = $321;$$0728$lcssa = $323;\n    } else {\n     $325 = ((($0)) + 624|0);\n     $326 = HEAP32[$325>>2]|0;\n     $327 = ((($0)) + 632|0);\n     $$0726956 = $321;$$0728955 = $323;$$0730954 = 0;\n     while(1) {\n      $328 = (($326) + ($$0730954)|0);\n      $329 = HEAP8[$328>>0]|0;\n      $330 = ($329<<24>>24)==(3);\n      if ($330) {\n       $331 = HEAP32[$327>>2]|0;\n       $332 = (($331) + ($$0730954<<1)|0);\n       $333 = HEAP16[$332>>1]|0;\n       $334 = $333&65535;\n       $335 = Math_imul($334, $$0726956)|0;\n       $336 = $335 >>> 8;\n       $337 = Math_imul($334, $$0728955)|0;\n       $338 = $337 >>> 8;\n       $$1727 = $336;$$1729 = $338;\n      } else {\n       $$1727 = $$0726956;$$1729 = $$0728955;\n      }\n      $339 = (($$0730954) + 1)|0;\n      $exitcond1120 = ($339|0)==($8|0);\n      if ($exitcond1120) {\n       $$0726$lcssa = $$1727;$$0728$lcssa = $$1729;\n       break;\n      } else {\n       $$0726956 = $$1727;$$0728955 = $$1729;$$0730954 = $339;\n      }\n     }\n    }\n    $340 = ((($0)) + 640|0);\n    $341 = HEAP32[$340>>2]|0;\n    $342 = ((($341)) + 6|0);\n    $343 = HEAP16[$342>>1]|0;\n    $344 = $343&65535;\n    $345 = Math_imul($344, $$0728$lcssa)|0;\n    $346 = ($345>>>0)>(33553927);\n    $347 = $345 >>> 3;\n    $348 = Math_imul($344, $$0726$lcssa)|0;\n    $349 = $348 >>> 3;\n    $350 = $347 << 10;\n    $351 = (($350) + ($349))|0;\n    $$830 = $346 ? 2147483647 : $351;\n    $$1734 = $$830;\n   } else {\n    $$1734 = $$46731137;\n   }\n   $352 = ((($17)) + 1|0);\n   $353 = ((($0)) + 396|0);\n   $354 = HEAP32[$353>>2]|0;\n   $$0741940 = ((($15)) + 1|0);\n   $$0743941 = ((($354)) + 1|0);\n   $355 = ($13|0)==(0);\n   if ($355) {\n    $$0731$lcssa = 0;$$0735$lcssa = 0;$$0741$lcssa = $$0741940;$$0743$lcssa = $$0743941;$$0745$lcssa = $352;\n   } else {\n    $356 = (($13) + 1)|0;\n    $scevgep1117 = (($15) + ($356)|0);\n    $$0731944 = 0;$$0735943 = 0;$$0741945 = $$0741940;$$0743946 = $$0743941;$$0745942 = $352;\n    while(1) {\n     $358 = ((($$0745942)) + 1|0);\n     $359 = HEAP8[$$0745942>>0]|0;\n     $360 = $359&255;\n     $361 = HEAP8[$$0741945>>0]|0;\n     $div = ($361&255) >>> 1;\n     $362 = $div&255;\n     $363 = (($360) - ($362))|0;\n     $364 = $363&255;\n     HEAP8[$$0743946>>0] = $364;\n     $365 = $363 & 255;\n     $366 = ($365>>>0)<(128);\n     $367 = (256 - ($365))|0;\n     $368 = $366 ? $365 : $367;\n     $369 = (($368) + ($$0735943))|0;\n     $370 = (($$0731944) + 1)|0;\n     $$0741 = ((($$0741945)) + 1|0);\n     $$0743 = ((($$0743946)) + 1|0);\n     $exitcond1119 = ($370|0)==($13|0);\n     if ($exitcond1119) {\n      break;\n     } else {\n      $$0731944 = $370;$$0735943 = $369;$$0741945 = $$0741;$$0743946 = $$0743;$$0745942 = $358;\n     }\n    }\n    $scevgep1116 = (($17) + ($356)|0);\n    $scevgep1118 = (($354) + ($356)|0);\n    $$0731$lcssa = $13;$$0735$lcssa = $369;$$0741$lcssa = $scevgep1117;$$0743$lcssa = $scevgep1118;$$0745$lcssa = $scevgep1116;\n   }\n   $357 = ($$0731$lcssa>>>0)<($5>>>0);\n   L135: do {\n    if ($357) {\n     $$0740932 = $352;$$1732934 = $$0731$lcssa;$$1736933 = $$0735$lcssa;$$1742931 = $$0741$lcssa;$$1744930 = $$0743$lcssa;$$1746929 = $$0745$lcssa;\n     while(1) {\n      $371 = HEAP8[$$1746929>>0]|0;\n      $372 = $371&255;\n      $373 = HEAP8[$$1742931>>0]|0;\n      $374 = $373&255;\n      $375 = HEAP8[$$0740932>>0]|0;\n      $376 = $375&255;\n      $377 = (($376) + ($374))|0;\n      $378 = $377 >>> 1;\n      $379 = (($372) - ($378))|0;\n      $380 = $379&255;\n      HEAP8[$$1744930>>0] = $380;\n      $381 = $379 & 255;\n      $382 = ($381>>>0)<(128);\n      $383 = (256 - ($381))|0;\n      $384 = $382 ? $381 : $383;\n      $385 = (($384) + ($$1736933))|0;\n      $386 = ($385>>>0)>($$1734>>>0);\n      if ($386) {\n       $$2737 = $385;\n       break L135;\n      }\n      $387 = ((($$1744930)) + 1|0);\n      $388 = ((($$0740932)) + 1|0);\n      $389 = ((($$1742931)) + 1|0);\n      $390 = ((($$1746929)) + 1|0);\n      $391 = (($$1732934) + 1)|0;\n      $392 = ($391>>>0)<($5>>>0);\n      if ($392) {\n       $$0740932 = $388;$$1732934 = $391;$$1736933 = $385;$$1742931 = $389;$$1744930 = $387;$$1746929 = $390;\n      } else {\n       $$2737 = $385;\n       break;\n      }\n     }\n    } else {\n     $$2737 = $$0735$lcssa;\n    }\n   } while(0);\n   $393 = HEAP8[$318>>0]|0;\n   $394 = ($393<<24>>24)==(2);\n   if ($394) {\n    $395 = $$2737 & 65535;\n    $396 = $$2737 >>> 10;\n    $397 = $396 & 4194240;\n    $398 = ($7<<24>>24)==(0);\n    if ($398) {\n     $$0721$lcssa = $395;$$0723$lcssa = $397;\n    } else {\n     $399 = ((($0)) + 624|0);\n     $400 = HEAP32[$399>>2]|0;\n     $401 = ((($0)) + 628|0);\n     $$0721923 = $395;$$0723922 = $397;$$0725921 = 0;\n     while(1) {\n      $402 = (($400) + ($$0725921)|0);\n      $403 = HEAP8[$402>>0]|0;\n      $404 = ($403<<24>>24)==(0);\n      if ($404) {\n       $405 = HEAP32[$401>>2]|0;\n       $406 = (($405) + ($$0725921<<1)|0);\n       $407 = HEAP16[$406>>1]|0;\n       $408 = $407&65535;\n       $409 = Math_imul($408, $$0721923)|0;\n       $410 = $409 >>> 8;\n       $411 = Math_imul($408, $$0723922)|0;\n       $412 = $411 >>> 8;\n       $$1722 = $410;$$1724 = $412;\n      } else {\n       $$1722 = $$0721923;$$1724 = $$0723922;\n      }\n      $413 = (($$0725921) + 1)|0;\n      $exitcond1115 = ($413|0)==($8|0);\n      if ($exitcond1115) {\n       $$0721$lcssa = $$1722;$$0723$lcssa = $$1724;\n       break;\n      } else {\n       $$0721923 = $$1722;$$0723922 = $$1724;$$0725921 = $413;\n      }\n     }\n    }\n    $414 = ((($0)) + 636|0);\n    $415 = HEAP32[$414>>2]|0;\n    $416 = ((($415)) + 6|0);\n    $417 = HEAP16[$416>>1]|0;\n    $418 = $417&65535;\n    $419 = Math_imul($418, $$0723$lcssa)|0;\n    $420 = ($419>>>0)>(33553927);\n    $421 = $419 >>> 3;\n    $422 = Math_imul($418, $$0721$lcssa)|0;\n    $423 = $422 >>> 3;\n    $424 = $421 << 10;\n    $425 = (($424) + ($423))|0;\n    $$831 = $420 ? 2147483647 : $425;\n    $$4739 = $$831;\n   } else {\n    $$4739 = $$2737;\n   }\n   $426 = ($$4739>>>0)<($$46731137>>>0);\n   if ($426) {\n    $427 = HEAP32[$353>>2]|0;\n    $$5 = $427;$$6675 = $$4739;\n   } else {\n    $$5 = $$31138;$$6675 = $$46731137;\n   }\n  }\n }\n $428 = ($3<<24>>24)==(-128);\n if ($428) {\n  $429 = ((($17)) + 1|0);\n  $430 = ((($0)) + 400|0);\n  $431 = HEAP32[$430>>2]|0;\n  $432 = ((($15)) + 1|0);\n  $$0717850 = ((($431)) + 1|0);\n  $433 = ($13|0)==(0);\n  if ($433) {\n   $$0711$lcssa = 0;$$0715$lcssa = $432;$$0717$lcssa = $$0717850;$$0719$lcssa = $429;\n  } else {\n   $434 = (($13) + 1)|0;\n   $scevgep1101 = (($15) + ($434)|0);\n   $$0711853 = 0;$$0715852 = $432;$$0717854 = $$0717850;$$0719851 = $429;\n   while(1) {\n    $436 = ((($$0719851)) + 1|0);\n    $437 = HEAP8[$$0719851>>0]|0;\n    $438 = $437&255;\n    $439 = ((($$0715852)) + 1|0);\n    $440 = HEAP8[$$0715852>>0]|0;\n    $441 = $440&255;\n    $442 = (($438) - ($441))|0;\n    $443 = $442&255;\n    HEAP8[$$0717854>>0] = $443;\n    $444 = (($$0711853) + 1)|0;\n    $$0717 = ((($$0717854)) + 1|0);\n    $exitcond1103 = ($444|0)==($13|0);\n    if ($exitcond1103) {\n     break;\n    } else {\n     $$0711853 = $444;$$0715852 = $439;$$0717854 = $$0717;$$0719851 = $436;\n    }\n   }\n   $scevgep = (($17) + ($434)|0);\n   $scevgep1102 = (($431) + ($434)|0);\n   $$0711$lcssa = $13;$$0715$lcssa = $scevgep1101;$$0717$lcssa = $scevgep1102;$$0719$lcssa = $scevgep;\n  }\n  $435 = ($$0711$lcssa>>>0)<($5>>>0);\n  if ($435) {\n   $$0713846 = $429;$$0714845 = $432;$$1712847 = $$0711$lcssa;$$1716844 = $$0715$lcssa;$$1718843 = $$0717$lcssa;$$1720842 = $$0719$lcssa;\n   while(1) {\n    $445 = ((($$1716844)) + 1|0);\n    $446 = HEAP8[$$1716844>>0]|0;\n    $447 = $446&255;\n    $448 = ((($$0714845)) + 1|0);\n    $449 = HEAP8[$$0714845>>0]|0;\n    $450 = $449&255;\n    $451 = ((($$0713846)) + 1|0);\n    $452 = HEAP8[$$0713846>>0]|0;\n    $453 = $452&255;\n    $454 = (($447) - ($450))|0;\n    $455 = (($453) - ($450))|0;\n    $456 = ($454|0)<(0);\n    $457 = (0 - ($454))|0;\n    $458 = $456 ? $457 : $454;\n    $459 = ($455|0)<(0);\n    $460 = (0 - ($455))|0;\n    $461 = $459 ? $460 : $455;\n    $462 = (($455) + ($454))|0;\n    $463 = ($462|0)<(0);\n    $464 = (0 - ($462))|0;\n    $465 = $463 ? $464 : $462;\n    $466 = ($458|0)>($461|0);\n    $467 = ($458|0)>($465|0);\n    $or$cond823 = $466 | $467;\n    $468 = ($461|0)<=($465|0);\n    $469 = $468 ? $447 : $450;\n    $470 = $or$cond823 ? $469 : $453;\n    $471 = ((($$1720842)) + 1|0);\n    $472 = HEAP8[$$1720842>>0]|0;\n    $473 = $472&255;\n    $474 = (($473) - ($470))|0;\n    $475 = $474&255;\n    $476 = ((($$1718843)) + 1|0);\n    HEAP8[$$1718843>>0] = $475;\n    $477 = (($$1712847) + 1)|0;\n    $exitcond1100 = ($477|0)==($5|0);\n    if ($exitcond1100) {\n     break;\n    } else {\n     $$0713846 = $451;$$0714845 = $448;$$1712847 = $477;$$1716844 = $445;$$1718843 = $476;$$1720842 = $471;\n    }\n   }\n  }\n  $478 = HEAP32[$430>>2]|0;\n  $$7 = $478;\n } else {\n  $479 = $18 & 128;\n  $480 = ($479|0)==(0);\n  if ($480) {\n   $$7 = $$5;\n  } else {\n   $481 = ((($0)) + 620|0);\n   $482 = HEAP8[$481>>0]|0;\n   $483 = ($482<<24>>24)==(2);\n   if ($483) {\n    $484 = $$6675 & 65535;\n    $485 = $$6675 >>> 10;\n    $486 = $485 & 4194240;\n    $487 = ($7<<24>>24)==(0);\n    if ($487) {\n     $$0681$lcssa = $484;$$0683$lcssa = $486;\n    } else {\n     $488 = ((($0)) + 624|0);\n     $489 = HEAP32[$488>>2]|0;\n     $490 = ((($0)) + 632|0);\n     $$0681896 = $484;$$0683895 = $486;$$0685894 = 0;\n     while(1) {\n      $491 = (($489) + ($$0685894)|0);\n      $492 = HEAP8[$491>>0]|0;\n      $493 = ($492<<24>>24)==(4);\n      if ($493) {\n       $494 = HEAP32[$490>>2]|0;\n       $495 = (($494) + ($$0685894<<1)|0);\n       $496 = HEAP16[$495>>1]|0;\n       $497 = $496&65535;\n       $498 = Math_imul($497, $$0681896)|0;\n       $499 = $498 >>> 8;\n       $500 = Math_imul($497, $$0683895)|0;\n       $501 = $500 >>> 8;\n       $$1682 = $499;$$1684 = $501;\n      } else {\n       $$1682 = $$0681896;$$1684 = $$0683895;\n      }\n      $502 = (($$0685894) + 1)|0;\n      $exitcond1109 = ($502|0)==($8|0);\n      if ($exitcond1109) {\n       $$0681$lcssa = $$1682;$$0683$lcssa = $$1684;\n       break;\n      } else {\n       $$0681896 = $$1682;$$0683895 = $$1684;$$0685894 = $502;\n      }\n     }\n    }\n    $503 = ((($0)) + 640|0);\n    $504 = HEAP32[$503>>2]|0;\n    $505 = ((($504)) + 8|0);\n    $506 = HEAP16[$505>>1]|0;\n    $507 = $506&65535;\n    $508 = Math_imul($507, $$0683$lcssa)|0;\n    $509 = ($508>>>0)>(33553927);\n    $510 = $508 >>> 3;\n    $511 = Math_imul($507, $$0681$lcssa)|0;\n    $512 = $511 >>> 3;\n    $513 = $510 << 10;\n    $514 = (($513) + ($512))|0;\n    $$832 = $509 ? 2147483647 : $514;\n    $$1689 = $$832;\n   } else {\n    $$1689 = $$6675;\n   }\n   $515 = ((($17)) + 1|0);\n   $516 = ((($0)) + 400|0);\n   $517 = HEAP32[$516>>2]|0;\n   $518 = ((($15)) + 1|0);\n   $$0699881 = ((($517)) + 1|0);\n   $519 = ($13|0)==(0);\n   if ($519) {\n    $$0686$lcssa = 0;$$0690$lcssa = 0;$$0697$lcssa = $518;$$0699$lcssa = $$0699881;$$0701$lcssa = $515;\n   } else {\n    $520 = (($13) + 1)|0;\n    $scevgep1106 = (($15) + ($520)|0);\n    $$0686885 = 0;$$0690884 = 0;$$0697883 = $518;$$0699886 = $$0699881;$$0701882 = $515;\n    while(1) {\n     $522 = ((($$0701882)) + 1|0);\n     $523 = HEAP8[$$0701882>>0]|0;\n     $524 = $523&255;\n     $525 = ((($$0697883)) + 1|0);\n     $526 = HEAP8[$$0697883>>0]|0;\n     $527 = $526&255;\n     $528 = (($524) - ($527))|0;\n     $529 = $528&255;\n     HEAP8[$$0699886>>0] = $529;\n     $530 = $528 & 255;\n     $531 = ($530>>>0)<(128);\n     $532 = (256 - ($530))|0;\n     $533 = $531 ? $530 : $532;\n     $534 = (($533) + ($$0690884))|0;\n     $535 = (($$0686885) + 1)|0;\n     $$0699 = ((($$0699886)) + 1|0);\n     $exitcond1108 = ($535|0)==($13|0);\n     if ($exitcond1108) {\n      break;\n     } else {\n      $$0686885 = $535;$$0690884 = $534;$$0697883 = $525;$$0699886 = $$0699;$$0701882 = $522;\n     }\n    }\n    $scevgep1105 = (($17) + ($520)|0);\n    $scevgep1107 = (($517) + ($520)|0);\n    $$0686$lcssa = $13;$$0690$lcssa = $534;$$0697$lcssa = $scevgep1106;$$0699$lcssa = $scevgep1107;$$0701$lcssa = $scevgep1105;\n   }\n   $521 = ($$0686$lcssa>>>0)<($5>>>0);\n   L184: do {\n    if ($521) {\n     $$0695873 = $515;$$0696872 = $518;$$1687875 = $$0686$lcssa;$$1691874 = $$0690$lcssa;$$1698871 = $$0697$lcssa;$$1700870 = $$0699$lcssa;$$1702869 = $$0701$lcssa;\n     while(1) {\n      $536 = HEAP8[$$1698871>>0]|0;\n      $537 = $536&255;\n      $538 = HEAP8[$$0696872>>0]|0;\n      $539 = $538&255;\n      $540 = HEAP8[$$0695873>>0]|0;\n      $541 = $540&255;\n      $542 = (($537) - ($539))|0;\n      $543 = (($541) - ($539))|0;\n      $544 = ($542|0)<(0);\n      $545 = (0 - ($542))|0;\n      $546 = $544 ? $545 : $542;\n      $547 = ($543|0)<(0);\n      $548 = (0 - ($543))|0;\n      $549 = $547 ? $548 : $543;\n      $550 = (($543) + ($542))|0;\n      $551 = ($550|0)<(0);\n      $552 = (0 - ($550))|0;\n      $553 = $551 ? $552 : $550;\n      $554 = ($546|0)>($549|0);\n      $555 = ($546|0)>($553|0);\n      $or$cond824 = $554 | $555;\n      $556 = ($549|0)<=($553|0);\n      $557 = $556 ? $537 : $539;\n      $558 = $or$cond824 ? $557 : $541;\n      $559 = HEAP8[$$1702869>>0]|0;\n      $560 = $559&255;\n      $561 = (($560) - ($558))|0;\n      $562 = $561&255;\n      HEAP8[$$1700870>>0] = $562;\n      $563 = $561 & 255;\n      $564 = ($563>>>0)<(128);\n      $565 = (256 - ($563))|0;\n      $566 = $564 ? $563 : $565;\n      $567 = (($566) + ($$1691874))|0;\n      $not$ = ($567>>>0)>($$1689>>>0);\n      if ($not$) {\n       $$2692 = $567;\n       break L184;\n      }\n      $568 = ((($$1700870)) + 1|0);\n      $569 = ((($$1702869)) + 1|0);\n      $570 = ((($$0695873)) + 1|0);\n      $571 = ((($$0696872)) + 1|0);\n      $572 = ((($$1698871)) + 1|0);\n      $573 = (($$1687875) + 1)|0;\n      $574 = ($573>>>0)<($5>>>0);\n      if ($574) {\n       $$0695873 = $570;$$0696872 = $571;$$1687875 = $573;$$1691874 = $567;$$1698871 = $572;$$1700870 = $568;$$1702869 = $569;\n      } else {\n       $$2692 = $567;\n       break;\n      }\n     }\n    } else {\n     $$2692 = $$0690$lcssa;\n    }\n   } while(0);\n   $575 = HEAP8[$481>>0]|0;\n   $576 = ($575<<24>>24)==(2);\n   if ($576) {\n    $577 = $$2692 & 65535;\n    $578 = $$2692 >>> 10;\n    $579 = $578 & 4194240;\n    $580 = ($7<<24>>24)==(0);\n    if ($580) {\n     $$0662$lcssa = $577;$$0663$lcssa = $579;\n    } else {\n     $581 = ((($0)) + 624|0);\n     $582 = HEAP32[$581>>2]|0;\n     $583 = ((($0)) + 628|0);\n     $$0662863 = $577;$$0663862 = $579;$$0665861 = 0;\n     while(1) {\n      $584 = (($582) + ($$0665861)|0);\n      $585 = HEAP8[$584>>0]|0;\n      $586 = ($585<<24>>24)==(4);\n      if ($586) {\n       $587 = HEAP32[$583>>2]|0;\n       $588 = (($587) + ($$0665861<<1)|0);\n       $589 = HEAP16[$588>>1]|0;\n       $590 = $589&65535;\n       $591 = Math_imul($590, $$0662863)|0;\n       $592 = $591 >>> 8;\n       $593 = Math_imul($590, $$0663862)|0;\n       $594 = $593 >>> 8;\n       $$1 = $592;$$1664 = $594;\n      } else {\n       $$1 = $$0662863;$$1664 = $$0663862;\n      }\n      $595 = (($$0665861) + 1)|0;\n      $exitcond1104 = ($595|0)==($8|0);\n      if ($exitcond1104) {\n       $$0662$lcssa = $$1;$$0663$lcssa = $$1664;\n       break;\n      } else {\n       $$0662863 = $$1;$$0663862 = $$1664;$$0665861 = $595;\n      }\n     }\n    }\n    $596 = ((($0)) + 636|0);\n    $597 = HEAP32[$596>>2]|0;\n    $598 = ((($597)) + 8|0);\n    $599 = HEAP16[$598>>1]|0;\n    $600 = $599&65535;\n    $601 = Math_imul($600, $$0663$lcssa)|0;\n    $602 = ($601>>>0)>(33553927);\n    $603 = $601 >>> 3;\n    $604 = Math_imul($600, $$0662$lcssa)|0;\n    $605 = $604 >>> 3;\n    $606 = $603 << 10;\n    $607 = (($606) + ($605))|0;\n    $$833 = $602 ? 2147483647 : $607;\n    $$4694 = $$833;\n   } else {\n    $$4694 = $$2692;\n   }\n   $608 = ($$4694>>>0)<($$6675>>>0);\n   if ($608) {\n    $609 = HEAP32[$516>>2]|0;\n    $$7 = $609;\n   } else {\n    $$7 = $$5;\n   }\n  }\n }\n $610 = HEAP32[$4>>2]|0;\n $611 = (($610) + 1)|0;\n _png_compress_IDAT($0,$$7,$611,0);\n $612 = HEAP32[$14>>2]|0;\n $613 = ($612|0)==(0|0);\n if (!($613)) {\n  $614 = HEAP32[$16>>2]|0;\n  HEAP32[$14>>2] = $614;\n  HEAP32[$16>>2] = $612;\n }\n _png_write_finish_row($0);\n $615 = ((($0)) + 480|0);\n $616 = HEAP32[$615>>2]|0;\n $617 = (($616) + 1)|0;\n HEAP32[$615>>2] = $617;\n $618 = ((($0)) + 476|0);\n $619 = HEAP32[$618>>2]|0;\n $620 = (($619) + -1)|0;\n $621 = ($620>>>0)<($617>>>0);\n if ($621) {\n  _png_write_flush($0);\n }\n $622 = HEAP8[$6>>0]|0;\n $623 = ($622<<24>>24)==(0);\n if ($623) {\n  return;\n }\n $624 = ($7&255)>(1);\n $625 = ((($0)) + 624|0);\n if ($624) {\n  $$0841 = 1;\n  while(1) {\n   $626 = (($$0841) + -1)|0;\n   $627 = HEAP32[$625>>2]|0;\n   $628 = (($627) + ($626)|0);\n   $629 = HEAP8[$628>>0]|0;\n   $630 = (($627) + ($$0841)|0);\n   HEAP8[$630>>0] = $629;\n   $631 = (($$0841) + 1)|0;\n   $exitcond = ($631|0)==($8|0);\n   if ($exitcond) {\n    $$0$lcssa = $8;\n    break;\n   } else {\n    $$0841 = $631;\n   }\n  }\n } else {\n  $$0$lcssa = 1;\n }\n $632 = HEAP8[$$7>>0]|0;\n $633 = HEAP32[$625>>2]|0;\n $634 = (($633) + ($$0$lcssa)|0);\n HEAP8[$634>>0] = $632;\n return;\n}\nfunction _png_write_flush($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 372|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 356|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($3>>>0)<($5>>>0);\n if (!($6)) {\n  return;\n }\n _png_compress_IDAT($0,0,0,2);\n $7 = ((($0)) + 480|0);\n HEAP32[$7>>2] = 0;\n _png_flush($0);\n return;\n}\nfunction _png_flush($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 472|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0|0);\n if ($3) {\n  return;\n }\n FUNCTION_TABLE_vi[$2 & 127]($0);\n return;\n}\nfunction _png_create_read_struct($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = (_png_create_png_struct($0,$1,$2,$3,0,0,0)|0);\n $5 = ($4|0)==(0|0);\n if ($5) {\n  return ($4|0);\n }\n $6 = ((($4)) + 208|0);\n HEAP32[$6>>2] = 32768;\n $7 = ((($4)) + 796|0);\n HEAP32[$7>>2] = 8192;\n $8 = ((($4)) + 212|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = $9 | 3145728;\n HEAP32[$8>>2] = $10;\n _png_set_read_fn($4,0,0);\n return ($4|0);\n}\nfunction _png_create_png_struct($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n var $$1$reg2mem$0 = 0, $$reg2mem38$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $cond41 = 0, $cond42 = 0, $cond43 = 0, $cond44 = 0, _setjmpTable = 0;\n var _setjmpTableSize = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);\n _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;\n $7 = sp + 156|0;\n $8 = sp;\n _memset(($7|0),0,900)|0;\n $9 = ((($7)) + 748|0);\n HEAP32[$9>>2] = 1000000;\n $10 = ((($7)) + 752|0);\n HEAP32[$10>>2] = 1000000;\n $11 = ((($7)) + 756|0);\n HEAP32[$11>>2] = 1000;\n $12 = ((($7)) + 760|0);\n HEAP32[$12>>2] = 8000000;\n __THREW__ = 0;\n invoke_viiii(54,($7|0),($4|0),($5|0),($6|0));\n $13 = __THREW__; __THREW__ = 0;\n if ((($13|0) != 0) & ((threwValue|0) != 0)) { $14 = _testSetjmp(HEAP32[$13>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($14|0) == 0) { _longjmp($13|0, threwValue|0); } tempRet0 = (threwValue); } else { $14 = -1; };\n $15 = tempRet0;\n $cond = ($14|0)==(1);\n if ($cond) {\n  $$reg2mem38$0 = $15;\n } else {\n  __THREW__ = 0;\n  invoke_viiii(55,($7|0),($1|0),($2|0),($3|0));\n  $16 = __THREW__; __THREW__ = 0;\n  if ((($16|0) != 0) & ((threwValue|0) != 0)) { $17 = _testSetjmp(HEAP32[$16>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($17|0) == 0) { _longjmp($16|0, threwValue|0); } tempRet0 = (threwValue); } else { $17 = -1; };\n  $18 = tempRet0;\n  $cond41 = ($17|0)==(1);\n  if ($cond41) {\n   $$reg2mem38$0 = $18;\n  } else {\n   _setjmpTable = _saveSetjmp($8,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;\n   __THREW__ = 0;\n   $19 = __THREW__; __THREW__ = 0;\n   if ((($19|0) != 0) & ((threwValue|0) != 0)) { $20 = _testSetjmp(HEAP32[$19>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($20|0) == 0) { _longjmp($19|0, threwValue|0); } tempRet0 = (threwValue); } else { $20 = -1; };\n   $21 = tempRet0;\n   $cond42 = ($20|0)==(1);\n   if ($cond42) {\n    $$reg2mem38$0 = $21;\n   } else {\n    $$reg2mem38$0 = 0;\n   }\n  }\n }\n while(1) {\n  $22 = ($$reg2mem38$0|0)==(0);\n  if (!($22)) {\n   $$1$reg2mem$0 = 0;\n   label = 11;\n   break;\n  }\n  $23 = ((($7)) + 160|0);\n  HEAP32[$23>>2] = $8;\n  $24 = ((($7)) + 164|0);\n  HEAP32[$24>>2] = 0;\n  $25 = ((($7)) + 156|0);\n  HEAP32[$25>>2] = 52;\n  __THREW__ = 0;\n  $26 = (invoke_iii(56,($7|0),($0|0))|0);\n  $27 = __THREW__; __THREW__ = 0;\n  if ((($27|0) != 0) & ((threwValue|0) != 0)) { $28 = _testSetjmp(HEAP32[$27>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($28|0) == 0) { _longjmp($27|0, threwValue|0); } tempRet0 = (threwValue); } else { $28 = -1; };\n  $29 = tempRet0;\n  $cond43 = ($28|0)==(1);\n  if ($cond43) {\n   $$reg2mem38$0 = $29;\n   continue;\n  }\n  $30 = ($26|0)==(0);\n  if ($30) {\n   $$1$reg2mem$0 = 0;\n   label = 11;\n   break;\n  }\n  __THREW__ = 0;\n  $31 = (invoke_iii(57,($7|0),900)|0);\n  $32 = __THREW__; __THREW__ = 0;\n  if ((($32|0) != 0) & ((threwValue|0) != 0)) { $33 = _testSetjmp(HEAP32[$32>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($33|0) == 0) { _longjmp($32|0, threwValue|0); } tempRet0 = (threwValue); } else { $33 = -1; };\n  $34 = tempRet0;\n  $cond44 = ($33|0)==(1);\n  if ($cond44) {\n   $$reg2mem38$0 = $34;\n  } else {\n   label = 9;\n   break;\n  }\n }\n if ((label|0) == 9) {\n  $35 = ($31|0)==(0|0);\n  if ($35) {\n   $$1$reg2mem$0 = 0;\n   _free(_setjmpTable|0);\n   STACKTOP = sp;return ($$1$reg2mem$0|0);\n  }\n  $36 = ((($7)) + 256|0);\n  HEAP32[$36>>2] = 58;\n  $37 = ((($7)) + 260|0);\n  HEAP32[$37>>2] = 59;\n  $38 = ((($7)) + 264|0);\n  HEAP32[$38>>2] = $31;\n  HEAP32[$23>>2] = 0;\n  HEAP32[$24>>2] = 0;\n  HEAP32[$25>>2] = 0;\n  _memcpy(($31|0),($7|0),900)|0;\n  $$1$reg2mem$0 = $31;\n  _free(_setjmpTable|0);\n  STACKTOP = sp;return ($$1$reg2mem$0|0);\n }\n else if ((label|0) == 11) {\n  _free(_setjmpTable|0);\n  STACKTOP = sp;return ($$1$reg2mem$0|0);\n }\n return (0)|0;\n}\nfunction _png_set_read_fn($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $png_default_read_data$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 188|0);\n HEAP32[$4>>2] = $1;\n $5 = ($2|0)==(0|0);\n $6 = ((($0)) + 184|0);\n $png_default_read_data$ = $5 ? 60 : $2;\n HEAP32[$6>>2] = $png_default_read_data$;\n $7 = ((($0)) + 180|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if (!($9)) {\n  HEAP32[$7>>2] = 0;\n  _png_warning($0,26613);\n }\n $10 = ((($0)) + 472|0);\n HEAP32[$10>>2] = 0;\n return;\n}\nfunction _png_default_read_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 188|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (_fread($1,1,$2,$5)|0);\n $7 = ($6|0)==($2|0);\n if ($7) {\n  return;\n } else {\n  _png_error($0,24203);\n  // unreachable;\n }\n}\nfunction _png_set_error_fn($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  return;\n }\n $5 = ((($0)) + 176|0);\n HEAP32[$5>>2] = $1;\n $6 = ((($0)) + 168|0);\n HEAP32[$6>>2] = $2;\n $7 = ((($0)) + 172|0);\n HEAP32[$7>>2] = $3;\n return;\n}\nfunction _png_user_version_check($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$028 = 0, $$0 = 0, $$028 = 0, $$029 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);\n $2 = sp;\n $3 = ($1|0)==(0|0);\n $4 = ((($0)) + 212|0);\n if ($3) {\n  $18 = HEAP32[$4>>2]|0;\n  $19 = $18 | 131072;\n  HEAP32[$4>>2] = $19;\n  $21 = $19;\n } else {\n  $$028 = 0;$$029 = -1;\n  while(1) {\n   $5 = (($$029) + 1)|0;\n   $6 = (($1) + ($5)|0);\n   $7 = HEAP8[$6>>0]|0;\n   $8 = (24249 + ($5)|0);\n   $9 = HEAP8[$8>>0]|0;\n   $10 = ($7<<24>>24)==($9<<24>>24);\n   if (!($10)) {\n    $11 = HEAP32[$4>>2]|0;\n    $12 = $11 | 131072;\n    HEAP32[$4>>2] = $12;\n   }\n   $13 = ($7<<24>>24)==(46);\n   $14 = $13&1;\n   $$$028 = (($14) + ($$028))|0;\n   $15 = ($$$028|0)<(2);\n   if (!($15)) {\n    break;\n   }\n   $16 = ($7<<24>>24)==(0);\n   $17 = ($5|0)==(6);\n   $or$cond = $17 | $16;\n   if ($or$cond) {\n    break;\n   } else {\n    $$028 = $$$028;$$029 = $5;\n   }\n  }\n  $$pre = HEAP32[$4>>2]|0;\n  $21 = $$pre;\n }\n $20 = $21 & 131072;\n $22 = ($20|0)==(0);\n if ($22) {\n  $$0 = 1;\n  STACKTOP = sp;return ($$0|0);\n }\n $23 = (_png_safecat($2,128,0,24256)|0);\n $24 = (_png_safecat($2,128,$23,$1)|0);\n $25 = (_png_safecat($2,128,$24,24287)|0);\n (_png_safecat($2,128,$25,24249)|0);\n _png_warning($0,$2);\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _png_zalloc($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = (4294967295 / ($2>>>0))&-1;\n $5 = ($4>>>0)>($1>>>0);\n if ($5) {\n  $6 = Math_imul($2, $1)|0;\n  $7 = (_png_malloc_warn($0,$6)|0);\n  $$0 = $7;\n  return ($$0|0);\n } else {\n  _png_warning($0,24214);\n  $$0 = 0;\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _png_zfree($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n _png_free($0,$1);\n return;\n}\nfunction _png_read_info($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond114 = 0, $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0, $switch$split162D = 0, $switch$split192D = 0, $switch$split222D = 0, $switch$split252D = 0;\n var $switch$split282D = 0, $switch$split2D = 0, $switch$split312D = 0, $switch$split342D = 0, $switch$split372D = 0, $switch$split402D = 0, $switch$split42D = 0, $switch$split432D = 0, $switch$split462D = 0, $switch$split72D = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  return;\n }\n _png_read_sig($0,$1);\n $4 = ((($0)) + 376|0);\n $5 = ((($0)) + 208|0);\n $6 = ((($0)) + 435|0);\n L4: while(1) {\n  $7 = (_png_read_chunk_header($0)|0);\n  $8 = HEAP32[$4>>2]|0;\n  $9 = ($8|0)==(1229209940);\n  $10 = HEAP32[$5>>2]|0;\n  if ($9) {\n   $11 = $10 & 1;\n   $12 = ($11|0)==(0);\n   if ($12) {\n    label = 5;\n    break;\n   }\n   $13 = HEAP8[$6>>0]|0;\n   $14 = ($13<<24>>24)==(3);\n   $15 = $10 & 2;\n   $16 = ($15|0)==(0);\n   $or$cond114 = $16 & $14;\n   if ($or$cond114) {\n    label = 7;\n    break;\n   }\n   $17 = $10 & 8;\n   $18 = ($17|0)==(0);\n   if ($18) {\n    $20 = $10;\n   } else {\n    _png_chunk_benign_error($0,24356);\n    $$pre = HEAP32[$5>>2]|0;\n    $20 = $$pre;\n   }\n   $19 = $20 | 4;\n   HEAP32[$5>>2] = $19;\n  } else {\n   $21 = $10 & 4;\n   $22 = ($21|0)==(0);\n   if (!($22)) {\n    $23 = $10 | 8;\n    HEAP32[$5>>2] = $23;\n   }\n  }\n  $switch$split2D = ($8|0)<(1229472850);\n  L16: do {\n   if ($switch$split2D) {\n    switch ($8|0) {\n    case 1229278788:  {\n     break;\n    }\n    default: {\n     break L16;\n    }\n    }\n    _png_handle_IEND($0,$1,$7);\n    continue L4;\n   } else {\n    switch ($8|0) {\n    case 1229472850:  {\n     break;\n    }\n    default: {\n     break L16;\n    }\n    }\n    _png_handle_IHDR($0,$1,$7);\n    continue L4;\n   }\n  } while(0);\n  $24 = (_png_chunk_unknown_handling($0,$8)|0);\n  $25 = ($24|0)==(0);\n  if (!($25)) {\n   _png_handle_unknown($0,$1,$7,$24);\n   $26 = ($8|0)==(1347179589);\n   if ($26) {\n    $27 = HEAP32[$5>>2]|0;\n    $28 = $27 | 2;\n    HEAP32[$5>>2] = $28;\n    continue;\n   } else {\n    if ($9) {\n     label = 20;\n     break;\n    } else {\n     continue;\n    }\n   }\n  }\n  $30 = ($8|0)==(1347179589);\n  if ($30) {\n   _png_handle_PLTE($0,$1,$7);\n   continue;\n  }\n  if ($9) {\n   label = 24;\n   break;\n  }\n  $switch$split12D = ($8|0)<(1883789683);\n  L32: do {\n   if ($switch$split12D) {\n    $switch$split42D = ($8|0)<(1766015824);\n    if ($switch$split42D) {\n     $switch$split102D = ($8|0)<(1732332865);\n     if ($switch$split102D) {\n      $switch$split222D = ($8|0)<(1665684045);\n      if ($switch$split222D) {\n       switch ($8|0) {\n       case 1649100612:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_bKGD($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1665684045:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_cHRM($0,$1,$7);\n       continue L4;\n      }\n     } else {\n      $switch$split252D = ($8|0)<(1749635924);\n      if ($switch$split252D) {\n       switch ($8|0) {\n       case 1732332865:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_gAMA($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1749635924:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_hIST($0,$1,$7);\n       continue L4;\n      }\n     }\n    } else {\n     $switch$split132D = ($8|0)<(1866876531);\n     if ($switch$split132D) {\n      $switch$split282D = ($8|0)<(1767135348);\n      if ($switch$split282D) {\n       switch ($8|0) {\n       case 1766015824:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_iCCP($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1767135348:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_iTXt($0,$1,$7);\n       continue L4;\n      }\n     } else {\n      $switch$split312D = ($8|0)<(1883455820);\n      if ($switch$split312D) {\n       switch ($8|0) {\n       case 1866876531:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_oFFs($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1883455820:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_pCAL($0,$1,$7);\n       continue L4;\n      }\n     }\n    }\n   } else {\n    $switch$split72D = ($8|0)<(1934772034);\n    if ($switch$split72D) {\n     $switch$split162D = ($8|0)<(1933787468);\n     if ($switch$split162D) {\n      $switch$split342D = ($8|0)<(1933723988);\n      if ($switch$split342D) {\n       switch ($8|0) {\n       case 1883789683:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_pHYs($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1933723988:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_sBIT($0,$1,$7);\n       continue L4;\n      }\n     } else {\n      $switch$split372D = ($8|0)<(1934642260);\n      if ($switch$split372D) {\n       switch ($8|0) {\n       case 1933787468:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_sCAL($0,$1,$7);\n       continue L4;\n      } else {\n       switch ($8|0) {\n       case 1934642260:  {\n        break;\n       }\n       default: {\n        break L32;\n       }\n       }\n       _png_handle_sPLT($0,$1,$7);\n       continue L4;\n      }\n     }\n    }\n    $switch$split192D = ($8|0)<(1950960965);\n    if ($switch$split192D) {\n     $switch$split402D = ($8|0)<(1950701684);\n     if ($switch$split402D) {\n      switch ($8|0) {\n      case 1934772034:  {\n       break;\n      }\n      default: {\n       break L32;\n      }\n      }\n      _png_handle_sRGB($0,$1,$7);\n      continue L4;\n     } else {\n      switch ($8|0) {\n      case 1950701684:  {\n       break;\n      }\n      default: {\n       break L32;\n      }\n      }\n      _png_handle_tEXt($0,$1,$7);\n      continue L4;\n     }\n    }\n    $switch$split432D = ($8|0)<(1951551059);\n    if ($switch$split432D) {\n     switch ($8|0) {\n     case 1950960965:  {\n      break;\n     }\n     default: {\n      break L32;\n     }\n     }\n     _png_handle_tIME($0,$1,$7);\n     continue L4;\n    }\n    $switch$split462D = ($8|0)<(2052348020);\n    if ($switch$split462D) {\n     switch ($8|0) {\n     case 1951551059:  {\n      break;\n     }\n     default: {\n      break L32;\n     }\n     }\n     _png_handle_tRNS($0,$1,$7);\n     continue L4;\n    } else {\n     switch ($8|0) {\n     case 2052348020:  {\n      break;\n     }\n     default: {\n      break L32;\n     }\n     }\n     _png_handle_zTXt($0,$1,$7);\n     continue L4;\n    }\n   }\n  } while(0);\n  _png_handle_unknown($0,$1,$7,0);\n }\n if ((label|0) == 5) {\n  _png_chunk_error($0,24306);\n  // unreachable;\n }\n else if ((label|0) == 7) {\n  _png_chunk_error($0,24331);\n  // unreachable;\n }\n else if ((label|0) == 20) {\n  $29 = ((($0)) + 408|0);\n  HEAP32[$29>>2] = 0;\n  return;\n }\n else if ((label|0) == 24) {\n  $31 = ((($0)) + 408|0);\n  HEAP32[$31>>2] = $7;\n  return;\n }\n}\nfunction _png_read_sig($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 441|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = $3&255;\n $5 = ($3&255)>(7);\n if ($5) {\n  return;\n }\n $6 = (8 - ($4))|0;\n $7 = ((($0)) + 800|0);\n HEAP32[$7>>2] = 17;\n $8 = (((($1)) + 32|0) + ($4)|0);\n _png_read_data($0,$8,$6);\n HEAP8[$2>>0] = 8;\n $9 = ((($1)) + 32|0);\n $10 = (_png_sig_cmp($9,$4,$6)|0);\n $11 = ($10|0)==(0);\n if ($11) {\n  $16 = ($3&255)<(3);\n  if (!($16)) {\n   return;\n  }\n  $17 = ((($0)) + 208|0);\n  $18 = HEAP32[$17>>2]|0;\n  $19 = $18 | 4096;\n  HEAP32[$17>>2] = $19;\n  return;\n }\n $12 = ($3&255)<(4);\n if (!($12)) {\n  _png_error($0,25424);\n  // unreachable;\n }\n $13 = (($6) + -4)|0;\n $14 = (_png_sig_cmp($9,$4,$13)|0);\n $15 = ($14|0)==(0);\n if ($15) {\n  _png_error($0,25424);\n  // unreachable;\n } else {\n  _png_error($0,25409);\n  // unreachable;\n }\n}\nfunction _png_read_chunk_header($0) {\n $0 = $0|0;\n var $$off$1$i = 0, $$off$2$i = 0, $$off$3$i = 0, $$off$i = 0, $$off15$1$i = 0, $$off15$2$i = 0, $$off15$3$i = 0, $$off15$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $or$cond$1$i = 0, $or$cond$2$i = 0, $or$cond$3$i = 0, $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = ((($0)) + 800|0);\n HEAP32[$2>>2] = 33;\n _png_read_data($0,$1,8);\n $3 = HEAP8[$1>>0]|0;\n $4 = $3&255;\n $5 = $4 << 24;\n $6 = ((($1)) + 1|0);\n $7 = HEAP8[$6>>0]|0;\n $8 = $7&255;\n $9 = $8 << 16;\n $10 = $9 | $5;\n $11 = ((($1)) + 2|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12&255;\n $14 = $13 << 8;\n $15 = $10 | $14;\n $16 = ((($1)) + 3|0);\n $17 = HEAP8[$16>>0]|0;\n $18 = $17&255;\n $19 = $15 | $18;\n $20 = ($19|0)<(0);\n if ($20) {\n  _png_error($0,25356);\n  // unreachable;\n }\n $21 = ((($1)) + 4|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $23 << 24;\n $25 = ((($1)) + 5|0);\n $26 = HEAP8[$25>>0]|0;\n $27 = $26&255;\n $28 = $27 << 16;\n $29 = $28 | $24;\n $30 = ((($1)) + 6|0);\n $31 = HEAP8[$30>>0]|0;\n $32 = $31&255;\n $33 = $32 << 8;\n $34 = $29 | $33;\n $35 = ((($1)) + 7|0);\n $36 = HEAP8[$35>>0]|0;\n $37 = $36&255;\n $38 = $34 | $37;\n $39 = ((($0)) + 376|0);\n HEAP32[$39>>2] = $38;\n _png_reset_crc($0);\n _png_calculate_crc($0,$21,4);\n $40 = HEAP32[$39>>2]|0;\n $41 = $40 & 255;\n $$off$i = (($41) + -65)|0;\n $42 = ($$off$i>>>0)>(57);\n $$off15$i = (($41) + -91)|0;\n $43 = ($$off15$i>>>0)<(6);\n $or$cond$i = $42 | $43;\n if ($or$cond$i) {\n  _png_chunk_error($0,25390);\n  // unreachable;\n }\n $44 = $40 >>> 8;\n $45 = $44 & 255;\n $$off$1$i = (($45) + -65)|0;\n $46 = ($$off$1$i>>>0)>(57);\n $$off15$1$i = (($45) + -91)|0;\n $47 = ($$off15$1$i>>>0)<(6);\n $or$cond$1$i = $46 | $47;\n if ($or$cond$1$i) {\n  _png_chunk_error($0,25390);\n  // unreachable;\n }\n $48 = $40 >>> 16;\n $49 = $48 & 255;\n $$off$2$i = (($49) + -65)|0;\n $50 = ($$off$2$i>>>0)>(57);\n $$off15$2$i = (($49) + -91)|0;\n $51 = ($$off15$2$i>>>0)<(6);\n $or$cond$2$i = $50 | $51;\n if ($or$cond$2$i) {\n  _png_chunk_error($0,25390);\n  // unreachable;\n }\n $52 = $40 >>> 24;\n $$off$3$i = (($52) + -65)|0;\n $53 = ($$off$3$i>>>0)>(57);\n $$off15$3$i = (($52) + -91)|0;\n $54 = ($$off15$3$i>>>0)<(6);\n $or$cond$3$i = $53 | $54;\n if ($or$cond$3$i) {\n  _png_chunk_error($0,25390);\n  // unreachable;\n } else {\n  HEAP32[$2>>2] = 65;\n  STACKTOP = sp;return ($19|0);\n }\n return (0)|0;\n}\nfunction _png_chunk_benign_error($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$idx$i = 0, $$idx$val$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $2 = sp;\n $3 = ((($0)) + 212|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 1048576;\n $6 = ($5|0)==(0);\n if ($6) {\n  _png_chunk_error($0,$1);\n  // unreachable;\n } else {\n  $$idx$i = ((($0)) + 376|0);\n  $$idx$val$i = HEAP32[$$idx$i>>2]|0;\n  _png_format_buffer($$idx$val$i,$2,$1);\n  _png_warning($0,$2);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_handle_IHDR($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;\n var $84 = 0, $85 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if (!($7)) {\n  _png_chunk_error($0,24628);\n  // unreachable;\n }\n $8 = ($2|0)==(13);\n if (!($8)) {\n  _png_chunk_error($0,24651);\n  // unreachable;\n }\n $9 = $5 | 1;\n HEAP32[$4>>2] = $9;\n _png_read_data($0,$3,13);\n _png_calculate_crc($0,$3,13);\n (_png_crc_finish($0,0)|0);\n $10 = HEAP8[$3>>0]|0;\n $11 = $10&255;\n $12 = $11 << 24;\n $13 = ((($3)) + 1|0);\n $14 = HEAP8[$13>>0]|0;\n $15 = $14&255;\n $16 = $15 << 16;\n $17 = $16 | $12;\n $18 = ((($3)) + 2|0);\n $19 = HEAP8[$18>>0]|0;\n $20 = $19&255;\n $21 = $20 << 8;\n $22 = $17 | $21;\n $23 = ((($3)) + 3|0);\n $24 = HEAP8[$23>>0]|0;\n $25 = $24&255;\n $26 = $22 | $25;\n $27 = ($26|0)<(0);\n if ($27) {\n  _png_error($0,25356);\n  // unreachable;\n }\n $28 = ((($3)) + 4|0);\n $29 = HEAP8[$28>>0]|0;\n $30 = $29&255;\n $31 = $30 << 24;\n $32 = ((($3)) + 5|0);\n $33 = HEAP8[$32>>0]|0;\n $34 = $33&255;\n $35 = $34 << 16;\n $36 = $35 | $31;\n $37 = ((($3)) + 6|0);\n $38 = HEAP8[$37>>0]|0;\n $39 = $38&255;\n $40 = $39 << 8;\n $41 = $36 | $40;\n $42 = ((($3)) + 7|0);\n $43 = HEAP8[$42>>0]|0;\n $44 = $43&255;\n $45 = $41 | $44;\n $46 = ($45|0)<(0);\n if ($46) {\n  _png_error($0,25356);\n  // unreachable;\n }\n $47 = ((($3)) + 8|0);\n $48 = HEAP8[$47>>0]|0;\n $49 = $48&255;\n $50 = ((($3)) + 9|0);\n $51 = HEAP8[$50>>0]|0;\n $52 = $51&255;\n $53 = ((($3)) + 10|0);\n $54 = HEAP8[$53>>0]|0;\n $55 = $54&255;\n $56 = ((($3)) + 11|0);\n $57 = HEAP8[$56>>0]|0;\n $58 = $57&255;\n $59 = ((($3)) + 12|0);\n $60 = HEAP8[$59>>0]|0;\n $61 = $60&255;\n $62 = ((($0)) + 348|0);\n HEAP32[$62>>2] = $26;\n $63 = ((($0)) + 352|0);\n HEAP32[$63>>2] = $45;\n $64 = ((($0)) + 436|0);\n HEAP8[$64>>0] = $48;\n $65 = ((($0)) + 432|0);\n HEAP8[$65>>0] = $60;\n $66 = ((($0)) + 435|0);\n HEAP8[$66>>0] = $51;\n $67 = ((($0)) + 712|0);\n HEAP8[$67>>0] = $57;\n $68 = ((($0)) + 744|0);\n HEAP8[$68>>0] = $54;\n switch ($51<<24>>24) {\n case 6:  {\n  $72 = ((($0)) + 439|0);\n  HEAP8[$72>>0] = 4;\n  $74 = 4;\n  break;\n }\n case 4:  {\n  $71 = ((($0)) + 439|0);\n  HEAP8[$71>>0] = 2;\n  $74 = 2;\n  break;\n }\n case 2:  {\n  $70 = ((($0)) + 439|0);\n  HEAP8[$70>>0] = 3;\n  $74 = 3;\n  break;\n }\n default: {\n  $69 = ((($0)) + 439|0);\n  HEAP8[$69>>0] = 1;\n  $74 = 1;\n }\n }\n $73 = Math_imul($74, $49)|0;\n $75 = $73&255;\n $76 = ((($0)) + 438|0);\n HEAP8[$76>>0] = $75;\n $77 = $73 & 255;\n $78 = ($77>>>0)>(7);\n if ($78) {\n  $79 = $77 >>> 3;\n  $80 = Math_imul($79, $26)|0;\n  $85 = $80;\n  $84 = ((($0)) + 364|0);\n  HEAP32[$84>>2] = $85;\n  _png_set_IHDR($0,$1,$26,$45,$49,$52,$61,$55,$58);\n  STACKTOP = sp;return;\n } else {\n  $81 = Math_imul($77, $26)|0;\n  $82 = (($81) + 7)|0;\n  $83 = $82 >>> 3;\n  $85 = $83;\n  $84 = ((($0)) + 364|0);\n  HEAP32[$84>>2] = $85;\n  _png_set_IHDR($0,$1,$26,$45,$49,$52,$61,$55,$58);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_handle_IEND($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 208|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 5;\n $6 = ($5|0)==(5);\n if (!($6)) {\n  _png_chunk_error($0,24628);\n  // unreachable;\n }\n $7 = $4 | 24;\n HEAP32[$3>>2] = $7;\n (_png_crc_finish($0,$2)|0);\n $8 = ($2|0)==(0);\n if ($8) {\n  return;\n }\n _png_chunk_benign_error($0,24651);\n return;\n}\nfunction _png_chunk_unknown_handling($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i = 0, $$015$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = $1 >>> 24;\n $4 = $3&255;\n HEAP8[$2>>0] = $4;\n $5 = $1 >>> 16;\n $6 = $5&255;\n $7 = ((($2)) + 1|0);\n HEAP8[$7>>0] = $6;\n $8 = $1 >>> 8;\n $9 = $8&255;\n $10 = ((($2)) + 2|0);\n HEAP8[$10>>0] = $9;\n $11 = $1&255;\n $12 = ((($2)) + 3|0);\n HEAP8[$12>>0] = $11;\n $13 = ((($2)) + 4|0);\n HEAP8[$13>>0] = 0;\n $14 = ($0|0)==(0|0);\n if ($14) {\n  $$0$i = 0;\n  STACKTOP = sp;return ($$0$i|0);\n }\n $15 = ((($0)) + 692|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)==(0);\n if ($17) {\n  $$0$i = 0;\n  STACKTOP = sp;return ($$0$i|0);\n }\n $18 = ((($0)) + 696|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($16*5)|0;\n $21 = (($19) + ($20)|0);\n $$015$i = $21;\n while(1) {\n  $22 = ((($$015$i)) + -5|0);\n  $23 = (_memcmp($2,$22,4)|0);\n  $24 = ($23|0)==(0);\n  if ($24) {\n   break;\n  }\n  $28 = ($22>>>0)>($19>>>0);\n  if ($28) {\n   $$015$i = $22;\n  } else {\n   $$0$i = 0;\n   label = 7;\n   break;\n  }\n }\n if ((label|0) == 7) {\n  STACKTOP = sp;return ($$0$i|0);\n }\n $25 = ((($$015$i)) + -1|0);\n $26 = HEAP8[$25>>0]|0;\n $27 = $26&255;\n $$0$i = $27;\n STACKTOP = sp;return ($$0$i|0);\n}\nfunction _png_handle_unknown($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$1 = 0, $$1 = 0, $$2 = 0, $$243 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 684|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n do {\n  if ($6) {\n   $18 = ($3|0)==(0);\n   if ($18) {\n    $19 = ((($0)) + 688|0);\n    $20 = HEAP32[$19>>2]|0;\n    $$1 = $20;\n   } else {\n    $$1 = $3;\n   }\n   switch ($$1|0) {\n   case 3:  {\n    label = 13;\n    break;\n   }\n   case 2:  {\n    $21 = ((($0)) + 376|0);\n    $22 = HEAP32[$21>>2]|0;\n    $23 = $22 & 536870912;\n    $24 = ($23|0)==(0);\n    if ($24) {\n     label = 14;\n    } else {\n     label = 13;\n    }\n    break;\n   }\n   default: {\n    label = 14;\n   }\n   }\n   if ((label|0) == 13) {\n    $25 = (_png_cache_unknown_chunk($0,$2)|0);\n    $26 = ($25|0)==(0);\n    $$$1 = $26 ? 1 : $$1;\n    $$2 = $$$1;\n    label = 15;\n    break;\n   }\n   else if ((label|0) == 14) {\n    (_png_crc_finish($0,$2)|0);\n    $$2 = $$1;\n    label = 15;\n    break;\n   }\n  } else {\n   $7 = (_png_cache_unknown_chunk($0,$2)|0);\n   $8 = ($7|0)==(0);\n   if ($8) {\n    $$243 = 0;\n   } else {\n    $9 = HEAP32[$4>>2]|0;\n    $10 = ((($0)) + 764|0);\n    $11 = (FUNCTION_TABLE_iii[$9 & 63]($0,$10)|0);\n    $12 = ($11|0)<(0);\n    if ($12) {\n     _png_chunk_error($0,25177);\n     // unreachable;\n    }\n    $13 = ($11|0)==(0);\n    if ($13) {\n     $14 = ($3|0)<(2);\n     if ($14) {\n      $15 = ((($0)) + 688|0);\n      $16 = HEAP32[$15>>2]|0;\n      $17 = ($16|0)<(2);\n      if ($17) {\n       _png_chunk_warning($0,25197);\n       _png_app_warning($0,25219);\n       label = 16;\n      } else {\n       label = 16;\n      }\n     } else {\n      $$2 = $3;\n      label = 15;\n     }\n    } else {\n     $$243 = 1;\n    }\n   }\n  }\n } while(0);\n if ((label|0) == 15) {\n  switch ($$2|0) {\n  case 3:  {\n   label = 17;\n   break;\n  }\n  case 2:  {\n   label = 16;\n   break;\n  }\n  default: {\n   $$243 = 0;\n  }\n  }\n }\n if ((label|0) == 16) {\n  $27 = ((($0)) + 376|0);\n  $28 = HEAP32[$27>>2]|0;\n  $29 = $28 & 536870912;\n  $30 = ($29|0)==(0);\n  if ($30) {\n   $$243 = 0;\n  } else {\n   label = 17;\n  }\n }\n L23: do {\n  if ((label|0) == 17) {\n   $31 = ((($0)) + 756|0);\n   $32 = HEAP32[$31>>2]|0;\n   switch ($32|0) {\n   case 1:  {\n    $$243 = 0;\n    break L23;\n    break;\n   }\n   case 2:  {\n    HEAP32[$31>>2] = 1;\n    _png_chunk_benign_error($0,24377);\n    $$243 = 0;\n    break L23;\n    break;\n   }\n   case 0:  {\n    break;\n   }\n   default: {\n    $33 = (($32) + -1)|0;\n    HEAP32[$31>>2] = $33;\n   }\n   }\n   $34 = ((($0)) + 764|0);\n   _png_set_unknown_chunks($0,$1,$34,1);\n   $$243 = 1;\n  }\n } while(0);\n $35 = ((($0)) + 772|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = ($36|0)==(0|0);\n if (!($37)) {\n  _png_free($0,$36);\n }\n HEAP32[$35>>2] = 0;\n $38 = ($$243|0)==(0);\n if (!($38)) {\n  return;\n }\n $39 = ((($0)) + 376|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = $40 & 536870912;\n $42 = ($41|0)==(0);\n if ($42) {\n  _png_chunk_error($0,25295);\n  // unreachable;\n } else {\n  return;\n }\n}\nfunction _png_handle_PLTE($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$04651 = 0, $$052 = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre$phiZ2D = 0, $$pre54 = 0, $$pre55 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 784|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(784|0);\n $3 = sp + 8|0;\n $4 = sp;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = $6 & 2;\n $10 = ($9|0)==(0);\n if (!($10)) {\n  _png_chunk_error($0,24641);\n  // unreachable;\n }\n $11 = $6 & 4;\n $12 = ($11|0)==(0);\n if (!($12)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $13 = $6 | 2;\n HEAP32[$5>>2] = $13;\n $14 = ((($0)) + 435|0);\n $15 = HEAP8[$14>>0]|0;\n $16 = $15 & 2;\n $17 = ($16<<24>>24)==(0);\n if ($17) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,25095);\n  STACKTOP = sp;return;\n }\n $18 = ($2>>>0)<(769);\n $19 = (($2>>>0) % 3)&-1;\n $20 = ($19|0)==(0);\n $or$cond = $18 & $20;\n if (!($or$cond)) {\n  (_png_crc_finish($0,$2)|0);\n  $21 = HEAP8[$14>>0]|0;\n  $22 = ($21<<24>>24)==(3);\n  if ($22) {\n   _png_chunk_error($0,24651);\n   // unreachable;\n  }\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n $23 = (($2|0) / 3)&-1;\n $24 = ($2|0)>(2);\n if ($24) {\n  $25 = ((($4)) + 1|0);\n  $26 = ((($4)) + 2|0);\n  $$04651 = 0;$$052 = $3;\n  while(1) {\n   _png_read_data($0,$4,3);\n   _png_calculate_crc($0,$4,3);\n   $27 = HEAP8[$4>>0]|0;\n   HEAP8[$$052>>0] = $27;\n   $28 = HEAP8[$25>>0]|0;\n   $29 = ((($$052)) + 1|0);\n   HEAP8[$29>>0] = $28;\n   $30 = HEAP8[$26>>0]|0;\n   $31 = ((($$052)) + 2|0);\n   HEAP8[$31>>0] = $30;\n   $32 = (($$04651) + 1)|0;\n   $33 = ((($$052)) + 3|0);\n   $34 = ($32|0)<($23|0);\n   if ($34) {\n    $$04651 = $32;$$052 = $33;\n   } else {\n    break;\n   }\n  }\n }\n (_png_crc_finish($0,0)|0);\n _png_set_PLTE($0,$1,$3,$23);\n $35 = ((($0)) + 428|0);\n $36 = HEAP16[$35>>1]|0;\n $37 = ($36<<16>>16)==(0);\n do {\n  if ($37) {\n   $38 = ($1|0)==(0|0);\n   if ($38) {\n    STACKTOP = sp;return;\n   }\n   $39 = ((($1)) + 8|0);\n   $40 = HEAP32[$39>>2]|0;\n   $41 = $40 & 16;\n   $42 = ($41|0)==(0);\n   if ($42) {\n    $$pre$phiZ2D = $39;$46 = $40;\n   } else {\n    HEAP16[$35>>1] = 0;\n    $$phi$trans$insert$pre$phiZZZZ2D = $39;\n    label = 22;\n   }\n  } else {\n   HEAP16[$35>>1] = 0;\n   $43 = ($1|0)==(0|0);\n   if (!($43)) {\n    $$pre55 = ((($1)) + 8|0);\n    $$phi$trans$insert$pre$phiZZZZ2D = $$pre55;\n    label = 22;\n    break;\n   }\n   _png_chunk_benign_error($0,25120);\n   STACKTOP = sp;return;\n  }\n } while(0);\n if ((label|0) == 22) {\n  $44 = ((($1)) + 22|0);\n  HEAP16[$44>>1] = 0;\n  _png_chunk_benign_error($0,25120);\n  $$pre54 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D>>2]|0;\n  $$pre$phiZ2D = $$phi$trans$insert$pre$phiZZZZ2D;$46 = $$pre54;\n }\n $45 = $46 & 64;\n $47 = ($45|0)==(0);\n if (!($47)) {\n  _png_chunk_benign_error($0,25139);\n }\n $48 = HEAP32[$$pre$phiZ2D>>2]|0;\n $49 = $48 & 32;\n $50 = ($49|0)==(0);\n if ($50) {\n  STACKTOP = sp;return;\n }\n _png_chunk_benign_error($0,25158);\n STACKTOP = sp;return;\n}\nfunction _png_handle_bKGD($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp + 10|0;\n $4 = sp;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = $6 & 4;\n $10 = ($9|0)==(0);\n if ($10) {\n  $11 = ((($0)) + 435|0);\n  $12 = HEAP8[$11>>0]|0;\n  $13 = ($12<<24>>24)==(3);\n  $14 = $6 & 2;\n  $15 = ($14|0)==(0);\n  $or$cond = $15 & $13;\n  if (!($or$cond)) {\n   $16 = ($1|0)!=(0|0);\n   if ($16) {\n    $17 = ((($1)) + 8|0);\n    $18 = HEAP32[$17>>2]|0;\n    $19 = $18 & 32;\n    $20 = ($19|0)==(0);\n    if (!($20)) {\n     (_png_crc_finish($0,$2)|0);\n     _png_chunk_benign_error($0,24641);\n     STACKTOP = sp;return;\n    }\n   }\n   $21 = $12 & 2;\n   $22 = $21&255;\n   $23 = $22 << 1;\n   $24 = $23 | 2;\n   $$0 = $13 ? 1 : $24;\n   $25 = ($$0|0)==($2|0);\n   if (!($25)) {\n    (_png_crc_finish($0,$2)|0);\n    _png_chunk_benign_error($0,24651);\n    STACKTOP = sp;return;\n   }\n   _png_read_data($0,$3,$2);\n   _png_calculate_crc($0,$3,$2);\n   $26 = (_png_crc_finish($0,0)|0);\n   $27 = ($26|0)==(0);\n   if (!($27)) {\n    STACKTOP = sp;return;\n   }\n   $28 = HEAP8[$11>>0]|0;\n   $29 = ($28<<24>>24)==(3);\n   do {\n    if ($29) {\n     $30 = HEAP8[$3>>0]|0;\n     HEAP8[$4>>0] = $30;\n     do {\n      if ($16) {\n       $31 = ((($1)) + 20|0);\n       $32 = HEAP16[$31>>1]|0;\n       $33 = ($32<<16>>16)==(0);\n       if ($33) {\n        label = 18;\n       } else {\n        $34 = $32&65535;\n        $35 = $30&255;\n        $36 = ($35>>>0)<($34>>>0);\n        if ($36) {\n         $37 = ((($0)) + 416|0);\n         $38 = HEAP32[$37>>2]|0;\n         $39 = (($38) + (($35*3)|0)|0);\n         $40 = HEAP8[$39>>0]|0;\n         $41 = $40&255;\n         $42 = ((($4)) + 2|0);\n         HEAP16[$42>>1] = $41;\n         $43 = (((($38) + (($35*3)|0)|0)) + 1|0);\n         $44 = HEAP8[$43>>0]|0;\n         $45 = $44&255;\n         $46 = ((($4)) + 4|0);\n         HEAP16[$46>>1] = $45;\n         $47 = (((($38) + (($35*3)|0)|0)) + 2|0);\n         $48 = HEAP8[$47>>0]|0;\n         $49 = $48&255;\n         $50 = ((($4)) + 6|0);\n         HEAP16[$50>>1] = $49;\n         break;\n        }\n        _png_chunk_benign_error($0,25081);\n        STACKTOP = sp;return;\n       }\n      } else {\n       label = 18;\n      }\n     } while(0);\n     if ((label|0) == 18) {\n      $51 = ((($4)) + 6|0);\n      HEAP16[$51>>1] = 0;\n      $52 = ((($4)) + 4|0);\n      HEAP16[$52>>1] = 0;\n      $53 = ((($4)) + 2|0);\n      HEAP16[$53>>1] = 0;\n     }\n     $54 = ((($4)) + 8|0);\n     HEAP16[$54>>1] = 0;\n    } else {\n     $55 = $28 & 2;\n     $56 = ($55<<24>>24)==(0);\n     HEAP8[$4>>0] = 0;\n     $57 = HEAP8[$3>>0]|0;\n     $58 = $57&255;\n     $59 = $58 << 8;\n     $60 = ((($3)) + 1|0);\n     $61 = HEAP8[$60>>0]|0;\n     $62 = $61&255;\n     $63 = $59 | $62;\n     $64 = $63&65535;\n     if ($56) {\n      $65 = ((($4)) + 8|0);\n      HEAP16[$65>>1] = $64;\n      $66 = ((($4)) + 6|0);\n      HEAP16[$66>>1] = $64;\n      $67 = ((($4)) + 4|0);\n      HEAP16[$67>>1] = $64;\n      $68 = ((($4)) + 2|0);\n      HEAP16[$68>>1] = $64;\n      break;\n     } else {\n      $69 = ((($4)) + 2|0);\n      HEAP16[$69>>1] = $64;\n      $70 = ((($3)) + 2|0);\n      $71 = HEAP8[$70>>0]|0;\n      $72 = $71&255;\n      $73 = $72 << 8;\n      $74 = ((($3)) + 3|0);\n      $75 = HEAP8[$74>>0]|0;\n      $76 = $75&255;\n      $77 = $73 | $76;\n      $78 = $77&65535;\n      $79 = ((($4)) + 4|0);\n      HEAP16[$79>>1] = $78;\n      $80 = ((($3)) + 4|0);\n      $81 = HEAP8[$80>>0]|0;\n      $82 = $81&255;\n      $83 = $82 << 8;\n      $84 = ((($3)) + 5|0);\n      $85 = HEAP8[$84>>0]|0;\n      $86 = $85&255;\n      $87 = $83 | $86;\n      $88 = $87&65535;\n      $89 = ((($4)) + 6|0);\n      HEAP16[$89>>1] = $88;\n      $90 = ((($4)) + 8|0);\n      HEAP16[$90>>1] = 0;\n      break;\n     }\n    }\n   } while(0);\n   _png_set_bKGD($0,$1,$4);\n   STACKTOP = sp;return;\n  }\n }\n (_png_crc_finish($0,$2)|0);\n _png_chunk_benign_error($0,24628);\n STACKTOP = sp;return;\n}\nfunction _png_handle_cHRM($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $$0$i32 = 0, $$0$i33 = 0, $$0$i34 = 0, $$0$i35 = 0, $$0$i36 = 0, $$0$i37 = 0, $$0$i38 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;\n var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;\n var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;\n var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;\n var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;\n var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;\n var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;\n var $or$cond = 0, $or$cond22 = 0, $or$cond24 = 0, $or$cond26 = 0, $or$cond28 = 0, $or$cond30 = 0, $or$cond31 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $3 = sp + 32|0;\n $4 = sp;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = $6 & 6;\n $10 = ($9|0)==(0);\n if (!($10)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $11 = ($2|0)==(32);\n if (!($11)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,32);\n _png_calculate_crc($0,$3,32);\n $12 = (_png_crc_finish($0,0)|0);\n $13 = ($12|0)==(0);\n if (!($13)) {\n  STACKTOP = sp;return;\n }\n $14 = HEAP8[$3>>0]|0;\n $15 = $14&255;\n $16 = $15 << 24;\n $17 = ((($3)) + 1|0);\n $18 = HEAP8[$17>>0]|0;\n $19 = $18&255;\n $20 = $19 << 16;\n $21 = $20 | $16;\n $22 = ((($3)) + 2|0);\n $23 = HEAP8[$22>>0]|0;\n $24 = $23&255;\n $25 = $24 << 8;\n $26 = $21 | $25;\n $27 = ((($3)) + 3|0);\n $28 = HEAP8[$27>>0]|0;\n $29 = $28&255;\n $30 = $26 | $29;\n $31 = ($30|0)>(-1);\n $$0$i = $31 ? $30 : -1;\n $32 = ((($4)) + 24|0);\n HEAP32[$32>>2] = $$0$i;\n $33 = ((($3)) + 4|0);\n $34 = HEAP8[$33>>0]|0;\n $35 = $34&255;\n $36 = $35 << 24;\n $37 = ((($3)) + 5|0);\n $38 = HEAP8[$37>>0]|0;\n $39 = $38&255;\n $40 = $39 << 16;\n $41 = $40 | $36;\n $42 = ((($3)) + 6|0);\n $43 = HEAP8[$42>>0]|0;\n $44 = $43&255;\n $45 = $44 << 8;\n $46 = $41 | $45;\n $47 = ((($3)) + 7|0);\n $48 = HEAP8[$47>>0]|0;\n $49 = $48&255;\n $50 = $46 | $49;\n $51 = ($50|0)>(-1);\n $$0$i32 = $51 ? $50 : -1;\n $52 = ((($4)) + 28|0);\n HEAP32[$52>>2] = $$0$i32;\n $53 = ((($3)) + 8|0);\n $54 = HEAP8[$53>>0]|0;\n $55 = $54&255;\n $56 = $55 << 24;\n $57 = ((($3)) + 9|0);\n $58 = HEAP8[$57>>0]|0;\n $59 = $58&255;\n $60 = $59 << 16;\n $61 = $60 | $56;\n $62 = ((($3)) + 10|0);\n $63 = HEAP8[$62>>0]|0;\n $64 = $63&255;\n $65 = $64 << 8;\n $66 = $61 | $65;\n $67 = ((($3)) + 11|0);\n $68 = HEAP8[$67>>0]|0;\n $69 = $68&255;\n $70 = $66 | $69;\n $71 = ($70|0)>(-1);\n $$0$i38 = $71 ? $70 : -1;\n HEAP32[$4>>2] = $$0$i38;\n $72 = ((($3)) + 12|0);\n $73 = HEAP8[$72>>0]|0;\n $74 = $73&255;\n $75 = $74 << 24;\n $76 = ((($3)) + 13|0);\n $77 = HEAP8[$76>>0]|0;\n $78 = $77&255;\n $79 = $78 << 16;\n $80 = $79 | $75;\n $81 = ((($3)) + 14|0);\n $82 = HEAP8[$81>>0]|0;\n $83 = $82&255;\n $84 = $83 << 8;\n $85 = $80 | $84;\n $86 = ((($3)) + 15|0);\n $87 = HEAP8[$86>>0]|0;\n $88 = $87&255;\n $89 = $85 | $88;\n $90 = ($89|0)>(-1);\n $$0$i37 = $90 ? $89 : -1;\n $91 = ((($4)) + 4|0);\n HEAP32[$91>>2] = $$0$i37;\n $92 = ((($3)) + 16|0);\n $93 = HEAP8[$92>>0]|0;\n $94 = $93&255;\n $95 = $94 << 24;\n $96 = ((($3)) + 17|0);\n $97 = HEAP8[$96>>0]|0;\n $98 = $97&255;\n $99 = $98 << 16;\n $100 = $99 | $95;\n $101 = ((($3)) + 18|0);\n $102 = HEAP8[$101>>0]|0;\n $103 = $102&255;\n $104 = $103 << 8;\n $105 = $100 | $104;\n $106 = ((($3)) + 19|0);\n $107 = HEAP8[$106>>0]|0;\n $108 = $107&255;\n $109 = $105 | $108;\n $110 = ($109|0)>(-1);\n $$0$i36 = $110 ? $109 : -1;\n $111 = ((($4)) + 8|0);\n HEAP32[$111>>2] = $$0$i36;\n $112 = ((($3)) + 20|0);\n $113 = HEAP8[$112>>0]|0;\n $114 = $113&255;\n $115 = $114 << 24;\n $116 = ((($3)) + 21|0);\n $117 = HEAP8[$116>>0]|0;\n $118 = $117&255;\n $119 = $118 << 16;\n $120 = $119 | $115;\n $121 = ((($3)) + 22|0);\n $122 = HEAP8[$121>>0]|0;\n $123 = $122&255;\n $124 = $123 << 8;\n $125 = $120 | $124;\n $126 = ((($3)) + 23|0);\n $127 = HEAP8[$126>>0]|0;\n $128 = $127&255;\n $129 = $125 | $128;\n $130 = ($129|0)>(-1);\n $$0$i35 = $130 ? $129 : -1;\n $131 = ((($4)) + 12|0);\n HEAP32[$131>>2] = $$0$i35;\n $132 = ((($3)) + 24|0);\n $133 = HEAP8[$132>>0]|0;\n $134 = $133&255;\n $135 = $134 << 24;\n $136 = ((($3)) + 25|0);\n $137 = HEAP8[$136>>0]|0;\n $138 = $137&255;\n $139 = $138 << 16;\n $140 = $139 | $135;\n $141 = ((($3)) + 26|0);\n $142 = HEAP8[$141>>0]|0;\n $143 = $142&255;\n $144 = $143 << 8;\n $145 = $140 | $144;\n $146 = ((($3)) + 27|0);\n $147 = HEAP8[$146>>0]|0;\n $148 = $147&255;\n $149 = $145 | $148;\n $150 = ($149|0)>(-1);\n $$0$i34 = $150 ? $149 : -1;\n $151 = ((($4)) + 16|0);\n HEAP32[$151>>2] = $$0$i34;\n $152 = ((($3)) + 28|0);\n $153 = HEAP8[$152>>0]|0;\n $154 = $153&255;\n $155 = $154 << 24;\n $156 = ((($3)) + 29|0);\n $157 = HEAP8[$156>>0]|0;\n $158 = $157&255;\n $159 = $158 << 16;\n $160 = $159 | $155;\n $161 = ((($3)) + 30|0);\n $162 = HEAP8[$161>>0]|0;\n $163 = $162&255;\n $164 = $163 << 8;\n $165 = $160 | $164;\n $166 = ((($3)) + 31|0);\n $167 = HEAP8[$166>>0]|0;\n $168 = $167&255;\n $169 = $165 | $168;\n $170 = ($169|0)>(-1);\n $$0$i33 = $170 ? $169 : -1;\n $171 = ((($4)) + 20|0);\n HEAP32[$171>>2] = $$0$i33;\n $172 = HEAP32[$32>>2]|0;\n $173 = ($172|0)==(-1);\n $174 = HEAP32[$52>>2]|0;\n $175 = ($174|0)==(-1);\n $or$cond = $173 | $175;\n $176 = HEAP32[$4>>2]|0;\n $177 = ($176|0)==(-1);\n $or$cond22 = $or$cond | $177;\n $178 = ($$0$i37|0)==(-1);\n $or$cond24 = $or$cond22 | $178;\n $179 = ($$0$i36|0)==(-1);\n $or$cond26 = $or$cond24 | $179;\n $180 = ($$0$i35|0)==(-1);\n $or$cond28 = $or$cond26 | $180;\n $181 = ($$0$i34|0)==(-1);\n $or$cond30 = $or$cond28 | $181;\n $182 = ($$0$i33|0)==(-1);\n $or$cond31 = $182 | $or$cond30;\n if ($or$cond31) {\n  _png_chunk_benign_error($0,25066);\n  STACKTOP = sp;return;\n }\n $183 = ((($0)) + 824|0);\n $184 = ((($0)) + 898|0);\n $185 = HEAP16[$184>>1]|0;\n $186 = $185&65535;\n $187 = $186 & 32768;\n $188 = ($187|0)==(0);\n if (!($188)) {\n  STACKTOP = sp;return;\n }\n $189 = $186 & 16;\n $190 = ($189|0)==(0);\n if ($190) {\n  $193 = $186 | 16;\n  $194 = $193&65535;\n  HEAP16[$184>>1] = $194;\n  (_png_colorspace_set_chromaticities($0,$183,$4,1)|0);\n  _png_colorspace_sync($0,$1);\n  STACKTOP = sp;return;\n } else {\n  $191 = $186 | 32768;\n  $192 = $191&65535;\n  HEAP16[$184>>1] = $192;\n  _png_colorspace_sync($0,$1);\n  _png_chunk_benign_error($0,24641);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_handle_gAMA($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if ($7) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $8 = $5 & 6;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $10 = ($2|0)==(4);\n if (!($10)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,4);\n _png_calculate_crc($0,$3,4);\n $11 = (_png_crc_finish($0,0)|0);\n $12 = ($11|0)==(0);\n if (!($12)) {\n  STACKTOP = sp;return;\n }\n $13 = HEAP8[$3>>0]|0;\n $14 = $13&255;\n $15 = $14 << 24;\n $16 = ((($3)) + 1|0);\n $17 = HEAP8[$16>>0]|0;\n $18 = $17&255;\n $19 = $18 << 16;\n $20 = $19 | $15;\n $21 = ((($3)) + 2|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $23 << 8;\n $25 = $20 | $24;\n $26 = ((($3)) + 3|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = $27&255;\n $29 = $25 | $28;\n $30 = ($29|0)>(-1);\n $$0$i = $30 ? $29 : -1;\n $31 = ((($0)) + 824|0);\n _png_colorspace_set_gamma($0,$31,$$0$i);\n _png_colorspace_sync($0,$1);\n STACKTOP = sp;return;\n}\nfunction _png_handle_hIST($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$031 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond33 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 528|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(528|0);\n $3 = sp;\n $4 = sp + 512|0;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = $6 & 6;\n $10 = ($9|0)==(2);\n if (!($10)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $11 = ($1|0)==(0|0);\n if (!($11)) {\n  $12 = ((($1)) + 8|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = $13 & 64;\n  $15 = ($14|0)==(0);\n  if (!($15)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $16 = $2 >>> 1;\n $17 = ((($0)) + 420|0);\n $18 = HEAP16[$17>>1]|0;\n $19 = $18&65535;\n $20 = ($16|0)!=($19|0);\n $21 = ($2>>>0)>(513);\n $or$cond = $21 | $20;\n if ($or$cond) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n $22 = ($16|0)==(0);\n if (!($22)) {\n  $23 = ((($4)) + 1|0);\n  $$031 = 0;\n  while(1) {\n   _png_read_data($0,$4,2);\n   _png_calculate_crc($0,$4,2);\n   $24 = HEAP8[$4>>0]|0;\n   $25 = $24&255;\n   $26 = $25 << 8;\n   $27 = HEAP8[$23>>0]|0;\n   $28 = $27&255;\n   $29 = $26 | $28;\n   $30 = $29&65535;\n   $31 = (($3) + ($$031<<1)|0);\n   HEAP16[$31>>1] = $30;\n   $32 = (($$031) + 1)|0;\n   $exitcond33 = ($32|0)==($16|0);\n   if ($exitcond33) {\n    break;\n   } else {\n    $$031 = $32;\n   }\n  }\n }\n $33 = (_png_crc_finish($0,0)|0);\n $34 = ($33|0)==(0);\n if (!($34)) {\n  STACKTOP = sp;return;\n }\n _png_set_hIST($0,$1,$3);\n STACKTOP = sp;return;\n}\nfunction _png_handle_oFFs($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if ($7) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $8 = $5 & 4;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $10 = ($1|0)==(0|0);\n if (!($10)) {\n  $11 = ((($1)) + 8|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = $12 & 256;\n  $14 = ($13|0)==(0);\n  if (!($14)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $15 = ($2|0)==(9);\n if (!($15)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,9);\n _png_calculate_crc($0,$3,9);\n $16 = (_png_crc_finish($0,0)|0);\n $17 = ($16|0)==(0);\n if (!($17)) {\n  STACKTOP = sp;return;\n }\n $18 = HEAP8[$3>>0]|0;\n $19 = $18&255;\n $20 = $19 << 24;\n $21 = ((($3)) + 1|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $23 << 16;\n $25 = $24 | $20;\n $26 = ((($3)) + 2|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = $27&255;\n $29 = $28 << 8;\n $30 = $25 | $29;\n $31 = ((($3)) + 3|0);\n $32 = HEAP8[$31>>0]|0;\n $33 = $32&255;\n $34 = $30 | $33;\n $35 = ((($3)) + 4|0);\n $36 = HEAP8[$35>>0]|0;\n $37 = $36&255;\n $38 = $37 << 24;\n $39 = ((($3)) + 5|0);\n $40 = HEAP8[$39>>0]|0;\n $41 = $40&255;\n $42 = $41 << 16;\n $43 = $42 | $38;\n $44 = ((($3)) + 6|0);\n $45 = HEAP8[$44>>0]|0;\n $46 = $45&255;\n $47 = $46 << 8;\n $48 = $43 | $47;\n $49 = ((($3)) + 7|0);\n $50 = HEAP8[$49>>0]|0;\n $51 = $50&255;\n $52 = $48 | $51;\n $53 = ((($3)) + 8|0);\n $54 = HEAP8[$53>>0]|0;\n $55 = $54&255;\n _png_set_oFFs($0,$1,$34,$52,$55);\n STACKTOP = sp;return;\n}\nfunction _png_handle_pCAL($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0101 = 0, $$0114 = 0, $$1 = 0, $$1$i$ph = 0, $$2113 = 0, $$3111 = 0, $$cmp = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;\n var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;\n var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;\n var $95 = 0, $or$cond = 0, $or$cond104 = 0, $or$cond107 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 208|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 1;\n $6 = ($5|0)==(0);\n if ($6) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $7 = $4 & 4;\n $8 = ($7|0)==(0);\n if (!($8)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  return;\n }\n $9 = ($1|0)==(0|0);\n if (!($9)) {\n  $10 = ((($1)) + 8|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = $11 & 1024;\n  $13 = ($12|0)==(0);\n  if (!($13)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   return;\n  }\n }\n $14 = (($2) + 1)|0;\n $15 = ((($0)) + 788|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)==(0|0);\n if ($17) {\n  label = 11;\n } else {\n  $18 = ((($0)) + 792|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = ($19>>>0)<($14>>>0);\n  if ($20) {\n   HEAP32[$15>>2] = 0;\n   HEAP32[$18>>2] = 0;\n   _png_free($0,$16);\n   label = 11;\n  } else {\n   $$1$i$ph = $16;\n  }\n }\n do {\n  if ((label|0) == 11) {\n   $21 = (_png_malloc_base($0,$14)|0);\n   $22 = ($21|0)==(0|0);\n   if (!($22)) {\n    HEAP32[$15>>2] = $21;\n    $23 = ((($0)) + 792|0);\n    HEAP32[$23>>2] = $14;\n    $$1$i$ph = $21;\n    break;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24448);\n   return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $24 = (_png_crc_finish($0,0)|0);\n $25 = ($24|0)==(0);\n if (!($25)) {\n  return;\n }\n $26 = (($$1$i$ph) + ($2)|0);\n HEAP8[$26>>0] = 0;\n $$0101 = $$1$i$ph;\n while(1) {\n  $27 = HEAP8[$$0101>>0]|0;\n  $28 = ($27<<24>>24)==(0);\n  $29 = ((($$0101)) + 1|0);\n  if ($28) {\n   break;\n  } else {\n   $$0101 = $29;\n  }\n }\n $30 = ((($$0101)) + 12|0);\n $31 = ($26>>>0)>($30>>>0);\n if (!($31)) {\n  _png_chunk_benign_error($0,24651);\n  return;\n }\n $32 = HEAP8[$29>>0]|0;\n $33 = $32&255;\n $34 = $33 << 24;\n $35 = ((($$0101)) + 2|0);\n $36 = HEAP8[$35>>0]|0;\n $37 = $36&255;\n $38 = $37 << 16;\n $39 = $38 | $34;\n $40 = ((($$0101)) + 3|0);\n $41 = HEAP8[$40>>0]|0;\n $42 = $41&255;\n $43 = $42 << 8;\n $44 = $39 | $43;\n $45 = ((($$0101)) + 4|0);\n $46 = HEAP8[$45>>0]|0;\n $47 = $46&255;\n $48 = $44 | $47;\n $49 = ((($$0101)) + 5|0);\n $50 = HEAP8[$49>>0]|0;\n $51 = $50&255;\n $52 = $51 << 24;\n $53 = ((($$0101)) + 6|0);\n $54 = HEAP8[$53>>0]|0;\n $55 = $54&255;\n $56 = $55 << 16;\n $57 = $56 | $52;\n $58 = ((($$0101)) + 7|0);\n $59 = HEAP8[$58>>0]|0;\n $60 = $59&255;\n $61 = $60 << 8;\n $62 = $57 | $61;\n $63 = ((($$0101)) + 8|0);\n $64 = HEAP8[$63>>0]|0;\n $65 = $64&255;\n $66 = $62 | $65;\n $67 = ((($$0101)) + 9|0);\n $68 = HEAP8[$67>>0]|0;\n $69 = ((($$0101)) + 10|0);\n $70 = HEAP8[$69>>0]|0;\n $71 = ((($$0101)) + 11|0);\n $72 = $68&255;\n $73 = ($68<<24>>24)!=(0);\n $74 = ($70<<24>>24)==(2);\n $or$cond = $73 | $74;\n if ($or$cond) {\n  $75 = ($70<<24>>24)==(3);\n  $$off = (($68) + -1)<<24>>24;\n  $$cmp = ($$off&255)>(1);\n  $or$cond107 = $$cmp | $75;\n  if ($or$cond107) {\n   $76 = ($68<<24>>24)!=(3);\n   $77 = ($70<<24>>24)==(4);\n   $or$cond104 = $76 | $77;\n   if ($or$cond104) {\n    $78 = ($68&255)>(3);\n    if ($78) {\n     _png_chunk_benign_error($0,25026);\n     $$1 = $71;\n    } else {\n     $$1 = $71;\n    }\n    while(1) {\n     $79 = HEAP8[$$1>>0]|0;\n     $80 = ($79<<24>>24)==(0);\n     $81 = ((($$1)) + 1|0);\n     if ($80) {\n      break;\n     } else {\n      $$1 = $81;\n     }\n    }\n    $82 = $70&255;\n    $83 = $82 << 2;\n    $84 = (_png_malloc_warn($0,$83)|0);\n    $85 = ($84|0)==(0|0);\n    if ($85) {\n     _png_chunk_benign_error($0,24448);\n     return;\n    }\n    $86 = ($70<<24>>24)==(0);\n    L46: do {\n     if (!($86)) {\n      $$0114 = 0;$$2113 = $$1;\n      L47: while(1) {\n       $87 = ((($$2113)) + 1|0);\n       $88 = (($84) + ($$0114<<2)|0);\n       HEAP32[$88>>2] = $87;\n       $89 = ($87>>>0)>($26>>>0);\n       if ($89) {\n        break;\n       } else {\n        $$3111 = $87;\n       }\n       while(1) {\n        $90 = HEAP8[$$3111>>0]|0;\n        $91 = ($90<<24>>24)==(0);\n        if ($91) {\n         break;\n        }\n        $92 = ((($$3111)) + 1|0);\n        $93 = ($92>>>0)>($26>>>0);\n        if ($93) {\n         break L47;\n        } else {\n         $$3111 = $92;\n        }\n       }\n       $94 = (($$0114) + 1)|0;\n       $95 = ($94|0)<($82|0);\n       if ($95) {\n        $$0114 = $94;$$2113 = $$3111;\n       } else {\n        break L46;\n       }\n      }\n      _png_free($0,$84);\n      _png_chunk_benign_error($0,25053);\n      return;\n     }\n    } while(0);\n    _png_set_pCAL($0,$1,$$1$i$ph,$48,$66,$72,$82,$71,$84);\n    _png_free($0,$84);\n    return;\n   }\n  }\n }\n _png_chunk_benign_error($0,25002);\n return;\n}\nfunction _png_handle_sCAL($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$1$i$ph = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $switch = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp + 4|0;\n $4 = sp;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = $6 & 4;\n $10 = ($9|0)==(0);\n if (!($10)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $11 = ($1|0)==(0|0);\n if (!($11)) {\n  $12 = ((($1)) + 8|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = $13 & 16384;\n  $15 = ($14|0)==(0);\n  if (!($15)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $16 = ($2>>>0)<(4);\n if ($16) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n $17 = (($2) + 1)|0;\n $18 = ((($0)) + 788|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($19|0)==(0|0);\n if ($20) {\n  label = 13;\n } else {\n  $21 = ((($0)) + 792|0);\n  $22 = HEAP32[$21>>2]|0;\n  $23 = ($22>>>0)<($17>>>0);\n  if ($23) {\n   HEAP32[$18>>2] = 0;\n   HEAP32[$21>>2] = 0;\n   _png_free($0,$19);\n   label = 13;\n  } else {\n   $$1$i$ph = $19;\n  }\n }\n do {\n  if ((label|0) == 13) {\n   $24 = (_png_malloc_base($0,$17)|0);\n   $25 = ($24|0)==(0|0);\n   if (!($25)) {\n    HEAP32[$18>>2] = $24;\n    $26 = ((($0)) + 792|0);\n    HEAP32[$26>>2] = $17;\n    $$1$i$ph = $24;\n    break;\n   }\n   _png_chunk_benign_error($0,24448);\n   (_png_crc_finish($0,$2)|0);\n   STACKTOP = sp;return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $27 = (($$1$i$ph) + ($2)|0);\n HEAP8[$27>>0] = 0;\n $28 = (_png_crc_finish($0,0)|0);\n $29 = ($28|0)==(0);\n if (!($29)) {\n  STACKTOP = sp;return;\n }\n $30 = HEAP8[$$1$i$ph>>0]|0;\n $$off = (($30) + -1)<<24>>24;\n $switch = ($$off&255)<(2);\n if (!($switch)) {\n  _png_chunk_benign_error($0,24915);\n  STACKTOP = sp;return;\n }\n HEAP32[$3>>2] = 1;\n HEAP32[$4>>2] = 0;\n $31 = (_png_check_fp_number($$1$i$ph,$2,$4,$3)|0);\n $32 = ($31|0)==(0);\n if (!($32)) {\n  $33 = HEAP32[$3>>2]|0;\n  $34 = ($33>>>0)<($2>>>0);\n  if ($34) {\n   $35 = (($33) + 1)|0;\n   HEAP32[$3>>2] = $35;\n   $36 = (($$1$i$ph) + ($33)|0);\n   $37 = HEAP8[$36>>0]|0;\n   $38 = ($37<<24>>24)==(0);\n   if ($38) {\n    $39 = HEAP32[$4>>2]|0;\n    $40 = $39 & 392;\n    $41 = ($40|0)==(264);\n    if (!($41)) {\n     _png_chunk_benign_error($0,24945);\n     STACKTOP = sp;return;\n    }\n    HEAP32[$4>>2] = 0;\n    $42 = (_png_check_fp_number($$1$i$ph,$2,$4,$3)|0);\n    $43 = ($42|0)!=(0);\n    $44 = HEAP32[$3>>2]|0;\n    $45 = ($44|0)==($2|0);\n    $or$cond = $43 & $45;\n    if (!($or$cond)) {\n     _png_chunk_benign_error($0,24964);\n     STACKTOP = sp;return;\n    }\n    $46 = HEAP32[$4>>2]|0;\n    $47 = $46 & 392;\n    $48 = ($47|0)==(264);\n    if ($48) {\n     $49 = HEAP8[$$1$i$ph>>0]|0;\n     $50 = $49&255;\n     $51 = ((($$1$i$ph)) + 1|0);\n     $52 = (($$1$i$ph) + ($35)|0);\n     _png_set_sCAL_s($0,$1,$50,$51,$52);\n     STACKTOP = sp;return;\n    } else {\n     _png_chunk_benign_error($0,24982);\n     STACKTOP = sp;return;\n    }\n   }\n  }\n }\n _png_chunk_benign_error($0,24928);\n STACKTOP = sp;return;\n}\nfunction _png_handle_pHYs($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;\n var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if ($7) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $8 = $5 & 4;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $10 = ($1|0)==(0|0);\n if (!($10)) {\n  $11 = ((($1)) + 8|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = $12 & 128;\n  $14 = ($13|0)==(0);\n  if (!($14)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $15 = ($2|0)==(9);\n if (!($15)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,9);\n _png_calculate_crc($0,$3,9);\n $16 = (_png_crc_finish($0,0)|0);\n $17 = ($16|0)==(0);\n if (!($17)) {\n  STACKTOP = sp;return;\n }\n $18 = HEAP8[$3>>0]|0;\n $19 = $18&255;\n $20 = $19 << 24;\n $21 = ((($3)) + 1|0);\n $22 = HEAP8[$21>>0]|0;\n $23 = $22&255;\n $24 = $23 << 16;\n $25 = $24 | $20;\n $26 = ((($3)) + 2|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = $27&255;\n $29 = $28 << 8;\n $30 = $25 | $29;\n $31 = ((($3)) + 3|0);\n $32 = HEAP8[$31>>0]|0;\n $33 = $32&255;\n $34 = $30 | $33;\n $35 = ((($3)) + 4|0);\n $36 = HEAP8[$35>>0]|0;\n $37 = $36&255;\n $38 = $37 << 24;\n $39 = ((($3)) + 5|0);\n $40 = HEAP8[$39>>0]|0;\n $41 = $40&255;\n $42 = $41 << 16;\n $43 = $42 | $38;\n $44 = ((($3)) + 6|0);\n $45 = HEAP8[$44>>0]|0;\n $46 = $45&255;\n $47 = $46 << 8;\n $48 = $43 | $47;\n $49 = ((($3)) + 7|0);\n $50 = HEAP8[$49>>0]|0;\n $51 = $50&255;\n $52 = $48 | $51;\n $53 = ((($3)) + 8|0);\n $54 = HEAP8[$53>>0]|0;\n $55 = $54&255;\n _png_set_pHYs($0,$1,$34,$52,$55);\n STACKTOP = sp;return;\n}\nfunction _png_handle_sBIT($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$04548 = 0, $$046 = 0, $$sink = 0, $$sink49 = 0, $$sink50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if ($7) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $8 = $5 & 6;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $10 = ($1|0)==(0|0);\n if (!($10)) {\n  $11 = ((($1)) + 8|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = $12 & 2;\n  $14 = ($13|0)==(0);\n  if (!($14)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $15 = ((($0)) + 435|0);\n $16 = HEAP8[$15>>0]|0;\n $17 = ($16<<24>>24)==(3);\n if ($17) {\n  $$0 = 8;$$046 = 3;\n } else {\n  $18 = ((($0)) + 439|0);\n  $19 = HEAP8[$18>>0]|0;\n  $20 = $19&255;\n  $21 = ((($0)) + 436|0);\n  $22 = HEAP8[$21>>0]|0;\n  $$0 = $22;$$046 = $20;\n }\n $23 = ($$046|0)!=($2|0);\n $24 = ($2>>>0)>(4);\n $or$cond = $24 | $23;\n if ($or$cond) {\n  _png_chunk_benign_error($0,24651);\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n }\n $25 = ((($3)) + 3|0);\n $26 = ((($3)) + 2|0);\n $27 = ((($3)) + 1|0);\n _memset(($3|0),($$0|0),4)|0;\n _png_read_data($0,$3,$2);\n _png_calculate_crc($0,$3,$2);\n $28 = (_png_crc_finish($0,0)|0);\n $29 = ($28|0)==(0);\n if (!($29)) {\n  STACKTOP = sp;return;\n }\n $30 = ($2|0)==(0);\n L23: do {\n  if (!($30)) {\n   $$04548 = 0;\n   while(1) {\n    $33 = (($3) + ($$04548)|0);\n    $34 = HEAP8[$33>>0]|0;\n    $35 = (($34) + -1)<<24>>24;\n    $36 = ($35&255)<($$0&255);\n    $31 = (($$04548) + 1)|0;\n    if (!($36)) {\n     break;\n    }\n    $32 = ($31>>>0)<($2>>>0);\n    if ($32) {\n     $$04548 = $31;\n    } else {\n     break L23;\n    }\n   }\n   _png_chunk_benign_error($0,24651);\n   STACKTOP = sp;return;\n  }\n } while(0);\n $37 = HEAP8[$15>>0]|0;\n $38 = $37 & 2;\n $39 = ($38<<24>>24)==(0);\n $40 = HEAP8[$3>>0]|0;\n $41 = ((($0)) + 516|0);\n if ($39) {\n  $45 = ((($0)) + 519|0);\n  HEAP8[$45>>0] = $40;\n  $46 = HEAP8[$27>>0]|0;\n  $$sink = $46;$$sink49 = $40;$$sink50 = $40;\n } else {\n  $42 = HEAP8[$27>>0]|0;\n  $43 = HEAP8[$26>>0]|0;\n  $44 = HEAP8[$25>>0]|0;\n  $$sink = $44;$$sink49 = $43;$$sink50 = $42;\n }\n HEAP8[$41>>0] = $40;\n $47 = ((($0)) + 517|0);\n HEAP8[$47>>0] = $$sink50;\n $48 = ((($0)) + 518|0);\n HEAP8[$48>>0] = $$sink49;\n $49 = ((($0)) + 520|0);\n HEAP8[$49>>0] = $$sink;\n _png_set_sBIT($0,$1,$41);\n STACKTOP = sp;return;\n}\nfunction _png_handle_sRGB($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1;\n $7 = ($6|0)==(0);\n if ($7) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $8 = $5 & 6;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $10 = ($2|0)==(1);\n if (!($10)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,1);\n _png_calculate_crc($0,$3,1);\n $11 = (_png_crc_finish($0,0)|0);\n $12 = ($11|0)==(0);\n if (!($12)) {\n  STACKTOP = sp;return;\n }\n $13 = ((($0)) + 824|0);\n $14 = ((($0)) + 898|0);\n $15 = HEAP16[$14>>1]|0;\n $16 = $15&65535;\n $17 = $16 & 32768;\n $18 = ($17|0)==(0);\n if (!($18)) {\n  STACKTOP = sp;return;\n }\n $19 = $16 & 4;\n $20 = ($19|0)==(0);\n if ($20) {\n  $23 = HEAP8[$3>>0]|0;\n  $24 = $23&255;\n  (_png_colorspace_set_sRGB($0,$13,$24)|0);\n  _png_colorspace_sync($0,$1);\n  STACKTOP = sp;return;\n } else {\n  $21 = $16 | 32768;\n  $22 = $21&65535;\n  HEAP16[$14>>1] = $22;\n  _png_colorspace_sync($0,$1);\n  _png_chunk_benign_error($0,24897);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_handle_iCCP($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0125$lcssa = 0, $$0125$off = 0, $$0125142 = 0, $$1$i$ph = 0, $$2123 = 0, $$4116 = 0, $$5 = 0, $$5117 = 0, $$6 = 0, $$7$ph = 0, $$9138 = 0, $$9139 = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;\n var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1248|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1248|0);\n $3 = sp + 4|0;\n $4 = sp + 1164|0;\n $5 = sp + 1032|0;\n $6 = sp + 8|0;\n $7 = sp;\n HEAP32[$3>>2] = $2;\n $8 = ((($0)) + 208|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = $9 & 1;\n $11 = ($10|0)==(0);\n if ($11) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $12 = $9 & 6;\n $13 = ($12|0)==(0);\n if (!($13)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $14 = ($2>>>0)<(9);\n if ($14) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24864);\n  STACKTOP = sp;return;\n }\n $15 = ((($0)) + 824|0);\n $16 = ((($0)) + 898|0);\n $17 = HEAP16[$16>>1]|0;\n $18 = $17&65535;\n $19 = $18 & 32768;\n $20 = ($19|0)==(0);\n if (!($20)) {\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n }\n $21 = $18 & 4;\n $22 = ($21|0)==(0);\n L16: do {\n  if ($22) {\n   $23 = ($2>>>0)<(81);\n   $$ = $23 ? $2 : 81;\n   _png_read_data($0,$4,$$);\n   _png_calculate_crc($0,$4,$$);\n   $24 = (($2) - ($$))|0;\n   HEAP32[$3>>2] = $24;\n   $25 = ($$|0)==(0);\n   do {\n    if ($25) {\n     $$7$ph = 24493;\n    } else {\n     $$0125142 = 0;\n     while(1) {\n      $26 = (($4) + ($$0125142)|0);\n      $27 = HEAP8[$26>>0]|0;\n      $28 = ($27<<24>>24)==(0);\n      if ($28) {\n       $$0125$lcssa = $$0125142;\n       break;\n      }\n      $29 = (($$0125142) + 1)|0;\n      $30 = ($29>>>0)<(80);\n      $31 = ($29>>>0)<($$>>>0);\n      $or$cond = $30 & $31;\n      if ($or$cond) {\n       $$0125142 = $29;\n      } else {\n       $$0125$lcssa = $29;\n       break;\n      }\n     }\n     $$0125$off = (($$0125$lcssa) + -1)|0;\n     $32 = ($$0125$off>>>0)<(79);\n     if ($32) {\n      $33 = (($$0125$lcssa) + 1)|0;\n      $34 = ($33>>>0)<($$>>>0);\n      if ($34) {\n       $35 = (($4) + ($33)|0);\n       $36 = HEAP8[$35>>0]|0;\n       $37 = ($36<<24>>24)==(0);\n       if ($37) {\n        $38 = (($$0125$lcssa) + 2)|0;\n        $39 = (_png_inflate_claim($0,1766015824)|0);\n        $40 = ($39|0)==(0);\n        if (!($40)) {\n         $139 = ((($0)) + 248|0);\n         $140 = HEAP32[$139>>2]|0;\n         $$7$ph = $140;\n         break;\n        }\n        $41 = (($$) - ($38))|0;\n        HEAP32[$7>>2] = 132;\n        $42 = (($4) + ($38)|0);\n        $43 = ((($0)) + 224|0);\n        HEAP32[$43>>2] = $42;\n        $44 = ((($0)) + 228|0);\n        HEAP32[$44>>2] = $41;\n        _png_inflate_read($0,$6,$3,$5,$7,0);\n        $45 = HEAP32[$7>>2]|0;\n        $46 = ($45|0)==(0);\n        L29: do {\n         if ($46) {\n          $47 = HEAP8[$5>>0]|0;\n          $48 = $47&255;\n          $49 = $48 << 24;\n          $50 = ((($5)) + 1|0);\n          $51 = HEAP8[$50>>0]|0;\n          $52 = $51&255;\n          $53 = $52 << 16;\n          $54 = $53 | $49;\n          $55 = ((($5)) + 2|0);\n          $56 = HEAP8[$55>>0]|0;\n          $57 = $56&255;\n          $58 = $57 << 8;\n          $59 = $54 | $58;\n          $60 = ((($5)) + 3|0);\n          $61 = HEAP8[$60>>0]|0;\n          $62 = $61&255;\n          $63 = $59 | $62;\n          $64 = (_png_icc_check_length($0,$15,$4,$63)|0);\n          $65 = ($64|0)==(0);\n          if ($65) {\n           $$4116 = 0;$$5 = 0;\n           label = 39;\n          } else {\n           $66 = ((($0)) + 435|0);\n           $67 = HEAP8[$66>>0]|0;\n           $68 = $67&255;\n           $69 = (_png_icc_check_header($0,$15,$4,$63,$5,$68)|0);\n           $70 = ($69|0)==(0);\n           if ($70) {\n            $$4116 = 0;$$5 = 0;\n            label = 39;\n           } else {\n            $71 = ((($5)) + 128|0);\n            $72 = HEAP8[$71>>0]|0;\n            $73 = ((($5)) + 129|0);\n            $74 = HEAP8[$73>>0]|0;\n            $75 = ((($5)) + 130|0);\n            $76 = HEAP8[$75>>0]|0;\n            $77 = ((($5)) + 131|0);\n            $78 = HEAP8[$77>>0]|0;\n            $79 = ((($0)) + 788|0);\n            $80 = HEAP32[$79>>2]|0;\n            $81 = ($80|0)==(0|0);\n            if ($81) {\n             label = 23;\n            } else {\n             $82 = ((($0)) + 792|0);\n             $83 = HEAP32[$82>>2]|0;\n             $84 = ($83>>>0)<($63>>>0);\n             if ($84) {\n              HEAP32[$79>>2] = 0;\n              HEAP32[$82>>2] = 0;\n              _png_free($0,$80);\n              label = 23;\n             } else {\n              $$1$i$ph = $80;\n             }\n            }\n            if ((label|0) == 23) {\n             $85 = (_png_malloc_base($0,$63)|0);\n             $86 = ($85|0)==(0|0);\n             if ($86) {\n              $$4116 = 0;$$5 = 24448;\n              label = 39;\n              break;\n             }\n             HEAP32[$79>>2] = $85;\n             $87 = ((($0)) + 792|0);\n             HEAP32[$87>>2] = $63;\n             $$1$i$ph = $85;\n            }\n            $88 = $72&255;\n            $89 = $88 << 24;\n            $90 = $74&255;\n            $91 = $90 << 16;\n            $92 = $91 | $89;\n            $93 = $76&255;\n            $94 = $93 << 8;\n            $95 = $92 | $94;\n            $96 = $78&255;\n            $97 = $95 | $96;\n            _memcpy(($$1$i$ph|0),($5|0),132)|0;\n            $98 = ($97*12)|0;\n            HEAP32[$7>>2] = $98;\n            $99 = ((($$1$i$ph)) + 132|0);\n            _png_inflate_read($0,$6,$3,$99,$7,0);\n            $100 = HEAP32[$7>>2]|0;\n            $101 = ($100|0)==(0);\n            if (!($101)) {\n             $133 = ((($0)) + 248|0);\n             $134 = HEAP32[$133>>2]|0;\n             $$4116 = 0;$$5 = $134;\n             label = 39;\n             break;\n            }\n            $102 = (_png_icc_check_tag_table($0,$15,$4,$63,$$1$i$ph)|0);\n            $103 = ($102|0)==(0);\n            if ($103) {\n             $$4116 = 0;$$5 = 0;\n             label = 39;\n            } else {\n             $104 = (($63) + -132)|0;\n             $105 = (($104) - ($98))|0;\n             HEAP32[$7>>2] = $105;\n             $106 = (($99) + ($98)|0);\n             _png_inflate_read($0,$6,$3,$106,$7,1);\n             $107 = HEAP32[$3>>2]|0;\n             $108 = ($107|0)==(0);\n             if (!($108)) {\n              $109 = ((($0)) + 212|0);\n              $110 = HEAP32[$109>>2]|0;\n              $111 = $110 & 1048576;\n              $112 = ($111|0)==(0);\n              if ($112) {\n               $$4116 = 0;$$5 = 24523;\n               label = 39;\n               break;\n              }\n             }\n             $113 = HEAP32[$7>>2]|0;\n             $114 = ($113|0)==(0);\n             if (!($114)) {\n              $$4116 = 0;$$5 = 24462;\n              label = 39;\n              break;\n             }\n             if (!($108)) {\n              _png_chunk_warning($0,24523);\n             }\n             (_png_crc_finish($0,$107)|0);\n             $115 = ((($0)) + 272|0);\n             $116 = HEAP32[$115>>2]|0;\n             _png_icc_set_sRGB($0,$15,$$1$i$ph,$116);\n             $117 = ($1|0)==(0|0);\n             do {\n              if (!($117)) {\n               _png_free_data($0,$1,16,0);\n               $118 = (_png_malloc_base($0,$33)|0);\n               $119 = ((($1)) + 116|0);\n               HEAP32[$119>>2] = $118;\n               $120 = ($118|0)==(0|0);\n               if ($120) {\n                $129 = HEAP16[$16>>1]|0;\n                $130 = $129&65535;\n                $131 = $130 | 32768;\n                $132 = $131&65535;\n                HEAP16[$16>>1] = $132;\n                _png_colorspace_sync($0,$1);\n                $$4116 = 1;$$5 = 24448;\n                label = 39;\n                break L29;\n               } else {\n                _memcpy(($118|0),($4|0),($33|0))|0;\n                $121 = ((($1)) + 124|0);\n                HEAP32[$121>>2] = $63;\n                $122 = ((($1)) + 120|0);\n                HEAP32[$122>>2] = $$1$i$ph;\n                HEAP32[$79>>2] = 0;\n                $123 = ((($1)) + 232|0);\n                $124 = HEAP32[$123>>2]|0;\n                $125 = $124 | 16;\n                HEAP32[$123>>2] = $125;\n                $126 = ((($1)) + 8|0);\n                $127 = HEAP32[$126>>2]|0;\n                $128 = $127 | 4096;\n                HEAP32[$126>>2] = $128;\n                _png_colorspace_sync($0,$1);\n                break;\n               }\n              }\n             } while(0);\n             $135 = ((($0)) + 220|0);\n             HEAP32[$135>>2] = 0;\n             $$2123 = 0;$$5117 = 1;$$6 = 0;\n            }\n           }\n          }\n         } else {\n          $136 = ((($0)) + 248|0);\n          $137 = HEAP32[$136>>2]|0;\n          $$4116 = 0;$$5 = $137;\n          label = 39;\n         }\n        } while(0);\n        if ((label|0) == 39) {\n         $138 = ((($0)) + 220|0);\n         HEAP32[$138>>2] = 0;\n         $$2123 = 1;$$5117 = $$4116;$$6 = $$5;\n        }\n        if (!($$2123)) {\n         STACKTOP = sp;return;\n        }\n        $141 = ($$5117|0)==(0);\n        if (!($141)) {\n         $$9138 = $$6;\n         break L16;\n        }\n        $$pre = HEAP32[$3>>2]|0;\n        $$9139 = $$6;$142 = $$pre;\n        label = 45;\n        break L16;\n       } else {\n        $$7$ph = 24874;\n       }\n      } else {\n       $$7$ph = 24874;\n      }\n     } else {\n      $$7$ph = 24493;\n     }\n    }\n   } while(0);\n   $$9139 = $$7$ph;$142 = $24;\n   label = 45;\n  } else {\n   $$9139 = 24897;$142 = $2;\n   label = 45;\n  }\n } while(0);\n if ((label|0) == 45) {\n  (_png_crc_finish($0,$142)|0);\n  $$9138 = $$9139;\n }\n $143 = HEAP16[$16>>1]|0;\n $144 = $143&65535;\n $145 = $144 | 32768;\n $146 = $145&65535;\n HEAP16[$16>>1] = $146;\n _png_colorspace_sync($0,$1);\n $147 = ($$9138|0)==(0|0);\n if ($147) {\n  STACKTOP = sp;return;\n }\n _png_chunk_benign_error($0,$$9138);\n STACKTOP = sp;return;\n}\nfunction _png_handle_sPLT($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$09597 = 0, $$1$i$ph = 0, $$198 = 0, $$2 = 0, $$pre = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;\n var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ((($0)) + 756|0);\n $5 = HEAP32[$4>>2]|0;\n switch ($5|0) {\n case 0:  {\n  break;\n }\n case 1:  {\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  label = 3;\n }\n }\n if ((label|0) == 3) {\n  $6 = (($5) + -1)|0;\n  HEAP32[$4>>2] = $6;\n  $7 = ($6|0)==(1);\n  if ($7) {\n   _png_warning($0,24728);\n   (_png_crc_finish($0,$2)|0);\n   STACKTOP = sp;return;\n  }\n }\n $8 = ((($0)) + 208|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = $9 & 1;\n $11 = ($10|0)==(0);\n if ($11) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $12 = $9 & 4;\n $13 = ($12|0)==(0);\n if (!($13)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $14 = (($2) + 1)|0;\n $15 = ((($0)) + 788|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)==(0|0);\n if ($17) {\n  label = 12;\n } else {\n  $18 = ((($0)) + 792|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = ($19>>>0)<($14>>>0);\n  if ($20) {\n   HEAP32[$15>>2] = 0;\n   HEAP32[$18>>2] = 0;\n   _png_free($0,$16);\n   label = 12;\n  } else {\n   $$1$i$ph = $16;\n  }\n }\n do {\n  if ((label|0) == 12) {\n   $21 = (_png_malloc_base($0,$14)|0);\n   $22 = ($21|0)==(0|0);\n   if (!($22)) {\n    HEAP32[$15>>2] = $21;\n    $23 = ((($0)) + 792|0);\n    HEAP32[$23>>2] = $14;\n    $$1$i$ph = $21;\n    break;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24448);\n   STACKTOP = sp;return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $24 = (_png_crc_finish($0,0)|0);\n $25 = ($24|0)==(0);\n if (!($25)) {\n  STACKTOP = sp;return;\n }\n $26 = (($$1$i$ph) + ($2)|0);\n HEAP8[$26>>0] = 0;\n $$0 = $$1$i$ph;\n while(1) {\n  $27 = HEAP8[$$0>>0]|0;\n  $28 = ($27<<24>>24)==(0);\n  $29 = ((($$0)) + 1|0);\n  if ($28) {\n   break;\n  } else {\n   $$0 = $29;\n  }\n }\n $30 = ((($26)) + -2|0);\n $31 = ($29>>>0)>($30>>>0);\n if ($31) {\n  _png_warning($0,24761);\n  STACKTOP = sp;return;\n }\n $32 = ((($$0)) + 2|0);\n $33 = HEAP8[$29>>0]|0;\n $34 = ((($3)) + 4|0);\n HEAP8[$34>>0] = $33;\n $35 = ($33<<24>>24)==(8);\n $36 = $35 ? 6 : 10;\n $37 = $32;\n $38 = $$1$i$ph;\n $39 = (($38) - ($37))|0;\n $40 = (($39) + ($2))|0;\n $41 = (($40>>>0) % ($36>>>0))&-1;\n $42 = ($41|0)==(0);\n if (!($42)) {\n  _png_warning($0,24782);\n  STACKTOP = sp;return;\n }\n $43 = (($40>>>0) / ($36>>>0))&-1;\n $44 = ($43>>>0)>(429496729);\n if ($44) {\n  _png_warning($0,24808);\n  STACKTOP = sp;return;\n }\n $45 = ((($3)) + 12|0);\n HEAP32[$45>>2] = $43;\n $46 = ($43*10)|0;\n $47 = (_png_malloc_warn($0,$46)|0);\n $48 = ((($3)) + 8|0);\n HEAP32[$48>>2] = $47;\n $49 = ($47|0)==(0|0);\n if ($49) {\n  _png_warning($0,24828);\n  STACKTOP = sp;return;\n }\n $50 = ($36>>>0)>($40>>>0);\n L48: do {\n  if (!($50)) {\n   $$09597 = 0;$$198 = $32;$52 = $47;\n   while(1) {\n    $51 = (($52) + (($$09597*10)|0)|0);\n    if ($35) {\n     $53 = ((($$198)) + 1|0);\n     $54 = HEAP8[$$198>>0]|0;\n     $55 = $54&255;\n     HEAP16[$51>>1] = $55;\n     $56 = ((($$198)) + 2|0);\n     $57 = HEAP8[$53>>0]|0;\n     $58 = $57&255;\n     $59 = (((($52) + (($$09597*10)|0)|0)) + 2|0);\n     HEAP16[$59>>1] = $58;\n     $60 = ((($$198)) + 3|0);\n     $61 = HEAP8[$56>>0]|0;\n     $62 = $61&255;\n     $63 = (((($52) + (($$09597*10)|0)|0)) + 4|0);\n     HEAP16[$63>>1] = $62;\n     $64 = ((($$198)) + 4|0);\n     $65 = HEAP8[$60>>0]|0;\n     $66 = $65&255;\n     $$2 = $64;$$sink = $66;\n    } else {\n     $67 = HEAP8[$$198>>0]|0;\n     $68 = $67&255;\n     $69 = $68 << 8;\n     $70 = ((($$198)) + 1|0);\n     $71 = HEAP8[$70>>0]|0;\n     $72 = $71&255;\n     $73 = $69 | $72;\n     $74 = $73&65535;\n     HEAP16[$51>>1] = $74;\n     $75 = ((($$198)) + 2|0);\n     $76 = HEAP8[$75>>0]|0;\n     $77 = $76&255;\n     $78 = $77 << 8;\n     $79 = ((($$198)) + 3|0);\n     $80 = HEAP8[$79>>0]|0;\n     $81 = $80&255;\n     $82 = $78 | $81;\n     $83 = $82&65535;\n     $84 = (((($52) + (($$09597*10)|0)|0)) + 2|0);\n     HEAP16[$84>>1] = $83;\n     $85 = ((($$198)) + 4|0);\n     $86 = HEAP8[$85>>0]|0;\n     $87 = $86&255;\n     $88 = $87 << 8;\n     $89 = ((($$198)) + 5|0);\n     $90 = HEAP8[$89>>0]|0;\n     $91 = $90&255;\n     $92 = $88 | $91;\n     $93 = $92&65535;\n     $94 = (((($52) + (($$09597*10)|0)|0)) + 4|0);\n     HEAP16[$94>>1] = $93;\n     $95 = ((($$198)) + 6|0);\n     $96 = HEAP8[$95>>0]|0;\n     $97 = $96&255;\n     $98 = $97 << 8;\n     $99 = ((($$198)) + 7|0);\n     $100 = HEAP8[$99>>0]|0;\n     $101 = $100&255;\n     $102 = $98 | $101;\n     $103 = $102&65535;\n     $104 = ((($$198)) + 8|0);\n     $$2 = $104;$$sink = $103;\n    }\n    $105 = (((($52) + (($$09597*10)|0)|0)) + 6|0);\n    HEAP16[$105>>1] = $$sink;\n    $106 = HEAP8[$$2>>0]|0;\n    $107 = $106&255;\n    $108 = $107 << 8;\n    $109 = ((($$2)) + 1|0);\n    $110 = HEAP8[$109>>0]|0;\n    $111 = $110&255;\n    $112 = $108 | $111;\n    $113 = $112&65535;\n    $114 = (((($52) + (($$09597*10)|0)|0)) + 8|0);\n    HEAP16[$114>>1] = $113;\n    $115 = (($$09597) + 1)|0;\n    $116 = HEAP32[$45>>2]|0;\n    $117 = ($115|0)<($116|0);\n    if (!($117)) {\n     break L48;\n    }\n    $118 = ((($$2)) + 2|0);\n    $$pre = HEAP32[$48>>2]|0;\n    $$09597 = $115;$$198 = $118;$52 = $$pre;\n   }\n  }\n } while(0);\n HEAP32[$3>>2] = $$1$i$ph;\n _png_set_sPLT($0,$1,$3,1);\n $119 = HEAP32[$48>>2]|0;\n _png_free($0,$119);\n STACKTOP = sp;return;\n}\nfunction _png_handle_tEXt($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$0$ = 0, $$1$i$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp;\n $4 = ((($0)) + 756|0);\n $5 = HEAP32[$4>>2]|0;\n switch ($5|0) {\n case 0:  {\n  break;\n }\n case 1:  {\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  label = 3;\n }\n }\n if ((label|0) == 3) {\n  $6 = (($5) + -1)|0;\n  HEAP32[$4>>2] = $6;\n  $7 = ($6|0)==(1);\n  if ($7) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24377);\n   STACKTOP = sp;return;\n  }\n }\n $8 = ((($0)) + 208|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = $9 & 1;\n $11 = ($10|0)==(0);\n if ($11) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $12 = $9 & 4;\n $13 = ($12|0)==(0);\n if (!($13)) {\n  $14 = $9 | 8;\n  HEAP32[$8>>2] = $14;\n }\n $15 = (($2) + 1)|0;\n $16 = ((($0)) + 788|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ($17|0)==(0|0);\n if ($18) {\n  label = 12;\n } else {\n  $19 = ((($0)) + 792|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = ($20>>>0)<($15>>>0);\n  if ($21) {\n   HEAP32[$16>>2] = 0;\n   HEAP32[$19>>2] = 0;\n   _png_free($0,$17);\n   label = 12;\n  } else {\n   $$1$i$ph = $17;\n  }\n }\n do {\n  if ((label|0) == 12) {\n   $22 = (_png_malloc_base($0,$15)|0);\n   $23 = ($22|0)==(0|0);\n   if (!($23)) {\n    HEAP32[$16>>2] = $22;\n    $24 = ((($0)) + 792|0);\n    HEAP32[$24>>2] = $15;\n    $$1$i$ph = $22;\n    break;\n   }\n   _png_chunk_warning($0,24414);\n   _png_chunk_benign_error($0,24448);\n   STACKTOP = sp;return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $25 = (_png_crc_finish($0,0)|0);\n $26 = ($25|0)==(0);\n if (!($26)) {\n  STACKTOP = sp;return;\n }\n $27 = (($$1$i$ph) + ($2)|0);\n HEAP8[$27>>0] = 0;\n $$0 = $$1$i$ph;\n while(1) {\n  $28 = HEAP8[$$0>>0]|0;\n  $29 = ($28<<24>>24)==(0);\n  $30 = ((($$0)) + 1|0);\n  if ($29) {\n   break;\n  } else {\n   $$0 = $30;\n  }\n }\n $31 = ($$0|0)==($27|0);\n $$0$ = $31 ? $$0 : $30;\n HEAP32[$3>>2] = -1;\n $32 = ((($3)) + 4|0);\n HEAP32[$32>>2] = $$1$i$ph;\n $33 = ((($3)) + 20|0);\n HEAP32[$33>>2] = 0;\n $34 = ((($3)) + 24|0);\n HEAP32[$34>>2] = 0;\n $35 = ((($3)) + 16|0);\n HEAP32[$35>>2] = 0;\n $36 = ((($3)) + 8|0);\n HEAP32[$36>>2] = $$0$;\n $37 = (_strlen($$0$)|0);\n $38 = ((($3)) + 12|0);\n HEAP32[$38>>2] = $37;\n $39 = (_png_set_text_2($0,$1,$3,1)|0);\n $40 = ($39|0)==(0);\n if ($40) {\n  STACKTOP = sp;return;\n }\n _png_warning($0,24686);\n STACKTOP = sp;return;\n}\nfunction _png_handle_tIME($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;\n var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp + 8|0;\n $4 = sp;\n $5 = ((($0)) + 208|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 1;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $9 = ($1|0)==(0|0);\n if (!($9)) {\n  $10 = ((($1)) + 8|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = $11 & 512;\n  $13 = ($12|0)==(0);\n  if (!($13)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $14 = $6 & 4;\n $15 = ($14|0)==(0);\n if (!($15)) {\n  $16 = $6 | 8;\n  HEAP32[$5>>2] = $16;\n }\n $17 = ($2|0)==(7);\n if (!($17)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24651);\n  STACKTOP = sp;return;\n }\n _png_read_data($0,$3,7);\n _png_calculate_crc($0,$3,7);\n $18 = (_png_crc_finish($0,0)|0);\n $19 = ($18|0)==(0);\n if (!($19)) {\n  STACKTOP = sp;return;\n }\n $20 = ((($3)) + 6|0);\n $21 = HEAP8[$20>>0]|0;\n $22 = ((($4)) + 6|0);\n HEAP8[$22>>0] = $21;\n $23 = ((($3)) + 5|0);\n $24 = HEAP8[$23>>0]|0;\n $25 = ((($4)) + 5|0);\n HEAP8[$25>>0] = $24;\n $26 = ((($3)) + 4|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = ((($4)) + 4|0);\n HEAP8[$28>>0] = $27;\n $29 = ((($3)) + 3|0);\n $30 = HEAP8[$29>>0]|0;\n $31 = ((($4)) + 3|0);\n HEAP8[$31>>0] = $30;\n $32 = ((($3)) + 2|0);\n $33 = HEAP8[$32>>0]|0;\n $34 = ((($4)) + 2|0);\n HEAP8[$34>>0] = $33;\n $35 = HEAP8[$3>>0]|0;\n $36 = $35&255;\n $37 = $36 << 8;\n $38 = ((($3)) + 1|0);\n $39 = HEAP8[$38>>0]|0;\n $40 = $39&255;\n $41 = $37 | $40;\n $42 = $41&65535;\n HEAP16[$4>>1] = $42;\n _png_set_tIME($0,$1,$4);\n STACKTOP = sp;return;\n}\nfunction _png_handle_tRNS($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);\n $3 = sp + 8|0;\n $4 = sp + 6|0;\n $5 = sp;\n $6 = ((($0)) + 208|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = $7 & 1;\n $9 = ($8|0)==(0);\n if ($9) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $10 = $7 & 4;\n $11 = ($10|0)==(0);\n if (!($11)) {\n  (_png_crc_finish($0,$2)|0);\n  _png_chunk_benign_error($0,24628);\n  STACKTOP = sp;return;\n }\n $12 = ($1|0)==(0|0);\n if (!($12)) {\n  $13 = ((($1)) + 8|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = $14 & 16;\n  $16 = ($15|0)==(0);\n  if (!($16)) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24641);\n   STACKTOP = sp;return;\n  }\n }\n $17 = ((($0)) + 435|0);\n $18 = HEAP8[$17>>0]|0;\n L13: do {\n  switch ($18<<24>>24) {\n  case 0:  {\n   $19 = ($2|0)==(2);\n   if ($19) {\n    _png_read_data($0,$4,2);\n    _png_calculate_crc($0,$4,2);\n    $20 = ((($0)) + 428|0);\n    HEAP16[$20>>1] = 1;\n    $21 = HEAP8[$4>>0]|0;\n    $22 = $21&255;\n    $23 = $22 << 8;\n    $24 = ((($4)) + 1|0);\n    $25 = HEAP8[$24>>0]|0;\n    $26 = $25&255;\n    $27 = $23 | $26;\n    $28 = $27&65535;\n    $29 = ((($0)) + 540|0);\n    HEAP16[$29>>1] = $28;\n    $$pre$phiZ2D = $20;\n    break L13;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24651);\n   STACKTOP = sp;return;\n   break;\n  }\n  case 2:  {\n   $30 = ($2|0)==(6);\n   if ($30) {\n    _png_read_data($0,$5,6);\n    _png_calculate_crc($0,$5,6);\n    $31 = ((($0)) + 428|0);\n    HEAP16[$31>>1] = 1;\n    $32 = HEAP8[$5>>0]|0;\n    $33 = $32&255;\n    $34 = $33 << 8;\n    $35 = ((($5)) + 1|0);\n    $36 = HEAP8[$35>>0]|0;\n    $37 = $36&255;\n    $38 = $34 | $37;\n    $39 = $38&65535;\n    $40 = ((($0)) + 534|0);\n    HEAP16[$40>>1] = $39;\n    $41 = ((($5)) + 2|0);\n    $42 = HEAP8[$41>>0]|0;\n    $43 = $42&255;\n    $44 = $43 << 8;\n    $45 = ((($5)) + 3|0);\n    $46 = HEAP8[$45>>0]|0;\n    $47 = $46&255;\n    $48 = $44 | $47;\n    $49 = $48&65535;\n    $50 = ((($0)) + 536|0);\n    HEAP16[$50>>1] = $49;\n    $51 = ((($5)) + 4|0);\n    $52 = HEAP8[$51>>0]|0;\n    $53 = $52&255;\n    $54 = $53 << 8;\n    $55 = ((($5)) + 5|0);\n    $56 = HEAP8[$55>>0]|0;\n    $57 = $56&255;\n    $58 = $54 | $57;\n    $59 = $58&65535;\n    $60 = ((($0)) + 538|0);\n    HEAP16[$60>>1] = $59;\n    $$pre$phiZ2D = $31;\n    break L13;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24651);\n   STACKTOP = sp;return;\n   break;\n  }\n  case 3:  {\n   $61 = $7 & 2;\n   $62 = ($61|0)==(0);\n   if ($62) {\n    (_png_crc_finish($0,$2)|0);\n    _png_chunk_benign_error($0,24628);\n    STACKTOP = sp;return;\n   }\n   $63 = ((($0)) + 420|0);\n   $64 = HEAP16[$63>>1]|0;\n   $65 = $64&65535;\n   $66 = ($2>>>0)>(256);\n   $67 = (($2) + -1)|0;\n   $68 = ($67>>>0)>=($65>>>0);\n   $69 = $66 | $68;\n   if (!($69)) {\n    _png_read_data($0,$3,$2);\n    _png_calculate_crc($0,$3,$2);\n    $70 = $2&65535;\n    $71 = ((($0)) + 428|0);\n    HEAP16[$71>>1] = $70;\n    $$pre$phiZ2D = $71;\n    break L13;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24651);\n   STACKTOP = sp;return;\n   break;\n  }\n  default: {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24659);\n   STACKTOP = sp;return;\n  }\n  }\n } while(0);\n $72 = (_png_crc_finish($0,0)|0);\n $73 = ($72|0)==(0);\n if ($73) {\n  $74 = HEAP16[$$pre$phiZ2D>>1]|0;\n  $75 = $74&65535;\n  $76 = ((($0)) + 532|0);\n  _png_set_tRNS($0,$1,$3,$75,$76);\n  STACKTOP = sp;return;\n } else {\n  HEAP16[$$pre$phiZ2D>>1] = 0;\n  STACKTOP = sp;return;\n }\n}\nfunction _png_handle_zTXt($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa = 0, $$055 = 0, $$1$i$ph = 0, $$252 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp + 28|0;\n $4 = sp;\n $5 = ((($0)) + 756|0);\n $6 = HEAP32[$5>>2]|0;\n switch ($6|0) {\n case 0:  {\n  break;\n }\n case 1:  {\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  label = 3;\n }\n }\n if ((label|0) == 3) {\n  $7 = (($6) + -1)|0;\n  HEAP32[$5>>2] = $7;\n  $8 = ($7|0)==(1);\n  if ($8) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24377);\n   STACKTOP = sp;return;\n  }\n }\n $9 = ((($0)) + 208|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = $10 & 1;\n $12 = ($11|0)==(0);\n if ($12) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $13 = $10 & 4;\n $14 = ($13|0)==(0);\n if (!($14)) {\n  $15 = $10 | 8;\n  HEAP32[$9>>2] = $15;\n }\n $16 = ((($0)) + 788|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ($17|0)==(0|0);\n if ($18) {\n  label = 12;\n } else {\n  $19 = ((($0)) + 792|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = ($20>>>0)<($2>>>0);\n  if ($21) {\n   HEAP32[$16>>2] = 0;\n   HEAP32[$19>>2] = 0;\n   _png_free($0,$17);\n   label = 12;\n  } else {\n   $$1$i$ph = $17;\n  }\n }\n do {\n  if ((label|0) == 12) {\n   $22 = (_png_malloc_base($0,$2)|0);\n   $23 = ($22|0)==(0|0);\n   if (!($23)) {\n    HEAP32[$16>>2] = $22;\n    $24 = ((($0)) + 792|0);\n    HEAP32[$24>>2] = $2;\n    $$1$i$ph = $22;\n    break;\n   }\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24448);\n   STACKTOP = sp;return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $25 = (_png_crc_finish($0,0)|0);\n $26 = ($25|0)==(0);\n if (!($26)) {\n  STACKTOP = sp;return;\n }\n $27 = ($2|0)==(0);\n do {\n  if ($27) {\n   $$252 = 24493;\n  } else {\n   $$055 = 0;\n   while(1) {\n    $28 = (($$1$i$ph) + ($$055)|0);\n    $29 = HEAP8[$28>>0]|0;\n    $30 = ($29<<24>>24)==(0);\n    if ($30) {\n     $$0$lcssa = $$055;\n     break;\n    }\n    $31 = (($$055) + 1)|0;\n    $32 = ($31>>>0)<($2>>>0);\n    if ($32) {\n     $$055 = $31;\n    } else {\n     $$0$lcssa = $31;\n     break;\n    }\n   }\n   $33 = (($$0$lcssa) + -1)|0;\n   $34 = ($33>>>0)>(78);\n   if ($34) {\n    $$252 = 24493;\n   } else {\n    $35 = (($$0$lcssa) + 3)|0;\n    $36 = ($35>>>0)>($2>>>0);\n    if ($36) {\n     $$252 = 24462;\n    } else {\n     $37 = (($$0$lcssa) + 1)|0;\n     $38 = (($$1$i$ph) + ($37)|0);\n     $39 = HEAP8[$38>>0]|0;\n     $40 = ($39<<24>>24)==(0);\n     if ($40) {\n      HEAP32[$3>>2] = -1;\n      $41 = (($$0$lcssa) + 2)|0;\n      $42 = (_png_decompress_chunk($0,$2,$41,$3)|0);\n      $43 = ($42|0)==(1);\n      if ($43) {\n       $44 = HEAP32[$16>>2]|0;\n       $45 = HEAP32[$3>>2]|0;\n       $46 = (($45) + ($41))|0;\n       $47 = (($44) + ($46)|0);\n       HEAP8[$47>>0] = 0;\n       HEAP32[$4>>2] = 0;\n       $48 = ((($4)) + 4|0);\n       HEAP32[$48>>2] = $44;\n       $49 = (($44) + ($$0$lcssa)|0);\n       $50 = ((($49)) + 2|0);\n       $51 = ((($4)) + 8|0);\n       HEAP32[$51>>2] = $50;\n       $52 = ((($4)) + 12|0);\n       HEAP32[$52>>2] = $45;\n       $53 = ((($4)) + 16|0);\n       HEAP32[$53>>2] = 0;\n       $54 = ((($4)) + 20|0);\n       HEAP32[$54>>2] = 0;\n       $55 = ((($4)) + 24|0);\n       HEAP32[$55>>2] = 0;\n       $56 = (_png_set_text_2($0,$1,$4,1)|0);\n       $57 = ($56|0)==(0);\n       if (!($57)) {\n        $$252 = 28416;\n        break;\n       }\n       STACKTOP = sp;return;\n      } else {\n       $58 = ((($0)) + 248|0);\n       $59 = HEAP32[$58>>2]|0;\n       $60 = ($59|0)==(0|0);\n       if (!($60)) {\n        $$252 = $59;\n        break;\n       }\n       STACKTOP = sp;return;\n      }\n     } else {\n      $$252 = 24603;\n     }\n    }\n   }\n  }\n } while(0);\n _png_chunk_benign_error($0,$$252);\n STACKTOP = sp;return;\n}\nfunction _png_handle_iTXt($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$09197 = 0, $$092$lcssa = 0, $$092113 = 0, $$1$i$ph = 0, $$193$lcssa = 0, $$193108 = 0, $$2$ph = 0, $$294$lcssa = 0, $$294105 = 0, $$3102 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $or$cond = 0, $or$cond95 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $3 = sp + 28|0;\n $4 = sp;\n $5 = ((($0)) + 756|0);\n $6 = HEAP32[$5>>2]|0;\n switch ($6|0) {\n case 0:  {\n  break;\n }\n case 1:  {\n  (_png_crc_finish($0,$2)|0);\n  STACKTOP = sp;return;\n  break;\n }\n default: {\n  label = 3;\n }\n }\n if ((label|0) == 3) {\n  $7 = (($6) + -1)|0;\n  HEAP32[$5>>2] = $7;\n  $8 = ($7|0)==(1);\n  if ($8) {\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24377);\n   STACKTOP = sp;return;\n  }\n }\n $9 = ((($0)) + 208|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = $10 & 1;\n $12 = ($11|0)==(0);\n if ($12) {\n  _png_chunk_error($0,24401);\n  // unreachable;\n }\n $13 = $10 & 4;\n $14 = ($13|0)==(0);\n if (!($14)) {\n  $15 = $10 | 8;\n  HEAP32[$9>>2] = $15;\n }\n $16 = (($2) + 1)|0;\n $17 = ((($0)) + 788|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0|0);\n if ($19) {\n  label = 12;\n } else {\n  $20 = ((($0)) + 792|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = ($21>>>0)<($16>>>0);\n  if ($22) {\n   HEAP32[$17>>2] = 0;\n   HEAP32[$20>>2] = 0;\n   _png_free($0,$18);\n   label = 12;\n  } else {\n   $$1$i$ph = $18;\n  }\n }\n do {\n  if ((label|0) == 12) {\n   $23 = (_png_malloc_base($0,$16)|0);\n   $24 = ($23|0)==(0|0);\n   if (!($24)) {\n    HEAP32[$17>>2] = $23;\n    $25 = ((($0)) + 792|0);\n    HEAP32[$25>>2] = $16;\n    $$1$i$ph = $23;\n    break;\n   }\n   _png_chunk_warning($0,24414);\n   (_png_crc_finish($0,$2)|0);\n   _png_chunk_benign_error($0,24448);\n   STACKTOP = sp;return;\n  }\n } while(0);\n _png_read_data($0,$$1$i$ph,$2);\n _png_calculate_crc($0,$$1$i$ph,$2);\n $26 = (_png_crc_finish($0,0)|0);\n $27 = ($26|0)==(0);\n if (!($27)) {\n  STACKTOP = sp;return;\n }\n $28 = ($2|0)==(0);\n L28: do {\n  if ($28) {\n   $$3102 = 24493;\n  } else {\n   $$092113 = 0;\n   while(1) {\n    $29 = (($$1$i$ph) + ($$092113)|0);\n    $30 = HEAP8[$29>>0]|0;\n    $31 = ($30<<24>>24)==(0);\n    if ($31) {\n     $$092$lcssa = $$092113;\n     break;\n    }\n    $32 = (($$092113) + 1)|0;\n    $33 = ($32>>>0)<($2>>>0);\n    if ($33) {\n     $$092113 = $32;\n    } else {\n     $$092$lcssa = $32;\n     break;\n    }\n   }\n   $34 = (($$092$lcssa) + -1)|0;\n   $35 = ($34>>>0)>(78);\n   if ($35) {\n    $$3102 = 24493;\n   } else {\n    $36 = (($$092$lcssa) + 5)|0;\n    $37 = ($36>>>0)>($2>>>0);\n    if ($37) {\n     $$3102 = 24462;\n    } else {\n     $38 = (($$092$lcssa) + 1)|0;\n     $39 = (($$1$i$ph) + ($38)|0);\n     $40 = HEAP8[$39>>0]|0;\n     switch ($40<<24>>24) {\n     case 0:  {\n      break;\n     }\n     case 1:  {\n      $41 = (($$092$lcssa) + 2)|0;\n      $42 = (($$1$i$ph) + ($41)|0);\n      $43 = HEAP8[$42>>0]|0;\n      $44 = ($43<<24>>24)==(0);\n      if (!($44)) {\n       $$3102 = 24472;\n       break L28;\n      }\n      break;\n     }\n     default: {\n      $$3102 = 24472;\n      break L28;\n     }\n     }\n     $45 = ($40<<24>>24)!=(0);\n     HEAP32[$3>>2] = 0;\n     $46 = (($$092$lcssa) + 3)|0;\n     $47 = ($46>>>0)<($2>>>0);\n     L38: do {\n      if ($47) {\n       $$193108 = $46;\n       while(1) {\n        $48 = (($$1$i$ph) + ($$193108)|0);\n        $49 = HEAP8[$48>>0]|0;\n        $50 = ($49<<24>>24)==(0);\n        if ($50) {\n         $$193$lcssa = $$193108;\n         break L38;\n        }\n        $51 = (($$193108) + 1)|0;\n        $52 = ($51>>>0)<($2>>>0);\n        if ($52) {\n         $$193108 = $51;\n        } else {\n         $$193$lcssa = $51;\n         break;\n        }\n       }\n      } else {\n       $$193$lcssa = $46;\n      }\n     } while(0);\n     $53 = (($$193$lcssa) + 1)|0;\n     $54 = ($53>>>0)<($2>>>0);\n     L43: do {\n      if ($54) {\n       $$294105 = $53;\n       while(1) {\n        $55 = (($$1$i$ph) + ($$294105)|0);\n        $56 = HEAP8[$55>>0]|0;\n        $57 = ($56<<24>>24)==(0);\n        if ($57) {\n         $$294$lcssa = $$294105;\n         break L43;\n        }\n        $58 = (($$294105) + 1)|0;\n        $59 = ($58>>>0)<($2>>>0);\n        if ($59) {\n         $$294105 = $58;\n        } else {\n         $$294$lcssa = $58;\n         break;\n        }\n       }\n      } else {\n       $$294$lcssa = $53;\n      }\n     } while(0);\n     $60 = (($$294$lcssa) + 1)|0;\n     $61 = ($60>>>0)>($2>>>0);\n     $or$cond = $45 | $61;\n     do {\n      if ($or$cond) {\n       $63 = ($60>>>0)<($2>>>0);\n       $or$cond95 = $45 & $63;\n       if ($or$cond95) {\n        HEAP32[$3>>2] = -1;\n        $64 = (_png_decompress_chunk($0,$2,$60,$3)|0);\n        $65 = ($64|0)==(1);\n        if ($65) {\n         $66 = HEAP32[$17>>2]|0;\n         $$09197 = $66;\n         label = 35;\n         break;\n        } else {\n         $67 = ((($0)) + 248|0);\n         $68 = HEAP32[$67>>2]|0;\n         $69 = ($68|0)==(0|0);\n         if ($69) {\n          $$09197 = $$1$i$ph;\n          label = 35;\n          break;\n         } else {\n          $$2$ph = $68;\n          break;\n         }\n        }\n       } else {\n        $$2$ph = 24462;\n       }\n      } else {\n       $62 = (($2) - ($60))|0;\n       HEAP32[$3>>2] = $62;\n       $$09197 = $$1$i$ph;\n       label = 35;\n      }\n     } while(0);\n     if ((label|0) == 35) {\n      $70 = HEAP32[$3>>2]|0;\n      $71 = (($70) + ($60))|0;\n      $72 = (($$09197) + ($71)|0);\n      HEAP8[$72>>0] = 0;\n      $$ = $45 ? 2 : 1;\n      HEAP32[$4>>2] = $$;\n      $73 = ((($4)) + 4|0);\n      HEAP32[$73>>2] = $$09197;\n      $74 = (($$09197) + ($46)|0);\n      $75 = ((($4)) + 20|0);\n      HEAP32[$75>>2] = $74;\n      $76 = (($$09197) + ($53)|0);\n      $77 = ((($4)) + 24|0);\n      HEAP32[$77>>2] = $76;\n      $78 = (($$09197) + ($60)|0);\n      $79 = ((($4)) + 8|0);\n      HEAP32[$79>>2] = $78;\n      $80 = ((($4)) + 12|0);\n      HEAP32[$80>>2] = 0;\n      $81 = HEAP32[$3>>2]|0;\n      $82 = ((($4)) + 16|0);\n      HEAP32[$82>>2] = $81;\n      $83 = (_png_set_text_2($0,$1,$4,1)|0);\n      $84 = ($83|0)==(0);\n      if ($84) {\n       STACKTOP = sp;return;\n      } else {\n       $$2$ph = 28416;\n      }\n     }\n     $$3102 = $$2$ph;\n    }\n   }\n  }\n } while(0);\n _png_chunk_benign_error($0,$$3102);\n STACKTOP = sp;return;\n}\nfunction _png_crc_finish($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$014$ = 0, $$014$$us = 0, $$01416 = 0, $$01416$us = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1040|0);\n $2 = sp + 1024|0;\n $3 = sp;\n $4 = ($1|0)==(0);\n if (!($4)) {\n  $5 = ($0|0)==(0|0);\n  if ($5) {\n   $$01416$us = $1;\n   while(1) {\n    $6 = ($$01416$us>>>0)<(1024);\n    $$014$$us = $6 ? $$01416$us : 1024;\n    $7 = (($$01416$us) - ($$014$$us))|0;\n    $8 = ($7|0)==(0);\n    if ($8) {\n     break;\n    } else {\n     $$01416$us = $7;\n    }\n   }\n  } else {\n   $$01416 = $1;\n   while(1) {\n    $9 = ($$01416>>>0)<(1024);\n    $$014$ = $9 ? $$01416 : 1024;\n    $10 = (($$01416) - ($$014$))|0;\n    _png_read_data($0,$3,$$014$);\n    _png_calculate_crc($0,$3,$$014$);\n    $11 = ($10|0)==(0);\n    if ($11) {\n     break;\n    } else {\n     $$01416 = $10;\n    }\n   }\n  }\n }\n $12 = ((($0)) + 376|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = $13 & 536870912;\n $15 = ($14|0)==(0);\n $16 = ((($0)) + 212|0);\n $17 = HEAP32[$16>>2]|0;\n if ($15) {\n  $20 = $17 & 2048;\n  $21 = ($20|0)==(0);\n  $22 = ((($0)) + 800|0);\n  HEAP32[$22>>2] = 129;\n  _png_read_data($0,$2,4);\n  if (!($21)) {\n   label = 8;\n  }\n } else {\n  $18 = $17 & 768;\n  $not$$i = ($18|0)==(768);\n  $19 = ((($0)) + 800|0);\n  HEAP32[$19>>2] = 129;\n  _png_read_data($0,$2,4);\n  if ($not$$i) {\n   label = 8;\n  }\n }\n if ((label|0) == 8) {\n  $$015 = 0;\n  STACKTOP = sp;return ($$015|0);\n }\n $23 = HEAP8[$2>>0]|0;\n $24 = $23&255;\n $25 = $24 << 24;\n $26 = ((($2)) + 1|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = $27&255;\n $29 = $28 << 16;\n $30 = $29 | $25;\n $31 = ((($2)) + 2|0);\n $32 = HEAP8[$31>>0]|0;\n $33 = $32&255;\n $34 = $33 << 8;\n $35 = $30 | $34;\n $36 = ((($2)) + 3|0);\n $37 = HEAP8[$36>>0]|0;\n $38 = $37&255;\n $39 = $35 | $38;\n $40 = ((($0)) + 412|0);\n $41 = HEAP32[$40>>2]|0;\n $42 = ($39|0)==($41|0);\n if ($42) {\n  $$015 = 0;\n  STACKTOP = sp;return ($$015|0);\n }\n $43 = HEAP32[$12>>2]|0;\n $44 = $43 & 536870912;\n $45 = ($44|0)==(0);\n $46 = HEAP32[$16>>2]|0;\n if ($45) {\n  $49 = $46 & 1024;\n  $50 = ($49|0)==(0);\n  if ($50) {\n   _png_chunk_error($0,24593);\n   // unreachable;\n  }\n } else {\n  $47 = $46 & 512;\n  $48 = ($47|0)==(0);\n  if (!($48)) {\n   _png_chunk_error($0,24593);\n   // unreachable;\n  }\n }\n _png_chunk_warning($0,24593);\n $$015 = 1;\n STACKTOP = sp;return ($$015|0);\n}\nfunction _png_chunk_warning($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$idx = 0, $$idx$val = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $2 = sp;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  _png_warning(0,$1);\n  STACKTOP = sp;return;\n } else {\n  $$idx = ((($0)) + 376|0);\n  $$idx$val = HEAP32[$$idx>>2]|0;\n  _png_format_buffer($$idx$val,$2,$1);\n  _png_warning($0,$2);\n  STACKTOP = sp;return;\n }\n}\nfunction _png_read_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 184|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  _png_error($0,24566);\n  // unreachable;\n } else {\n  FUNCTION_TABLE_viii[$4 & 127]($0,$1,$2);\n  return;\n }\n}\nfunction _png_decompress_chunk($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$1$us$i = 0, $$$1$us$i31 = 0, $$$1$us$i5 = 0, $$$1$us$i528 = 0, $$0 = 0, $$084 = 0, $$08520 = 0, $$086 = 0, $$2 = 0, $$321 = 0, $$lcssa$i = 0, $$lcssa$i41 = 0, $$lcssa$i42 = 0, $$lcssa1$i = 0, $$lcssa1$i39 = 0, $$lcssa1$i40 = 0, $$lcssa26 = 0, $$lcssa27 = 0, $$pre = 0, $$pre8$i = 0;\n var $$pre8$i8 = 0, $$pre9$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;\n var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond22 = 0;\n var $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1024|0);\n $4 = sp;\n $5 = ((($0)) + 760|0);\n $6 = HEAP32[$5>>2]|0;\n switch ($6|0) {\n case -1: case 0:  {\n  $7 = (($2) + 1)|0;\n  $$08520 = -1;$11 = $7;\n  break;\n }\n default: {\n  $8 = (($2) + 1)|0;\n  $9 = ($6>>>0)<($8>>>0);\n  if ($9) {\n   _png_zstream_error($0,-4);\n   $$0 = -4;\n   STACKTOP = sp;return ($$0|0);\n  } else {\n   $$08520 = $6;$11 = $8;\n  }\n }\n }\n $10 = (($$08520) - ($11))|0;\n $12 = HEAP32[$3>>2]|0;\n $13 = ($10>>>0)<($12>>>0);\n if ($13) {\n  HEAP32[$3>>2] = $10;\n }\n $14 = ((($0)) + 376|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = (_png_inflate_claim($0,$15)|0);\n switch ($16|0) {\n case 0:  {\n  $17 = (($1) - ($2))|0;\n  $18 = HEAP32[$14>>2]|0;\n  $19 = ((($0)) + 788|0);\n  $20 = ((($0)) + 220|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = ($21|0)==($18|0);\n  do {\n   if ($22) {\n    $23 = HEAP32[$19>>2]|0;\n    $24 = (($23) + ($2)|0);\n    $25 = HEAP32[$3>>2]|0;\n    $26 = ((($0)) + 224|0);\n    HEAP32[$26>>2] = $24;\n    $27 = ((($0)) + 228|0);\n    $28 = ((($0)) + 240|0);\n    $$pre9$i = ((($0)) + 236|0);\n    HEAP32[$27>>2] = $17;\n    HEAP32[$$pre9$i>>2] = $4;\n    $29 = ($25>>>0)<(1024);\n    $$$1$us$i31 = $29 ? $25 : 1024;\n    HEAP32[$28>>2] = $$$1$us$i31;\n    $30 = (($25) - ($$$1$us$i31))|0;\n    $31 = ($30|0)==(0);\n    $32 = $31 ? 4 : 0;\n    $33 = (_inflate($26,$32)|0);\n    $34 = ($33|0)==(0);\n    if ($34) {\n     $36 = $30;\n     while(1) {\n      $$pre8$i = HEAP32[$28>>2]|0;\n      $35 = (($36) + ($$pre8$i))|0;\n      HEAP32[$$pre9$i>>2] = $4;\n      $37 = ($35>>>0)<(1024);\n      $$$1$us$i = $37 ? $35 : 1024;\n      HEAP32[$28>>2] = $$$1$us$i;\n      $38 = (($35) - ($$$1$us$i))|0;\n      $39 = ($38|0)==(0);\n      $40 = $39 ? 4 : 0;\n      $41 = (_inflate($26,$40)|0);\n      $42 = ($41|0)==(0);\n      if ($42) {\n       $36 = $38;\n      } else {\n       $$lcssa26 = $41;$$lcssa27 = $38;\n       break;\n      }\n     }\n    } else {\n     $$lcssa26 = $33;$$lcssa27 = $30;\n    }\n    HEAP32[$$pre9$i>>2] = 0;\n    $43 = HEAP32[$27>>2]|0;\n    $44 = HEAP32[$28>>2]|0;\n    $45 = (($44) + ($$lcssa27))|0;\n    $46 = ($45|0)==(0);\n    if (!($46)) {\n     $47 = HEAP32[$3>>2]|0;\n     $48 = (($47) - ($45))|0;\n     HEAP32[$3>>2] = $48;\n    }\n    $49 = (($17) - ($43))|0;\n    _png_zstream_error($0,$$lcssa26);\n    $cond = ($$lcssa26|0)==(1);\n    if ($cond) {\n     $51 = (_inflateReset($26)|0);\n     $52 = ($51|0)==(0);\n     if (!($52)) {\n      _png_zstream_error($0,1);\n      $$2 = -7;\n      break;\n     }\n     $53 = HEAP32[$3>>2]|0;\n     $54 = (($2) + 1)|0;\n     $55 = (($54) + ($53))|0;\n     $56 = (_png_malloc_base($0,$55)|0);\n     $57 = ($56|0)==(0|0);\n     if ($57) {\n      _png_zstream_error($0,-4);\n      $$2 = -4;\n      break;\n     }\n     $58 = HEAP32[$14>>2]|0;\n     $59 = (($56) + ($2)|0);\n     $60 = HEAP32[$20>>2]|0;\n     $61 = ($60|0)==($58|0);\n     if ($61) {\n      $62 = HEAP32[$19>>2]|0;\n      $63 = (($62) + ($2)|0);\n      $64 = HEAP32[$3>>2]|0;\n      HEAP32[$26>>2] = $63;\n      HEAP32[$27>>2] = 0;\n      HEAP32[$28>>2] = 0;\n      $65 = ($59|0)==(0|0);\n      if ($65) {\n       HEAP32[$27>>2] = $49;\n       HEAP32[$$pre9$i>>2] = $4;\n       $68 = ($64>>>0)<(1024);\n       $$$1$us$i528 = $68 ? $64 : 1024;\n       HEAP32[$28>>2] = $$$1$us$i528;\n       $69 = (($64) - ($$$1$us$i528))|0;\n       $70 = ($69|0)==(0);\n       $71 = $70 ? 4 : 0;\n       $72 = (_inflate($26,$71)|0);\n       $73 = ($72|0)==(0);\n       if ($73) {\n        $75 = $69;\n        while(1) {\n         $$pre8$i8 = HEAP32[$28>>2]|0;\n         $74 = (($75) + ($$pre8$i8))|0;\n         HEAP32[$$pre9$i>>2] = $4;\n         $76 = ($74>>>0)<(1024);\n         $$$1$us$i5 = $76 ? $74 : 1024;\n         HEAP32[$28>>2] = $$$1$us$i5;\n         $77 = (($74) - ($$$1$us$i5))|0;\n         $78 = ($77|0)==(0);\n         $79 = $78 ? 4 : 0;\n         $80 = (_inflate($26,$79)|0);\n         $81 = ($80|0)==(0);\n         if ($81) {\n          $75 = $77;\n         } else {\n          $$lcssa$i = $80;$$lcssa1$i = $77;\n          label = 22;\n          break;\n         }\n        }\n       } else {\n        $$lcssa$i42 = $72;$$lcssa1$i40 = $69;\n        label = 23;\n       }\n      } else {\n       HEAP32[$$pre9$i>>2] = $59;\n       HEAP32[$27>>2] = $49;\n       HEAP32[$28>>2] = $64;\n       $66 = (_inflate($26,4)|0);\n       $67 = ($66|0)==(0);\n       if ($67) {\n        while(1) {\n         $82 = (_inflate($26,4)|0);\n         $83 = ($82|0)==(0);\n         if (!($83)) {\n          $$lcssa$i = $82;$$lcssa1$i = 0;\n          label = 22;\n          break;\n         }\n        }\n       } else {\n        $$lcssa$i41 = $66;$$lcssa1$i39 = 0;\n       }\n      }\n      if ((label|0) == 22) {\n       if ($65) {\n        $$lcssa$i42 = $$lcssa$i;$$lcssa1$i40 = $$lcssa1$i;\n        label = 23;\n       } else {\n        $$lcssa$i41 = $$lcssa$i;$$lcssa1$i39 = $$lcssa1$i;\n       }\n      }\n      if ((label|0) == 23) {\n       HEAP32[$$pre9$i>>2] = 0;\n       $$lcssa$i41 = $$lcssa$i42;$$lcssa1$i39 = $$lcssa1$i40;\n      }\n      $84 = HEAP32[$27>>2]|0;\n      $85 = HEAP32[$28>>2]|0;\n      $86 = (($85) + ($$lcssa1$i39))|0;\n      $87 = ($86|0)==(0);\n      if (!($87)) {\n       $88 = HEAP32[$3>>2]|0;\n       $89 = (($88) - ($86))|0;\n       HEAP32[$3>>2] = $89;\n      }\n      $90 = (($49) - ($84))|0;\n      _png_zstream_error($0,$$lcssa$i41);\n      $cond22 = ($$lcssa$i41|0)==(1);\n      if ($cond22) {\n       $92 = HEAP32[$3>>2]|0;\n       $93 = ($53|0)==($92|0);\n       if ($93) {\n        $94 = (($53) + ($2))|0;\n        $95 = (($56) + ($94)|0);\n        HEAP8[$95>>0] = 0;\n        $96 = ($2|0)==(0);\n        $$pre = HEAP32[$19>>2]|0;\n        if (!($96)) {\n         _memcpy(($56|0),($$pre|0),($2|0))|0;\n        }\n        HEAP32[$19>>2] = $56;\n        $97 = ((($0)) + 792|0);\n        HEAP32[$97>>2] = $55;\n        $$084 = $$pre;$$086 = 1;$$321 = $90;\n       } else {\n        $$084 = $56;$$086 = -7;$$321 = $90;\n       }\n      } else {\n       $$084 = $56;$$086 = $$lcssa$i41;$$321 = $90;\n      }\n     } else {\n      $91 = ((($0)) + 248|0);\n      HEAP32[$91>>2] = 24505;\n      $$084 = $56;$$086 = -2;$$321 = $49;\n     }\n     _png_free($0,$$084);\n     $98 = ($$086|0)!=(1);\n     $99 = ($17|0)==($$321|0);\n     $or$cond = $99 | $98;\n     if ($or$cond) {\n      $$2 = $$086;\n     } else {\n      _png_chunk_benign_error($0,24523);\n      $$2 = 1;\n     }\n    } else {\n     $$2 = $$lcssa26;\n    }\n   } else {\n    $50 = ((($0)) + 248|0);\n    HEAP32[$50>>2] = 24505;\n    $$2 = -2;\n   }\n  } while(0);\n  HEAP32[$20>>2] = 0;\n  $$0 = $$2;\n  STACKTOP = sp;return ($$0|0);\n  break;\n }\n case 1:  {\n  $$0 = -7;\n  STACKTOP = sp;return ($$0|0);\n  break;\n }\n default: {\n  $$0 = $16;\n  STACKTOP = sp;return ($$0|0);\n }\n }\n return (0)|0;\n}\nfunction _png_inflate_claim($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$021 = 0, $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $2 = sp;\n $3 = ((($0)) + 220|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0);\n if (!($5)) {\n  $6 = $4 >>> 24;\n  $7 = $6&255;\n  HEAP8[$2>>0] = $7;\n  $8 = $4 >>> 16;\n  $9 = $8&255;\n  $10 = ((($2)) + 1|0);\n  HEAP8[$10>>0] = $9;\n  $11 = $4 >>> 8;\n  $12 = $11&255;\n  $13 = ((($2)) + 2|0);\n  HEAP8[$13>>0] = $12;\n  $14 = $4&255;\n  $15 = ((($2)) + 3|0);\n  HEAP8[$15>>0] = $14;\n  (_png_safecat($2,64,4,24545)|0);\n  _png_chunk_warning($0,$2);\n  HEAP32[$3>>2] = 0;\n }\n $16 = ((($0)) + 224|0);\n HEAP32[$16>>2] = 0;\n $17 = ((($0)) + 228|0);\n HEAP32[$17>>2] = 0;\n $18 = ((($0)) + 236|0);\n HEAP32[$18>>2] = 0;\n $19 = ((($0)) + 240|0);\n HEAP32[$19>>2] = 0;\n $20 = ((($0)) + 212|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = $21 & 2;\n $23 = ($22|0)==(0);\n if ($23) {\n  $24 = (_inflateInit_($16,24560,56)|0);\n  $25 = ($24|0)==(0);\n  if ($25) {\n   $26 = HEAP32[$20>>2]|0;\n   $27 = $26 | 2;\n   HEAP32[$20>>2] = $27;\n   label = 7;\n  } else {\n   $$024 = $24;\n   label = 8;\n  }\n } else {\n  $28 = (_inflateReset($16)|0);\n  $29 = ($28|0)==(0);\n  if ($29) {\n   label = 7;\n  } else {\n   $$024 = $28;\n   label = 8;\n  }\n }\n if ((label|0) == 7) {\n  HEAP32[$3>>2] = $1;\n  $$021 = 0;\n  STACKTOP = sp;return ($$021|0);\n }\n else if ((label|0) == 8) {\n  _png_zstream_error($0,$$024);\n  $$021 = $$024;\n  STACKTOP = sp;return ($$021|0);\n }\n return (0)|0;\n}\nfunction _png_inflate_read($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$$045 = 0, $$045 = 0, $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $6 = ((($0)) + 220|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($0)) + 376|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($7|0)==($9|0);\n if (!($10)) {\n  $38 = ((($0)) + 248|0);\n  HEAP32[$38>>2] = 24505;\n  return;\n }\n $11 = ((($0)) + 224|0);\n $12 = ((($0)) + 236|0);\n HEAP32[$12>>2] = $3;\n $13 = ((($0)) + 240|0);\n HEAP32[$13>>2] = 0;\n $14 = ((($0)) + 228|0);\n $15 = ($5|0)!=(0);\n $16 = $15 ? 4 : 2;\n $$045 = 1024;\n while(1) {\n  $17 = HEAP32[$14>>2]|0;\n  $18 = ($17|0)==(0);\n  if ($18) {\n   $19 = HEAP32[$2>>2]|0;\n   $20 = ($$045>>>0)>($19>>>0);\n   $$$045 = $20 ? $19 : $$045;\n   $21 = (($19) - ($$$045))|0;\n   HEAP32[$2>>2] = $21;\n   $22 = ($$$045|0)==(0);\n   if (!($22)) {\n    _png_read_data($0,$1,$$$045);\n    _png_calculate_crc($0,$1,$$$045);\n   }\n   HEAP32[$11>>2] = $1;\n   HEAP32[$14>>2] = $$$045;\n   $$2 = $$$045;\n  } else {\n   $$2 = $$045;\n  }\n  $23 = HEAP32[$13>>2]|0;\n  $24 = ($23|0)==(0);\n  if ($24) {\n   $25 = HEAP32[$4>>2]|0;\n   HEAP32[$4>>2] = 0;\n   HEAP32[$13>>2] = $25;\n  }\n  $26 = HEAP32[$2>>2]|0;\n  $27 = ($26|0)==(0);\n  $28 = $27 ? $16 : 0;\n  $29 = (_inflate($11,$28)|0);\n  $30 = ($29|0)==(0);\n  if (!($30)) {\n   label = 10;\n   break;\n  }\n  $31 = HEAP32[$4>>2]|0;\n  $32 = ($31|0)==(0);\n  if (!($32)) {\n   $$045 = $$2;\n   continue;\n  }\n  $33 = HEAP32[$13>>2]|0;\n  $34 = ($33|0)==(0);\n  if ($34) {\n   $$lcssa = 0;$36 = 0;$37 = 0;\n   break;\n  } else {\n   $$045 = $$2;\n  }\n }\n if ((label|0) == 10) {\n  $$pre = HEAP32[$13>>2]|0;\n  $$pre1 = HEAP32[$4>>2]|0;\n  $$lcssa = $29;$36 = $$pre;$37 = $$pre1;\n }\n $35 = (($37) + ($36))|0;\n HEAP32[$4>>2] = $35;\n HEAP32[$13>>2] = 0;\n _png_zstream_error($0,$$lcssa);\n return;\n}\nfunction _png_icc_check_length($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($3>>>0)<(132);\n if (!($4)) {\n  $$0 = 1;\n  return ($$0|0);\n }\n _png_icc_profile_error($0,$1,$2,$3,24864);\n $$0 = 0;\n return ($$0|0);\n}\nfunction _png_colorspace_sync($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$pre193$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge$i = 0, $storemerge9$i = 0, dest = 0, label = 0, sp = 0, src = 0;\n var stop = 0;\n sp = STACKTOP;\n $2 = ($1|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($1)) + 40|0);\n $4 = ((($0)) + 824|0);\n dest=$3; src=$4; stop=dest+76|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n $5 = ((($1)) + 114|0);\n $6 = HEAP16[$5>>1]|0;\n $7 = $6&65535;\n $8 = $7 & 32768;\n $9 = ($8|0)==(0);\n if (!($9)) {\n  $10 = ((($1)) + 8|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = $11 & -6150;\n  HEAP32[$10>>2] = $12;\n  $$pre193$i$i = ((($1)) + 232|0);\n  $13 = HEAP32[$$pre193$i$i>>2]|0;\n  $14 = $13 & 16;\n  $15 = ($14|0)==(0);\n  if (!($15)) {\n   $16 = ((($1)) + 116|0);\n   $17 = HEAP32[$16>>2]|0;\n   _png_free($0,$17);\n   $18 = ((($1)) + 120|0);\n   $19 = HEAP32[$18>>2]|0;\n   _png_free($0,$19);\n   HEAP32[$16>>2] = 0;\n   HEAP32[$18>>2] = 0;\n   HEAP32[$10>>2] = $12;\n  }\n  $20 = $13 & -17;\n  HEAP32[$$pre193$i$i>>2] = $20;\n  return;\n }\n $21 = $7 & 128;\n $22 = ($21|0)==(0);\n $23 = ((($1)) + 8|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = $24 & -2049;\n $26 = $24 | 2048;\n $storemerge$i = $22 ? $25 : $26;\n $27 = $6 & 2;\n $28 = ($27<<16>>16)==(0);\n $29 = $storemerge$i & -5;\n $30 = $storemerge$i | 4;\n $storemerge9$i = $28 ? $29 : $30;\n HEAP32[$23>>2] = $storemerge9$i;\n $31 = $6 & 1;\n $32 = ($31<<16>>16)==(0);\n if ($32) {\n  $34 = $storemerge9$i & -2;\n  HEAP32[$23>>2] = $34;\n  return;\n } else {\n  $33 = $storemerge9$i | 1;\n  HEAP32[$23>>2] = $33;\n  return;\n }\n}\nfunction _png_cache_unknown_chunk($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$039 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 772|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if (!($4)) {\n  _png_free($0,$3);\n  HEAP32[$2>>2] = 0;\n }\n $5 = ((($0)) + 760|0);\n $6 = HEAP32[$5>>2]|0;\n switch ($6|0) {\n case -1: case 0:  {\n  label = 5;\n  break;\n }\n default: {\n  $7 = ($6>>>0)<($1>>>0);\n  if ($7) {\n   $29 = 0;\n   label = 8;\n  } else {\n   label = 5;\n  }\n }\n }\n do {\n  if ((label|0) == 5) {\n   $8 = ((($0)) + 376|0);\n   $9 = HEAP32[$8>>2]|0;\n   $10 = $9 >>> 24;\n   $11 = $10&255;\n   $12 = ((($0)) + 764|0);\n   HEAP8[$12>>0] = $11;\n   $13 = $9 >>> 16;\n   $14 = $13&255;\n   $15 = ((($0)) + 765|0);\n   HEAP8[$15>>0] = $14;\n   $16 = $9 >>> 8;\n   $17 = $16&255;\n   $18 = ((($0)) + 766|0);\n   HEAP8[$18>>0] = $17;\n   $19 = $9&255;\n   $20 = ((($0)) + 767|0);\n   HEAP8[$20>>0] = $19;\n   $21 = ((($0)) + 768|0);\n   HEAP8[$21>>0] = 0;\n   $22 = ((($0)) + 776|0);\n   HEAP32[$22>>2] = $1;\n   $23 = ((($0)) + 208|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = $24&255;\n   $26 = ((($0)) + 780|0);\n   HEAP8[$26>>0] = $25;\n   $27 = ($1|0)==(0);\n   if ($27) {\n    HEAP32[$2>>2] = 0;\n    break;\n   } else {\n    $28 = (_png_malloc_warn($0,$1)|0);\n    HEAP32[$2>>2] = $28;\n    $29 = $28;\n    label = 8;\n    break;\n   }\n  }\n } while(0);\n do {\n  if ((label|0) == 8) {\n   $30 = ($29|0)==(0|0);\n   $31 = ($1|0)!=(0);\n   $or$cond = $31 & $30;\n   if ($or$cond) {\n    (_png_crc_finish($0,$1)|0);\n    _png_chunk_benign_error($0,25320);\n    $$039 = 0;\n    return ($$039|0);\n   } else {\n    if (!($31)) {\n     break;\n    }\n    _png_read_data($0,$29,$1);\n    _png_calculate_crc($0,$29,$1);\n    break;\n   }\n  }\n } while(0);\n (_png_crc_finish($0,0)|0);\n $$039 = 1;\n return ($$039|0);\n}\nfunction _png_sig_cmp($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$0 = 0, $$0 = 0, $$010 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($2>>>0)>(8);\n if ($3) {\n  $$0 = 8;\n } else {\n  $4 = ($2|0)==(0);\n  if ($4) {\n   $$010 = -1;\n   return ($$010|0);\n  } else {\n   $$0 = $2;\n  }\n }\n $5 = ($1>>>0)>(7);\n if ($5) {\n  $$010 = -1;\n  return ($$010|0);\n }\n $6 = (25463 + ($1)|0);\n $7 = (($0) + ($1)|0);\n $8 = (8 - ($1))|0;\n $9 = (($$0) + ($1))|0;\n $10 = ($9>>>0)>(8);\n $$$0 = $10 ? $8 : $$0;\n $11 = (_memcmp($7,$6,$$$0)|0);\n $$010 = $11;\n return ($$010|0);\n}\nfunction _png_read_update_info($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 212|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 64;\n $6 = ($5|0)==(0);\n if ($6) {\n  _png_read_start_row($0);\n  _png_read_transform_info($0,$1);\n  return;\n } else {\n  _png_app_error($0,25471);\n  return;\n }\n}\nfunction _png_read_start_row($0) {\n $0 = $0|0;\n var $$ = 0, $$$0 = 0, $$$0$ = 0, $$$2 = 0, $$$5 = 0, $$0 = 0, $$107 = 0, $$108 = 0, $$109 = 0, $$111 = 0, $$112 = 0, $$113 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$7 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0;\n var $$sink = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;\n var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;\n var $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond115 = 0, $or$cond115$not = 0, $or$cond116 = 0, $storemerge = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n _png_init_read_transformations($0);\n $1 = ((($0)) + 432|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = $2&255;\n $4 = ($3<<24>>24)==(0);\n $5 = $2 >>> 8;\n $6 = $5 & 255;\n $7 = $2 >>> 24;\n $8 = $7&255;\n if ($4) {\n  $31 = ((($0)) + 352|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = ((($0)) + 356|0);\n  HEAP32[$33>>2] = $32;\n  $34 = ((($0)) + 348|0);\n  $35 = HEAP32[$34>>2]|0;\n  $36 = ((($0)) + 368|0);\n  HEAP32[$36>>2] = $35;\n  $$phi$trans$insert = ((($0)) + 216|0);\n  $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n  $$pre$phiZ2D = $$phi$trans$insert;$41 = $$pre;$98 = $35;\n } else {\n  $9 = ((($0)) + 216|0);\n  $10 = HEAP32[$9>>2]|0;\n  $11 = $10 & 2;\n  $12 = ($11|0)==(0);\n  $13 = ((($0)) + 352|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = (($14) + 7)|0;\n  $16 = $15 >>> 3;\n  $$sink = $12 ? $16 : $14;\n  $17 = ((($0)) + 356|0);\n  HEAP32[$17>>2] = $$sink;\n  $18 = ((($0)) + 348|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = (25562 + ($6)|0);\n  $21 = HEAP8[$20>>0]|0;\n  $22 = $21&255;\n  $23 = (25569 + ($6)|0);\n  $24 = HEAP8[$23>>0]|0;\n  $25 = $24&255;\n  $26 = (($19) + -1)|0;\n  $27 = (($26) + ($22))|0;\n  $28 = (($27) - ($25))|0;\n  $29 = (($28>>>0) / ($22>>>0))&-1;\n  $30 = ((($0)) + 368|0);\n  HEAP32[$30>>2] = $29;\n  $$pre$phiZ2D = $9;$41 = $10;$98 = $19;\n }\n $37 = ((($0)) + 438|0);\n $38 = HEAP8[$37>>0]|0;\n $39 = $38&255;\n $40 = $41 & 4;\n $42 = ($40|0)==(0);\n if ($42) {\n  $$0 = $39;\n } else {\n  $43 = ((($0)) + 436|0);\n  $44 = HEAP8[$43>>0]|0;\n  $45 = ($44&255)<(8);\n  $$ = $45 ? 8 : $39;\n  $$0 = $$;\n }\n $46 = HEAP32[$$pre$phiZ2D>>2]|0;\n $47 = $46 & 4096;\n $48 = ($47|0)==(0);\n L8: do {\n  if ($48) {\n   $$2 = $$0;\n  } else {\n   switch ($8<<24>>24) {\n   case 3:  {\n    $49 = ((($0)) + 428|0);\n    $50 = HEAP16[$49>>1]|0;\n    $51 = ($50<<16>>16)==(0);\n    $$107 = $51 ? 24 : 32;\n    $$2 = $$107;\n    break L8;\n    break;\n   }\n   case 0:  {\n    $52 = ($$0>>>0)<(8);\n    $$$0 = $52 ? 8 : $$0;\n    $53 = ((($0)) + 428|0);\n    $54 = HEAP16[$53>>1]|0;\n    $not$ = ($54<<16>>16)!=(0);\n    $55 = $not$&1;\n    $$$0$ = $$$0 << $55;\n    $$2 = $$$0$;\n    break L8;\n    break;\n   }\n   case 2:  {\n    $56 = ((($0)) + 428|0);\n    $57 = HEAP16[$56>>1]|0;\n    $58 = ($57<<16>>16)==(0);\n    if ($58) {\n     $$2 = $$0;\n     break L8;\n    }\n    $59 = $$0 << 2;\n    $60 = (($59>>>0) / 3)&-1;\n    $$2 = $60;\n    break L8;\n    break;\n   }\n   default: {\n    $$2 = $$0;\n    break L8;\n   }\n   }\n  }\n } while(0);\n $61 = $46 & 512;\n $62 = ($61|0)==(0);\n do {\n  if ($62) {\n   $$3 = $$2;$69 = $46;\n  } else {\n   if ($48) {\n    $67 = $46 & -513;\n    HEAP32[$$pre$phiZ2D>>2] = $67;\n    $$3 = $$2;$69 = $67;\n    break;\n   } else {\n    $63 = ((($0)) + 436|0);\n    $64 = HEAP8[$63>>0]|0;\n    $65 = ($64&255)<(16);\n    $66 = $65&1;\n    $$$2 = $$2 << $66;\n    $$3 = $$$2;$69 = $46;\n    break;\n   }\n  }\n } while(0);\n $68 = $69 & 32768;\n $70 = ($68|0)==(0);\n L22: do {\n  if ($70) {\n   $$4 = $$3;\n  } else {\n   switch ($8<<24>>24) {\n   case 0:  {\n    $71 = ($$3|0)<(9);\n    $$108 = $71 ? 16 : 32;\n    $$4 = $$108;\n    break L22;\n    break;\n   }\n   case 3: case 2:  {\n    $72 = ($$3|0)<(33);\n    $$109 = $72 ? 32 : 64;\n    $$4 = $$109;\n    break L22;\n    break;\n   }\n   default: {\n    $$4 = $$3;\n    break L22;\n   }\n   }\n  }\n } while(0);\n $73 = $69 & 16384;\n $74 = ($73|0)==(0);\n do {\n  if ($74) {\n   $$5 = $$4;\n  } else {\n   $75 = ((($0)) + 428|0);\n   $76 = HEAP16[$75>>1]|0;\n   $77 = ($76<<16>>16)==(0);\n   $78 = $69 & 4096;\n   $79 = ($78|0)==(0);\n   $or$cond = $79 | $77;\n   $or$cond115 = $70 & $or$cond;\n   $or$cond115$not = $or$cond115 ^ 1;\n   $80 = ($8<<24>>24)==(4);\n   $or$cond116 = $80 | $or$cond115$not;\n   if ($or$cond116) {\n    $81 = ($$4|0)<(17);\n    $$111 = $81 ? 32 : 64;\n    $$5 = $$111;\n    break;\n   }\n   $82 = ($$4|0)<(9);\n   $83 = ($8<<24>>24)==(6);\n   if ($82) {\n    $$112 = $83 ? 32 : 24;\n    $$5 = $$112;\n    break;\n   } else {\n    $$113 = $83 ? 64 : 48;\n    $$5 = $$113;\n    break;\n   }\n  }\n } while(0);\n $84 = $69 & 1048576;\n $85 = ($84|0)==(0);\n if ($85) {\n  $$7 = $$5;\n } else {\n  $86 = ((($0)) + 204|0);\n  $87 = HEAP16[$86>>1]|0;\n  $88 = $87&65535;\n  $89 = $88 & 255;\n  $90 = ($87&65535) >>> 8;\n  $91 = $90&65535;\n  $92 = Math_imul($91, $89)|0;\n  $93 = ($92|0)>($$5|0);\n  $$$5 = $93 ? $92 : $$5;\n  $$7 = $$$5;\n }\n $94 = $$7&255;\n $95 = ((($0)) + 442|0);\n HEAP8[$95>>0] = $94;\n $96 = ((($0)) + 443|0);\n HEAP8[$96>>0] = 0;\n $97 = (($98) + 7)|0;\n $99 = $97 & -8;\n $100 = ($$7|0)>(7);\n $101 = $$7 >>> 3;\n $102 = Math_imul($99, $101)|0;\n $103 = Math_imul($99, $$7)|0;\n $104 = $103 >>> 3;\n $105 = $100 ? $102 : $104;\n $106 = (($$7) + 7)|0;\n $107 = $106 >> 3;\n $108 = (($107) + 49)|0;\n $109 = (($108) + ($105))|0;\n $110 = ((($0)) + 784|0);\n $111 = HEAP32[$110>>2]|0;\n $112 = ($109>>>0)>($111>>>0);\n if ($112) {\n  $113 = ((($0)) + 728|0);\n  $114 = HEAP32[$113>>2]|0;\n  _png_free($0,$114);\n  $115 = ((($0)) + 804|0);\n  $116 = HEAP32[$115>>2]|0;\n  _png_free($0,$116);\n  $117 = HEAP8[$1>>0]|0;\n  $118 = ($117<<24>>24)==(0);\n  if ($118) {\n   $120 = (_png_malloc($0,$109)|0);\n   $storemerge = $120;\n  } else {\n   $119 = (_png_calloc($0,$109)|0);\n   $storemerge = $119;\n  }\n  HEAP32[$113>>2] = $storemerge;\n  $121 = (_png_malloc($0,$109)|0);\n  HEAP32[$115>>2] = $121;\n  $122 = HEAP32[$113>>2]|0;\n  $123 = ((($122)) + 32|0);\n  $124 = $123;\n  $125 = $124 & 15;\n  $126 = (0 - ($125))|0;\n  $127 = (($123) + ($126)|0);\n  $128 = ((($127)) + -1|0);\n  $129 = ((($0)) + 384|0);\n  HEAP32[$129>>2] = $128;\n  $130 = ((($121)) + 32|0);\n  $131 = $130;\n  $132 = $131 & 15;\n  $133 = (0 - ($132))|0;\n  $134 = (($130) + ($133)|0);\n  $135 = ((($134)) + -1|0);\n  $136 = ((($0)) + 380|0);\n  HEAP32[$136>>2] = $135;\n  HEAP32[$110>>2] = $109;\n }\n $137 = ((($0)) + 364|0);\n $138 = HEAP32[$137>>2]|0;\n $139 = ($138|0)==(-1);\n if ($139) {\n  _png_error($0,25576);\n  // unreachable;\n }\n $140 = ((($0)) + 380|0);\n $141 = HEAP32[$140>>2]|0;\n $142 = (($138) + 1)|0;\n _memset(($141|0),0,($142|0))|0;\n $143 = ((($0)) + 788|0);\n $144 = HEAP32[$143>>2]|0;\n $145 = ($144|0)==(0|0);\n if (!($145)) {\n  $146 = ((($0)) + 792|0);\n  HEAP32[$146>>2] = 0;\n  HEAP32[$143>>2] = 0;\n  _png_free($0,$144);\n }\n $147 = (_png_inflate_claim($0,1229209940)|0);\n $148 = ($147|0)==(0);\n if ($148) {\n  $151 = ((($0)) + 212|0);\n  $152 = HEAP32[$151>>2]|0;\n  $153 = $152 | 64;\n  HEAP32[$151>>2] = $153;\n  return;\n } else {\n  $149 = ((($0)) + 248|0);\n  $150 = HEAP32[$149>>2]|0;\n  _png_error($0,$150);\n  // unreachable;\n }\n}\nfunction _png_read_transform_info($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;\n var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond76 = 0, $or$cond77$not = 0, $or$cond78 = 0, $or$cond79 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 216|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 4096;\n $5 = ($4|0)==(0);\n do {\n  if (!($5)) {\n   $6 = ((($1)) + 25|0);\n   $7 = HEAP8[$6>>0]|0;\n   $8 = ($7<<24>>24)==(3);\n   $9 = ((($0)) + 428|0);\n   $10 = HEAP16[$9>>1]|0;\n   $11 = ($10<<16>>16)==(0);\n   if ($8) {\n    $$ = $11 ? 2 : 6;\n    HEAP8[$6>>0] = $$;\n    $12 = ((($1)) + 24|0);\n    HEAP8[$12>>0] = 8;\n    $13 = ((($1)) + 22|0);\n    HEAP16[$13>>1] = 0;\n    $14 = ((($0)) + 416|0);\n    $15 = HEAP32[$14>>2]|0;\n    $16 = ($15|0)==(0|0);\n    if (!($16)) {\n     break;\n    }\n    _png_error($0,25529);\n    // unreachable;\n   }\n   $17 = $3 & 33554432;\n   $18 = ($17|0)==(0);\n   $or$cond = $18 | $11;\n   if (!($or$cond)) {\n    $19 = $7&255;\n    $20 = $19 | 4;\n    $21 = $20&255;\n    HEAP8[$6>>0] = $21;\n   }\n   $22 = ((($1)) + 24|0);\n   $23 = HEAP8[$22>>0]|0;\n   $24 = ($23&255)<(8);\n   if ($24) {\n    HEAP8[$22>>0] = 8;\n   }\n   $25 = ((($1)) + 22|0);\n   HEAP16[$25>>1] = 0;\n  }\n } while(0);\n $26 = $3 & 128;\n $27 = ($26|0)==(0);\n if (!($27)) {\n  $28 = ((($1)) + 170|0);\n  $29 = ((($0)) + 452|0);\n  ;HEAP16[$28>>1]=HEAP16[$29>>1]|0;HEAP16[$28+2>>1]=HEAP16[$29+2>>1]|0;HEAP16[$28+4>>1]=HEAP16[$29+4>>1]|0;HEAP16[$28+6>>1]=HEAP16[$29+6>>1]|0;HEAP16[$28+8>>1]=HEAP16[$29+8>>1]|0;\n }\n $30 = ((($0)) + 824|0);\n $31 = HEAP32[$30>>2]|0;\n $32 = ((($1)) + 40|0);\n HEAP32[$32>>2] = $31;\n $33 = ((($1)) + 24|0);\n $34 = HEAP16[$33>>1]|0;\n $35 = $34&255;\n $36 = ($35<<24>>24)==(16);\n $37 = ($34&65535) >>> 8;\n $38 = $37&255;\n if ($36) {\n  $39 = $3 & 67108864;\n  $40 = ($39|0)==(0);\n  if ($40) {\n   $130 = 16;\n  } else {\n   HEAP8[$33>>0] = 8;\n   $130 = 8;\n  }\n  $41 = $3 & 1024;\n  $42 = ($41|0)==(0);\n  if ($42) {\n   $63 = $130;\n  } else {\n   HEAP8[$33>>0] = 8;\n   $63 = 8;\n  }\n } else {\n  $63 = $35;\n }\n $43 = $3 & 16384;\n $44 = ($43|0)==(0);\n if ($44) {\n  $53 = $38;\n } else {\n  $45 = ((($1)) + 25|0);\n  $46 = $37&65535;\n  $47 = $46 | 2;\n  $48 = $47&255;\n  HEAP8[$45>>0] = $48;\n  $53 = $48;\n }\n $49 = $3 & 6291456;\n $50 = ($49|0)==(0);\n if ($50) {\n  $59 = $53;\n } else {\n  $51 = ((($1)) + 25|0);\n  $52 = $53&255;\n  $54 = $52 & 253;\n  $55 = $54&255;\n  HEAP8[$51>>0] = $55;\n  $59 = $55;\n }\n $56 = $3 & 64;\n $57 = ($56|0)==(0);\n L30: do {\n  if ($57) {\n   $66 = $59;\n  } else {\n   $58 = ((($1)) + 25|0);\n   switch ($59<<24>>24) {\n   case 6: case 2:  {\n    break;\n   }\n   default: {\n    $66 = $59;\n    break L30;\n   }\n   }\n   $60 = ((($0)) + 612|0);\n   $61 = HEAP32[$60>>2]|0;\n   $62 = ($61|0)!=(0|0);\n   $64 = ($63<<24>>24)==(8);\n   $or$cond76 = $62 & $64;\n   if ($or$cond76) {\n    HEAP8[$58>>0] = 3;\n    $66 = 3;\n   } else {\n    $66 = $59;\n   }\n  }\n } while(0);\n $65 = $3 & 512;\n $notlhs = ($65|0)==(0);\n $notrhs = ($63<<24>>24)!=(8);\n $or$cond77$not = $notrhs | $notlhs;\n $67 = ($66<<24>>24)==(3);\n $or$cond78 = $or$cond77$not | $67;\n if ($or$cond78) {\n  $70 = $63;\n } else {\n  HEAP8[$33>>0] = 16;\n  $70 = 16;\n }\n $68 = $3 & 4;\n $69 = ($68|0)!=(0);\n $71 = ($70&255)<(8);\n $or$cond79 = $69 & $71;\n if ($or$cond79) {\n  HEAP8[$33>>0] = 8;\n  $105 = 8;\n } else {\n  $105 = $70;\n }\n $72 = ((($1)) + 25|0);\n $73 = ($66<<24>>24)==(3);\n do {\n  if ($73) {\n   $74 = ((($1)) + 29|0);\n   HEAP8[$74>>0] = 1;\n   $89 = 1;\n  } else {\n   $75 = $66 & 2;\n   $76 = ($75<<24>>24)==(0);\n   $77 = ((($1)) + 29|0);\n   if ($76) {\n    HEAP8[$77>>0] = 1;\n    $89 = 1;\n    break;\n   } else {\n    HEAP8[$77>>0] = 3;\n    $89 = 3;\n    break;\n   }\n  }\n } while(0);\n $78 = $3 & 262144;\n $79 = ($78|0)==(0);\n if ($79) {\n  $85 = $66;\n } else {\n  $80 = $66&255;\n  $81 = $80 & 251;\n  $82 = $81&255;\n  HEAP8[$72>>0] = $82;\n  $83 = ((($1)) + 22|0);\n  HEAP16[$83>>1] = 0;\n  $85 = $82;\n }\n $84 = $85 & 4;\n $86 = ($84<<24>>24)==(0);\n if ($86) {\n  $94 = $89;\n } else {\n  $87 = ((($1)) + 29|0);\n  $88 = (($89) + 1)<<24>>24;\n  HEAP8[$87>>0] = $88;\n  $94 = $88;\n }\n $90 = $3 & 32768;\n $91 = ($90|0)==(0);\n L54: do {\n  if ($91) {\n   $109 = $94;\n  } else {\n   switch ($85<<24>>24) {\n   case 0: case 2:  {\n    break;\n   }\n   default: {\n    $109 = $94;\n    break L54;\n   }\n   }\n   $92 = ((($1)) + 29|0);\n   $93 = (($94) + 1)<<24>>24;\n   HEAP8[$92>>0] = $93;\n   $95 = $3 & 16777216;\n   $96 = ($95|0)==(0);\n   if ($96) {\n    $109 = $93;\n   } else {\n    $97 = $85&255;\n    $98 = $97 | 4;\n    $99 = $98&255;\n    HEAP8[$72>>0] = $99;\n    $109 = $93;\n   }\n  }\n } while(0);\n $100 = $3 & 1048576;\n $101 = ($100|0)==(0);\n if ($101) {\n  $113 = $109;$115 = $105;\n } else {\n  $102 = ((($0)) + 204|0);\n  $103 = HEAP16[$102>>1]|0;\n  $104 = $103&255;\n  $106 = ($105&255)<($104&255);\n  $107 = ($103&65535) >>> 8;\n  $108 = $107&255;\n  if ($106) {\n   HEAP8[$33>>0] = $104;\n   $131 = $104;\n  } else {\n   $131 = $105;\n  }\n  $110 = ($109&255)<($108&255);\n  if ($110) {\n   $111 = ((($1)) + 29|0);\n   HEAP8[$111>>0] = $108;\n   $113 = $108;$115 = $131;\n  } else {\n   $113 = $109;$115 = $131;\n  }\n }\n $112 = $113&255;\n $114 = $115&255;\n $116 = Math_imul($114, $112)|0;\n $117 = $116&255;\n $118 = ((($1)) + 30|0);\n HEAP8[$118>>0] = $117;\n $119 = $116 & 255;\n $120 = ($119>>>0)>(7);\n $121 = HEAP32[$1>>2]|0;\n if ($120) {\n  $122 = $119 >>> 3;\n  $123 = Math_imul($122, $121)|0;\n  $128 = $123;\n  $127 = ((($1)) + 12|0);\n  HEAP32[$127>>2] = $128;\n  $129 = ((($0)) + 404|0);\n  HEAP32[$129>>2] = $128;\n  return;\n } else {\n  $124 = Math_imul($119, $121)|0;\n  $125 = (($124) + 7)|0;\n  $126 = $125 >>> 3;\n  $128 = $126;\n  $127 = ((($1)) + 12|0);\n  HEAP32[$127>>2] = $128;\n  $129 = ((($0)) + 404|0);\n  HEAP32[$129>>2] = $128;\n  return;\n }\n}\nfunction _png_init_read_transformations($0) {\n $0 = $0|0;\n var $$0 = 0, $$0$i = 0, $$034$i = 0, $$0423456 = 0, $$0424464 = 0, $$0425 = 0, $$04253$i = 0, $$0426 = 0, $$0427 = 0, $$0428 = 0, $$0429458 = 0, $$0430460 = 0, $$04355$i = 0, $$04454$i = 0, $$145$i = 0, $$1454 = 0, $$2453 = 0, $$3$ph$i = 0, $$lobit$i = 0, $$pre478 = 0;\n var $$pre479 = 0, $$pre481 = 0, $$pre482 = 0, $$pre484 = 0, $$pre485 = 0, $$pre486 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0204$1 = 0, $$sroa$0205$0 = 0, $$sroa$0205$0$$sroa_idx = 0, $$sroa$0205$1 = 0, $$sroa$10$1 = 0, $$sroa$5$0$$sroa_idx = 0, $$sroa$6$1 = 0, $$sroa$6206$0 = 0, $$sroa$6206$0$$sroa_idx = 0, $$sroa$6206$1 = 0, $$sroa$7$0$$sroa_idx = 0, $$sroa$9$0 = 0, $$sroa$9$0$$sroa_idx = 0;\n var $$sroa$9$1 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;\n var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;\n var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;\n var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;\n var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;\n var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;\n var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;\n var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;\n var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;\n var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;\n var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;\n var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;\n var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;\n var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;\n var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;\n var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;\n var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;\n var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;\n var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;\n var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;\n var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;\n var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;\n var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;\n var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;\n var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;\n var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;\n var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;\n var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;\n var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;\n var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;\n var $657 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0;\n var $exitcond472 = 0, $exitcond473 = 0, $exitcond474 = 0, $exitcond475 = 0, $exitcond476 = 0, $notlhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond3 = 0, $or$cond444 = 0, $or$cond469 = 0, $or$cond470 = 0, $or$cond471 = 0, $or$cond5 = 0, $storemerge = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = ((($0)) + 824|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0);\n $5 = ((($0)) + 488|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)!=(0);\n do {\n  if ($4) {\n   if ($7) {\n    $16 = (_png_reciprocal($6)|0);\n    HEAP32[$2>>2] = $16;\n    $$0 = 0;\n    break;\n   } else {\n    HEAP32[$2>>2] = 100000;\n    HEAP32[$5>>2] = 100000;\n    $$0 = 0;\n    break;\n   }\n  } else {\n   if (!($7)) {\n    $15 = (_png_reciprocal($3)|0);\n    HEAP32[$5>>2] = $15;\n    $$0 = 0;\n    break;\n   }\n   $8 = (_png_muldiv($1,$3,$6,100000)|0);\n   $9 = ($8|0)==(0);\n   if ($9) {\n    $14 = 1;\n   } else {\n    $10 = HEAP32[$1>>2]|0;\n    $11 = (_png_gamma_significant($10)|0);\n    $12 = ($11|0)!=(0);\n    $14 = $12;\n   }\n   $13 = $14&1;\n   $$0 = $13;\n  }\n } while(0);\n $17 = ((($0)) + 898|0);\n $18 = HEAP16[$17>>1]|0;\n $19 = $18&65535;\n $20 = $19 | 1;\n $21 = $20&65535;\n HEAP16[$17>>1] = $21;\n $22 = ($$0|0)==(0);\n $23 = ((($0)) + 216|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = $24 & -8193;\n $26 = $24 | 8192;\n $storemerge = $22 ? $25 : $26;\n HEAP32[$23>>2] = $storemerge;\n $27 = $storemerge & 262272;\n $28 = ($27|0)==(262144);\n if ($28) {\n  $29 = $storemerge & -41943297;\n  HEAP32[$23>>2] = $29;\n  $30 = ((($0)) + 212|0);\n  $31 = HEAP32[$30>>2]|0;\n  $32 = $31 & -8193;\n  HEAP32[$30>>2] = $32;\n  $33 = ((($0)) + 428|0);\n  HEAP16[$33>>1] = 0;\n }\n $34 = HEAP32[$5>>2]|0;\n $35 = (_png_gamma_significant($34)|0);\n $36 = ($35|0)==(0);\n $37 = HEAP32[$23>>2]|0;\n if ($36) {\n  $38 = $37 & -8388609;\n  HEAP32[$23>>2] = $38;\n  $39 = ((($0)) + 212|0);\n  $40 = HEAP32[$39>>2]|0;\n  $41 = $40 & -8193;\n  HEAP32[$39>>2] = $41;\n  $43 = $38;\n } else {\n  $43 = $37;\n }\n $42 = $43 & 6291456;\n $44 = ($42|0)==(0);\n if ($44) {\n  $46 = $43;\n } else {\n  _png_colorspace_set_rgb_coefficients($0);\n  $$pre478 = HEAP32[$23>>2]|0;\n  $46 = $$pre478;\n }\n $45 = $46 & 256;\n $47 = ($45|0)==(0);\n if ($47) {\n  $55 = $46 & 16512;\n  $56 = ($55|0)==(16512);\n  if ($56) {\n   $57 = ((($0)) + 454|0);\n   $58 = HEAP16[$57>>1]|0;\n   $59 = ((($0)) + 456|0);\n   $60 = HEAP32[$59>>2]|0;\n   $61 = $60&65535;\n   $62 = ($58<<16>>16)==($61<<16>>16);\n   if ($62) {\n    $63 = $60 >>> 16;\n    $64 = $63&65535;\n    $65 = ($58<<16>>16)==($64<<16>>16);\n    if ($65) {\n     $66 = ((($0)) + 208|0);\n     $67 = HEAP32[$66>>2]|0;\n     $68 = $67 | 2048;\n     HEAP32[$66>>2] = $68;\n     $69 = ((($0)) + 460|0);\n     HEAP16[$69>>1] = $58;\n    }\n   }\n  }\n } else {\n  $48 = ((($0)) + 435|0);\n  $49 = HEAP8[$48>>0]|0;\n  $50 = $49 & 2;\n  $51 = ($50<<24>>24)==(0);\n  if ($51) {\n   $52 = ((($0)) + 208|0);\n   $53 = HEAP32[$52>>2]|0;\n   $54 = $53 | 2048;\n   HEAP32[$52>>2] = $54;\n  }\n }\n $70 = ((($0)) + 435|0);\n $71 = HEAP8[$70>>0]|0;\n $72 = ($71<<24>>24)==(3);\n if ($72) {\n  $73 = ((($0)) + 428|0);\n  $74 = HEAP16[$73>>1]|0;\n  $75 = ($74<<16>>16)==(0);\n  L33: do {\n   if ($75) {\n    $$3$ph$i = 0;\n    label = 29;\n   } else {\n    $76 = ((($0)) + 528|0);\n    $77 = HEAP32[$76>>2]|0;\n    $78 = $74&65535;\n    $$04355$i = 0;$$04454$i = 0;\n    while(1) {\n     $79 = (($77) + ($$04355$i)|0);\n     $80 = HEAP8[$79>>0]|0;\n     $81 = ($80<<24>>24)==(-1);\n     if ($81) {\n      $$145$i = $$04454$i;\n     } else {\n      $82 = ($80<<24>>24)==(0);\n      if ($82) {\n       $$145$i = 1;\n      } else {\n       $92 = $46;\n       break L33;\n      }\n     }\n     $83 = (($$04355$i) + 1)|0;\n     $84 = ($83|0)<($78|0);\n     if ($84) {\n      $$04355$i = $83;$$04454$i = $$145$i;\n     } else {\n      $$3$ph$i = $$145$i;\n      label = 29;\n      break;\n     }\n    }\n   }\n  } while(0);\n  if ((label|0) == 29) {\n   $85 = $46 & -8388609;\n   HEAP32[$23>>2] = $85;\n   $86 = ((($0)) + 212|0);\n   $87 = HEAP32[$86>>2]|0;\n   $88 = $87 & -8193;\n   HEAP32[$86>>2] = $88;\n   $89 = ($$3$ph$i|0)==(0);\n   $90 = $46 & -8388993;\n   if ($89) {\n    HEAP32[$23>>2] = $90;\n    $92 = $90;\n   } else {\n    $92 = $85;\n   }\n  }\n  $91 = $92 & 4352;\n  $93 = ($91|0)==(4352);\n  if ($93) {\n   $94 = ((($0)) + 452|0);\n   $95 = HEAP8[$94>>0]|0;\n   $96 = $95&255;\n   $97 = ((($0)) + 416|0);\n   $98 = HEAP32[$97>>2]|0;\n   $99 = (($98) + (($96*3)|0)|0);\n   $100 = HEAP8[$99>>0]|0;\n   $101 = $100&255;\n   $102 = ((($0)) + 454|0);\n   HEAP16[$102>>1] = $101;\n   $103 = (((($98) + (($96*3)|0)|0)) + 1|0);\n   $104 = HEAP8[$103>>0]|0;\n   $105 = $104&255;\n   $106 = ((($0)) + 456|0);\n   HEAP16[$106>>1] = $105;\n   $107 = (((($98) + (($96*3)|0)|0)) + 2|0);\n   $108 = HEAP8[$107>>0]|0;\n   $109 = $108&255;\n   $110 = ((($0)) + 458|0);\n   HEAP16[$110>>1] = $109;\n   $111 = $92 & 34078720;\n   $112 = ($111|0)==(524288);\n   if ($112) {\n    $113 = $74&65535;\n    if ($75) {\n     $161 = $92;\n    } else {\n     $114 = ((($0)) + 528|0);\n     $115 = HEAP32[$114>>2]|0;\n     $$04253$i = 0;\n     while(1) {\n      $116 = (($115) + ($$04253$i)|0);\n      $117 = HEAP8[$116>>0]|0;\n      $118 = $117&255;\n      $119 = $118 ^ 255;\n      $120 = $119&255;\n      HEAP8[$116>>0] = $120;\n      $121 = (($$04253$i) + 1)|0;\n      $exitcond$i = ($121|0)==($113|0);\n      if ($exitcond$i) {\n       break;\n      } else {\n       $$04253$i = $121;\n      }\n     }\n     $$pre479 = HEAP32[$23>>2]|0;\n     $161 = $$pre479;\n    }\n   } else {\n    $161 = $92;\n   }\n  } else {\n   $161 = $92;\n  }\n } else {\n  $$lobit$i = $71 & 4;\n  $122 = ($$lobit$i<<24>>24)==(0);\n  if ($122) {\n   $123 = ((($0)) + 428|0);\n   $124 = HEAP16[$123>>1]|0;\n   $125 = ($124<<16>>16)==(0);\n   $126 = $46 & -8388609;\n   HEAP32[$23>>2] = $126;\n   $127 = ((($0)) + 212|0);\n   $128 = HEAP32[$127>>2]|0;\n   $129 = $128 & -8193;\n   HEAP32[$127>>2] = $129;\n   $130 = $46 & -8388993;\n   if ($125) {\n    HEAP32[$23>>2] = $130;\n    $132 = $130;\n   } else {\n    $132 = $126;\n   }\n  } else {\n   $132 = $46;\n  }\n  $131 = $132 & 4352;\n  $133 = ($131|0)==(4352);\n  $134 = $71 & 2;\n  $135 = ($134<<24>>24)==(0);\n  $or$cond$i = $135 & $133;\n  if ($or$cond$i) {\n   $136 = ((($0)) + 460|0);\n   $137 = HEAP16[$136>>1]|0;\n   $138 = $137&65535;\n   $139 = ((($0)) + 540|0);\n   $140 = HEAP16[$139>>1]|0;\n   $141 = $140&65535;\n   $142 = ((($0)) + 436|0);\n   $143 = HEAP8[$142>>0]|0;\n   switch ($143<<24>>24) {\n   case 1:  {\n    $144 = ($138*255)|0;\n    $145 = ($141*255)|0;\n    $$0$i = $145;$$034$i = $144;\n    break;\n   }\n   case 2:  {\n    $146 = ($138*85)|0;\n    $147 = ($141*85)|0;\n    $$0$i = $147;$$034$i = $146;\n    break;\n   }\n   case 4:  {\n    $148 = ($138*17)|0;\n    $149 = ($141*17)|0;\n    $$0$i = $149;$$034$i = $148;\n    break;\n   }\n   default: {\n    $$0$i = $141;$$034$i = $138;\n   }\n   }\n   $150 = $$034$i&65535;\n   $151 = ((($0)) + 458|0);\n   HEAP16[$151>>1] = $150;\n   $152 = ((($0)) + 456|0);\n   HEAP16[$152>>1] = $150;\n   $153 = ((($0)) + 454|0);\n   HEAP16[$153>>1] = $150;\n   $154 = $132 & 33554432;\n   $155 = ($154|0)==(0);\n   if ($155) {\n    $156 = $$0$i&65535;\n    $157 = ((($0)) + 538|0);\n    HEAP16[$157>>1] = $156;\n    $158 = ((($0)) + 536|0);\n    HEAP16[$158>>1] = $156;\n    $159 = ((($0)) + 534|0);\n    HEAP16[$159>>1] = $156;\n    $161 = $132;\n   } else {\n    $161 = $132;\n   }\n  } else {\n   $161 = $132;\n  }\n }\n $160 = $161 & 896;\n $162 = ($160|0)==(640);\n if ($162) {\n  $163 = ((($0)) + 436|0);\n  $164 = HEAP8[$163>>0]|0;\n  $165 = ($164<<24>>24)==(16);\n  if (!($165)) {\n   $166 = ((($0)) + 454|0);\n   $167 = HEAP16[$166>>1]|0;\n   $168 = $167&65535;\n   $169 = ($168*255)|0;\n   $170 = (($169) + 32895)|0;\n   $171 = $170 >>> 16;\n   $172 = $171&65535;\n   HEAP16[$166>>1] = $172;\n   $173 = ((($0)) + 456|0);\n   $174 = HEAP32[$173>>2]|0;\n   $175 = $174 & 65535;\n   $176 = ($175*255)|0;\n   $177 = (($176) + 32895)|0;\n   $178 = $177 >>> 16;\n   $179 = $178&65535;\n   HEAP16[$173>>1] = $179;\n   $180 = ((($0)) + 458|0);\n   $181 = $174 >>> 16;\n   $182 = ($181*255)|0;\n   $183 = (($182) + 32895)|0;\n   $184 = $183 >>> 16;\n   $185 = $184&65535;\n   HEAP16[$180>>1] = $185;\n   $186 = ((($0)) + 460|0);\n   $187 = HEAP16[$186>>1]|0;\n   $188 = $187&65535;\n   $189 = ($188*255)|0;\n   $190 = (($189) + 32895)|0;\n   $191 = $190 >>> 16;\n   $192 = $191&65535;\n   HEAP16[$186>>1] = $192;\n  }\n }\n $193 = $161 & 67109888;\n $notlhs = ($193|0)!=(0);\n $194 = $161 & 384;\n $195 = ($194|0)==(128);\n $196 = $195 & $notlhs;\n if ($196) {\n  $197 = ((($0)) + 436|0);\n  $198 = HEAP8[$197>>0]|0;\n  $199 = ($198<<24>>24)==(16);\n  if ($199) {\n   $200 = ((($0)) + 454|0);\n   $201 = HEAP16[$200>>1]|0;\n   $202 = $201&65535;\n   $203 = ($202*257)|0;\n   $204 = $203&65535;\n   HEAP16[$200>>1] = $204;\n   $205 = ((($0)) + 456|0);\n   $206 = HEAP32[$205>>2]|0;\n   $207 = $206 & 65535;\n   $208 = ($207*257)|0;\n   $209 = $208&65535;\n   HEAP16[$205>>1] = $209;\n   $210 = ((($0)) + 458|0);\n   $211 = $206 >>> 16;\n   $212 = ($211*257)|0;\n   $213 = $212&65535;\n   HEAP16[$210>>1] = $213;\n   $214 = ((($0)) + 460|0);\n   $215 = HEAP16[$214>>1]|0;\n   $216 = $215&65535;\n   $217 = ($216*257)|0;\n   $218 = $217&65535;\n   HEAP16[$214>>1] = $218;\n  }\n }\n $219 = ((($0)) + 462|0);\n $220 = ((($0)) + 452|0);\n ;HEAP16[$219>>1]=HEAP16[$220>>1]|0;HEAP16[$219+2>>1]=HEAP16[$220+2>>1]|0;HEAP16[$219+4>>1]=HEAP16[$220+4>>1]|0;HEAP16[$219+6>>1]=HEAP16[$220+6>>1]|0;HEAP16[$219+8>>1]=HEAP16[$220+8>>1]|0;\n $221 = $161 & 8192;\n $222 = ($221|0)==(0);\n do {\n  if ($222) {\n   $223 = $161 & 6291456;\n   $224 = ($223|0)==(0);\n   if ($224) {\n    $232 = $161;\n   } else {\n    $225 = HEAP32[$2>>2]|0;\n    $226 = (_png_gamma_significant($225)|0);\n    $227 = ($226|0)==(0);\n    if (!($227)) {\n     label = 66;\n     break;\n    }\n    $228 = HEAP32[$5>>2]|0;\n    $229 = (_png_gamma_significant($228)|0);\n    $230 = ($229|0)==(0);\n    if (!($230)) {\n     label = 66;\n     break;\n    }\n    $$pre481 = HEAP32[$23>>2]|0;\n    $232 = $$pre481;\n   }\n   $231 = $232 & 128;\n   $233 = ($231|0)==(0);\n   if (!($233)) {\n    $234 = HEAP32[$2>>2]|0;\n    $235 = (_png_gamma_significant($234)|0);\n    $236 = ($235|0)==(0);\n    if (!($236)) {\n     label = 66;\n     break;\n    }\n    $237 = HEAP32[$5>>2]|0;\n    $238 = (_png_gamma_significant($237)|0);\n    $239 = ($238|0)==(0);\n    if (!($239)) {\n     label = 66;\n     break;\n    }\n    $240 = ((($0)) + 446|0);\n    $241 = HEAP8[$240>>0]|0;\n    $242 = ($241<<24>>24)==(3);\n    if ($242) {\n     $243 = ((($0)) + 448|0);\n     $244 = HEAP32[$243>>2]|0;\n     $245 = (_png_gamma_significant($244)|0);\n     $246 = ($245|0)==(0);\n     if (!($246)) {\n      label = 66;\n      break;\n     }\n    }\n   }\n   $247 = HEAP32[$23>>2]|0;\n   $248 = $247 & 8388608;\n   $249 = ($248|0)==(0);\n   if ($249) {\n    $532 = $247;\n   } else {\n    $250 = HEAP32[$5>>2]|0;\n    $251 = (_png_gamma_significant($250)|0);\n    $252 = ($251|0)==(0);\n    if (!($252)) {\n     label = 66;\n     break;\n    }\n    $$pre484 = HEAP32[$23>>2]|0;\n    $532 = $$pre484;\n   }\n   $531 = $532 & 128;\n   $533 = ($531|0)==(0);\n   if ($533) {\n    $606 = $532;\n   } else {\n    $534 = HEAP8[$70>>0]|0;\n    $535 = ($534<<24>>24)==(3);\n    if ($535) {\n     $536 = ((($0)) + 428|0);\n     $537 = HEAP16[$536>>1]|0;\n     $538 = $537&65535;\n     $539 = ((($0)) + 416|0);\n     $540 = HEAP32[$539>>2]|0;\n     $541 = ((($0)) + 454|0);\n     $542 = HEAP16[$541>>1]|0;\n     $543 = $542&255;\n     $544 = ((($0)) + 456|0);\n     $545 = HEAP32[$544>>2]|0;\n     $546 = $545&255;\n     $547 = $545 >>> 16;\n     $548 = $547&255;\n     $549 = ($537<<16>>16)==(0);\n     if ($549) {\n      $604 = $532;\n     } else {\n      $550 = ((($0)) + 528|0);\n      $551 = $542 & 255;\n      $552 = $551&65535;\n      $553 = $545 & 255;\n      $554 = $547 & 255;\n      $$0429458 = 0;\n      while(1) {\n       $555 = HEAP32[$550>>2]|0;\n       $556 = (($555) + ($$0429458)|0);\n       $557 = HEAP8[$556>>0]|0;\n       switch ($557<<24>>24) {\n       case 0:  {\n        $$sroa$0$0$$sroa_idx = (($540) + (($$0429458*3)|0)|0);\n        HEAP8[$$sroa$0$0$$sroa_idx>>0] = $543;\n        $$sroa$5$0$$sroa_idx = (((($540) + (($$0429458*3)|0)|0)) + 1|0);\n        HEAP8[$$sroa$5$0$$sroa_idx>>0] = $546;\n        $$sroa$7$0$$sroa_idx = (((($540) + (($$0429458*3)|0)|0)) + 2|0);\n        HEAP8[$$sroa$7$0$$sroa_idx>>0] = $548;\n        break;\n       }\n       case -1:  {\n        break;\n       }\n       default: {\n        $558 = (($540) + (($$0429458*3)|0)|0);\n        $559 = HEAP8[$558>>0]|0;\n        $560 = $559&255;\n        $561 = $557&255;\n        $562 = Math_imul($560, $561)|0;\n        $563 = $561 ^ 255;\n        $564 = Math_imul($563, $552)|0;\n        $565 = (($564) + 128)|0;\n        $566 = (($565) + ($562))|0;\n        $567 = $566 >>> 8;\n        $568 = $567 & 255;\n        $569 = (($568) + ($566))|0;\n        $570 = $569 >>> 8;\n        $571 = $570&255;\n        HEAP8[$558>>0] = $571;\n        $572 = (((($540) + (($$0429458*3)|0)|0)) + 1|0);\n        $573 = HEAP8[$572>>0]|0;\n        $574 = $573&255;\n        $575 = HEAP8[$556>>0]|0;\n        $576 = $575&255;\n        $577 = Math_imul($576, $574)|0;\n        $578 = $576 ^ 255;\n        $579 = Math_imul($578, $553)|0;\n        $580 = (($577) + 128)|0;\n        $581 = (($580) + ($579))|0;\n        $582 = $581 >>> 8;\n        $583 = $582 & 255;\n        $584 = (($583) + ($581))|0;\n        $585 = $584 >>> 8;\n        $586 = $585&255;\n        HEAP8[$572>>0] = $586;\n        $587 = (((($540) + (($$0429458*3)|0)|0)) + 2|0);\n        $588 = HEAP8[$587>>0]|0;\n        $589 = $588&255;\n        $590 = HEAP8[$556>>0]|0;\n        $591 = $590&255;\n        $592 = Math_imul($591, $589)|0;\n        $593 = $591 ^ 255;\n        $594 = Math_imul($593, $554)|0;\n        $595 = (($592) + 128)|0;\n        $596 = (($595) + ($594))|0;\n        $597 = $596 >>> 8;\n        $598 = $597 & 255;\n        $599 = (($598) + ($596))|0;\n        $600 = $599 >>> 8;\n        $601 = $600&255;\n        HEAP8[$587>>0] = $601;\n       }\n       }\n       $602 = (($$0429458) + 1)|0;\n       $exitcond474 = ($602|0)==($538|0);\n       if ($exitcond474) {\n        break;\n       } else {\n        $$0429458 = $602;\n       }\n      }\n      $$pre485 = HEAP32[$23>>2]|0;\n      $604 = $$pre485;\n     }\n     $603 = $604 & -129;\n     HEAP32[$23>>2] = $603;\n     $606 = $603;\n    } else {\n     $606 = $532;\n    }\n   }\n  } else {\n   label = 66;\n  }\n } while(0);\n do {\n  if ((label|0) == 66) {\n   $253 = ((($0)) + 436|0);\n   $254 = HEAP8[$253>>0]|0;\n   $255 = $254&255;\n   _png_build_gamma_table($0,$255);\n   $256 = HEAP32[$23>>2]|0;\n   $257 = $256 & 128;\n   $258 = ($257|0)==(0);\n   if ($258) {\n    $501 = HEAP8[$70>>0]|0;\n    $502 = ($501<<24>>24)==(3);\n    if (!($502)) {\n     $606 = $256;\n     break;\n    }\n    $503 = $256 & 4096;\n    $504 = ($503|0)==(0);\n    $505 = $256 & 6291456;\n    $506 = ($505|0)==(0);\n    $or$cond444 = $504 | $506;\n    if (!($or$cond444)) {\n     $606 = $256;\n     break;\n    }\n    $507 = ((($0)) + 416|0);\n    $508 = HEAP32[$507>>2]|0;\n    $509 = ((($0)) + 420|0);\n    $510 = HEAP16[$509>>1]|0;\n    $511 = $510&65535;\n    $512 = ($510<<16>>16)==(0);\n    if (!($512)) {\n     $513 = ((($0)) + 492|0);\n     $$pre482 = HEAP32[$513>>2]|0;\n     $$0430460 = 0;\n     while(1) {\n      $514 = (($508) + (($$0430460*3)|0)|0);\n      $515 = HEAP8[$514>>0]|0;\n      $516 = $515&255;\n      $517 = (($$pre482) + ($516)|0);\n      $518 = HEAP8[$517>>0]|0;\n      HEAP8[$514>>0] = $518;\n      $519 = (((($508) + (($$0430460*3)|0)|0)) + 1|0);\n      $520 = HEAP8[$519>>0]|0;\n      $521 = $520&255;\n      $522 = (($$pre482) + ($521)|0);\n      $523 = HEAP8[$522>>0]|0;\n      HEAP8[$519>>0] = $523;\n      $524 = (((($508) + (($$0430460*3)|0)|0)) + 2|0);\n      $525 = HEAP8[$524>>0]|0;\n      $526 = $525&255;\n      $527 = (($$pre482) + ($526)|0);\n      $528 = HEAP8[$527>>0]|0;\n      HEAP8[$524>>0] = $528;\n      $529 = (($$0430460) + 1)|0;\n      $exitcond475 = ($529|0)==($511|0);\n      if ($exitcond475) {\n       break;\n      } else {\n       $$0430460 = $529;\n      }\n     }\n    }\n    $530 = $256 & -8193;\n    HEAP32[$23>>2] = $530;\n    $606 = $530;\n    break;\n   }\n   $259 = $256 & 6291456;\n   $260 = ($259|0)==(0);\n   if (!($260)) {\n    _png_warning($0,25621);\n   }\n   $261 = HEAP8[$70>>0]|0;\n   $262 = ($261<<24>>24)==(3);\n   if (!($262)) {\n    $434 = ((($0)) + 446|0);\n    $435 = HEAP8[$434>>0]|0;\n    switch ($435<<24>>24) {\n    case 1:  {\n     $436 = HEAP32[$5>>2]|0;\n     $$0427 = $436;$$0428 = 100000;\n     break;\n    }\n    case 2:  {\n     $437 = HEAP32[$2>>2]|0;\n     $438 = (_png_reciprocal($437)|0);\n     $439 = HEAP32[$2>>2]|0;\n     $440 = HEAP32[$5>>2]|0;\n     $441 = (_png_reciprocal2($439,$440)|0);\n     $$0427 = $438;$$0428 = $441;\n     break;\n    }\n    case 3:  {\n     $442 = ((($0)) + 448|0);\n     $443 = HEAP32[$442>>2]|0;\n     $444 = (_png_reciprocal($443)|0);\n     $445 = HEAP32[$442>>2]|0;\n     $446 = HEAP32[$5>>2]|0;\n     $447 = (_png_reciprocal2($445,$446)|0);\n     $$0427 = $444;$$0428 = $447;\n     break;\n    }\n    default: {\n     _png_error($0,25674);\n     // unreachable;\n    }\n    }\n    $448 = (_png_gamma_significant($$0427)|0);\n    $449 = (_png_gamma_significant($$0428)|0);\n    $450 = ($448|0)!=(0);\n    if ($450) {\n     $451 = ((($0)) + 460|0);\n     $452 = HEAP16[$451>>1]|0;\n     $453 = $452&65535;\n     $454 = (_png_gamma_correct($0,$453,$$0427)|0);\n     $455 = ((($0)) + 470|0);\n     HEAP16[$455>>1] = $454;\n    }\n    $456 = ($449|0)!=(0);\n    if ($456) {\n     $457 = ((($0)) + 460|0);\n     $458 = HEAP16[$457>>1]|0;\n     $459 = $458&65535;\n     $460 = (_png_gamma_correct($0,$459,$$0428)|0);\n     HEAP16[$457>>1] = $460;\n    }\n    $461 = ((($0)) + 454|0);\n    $462 = HEAP16[$461>>1]|0;\n    $463 = ((($0)) + 456|0);\n    $464 = HEAP32[$463>>2]|0;\n    $465 = $464&65535;\n    $466 = ($462<<16>>16)==($465<<16>>16);\n    if ($466) {\n     $467 = $464 >>> 16;\n     $468 = $467&65535;\n     $469 = ((($0)) + 458|0);\n     $470 = ($462<<16>>16)==($468<<16>>16);\n     if ($470) {\n      $471 = ((($0)) + 460|0);\n      $472 = HEAP16[$471>>1]|0;\n      $473 = ($462<<16>>16)==($472<<16>>16);\n      if ($473) {\n       $496 = ((($0)) + 470|0);\n       $497 = HEAP16[$496>>1]|0;\n       $498 = ((($0)) + 468|0);\n       HEAP16[$498>>1] = $497;\n       $499 = ((($0)) + 466|0);\n       HEAP16[$499>>1] = $497;\n       $500 = ((($0)) + 464|0);\n       HEAP16[$500>>1] = $497;\n       HEAP16[$469>>1] = $462;\n       HEAP16[$463>>1] = $462;\n      } else {\n       label = 101;\n      }\n     } else {\n      label = 101;\n     }\n    } else {\n     label = 101;\n    }\n    if ((label|0) == 101) {\n     if ($450) {\n      $474 = $462&65535;\n      $475 = (_png_gamma_correct($0,$474,$$0427)|0);\n      $476 = ((($0)) + 464|0);\n      HEAP16[$476>>1] = $475;\n      $477 = HEAP16[$463>>1]|0;\n      $478 = $477&65535;\n      $479 = (_png_gamma_correct($0,$478,$$0427)|0);\n      $480 = ((($0)) + 466|0);\n      HEAP16[$480>>1] = $479;\n      $481 = ((($0)) + 458|0);\n      $482 = HEAP16[$481>>1]|0;\n      $483 = $482&65535;\n      $484 = (_png_gamma_correct($0,$483,$$0427)|0);\n      $485 = ((($0)) + 468|0);\n      HEAP16[$485>>1] = $484;\n     }\n     if ($456) {\n      $486 = HEAP16[$461>>1]|0;\n      $487 = $486&65535;\n      $488 = (_png_gamma_correct($0,$487,$$0428)|0);\n      HEAP16[$461>>1] = $488;\n      $489 = HEAP16[$463>>1]|0;\n      $490 = $489&65535;\n      $491 = (_png_gamma_correct($0,$490,$$0428)|0);\n      HEAP16[$463>>1] = $491;\n      $492 = ((($0)) + 458|0);\n      $493 = HEAP16[$492>>1]|0;\n      $494 = $493&65535;\n      $495 = (_png_gamma_correct($0,$494,$$0428)|0);\n      HEAP16[$492>>1] = $495;\n     }\n    }\n    HEAP8[$434>>0] = 1;\n    $$pre486 = HEAP32[$23>>2]|0;\n    $606 = $$pre486;\n    break;\n   }\n   $263 = ((($0)) + 416|0);\n   $264 = HEAP32[$263>>2]|0;\n   $265 = ((($0)) + 420|0);\n   $266 = HEAP16[$265>>1]|0;\n   $267 = $266&65535;\n   $268 = ((($0)) + 446|0);\n   $269 = HEAP8[$268>>0]|0;\n   switch ($269<<24>>24) {\n   case 2:  {\n    $270 = ((($0)) + 454|0);\n    $271 = HEAP16[$270>>1]|0;\n    $272 = $271&65535;\n    $273 = ((($0)) + 492|0);\n    $274 = HEAP32[$273>>2]|0;\n    $275 = (($274) + ($272)|0);\n    $276 = HEAP8[$275>>0]|0;\n    $277 = ((($0)) + 456|0);\n    $278 = HEAP32[$277>>2]|0;\n    $279 = $278 & 65535;\n    $280 = (($274) + ($279)|0);\n    $281 = HEAP8[$280>>0]|0;\n    $282 = $278 >>> 16;\n    $283 = (($274) + ($282)|0);\n    $284 = HEAP8[$283>>0]|0;\n    $285 = ((($0)) + 504|0);\n    $286 = HEAP32[$285>>2]|0;\n    $287 = (($286) + ($272)|0);\n    $288 = HEAP8[$287>>0]|0;\n    $289 = (($286) + ($279)|0);\n    $290 = HEAP8[$289>>0]|0;\n    $291 = (($286) + ($282)|0);\n    $292 = HEAP8[$291>>0]|0;\n    $$sroa$0204$1 = $288;$$sroa$0205$1 = $276;$$sroa$10$1 = $292;$$sroa$6$1 = $290;$$sroa$6206$1 = $281;$$sroa$9$1 = $284;\n    break;\n   }\n   case 1:  {\n    $293 = HEAP32[$5>>2]|0;\n    $$0425 = $293;$$0426 = 100000;\n    label = 74;\n    break;\n   }\n   case 3:  {\n    $294 = ((($0)) + 448|0);\n    $295 = HEAP32[$294>>2]|0;\n    $296 = (_png_reciprocal($295)|0);\n    $297 = HEAP32[$294>>2]|0;\n    $298 = HEAP32[$5>>2]|0;\n    $299 = (_png_reciprocal2($297,$298)|0);\n    $$0425 = $296;$$0426 = $299;\n    label = 74;\n    break;\n   }\n   default: {\n    $$0425 = 100000;$$0426 = 100000;\n    label = 74;\n   }\n   }\n   do {\n    if ((label|0) == 74) {\n     $300 = (_png_gamma_significant($$0426)|0);\n     $301 = ($300|0)==(0);\n     $302 = ((($0)) + 454|0);\n     $303 = HEAP16[$302>>1]|0;\n     if ($301) {\n      $314 = $303&255;\n      $315 = ((($0)) + 456|0);\n      $316 = HEAP32[$315>>2]|0;\n      $317 = $316&255;\n      $318 = $316 >>> 16;\n      $319 = $318&255;\n      $$sroa$0205$0 = $314;$$sroa$6206$0 = $317;$$sroa$9$0 = $319;\n     } else {\n      $304 = $303&65535;\n      $305 = (_png_gamma_8bit_correct($304,$$0426)|0);\n      $306 = ((($0)) + 456|0);\n      $307 = HEAP16[$306>>1]|0;\n      $308 = $307&65535;\n      $309 = (_png_gamma_8bit_correct($308,$$0426)|0);\n      $310 = ((($0)) + 458|0);\n      $311 = HEAP16[$310>>1]|0;\n      $312 = $311&65535;\n      $313 = (_png_gamma_8bit_correct($312,$$0426)|0);\n      $$sroa$0205$0 = $305;$$sroa$6206$0 = $309;$$sroa$9$0 = $313;\n     }\n     $320 = (_png_gamma_significant($$0425)|0);\n     $321 = ($320|0)==(0);\n     $322 = HEAP16[$302>>1]|0;\n     if ($321) {\n      $333 = $322&255;\n      $334 = ((($0)) + 456|0);\n      $335 = HEAP32[$334>>2]|0;\n      $336 = $335&255;\n      $337 = $335 >>> 16;\n      $338 = $337&255;\n      $$sroa$0204$1 = $333;$$sroa$0205$1 = $$sroa$0205$0;$$sroa$10$1 = $338;$$sroa$6$1 = $336;$$sroa$6206$1 = $$sroa$6206$0;$$sroa$9$1 = $$sroa$9$0;\n      break;\n     } else {\n      $323 = $322&65535;\n      $324 = (_png_gamma_8bit_correct($323,$$0425)|0);\n      $325 = ((($0)) + 456|0);\n      $326 = HEAP16[$325>>1]|0;\n      $327 = $326&65535;\n      $328 = (_png_gamma_8bit_correct($327,$$0425)|0);\n      $329 = ((($0)) + 458|0);\n      $330 = HEAP16[$329>>1]|0;\n      $331 = $330&65535;\n      $332 = (_png_gamma_8bit_correct($331,$$0425)|0);\n      $$sroa$0204$1 = $324;$$sroa$0205$1 = $$sroa$0205$0;$$sroa$10$1 = $332;$$sroa$6$1 = $328;$$sroa$6206$1 = $$sroa$6206$0;$$sroa$9$1 = $$sroa$9$0;\n      break;\n     }\n    }\n   } while(0);\n   $339 = ($266<<16>>16)==(0);\n   if (!($339)) {\n    $340 = ((($0)) + 428|0);\n    $341 = ((($0)) + 528|0);\n    $342 = ((($0)) + 504|0);\n    $343 = $$sroa$0204$1&255;\n    $344 = ((($0)) + 500|0);\n    $345 = $$sroa$6$1&255;\n    $346 = $$sroa$10$1&255;\n    $347 = ((($0)) + 492|0);\n    $$0424464 = 0;\n    while(1) {\n     $348 = HEAP16[$340>>1]|0;\n     $349 = $348&65535;\n     $350 = ($$0424464|0)<($349|0);\n     L159: do {\n      if ($350) {\n       $351 = HEAP32[$341>>2]|0;\n       $352 = (($351) + ($$0424464)|0);\n       $353 = HEAP8[$352>>0]|0;\n       switch ($353<<24>>24) {\n       case -1:  {\n        label = 86;\n        break L159;\n        break;\n       }\n       case 0:  {\n        $$sroa$0205$0$$sroa_idx = (($264) + (($$0424464*3)|0)|0);\n        HEAP8[$$sroa$0205$0$$sroa_idx>>0] = $$sroa$0205$1;\n        $$sroa$6206$0$$sroa_idx = (((($264) + (($$0424464*3)|0)|0)) + 1|0);\n        HEAP8[$$sroa$6206$0$$sroa_idx>>0] = $$sroa$6206$1;\n        $$sroa$9$0$$sroa_idx = (((($264) + (($$0424464*3)|0)|0)) + 2|0);\n        HEAP8[$$sroa$9$0$$sroa_idx>>0] = $$sroa$9$1;\n        break L159;\n        break;\n       }\n       default: {\n        $354 = (($264) + (($$0424464*3)|0)|0);\n        $355 = HEAP8[$354>>0]|0;\n        $356 = $355&255;\n        $357 = HEAP32[$342>>2]|0;\n        $358 = (($357) + ($356)|0);\n        $359 = HEAP8[$358>>0]|0;\n        $360 = $359&255;\n        $361 = $353&255;\n        $362 = Math_imul($360, $361)|0;\n        $363 = $361 ^ 255;\n        $364 = Math_imul($363, $343)|0;\n        $365 = (($364) + 128)|0;\n        $366 = (($365) + ($362))|0;\n        $367 = $366 >>> 8;\n        $368 = $367 & 255;\n        $369 = (($368) + ($366))|0;\n        $370 = $369 >>> 8;\n        $371 = $370 & 255;\n        $372 = HEAP32[$344>>2]|0;\n        $373 = (($372) + ($371)|0);\n        $374 = HEAP8[$373>>0]|0;\n        HEAP8[$354>>0] = $374;\n        $375 = (((($264) + (($$0424464*3)|0)|0)) + 1|0);\n        $376 = HEAP8[$375>>0]|0;\n        $377 = $376&255;\n        $378 = (($357) + ($377)|0);\n        $379 = HEAP8[$378>>0]|0;\n        $380 = $379&255;\n        $381 = HEAP8[$352>>0]|0;\n        $382 = $381&255;\n        $383 = Math_imul($382, $380)|0;\n        $384 = $382 ^ 255;\n        $385 = Math_imul($384, $345)|0;\n        $386 = (($383) + 128)|0;\n        $387 = (($386) + ($385))|0;\n        $388 = $387 >>> 8;\n        $389 = $388 & 255;\n        $390 = (($389) + ($387))|0;\n        $391 = $390 >>> 8;\n        $392 = $391 & 255;\n        $393 = (($372) + ($392)|0);\n        $394 = HEAP8[$393>>0]|0;\n        HEAP8[$375>>0] = $394;\n        $395 = (((($264) + (($$0424464*3)|0)|0)) + 2|0);\n        $396 = HEAP8[$395>>0]|0;\n        $397 = $396&255;\n        $398 = (($357) + ($397)|0);\n        $399 = HEAP8[$398>>0]|0;\n        $400 = $399&255;\n        $401 = HEAP8[$352>>0]|0;\n        $402 = $401&255;\n        $403 = Math_imul($402, $400)|0;\n        $404 = $402 ^ 255;\n        $405 = Math_imul($404, $346)|0;\n        $406 = (($403) + 128)|0;\n        $407 = (($406) + ($405))|0;\n        $408 = $407 >>> 8;\n        $409 = $408 & 255;\n        $410 = (($409) + ($407))|0;\n        $411 = $410 >>> 8;\n        $412 = $411 & 255;\n        $413 = (($372) + ($412)|0);\n        $414 = HEAP8[$413>>0]|0;\n        HEAP8[$395>>0] = $414;\n        break L159;\n       }\n       }\n      } else {\n       label = 86;\n      }\n     } while(0);\n     if ((label|0) == 86) {\n      label = 0;\n      $415 = (($264) + (($$0424464*3)|0)|0);\n      $416 = HEAP8[$415>>0]|0;\n      $417 = $416&255;\n      $418 = HEAP32[$347>>2]|0;\n      $419 = (($418) + ($417)|0);\n      $420 = HEAP8[$419>>0]|0;\n      HEAP8[$415>>0] = $420;\n      $421 = (((($264) + (($$0424464*3)|0)|0)) + 1|0);\n      $422 = HEAP8[$421>>0]|0;\n      $423 = $422&255;\n      $424 = (($418) + ($423)|0);\n      $425 = HEAP8[$424>>0]|0;\n      HEAP8[$421>>0] = $425;\n      $426 = (((($264) + (($$0424464*3)|0)|0)) + 2|0);\n      $427 = HEAP8[$426>>0]|0;\n      $428 = $427&255;\n      $429 = (($418) + ($428)|0);\n      $430 = HEAP8[$429>>0]|0;\n      HEAP8[$426>>0] = $430;\n     }\n     $431 = (($$0424464) + 1)|0;\n     $exitcond476 = ($431|0)==($267|0);\n     if ($exitcond476) {\n      break;\n     } else {\n      $$0424464 = $431;\n     }\n    }\n   }\n   $432 = HEAP32[$23>>2]|0;\n   $433 = $432 & -8321;\n   HEAP32[$23>>2] = $433;\n   $606 = $433;\n  }\n } while(0);\n $605 = $606 & 4104;\n $607 = ($605|0)==(8);\n if (!($607)) {\n  STACKTOP = sp;return;\n }\n $608 = HEAP8[$70>>0]|0;\n $609 = ($608<<24>>24)==(3);\n if (!($609)) {\n  STACKTOP = sp;return;\n }\n $610 = ((($0)) + 420|0);\n $611 = HEAP16[$610>>1]|0;\n $612 = $611&65535;\n $613 = ((($0)) + 516|0);\n $614 = HEAP32[$613>>2]|0;\n $615 = $614&65535;\n $616 = $614&255;\n $617 = $614 & 255;\n $618 = (8 - ($617))|0;\n $619 = $606 & -9;\n HEAP32[$23>>2] = $619;\n $620 = ($618|0)>(0);\n $621 = ($616<<24>>24)!=(0);\n $or$cond = $621 & $620;\n $622 = ($611<<16>>16)!=(0);\n $or$cond469 = $or$cond & $622;\n $623 = ($615&65535) >>> 8;\n $624 = $614 >>> 16;\n $625 = $624&255;\n if ($or$cond469) {\n  $626 = ((($0)) + 416|0);\n  $627 = HEAP32[$626>>2]|0;\n  $$0423456 = 0;\n  while(1) {\n   $628 = (($627) + (($$0423456*3)|0)|0);\n   $629 = HEAP8[$628>>0]|0;\n   $630 = $629&255;\n   $631 = $630 >>> $618;\n   $632 = $631&255;\n   HEAP8[$628>>0] = $632;\n   $633 = (($$0423456) + 1)|0;\n   $exitcond473 = ($633|0)==($612|0);\n   if ($exitcond473) {\n    break;\n   } else {\n    $$0423456 = $633;\n   }\n  }\n }\n $634 = $623&65535;\n $635 = (8 - ($634))|0;\n $636 = ($635|0)>(0);\n $637 = ($623<<16>>16)!=(0);\n $or$cond3 = $637 & $636;\n $or$cond470 = $or$cond3 & $622;\n if ($or$cond470) {\n  $638 = ((($0)) + 416|0);\n  $639 = HEAP32[$638>>2]|0;\n  $$1454 = 0;\n  while(1) {\n   $640 = (((($639) + (($$1454*3)|0)|0)) + 1|0);\n   $641 = HEAP8[$640>>0]|0;\n   $642 = $641&255;\n   $643 = $642 >>> $635;\n   $644 = $643&255;\n   HEAP8[$640>>0] = $644;\n   $645 = (($$1454) + 1)|0;\n   $exitcond472 = ($645|0)==($612|0);\n   if ($exitcond472) {\n    break;\n   } else {\n    $$1454 = $645;\n   }\n  }\n }\n $646 = $624 & 255;\n $647 = (8 - ($646))|0;\n $648 = ($647|0)>(0);\n $649 = ($625<<24>>24)!=(0);\n $or$cond5 = $649 & $648;\n $or$cond471 = $or$cond5 & $622;\n if (!($or$cond471)) {\n  STACKTOP = sp;return;\n }\n $650 = ((($0)) + 416|0);\n $651 = HEAP32[$650>>2]|0;\n $$2453 = 0;\n while(1) {\n  $652 = (((($651) + (($$2453*3)|0)|0)) + 2|0);\n  $653 = HEAP8[$652>>0]|0;\n  $654 = $653&255;\n  $655 = $654 >>> $647;\n  $656 = $655&255;\n  HEAP8[$652>>0] = $656;\n  $657 = (($$2453) + 1)|0;\n  $exitcond = ($657|0)==($612|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$2453 = $657;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _png_muldiv($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($3|0)==(0);\n if ($4) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $5 = ($1|0)==(0);\n $6 = ($2|0)==(0);\n $or$cond = $5 | $6;\n if ($or$cond) {\n  HEAP32[$0>>2] = 0;\n  $$1 = 1;\n  return ($$1|0);\n }\n $7 = (+($1|0));\n $8 = (+($2|0));\n $9 = $7 * $8;\n $10 = (+($3|0));\n $11 = $9 / $10;\n $12 = $11 + 0.5;\n $13 = (+Math_floor((+$12)));\n $14 = $13 <= 2147483647.0;\n $15 = $13 >= -2147483648.0;\n $or$cond3 = $14 & $15;\n if (!($or$cond3)) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $16 = (~~(($13)));\n HEAP32[$0>>2] = $16;\n $$1 = 1;\n return ($$1|0);\n}\nfunction _png_gamma_significant($0) {\n $0 = $0|0;\n var $$off = 0, $1 = 0, $2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$off = (($0) + -95000)|0;\n $1 = ($$off>>>0)>(10000);\n $2 = $1&1;\n return ($2|0);\n}\nfunction _png_reciprocal($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (+($0|0));\n $2 = 1.0E+10 / $1;\n $3 = $2 + 0.5;\n $4 = (+Math_floor((+$3)));\n $5 = $4 <= 2147483647.0;\n $6 = $4 >= -2147483648.0;\n $or$cond = $5 & $6;\n $7 = (~~(($4)));\n $$0 = $or$cond ? $7 : 0;\n return ($$0|0);\n}\nfunction _png_colorspace_set_rgb_coefficients($0) {\n $0 = $0|0;\n var $$ = 0, $$0 = 0, $$07282 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0;\n var $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0;\n var $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $notlhs = 0, $notlhs80 = 0, $notlhs84 = 0, $notrhs = 0, $notrhs81 = 0;\n var $notrhs85 = 0, $or$cond13$not = 0, $or$cond3$i = 0, $or$cond3$i40 = 0, $or$cond3$i44 = 0, $or$cond37 = 0, $or$cond39 = 0, $or$cond7$not = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 701|0);\n $2 = HEAP8[$1>>0]|0;\n $3 = ($2<<24>>24)==(0);\n if (!($3)) {\n  return;\n }\n $4 = ((($0)) + 898|0);\n $5 = HEAP16[$4>>1]|0;\n $6 = $5 & 2;\n $7 = ($6<<16>>16)==(0);\n if ($7) {\n  return;\n }\n $8 = ((($0)) + 864|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ((($0)) + 876|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($0)) + 888|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = (($11) + ($9))|0;\n $15 = (($14) + ($13))|0;\n $notlhs84 = ($9|0)<(0);\n $notrhs85 = ($15|0)<(1);\n $16 = $notrhs85 | $notlhs84;\n if ($16) {\n  _png_error($0,25772);\n  // unreachable;\n }\n $17 = ($9|0)==(0);\n do {\n  if ($17) {\n   $$075 = 0;\n  } else {\n   $18 = (+($9|0));\n   $19 = $18 * 32768.0;\n   $20 = (+($15|0));\n   $21 = $19 / $20;\n   $22 = $21 + 0.5;\n   $23 = (+Math_floor((+$22)));\n   $24 = $23 <= 2147483647.0;\n   $25 = $23 >= -2147483648.0;\n   $or$cond3$i = $24 & $25;\n   if ($or$cond3$i) {\n    $26 = (~~(($23)));\n    $$075 = $26;\n    break;\n   } else {\n    _png_error($0,25772);\n    // unreachable;\n   }\n  }\n } while(0);\n $notlhs = ($$075>>>0)>(32768);\n $notrhs = ($11|0)<(0);\n $or$cond7$not = $notrhs | $notlhs;\n if ($or$cond7$not) {\n  _png_error($0,25772);\n  // unreachable;\n }\n $27 = ($11|0)==(0);\n do {\n  if ($27) {\n   $$073 = 0;\n  } else {\n   $28 = (+($11|0));\n   $29 = $28 * 32768.0;\n   $30 = (+($15|0));\n   $31 = $29 / $30;\n   $32 = $31 + 0.5;\n   $33 = (+Math_floor((+$32)));\n   $34 = $33 <= 2147483647.0;\n   $35 = $33 >= -2147483648.0;\n   $or$cond3$i40 = $34 & $35;\n   if ($or$cond3$i40) {\n    $36 = (~~(($33)));\n    $$073 = $36;\n    break;\n   } else {\n    _png_error($0,25772);\n    // unreachable;\n   }\n  }\n } while(0);\n $notlhs80 = ($$073>>>0)>(32768);\n $notrhs81 = ($13|0)<(0);\n $or$cond13$not = $notrhs81 | $notlhs80;\n if ($or$cond13$not) {\n  _png_error($0,25772);\n  // unreachable;\n }\n $37 = ($13|0)==(0);\n if ($37) {\n  $$07282 = 0;\n } else {\n  $38 = (+($13|0));\n  $39 = $38 * 32768.0;\n  $40 = (+($15|0));\n  $41 = $39 / $40;\n  $42 = $41 + 0.5;\n  $43 = (+Math_floor((+$42)));\n  $44 = $43 <= 2147483647.0;\n  $45 = $43 >= -2147483648.0;\n  $or$cond3$i44 = $44 & $45;\n  if (!($or$cond3$i44)) {\n   _png_error($0,25772);\n   // unreachable;\n  }\n  $46 = (~~(($43)));\n  $47 = ($46>>>0)<(32769);\n  if ($47) {\n   $$07282 = $46;\n  } else {\n   _png_error($0,25772);\n   // unreachable;\n  }\n }\n $48 = (($$073) + ($$075))|0;\n $49 = (($48) + ($$07282))|0;\n $50 = ($49|0)<(32770);\n if (!($50)) {\n  _png_error($0,25772);\n  // unreachable;\n }\n $51 = ($49|0)==(32769);\n $52 = ($49|0)<(32768);\n $$ = $52&1;\n $$0 = $51 ? -1 : $$;\n $53 = ($$0|0)==(0);\n do {\n  if ($53) {\n   $$1 = $$07282;$$174 = $$073;$$176 = $$075;\n  } else {\n   $54 = ($$073|0)<($$075|0);\n   $55 = ($$073|0)<($$07282|0);\n   $or$cond37 = $54 | $55;\n   if (!($or$cond37)) {\n    $56 = (($$0) + ($$073))|0;\n    $$1 = $$07282;$$174 = $56;$$176 = $$075;\n    break;\n   }\n   $57 = ($$075|0)<($$073|0);\n   $58 = ($$075|0)<($$07282|0);\n   $or$cond39 = $57 | $58;\n   if ($or$cond39) {\n    $60 = (($$0) + ($$07282))|0;\n    $$1 = $60;$$174 = $$073;$$176 = $$075;\n    break;\n   } else {\n    $59 = (($$0) + ($$075))|0;\n    $$1 = $$07282;$$174 = $$073;$$176 = $59;\n    break;\n   }\n  }\n } while(0);\n $61 = (($$174) + ($$176))|0;\n $62 = (($61) + ($$1))|0;\n $63 = ($62|0)==(32768);\n if (!($63)) {\n  _png_error($0,25730);\n  // unreachable;\n }\n $64 = $$176&65535;\n $65 = ((($0)) + 702|0);\n HEAP16[$65>>1] = $64;\n $66 = $$174&65535;\n $67 = ((($0)) + 704|0);\n HEAP16[$67>>1] = $66;\n return;\n}\nfunction _png_build_gamma_table($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$ = 0, $$$153 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i60 = 0, $$0$i$i73 = 0, $$0$i68 = 0, $$0$i91 = 0, $$0$i93 = 0, $$019$i = 0, $$019$i58 = 0, $$019$i71 = 0, $$04754$i = 0, $$052 = 0, $$056$i = 0, $$1 = 0, $$1$off = 0, $$120$i = 0, $$120$i63 = 0;\n var $$120$i76 = 0, $$148$lcssa$i = 0, $$14851$i = 0, $$153 = 0, $$155$i = 0, $$250$i = 0, $$off$i$i = 0, $$off$i$i56 = 0, $$off$i$i69 = 0, $$off$i16$i = 0, $$off$i16$i59 = 0, $$off$i16$i72 = 0, $$op = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;\n var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;\n var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0;\n var $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0;\n var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;\n var $179 = 0, $18 = 0.0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0.0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0.0;\n var $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0.0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0;\n var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0;\n var $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0;\n var $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0;\n var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0;\n var $exitcond$i61 = 0, $exitcond$i74 = 0, $exitcond$i83 = 0, $exitcond22$i = 0, $exitcond22$i64 = 0, $exitcond22$i77 = 0, $exitcond57$i = 0, $exitcond58$i = 0, $not$or$cond3$i = 0, $not$or$cond3$i87 = 0, $notlhs$i = 0, $notlhs$i85 = 0, $notrhs$i = 0, $notrhs$i86 = 0, $or$cond$i55 = 0, $or$cond$i67 = 0, $or$cond$i80 = 0, $or$cond$i90 = 0, $or$cond$i92 = 0, $or$cond54 = 0;\n var $phitmp94 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 492|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $5 = ((($0)) + 496|0);\n  $6 = HEAP32[$5>>2]|0;\n  $7 = ($6|0)==(0|0);\n  if (!($7)) {\n   label = 3;\n  }\n } else {\n  label = 3;\n }\n if ((label|0) == 3) {\n  _png_warning($0,25704);\n  _png_destroy_gamma_table($0);\n }\n $8 = ($1|0)<(9);\n if (!($8)) {\n  $103 = ((($0)) + 435|0);\n  $104 = HEAP8[$103>>0]|0;\n  $105 = $104 & 2;\n  $106 = ($105<<24>>24)==(0);\n  if ($106) {\n   $117 = ((($0)) + 519|0);\n   $118 = HEAP8[$117>>0]|0;\n   $$1 = $118;\n  } else {\n   $107 = ((($0)) + 516|0);\n   $108 = HEAP32[$107>>2]|0;\n   $109 = $108&65535;\n   $110 = $108&255;\n   $111 = ($109&65535) >>> 8;\n   $112 = $111&255;\n   $113 = ($112&255)>($110&255);\n   $$ = $113 ? $112 : $110;\n   $114 = $108 >>> 16;\n   $115 = $114&255;\n   $116 = ($115&255)>($$&255);\n   $$$ = $116 ? $115 : $$;\n   $$1 = $$$;\n  }\n  $119 = $$1&255;\n  $$1$off = (($$1) + -1)<<24>>24;\n  $120 = ($$1$off&255)<(15);\n  $121 = (16 - ($119))|0;\n  $122 = $121&255;\n  $$052 = $120 ? $122 : 0;\n  $123 = ((($0)) + 216|0);\n  $124 = HEAP32[$123>>2]|0;\n  $125 = $124 & 67109888;\n  $126 = ($125|0)!=(0);\n  $127 = ($$052&255)<(5);\n  $or$cond54 = $126 & $127;\n  $$153 = $or$cond54 ? 5 : $$052;\n  $128 = ($$153&255)>(8);\n  $$$153 = $128 ? 8 : $$153;\n  $129 = $$$153&255;\n  $130 = ((($0)) + 484|0);\n  HEAP32[$130>>2] = $129;\n  $131 = ($125|0)==(0);\n  $132 = ((($0)) + 496|0);\n  $133 = ((($0)) + 488|0);\n  $134 = HEAP32[$133>>2]|0;\n  $135 = ($134|0)>(0);\n  if ($131) {\n   do {\n    if ($135) {\n     $192 = ((($0)) + 824|0);\n     $193 = HEAP32[$192>>2]|0;\n     $194 = ($193|0)==(0);\n     if (!($194)) {\n      $195 = (+($193|0));\n      $196 = 1.0E+15 / $195;\n      $197 = (+($134|0));\n      $198 = $196 / $197;\n      $199 = $198 + 0.5;\n      $200 = (+Math_floor((+$199)));\n      $201 = (~~(($200)));\n      $notlhs$i85 = !($200 <= 2147483647.0);\n      $notrhs$i86 = !($200 >= -2147483648.0);\n      $not$or$cond3$i87 = $notrhs$i86 | $notlhs$i85;\n      if (!($not$or$cond3$i87)) {\n       $202 = $201;\n       break;\n      }\n     }\n     $202 = 0;\n    } else {\n     $202 = 100000;\n    }\n   } while(0);\n   _png_build_16bit_table($0,$132,$129,$202);\n  } else {\n   if ($135) {\n    $136 = ((($0)) + 824|0);\n    $137 = HEAP32[$136>>2]|0;\n    $138 = (+($137|0));\n    $139 = $138 * 1.0000000000000001E-5;\n    $140 = (+($134|0));\n    $141 = $140 * $139;\n    $142 = $141 + 0.5;\n    $143 = (+Math_floor((+$142)));\n    $144 = $143 <= 2147483647.0;\n    $145 = $143 >= -2147483648.0;\n    $or$cond$i80 = $144 & $145;\n    $146 = (~~(($143)));\n    $147 = (+($146|0));\n    $$op = $147 * 1.0000000000000001E-5;\n    $phitmp94 = $or$cond$i80 ? $$op : 0.0;\n    $167 = $phitmp94;\n   } else {\n    $167 = 1.0;\n   }\n   $148 = (8 - ($129))|0;\n   $149 = 1 << $148;\n   $150 = (16 - ($129))|0;\n   $151 = $149 << 2;\n   $152 = (_png_calloc($0,$151)|0);\n   HEAP32[$132>>2] = $152;\n   $$056$i = 0;\n   while(1) {\n    $156 = (_png_malloc($0,512)|0);\n    $157 = (($152) + ($$056$i<<2)|0);\n    HEAP32[$157>>2] = $156;\n    $158 = (($$056$i) + 1)|0;\n    $159 = ($158>>>0)<($149>>>0);\n    if ($159) {\n     $$056$i = $158;\n    } else {\n     break;\n    }\n   }\n   $153 = 1 << $150;\n   $154 = (($153) + -1)|0;\n   $155 = 255 >>> $129;\n   $$04754$i = 0;$$155$i = 0;\n   while(1) {\n    $162 = ($$155$i*257)|0;\n    $163 = $162&65535;\n    $164 = (($162) + 128)|0;\n    $165 = (+($164|0));\n    $166 = $165 / 65535.0;\n    $168 = (+Math_pow((+$166),(+$167)));\n    $169 = $168 * 65535.0;\n    $170 = $169 + 0.5;\n    $171 = (+Math_floor((+$170)));\n    $172 = (~~(($171))&65535);\n    $173 = $172&65535;\n    $174 = Math_imul($173, $154)|0;\n    $175 = (($174) + 32768)|0;\n    $176 = (($175>>>0) / 65535)&-1;\n    $177 = (($176) + 1)|0;\n    $178 = ($$04754$i>>>0)<($177>>>0);\n    if ($178) {\n     $$14851$i = $$04754$i;\n     while(1) {\n      $179 = $$14851$i >>> $148;\n      $180 = $$14851$i & $155;\n      $181 = (($152) + ($180<<2)|0);\n      $182 = HEAP32[$181>>2]|0;\n      $183 = (($182) + ($179<<1)|0);\n      HEAP16[$183>>1] = $163;\n      $184 = (($$14851$i) + 1)|0;\n      $exitcond57$i = ($184|0)==($177|0);\n      if ($exitcond57$i) {\n       $$148$lcssa$i = $177;\n       break;\n      } else {\n       $$14851$i = $184;\n      }\n     }\n    } else {\n     $$148$lcssa$i = $$04754$i;\n    }\n    $185 = (($$155$i) + 1)|0;\n    $exitcond58$i = ($185|0)==(255);\n    if ($exitcond58$i) {\n     break;\n    } else {\n     $$04754$i = $$148$lcssa$i;$$155$i = $185;\n    }\n   }\n   $160 = $149 << 8;\n   $161 = ($$148$lcssa$i>>>0)<($160>>>0);\n   if ($161) {\n    $$250$i = $$148$lcssa$i;\n    while(1) {\n     $186 = $$250$i >>> $148;\n     $187 = $$250$i & $155;\n     $188 = (($152) + ($187<<2)|0);\n     $189 = HEAP32[$188>>2]|0;\n     $190 = (($189) + ($186<<1)|0);\n     HEAP16[$190>>1] = -1;\n     $191 = (($$250$i) + 1)|0;\n     $exitcond$i83 = ($191|0)==($160|0);\n     if ($exitcond$i83) {\n      break;\n     } else {\n      $$250$i = $191;\n     }\n    }\n   }\n  }\n  $203 = HEAP32[$123>>2]|0;\n  $204 = $203 & 6291584;\n  $205 = ($204|0)==(0);\n  if ($205) {\n   return;\n  }\n  $206 = ((($0)) + 512|0);\n  $207 = ((($0)) + 824|0);\n  $208 = HEAP32[$207>>2]|0;\n  $209 = (+($208|0));\n  $210 = 1.0E+10 / $209;\n  $211 = $210 + 0.5;\n  $212 = (+Math_floor((+$211)));\n  $213 = $212 <= 2147483647.0;\n  $214 = $212 >= -2147483648.0;\n  $or$cond$i90 = $213 & $214;\n  $215 = (~~(($212)));\n  $$0$i91 = $or$cond$i90 ? $215 : 0;\n  _png_build_16bit_table($0,$206,$129,$$0$i91);\n  $216 = ((($0)) + 508|0);\n  $217 = HEAP32[$133>>2]|0;\n  $218 = ($217|0)>(0);\n  if ($218) {\n   $219 = (+($217|0));\n   $220 = 1.0E+10 / $219;\n   $221 = $220 + 0.5;\n   $222 = (+Math_floor((+$221)));\n   $223 = $222 <= 2147483647.0;\n   $224 = $222 >= -2147483648.0;\n   $or$cond$i92 = $223 & $224;\n   $225 = (~~(($222)));\n   $$0$i93 = $or$cond$i92 ? $225 : 0;\n   $227 = $$0$i93;\n  } else {\n   $226 = HEAP32[$207>>2]|0;\n   $227 = $226;\n  }\n  _png_build_16bit_table($0,$216,$129,$227);\n  return;\n }\n $9 = ((($0)) + 488|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ($10|0)>(0);\n do {\n  if ($11) {\n   $12 = ((($0)) + 824|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = ($13|0)==(0);\n   if (!($14)) {\n    $15 = (+($13|0));\n    $16 = 1.0E+15 / $15;\n    $17 = (+($10|0));\n    $18 = $16 / $17;\n    $19 = $18 + 0.5;\n    $20 = (+Math_floor((+$19)));\n    $21 = (~~(($20)));\n    $notlhs$i = !($20 <= 2147483647.0);\n    $notrhs$i = !($20 >= -2147483648.0);\n    $not$or$cond3$i = $notrhs$i | $notlhs$i;\n    if (!($not$or$cond3$i)) {\n     $23 = $21;\n     break;\n    }\n   }\n   $23 = 0;\n  } else {\n   $23 = 100000;\n  }\n } while(0);\n $22 = (_png_malloc($0,256)|0);\n HEAP32[$2>>2] = $22;\n $$off$i$i = (($23) + -95000)|0;\n $24 = ($$off$i$i>>>0)>(10000);\n if ($24) {\n  $25 = (+($23|0));\n  $26 = $25 * 1.0000000000000001E-5;\n  $$019$i = 0;\n  while(1) {\n   $$off$i16$i = (($$019$i) + -1)|0;\n   $27 = ($$off$i16$i>>>0)<(254);\n   if ($27) {\n    $28 = (+($$019$i|0));\n    $29 = $28 / 255.0;\n    $30 = (+Math_pow((+$29),(+$26)));\n    $31 = $30 * 255.0;\n    $32 = $31 + 0.5;\n    $33 = (+Math_floor((+$32)));\n    $34 = (~~(($33))&255);\n    $$0$i$i = $34;\n   } else {\n    $35 = $$019$i&255;\n    $$0$i$i = $35;\n   }\n   $36 = (($22) + ($$019$i)|0);\n   HEAP8[$36>>0] = $$0$i$i;\n   $37 = (($$019$i) + 1)|0;\n   $exitcond$i = ($37|0)==(256);\n   if ($exitcond$i) {\n    break;\n   } else {\n    $$019$i = $37;\n   }\n  }\n } else {\n  $$120$i = 0;\n  while(1) {\n   $38 = $$120$i&255;\n   $39 = (($22) + ($$120$i)|0);\n   HEAP8[$39>>0] = $38;\n   $40 = (($$120$i) + 1)|0;\n   $exitcond22$i = ($40|0)==(256);\n   if ($exitcond22$i) {\n    break;\n   } else {\n    $$120$i = $40;\n   }\n  }\n }\n $41 = ((($0)) + 216|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = $42 & 6291584;\n $44 = ($43|0)==(0);\n if ($44) {\n  return;\n }\n $45 = ((($0)) + 504|0);\n $46 = ((($0)) + 824|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = (+($47|0));\n $49 = 1.0E+10 / $48;\n $50 = $49 + 0.5;\n $51 = (+Math_floor((+$50)));\n $52 = $51 <= 2147483647.0;\n $53 = $51 >= -2147483648.0;\n $or$cond$i55 = $52 & $53;\n $54 = (~~(($51)));\n $$0$i = $or$cond$i55 ? $54 : 0;\n $55 = (_png_malloc($0,256)|0);\n HEAP32[$45>>2] = $55;\n $$off$i$i56 = (($$0$i) + -95000)|0;\n $56 = ($$off$i$i56>>>0)>(10000);\n if ($56) {\n  $57 = (+($$0$i|0));\n  $58 = $57 * 1.0000000000000001E-5;\n  $$019$i58 = 0;\n  while(1) {\n   $$off$i16$i59 = (($$019$i58) + -1)|0;\n   $59 = ($$off$i16$i59>>>0)<(254);\n   if ($59) {\n    $60 = (+($$019$i58|0));\n    $61 = $60 / 255.0;\n    $62 = (+Math_pow((+$61),(+$58)));\n    $63 = $62 * 255.0;\n    $64 = $63 + 0.5;\n    $65 = (+Math_floor((+$64)));\n    $66 = (~~(($65))&255);\n    $$0$i$i60 = $66;\n   } else {\n    $67 = $$019$i58&255;\n    $$0$i$i60 = $67;\n   }\n   $68 = (($55) + ($$019$i58)|0);\n   HEAP8[$68>>0] = $$0$i$i60;\n   $69 = (($$019$i58) + 1)|0;\n   $exitcond$i61 = ($69|0)==(256);\n   if ($exitcond$i61) {\n    break;\n   } else {\n    $$019$i58 = $69;\n   }\n  }\n } else {\n  $$120$i63 = 0;\n  while(1) {\n   $70 = $$120$i63&255;\n   $71 = (($55) + ($$120$i63)|0);\n   HEAP8[$71>>0] = $70;\n   $72 = (($$120$i63) + 1)|0;\n   $exitcond22$i64 = ($72|0)==(256);\n   if ($exitcond22$i64) {\n    break;\n   } else {\n    $$120$i63 = $72;\n   }\n  }\n }\n $73 = ((($0)) + 500|0);\n $74 = HEAP32[$9>>2]|0;\n $75 = ($74|0)>(0);\n if ($75) {\n  $76 = (+($74|0));\n  $77 = 1.0E+10 / $76;\n  $78 = $77 + 0.5;\n  $79 = (+Math_floor((+$78)));\n  $80 = $79 <= 2147483647.0;\n  $81 = $79 >= -2147483648.0;\n  $or$cond$i67 = $80 & $81;\n  $82 = (~~(($79)));\n  $$0$i68 = $or$cond$i67 ? $82 : 0;\n  $85 = $$0$i68;\n } else {\n  $83 = HEAP32[$46>>2]|0;\n  $85 = $83;\n }\n $84 = (_png_malloc($0,256)|0);\n HEAP32[$73>>2] = $84;\n $$off$i$i69 = (($85) + -95000)|0;\n $86 = ($$off$i$i69>>>0)>(10000);\n if (!($86)) {\n  $$120$i76 = 0;\n  while(1) {\n   $100 = $$120$i76&255;\n   $101 = (($84) + ($$120$i76)|0);\n   HEAP8[$101>>0] = $100;\n   $102 = (($$120$i76) + 1)|0;\n   $exitcond22$i77 = ($102|0)==(256);\n   if ($exitcond22$i77) {\n    break;\n   } else {\n    $$120$i76 = $102;\n   }\n  }\n  return;\n }\n $87 = (+($85|0));\n $88 = $87 * 1.0000000000000001E-5;\n $$019$i71 = 0;\n while(1) {\n  $$off$i16$i72 = (($$019$i71) + -1)|0;\n  $89 = ($$off$i16$i72>>>0)<(254);\n  if ($89) {\n   $90 = (+($$019$i71|0));\n   $91 = $90 / 255.0;\n   $92 = (+Math_pow((+$91),(+$88)));\n   $93 = $92 * 255.0;\n   $94 = $93 + 0.5;\n   $95 = (+Math_floor((+$94)));\n   $96 = (~~(($95))&255);\n   $$0$i$i73 = $96;\n  } else {\n   $97 = $$019$i71&255;\n   $$0$i$i73 = $97;\n  }\n  $98 = (($84) + ($$019$i71)|0);\n  HEAP8[$98>>0] = $$0$i$i73;\n  $99 = (($$019$i71) + 1)|0;\n  $exitcond$i74 = ($99|0)==(256);\n  if ($exitcond$i74) {\n   break;\n  } else {\n   $$019$i71 = $99;\n  }\n }\n return;\n}\nfunction _png_reciprocal2($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $not$or$cond3 = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)!=(0);\n $3 = ($1|0)!=(0);\n $or$cond = $2 & $3;\n if ($or$cond) {\n  $4 = (+($0|0));\n  $5 = 1.0E+15 / $4;\n  $6 = (+($1|0));\n  $7 = $5 / $6;\n  $8 = $7 + 0.5;\n  $9 = (+Math_floor((+$8)));\n  $10 = (~~(($9)));\n  $notlhs = !($9 <= 2147483647.0);\n  $notrhs = !($9 >= -2147483648.0);\n  $not$or$cond3 = $notrhs | $notlhs;\n  if (!($not$or$cond3)) {\n   $$1 = $10;\n   return ($$1|0);\n  }\n }\n $$1 = 0;\n return ($$1|0);\n}\nfunction _png_gamma_8bit_correct($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$off = 0, $10 = 0.0, $11 = 0, $12 = 0, $2 = 0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $$off = (($0) + -1)|0;\n $2 = ($$off>>>0)<(254);\n if ($2) {\n  $3 = (+($0|0));\n  $4 = $3 / 255.0;\n  $5 = (+($1|0));\n  $6 = $5 * 1.0000000000000001E-5;\n  $7 = (+Math_pow((+$4),(+$6)));\n  $8 = $7 * 255.0;\n  $9 = $8 + 0.5;\n  $10 = (+Math_floor((+$9)));\n  $11 = (~~(($10))&255);\n  $$0 = $11;\n  return ($$0|0);\n } else {\n  $12 = $0&255;\n  $$0 = $12;\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _png_gamma_correct($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$0$i = 0, $$off$i = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;\n var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 436|0);\n $4 = HEAP8[$3>>0]|0;\n $5 = ($4<<24>>24)==(8);\n $$off$i = (($1) + -1)|0;\n if ($5) {\n  $6 = ($$off$i>>>0)<(254);\n  if ($6) {\n   $7 = (+($1|0));\n   $8 = $7 / 255.0;\n   $9 = (+($2|0));\n   $10 = $9 * 1.0000000000000001E-5;\n   $11 = (+Math_pow((+$8),(+$10)));\n   $12 = $11 * 255.0;\n   $13 = $12 + 0.5;\n   $14 = (+Math_floor((+$13)));\n   $15 = (~~(($14))&255);\n   $$0$i = $15;\n  } else {\n   $16 = $1&255;\n   $$0$i = $16;\n  }\n  $17 = $$0$i&255;\n  $$0 = $17;\n  return ($$0|0);\n } else {\n  $18 = ($$off$i>>>0)<(65534);\n  if ($18) {\n   $19 = (+($1|0));\n   $20 = $19 / 65535.0;\n   $21 = (+($2|0));\n   $22 = $21 * 1.0000000000000001E-5;\n   $23 = (+Math_pow((+$20),(+$22)));\n   $24 = $23 * 65535.0;\n   $25 = $24 + 0.5;\n   $26 = (+Math_floor((+$25)));\n   $27 = (~~(($26))&65535);\n   $$0 = $27;\n   return ($$0|0);\n  } else {\n   $28 = $1&65535;\n   $$0 = $28;\n   return ($$0|0);\n  }\n }\n return (0)|0;\n}\nfunction _png_destroy_gamma_table($0) {\n $0 = $0|0;\n var $$pre = 0, $$pre60 = 0, $$pre61 = 0, $$pre63 = 0, $$pre64 = 0, $$pre66 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 492|0);\n $2 = HEAP32[$1>>2]|0;\n _png_free($0,$2);\n HEAP32[$1>>2] = 0;\n $3 = ((($0)) + 496|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if (!($5)) {\n  $6 = ((($0)) + 484|0);\n  $7 = HEAP32[$6>>2]|0;\n  $8 = (8 - ($7))|0;\n  $9 = 1 << $8;\n  $10 = ($8|0)==(31);\n  if ($10) {\n   $18 = $4;\n  } else {\n   $11 = HEAP32[$4>>2]|0;\n   _png_free($0,$11);\n   $12 = ($9|0)>(1);\n   if ($12) {\n    $14 = 1;\n    while(1) {\n     $$pre = HEAP32[$3>>2]|0;\n     $13 = (($$pre) + ($14<<2)|0);\n     $15 = HEAP32[$13>>2]|0;\n     _png_free($0,$15);\n     $16 = (($14) + 1)|0;\n     $17 = ($16|0)<($9|0);\n     if ($17) {\n      $14 = $16;\n     } else {\n      break;\n     }\n    }\n   }\n   $$pre60 = HEAP32[$3>>2]|0;\n   $18 = $$pre60;\n  }\n  _png_free($0,$18);\n  HEAP32[$3>>2] = 0;\n }\n $19 = ((($0)) + 500|0);\n $20 = HEAP32[$19>>2]|0;\n _png_free($0,$20);\n HEAP32[$19>>2] = 0;\n $21 = ((($0)) + 504|0);\n $22 = HEAP32[$21>>2]|0;\n _png_free($0,$22);\n HEAP32[$21>>2] = 0;\n $23 = ((($0)) + 508|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ($24|0)==(0|0);\n if (!($25)) {\n  $26 = ((($0)) + 484|0);\n  $27 = HEAP32[$26>>2]|0;\n  $28 = (8 - ($27))|0;\n  $29 = 1 << $28;\n  $30 = ($28|0)==(31);\n  if ($30) {\n   $38 = $24;\n  } else {\n   $31 = HEAP32[$24>>2]|0;\n   _png_free($0,$31);\n   $32 = ($29|0)>(1);\n   if ($32) {\n    $34 = 1;\n    while(1) {\n     $$pre61 = HEAP32[$23>>2]|0;\n     $33 = (($$pre61) + ($34<<2)|0);\n     $35 = HEAP32[$33>>2]|0;\n     _png_free($0,$35);\n     $36 = (($34) + 1)|0;\n     $37 = ($36|0)<($29|0);\n     if ($37) {\n      $34 = $36;\n     } else {\n      break;\n     }\n    }\n   }\n   $$pre63 = HEAP32[$23>>2]|0;\n   $38 = $$pre63;\n  }\n  _png_free($0,$38);\n  HEAP32[$23>>2] = 0;\n }\n $39 = ((($0)) + 512|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = ($40|0)==(0|0);\n if ($41) {\n  return;\n }\n $42 = ((($0)) + 484|0);\n $43 = HEAP32[$42>>2]|0;\n $44 = (8 - ($43))|0;\n $45 = 1 << $44;\n $46 = ($44|0)==(31);\n if ($46) {\n  $54 = $40;\n } else {\n  $47 = HEAP32[$40>>2]|0;\n  _png_free($0,$47);\n  $48 = ($45|0)>(1);\n  if ($48) {\n   $50 = 1;\n   while(1) {\n    $$pre64 = HEAP32[$39>>2]|0;\n    $49 = (($$pre64) + ($50<<2)|0);\n    $51 = HEAP32[$49>>2]|0;\n    _png_free($0,$51);\n    $52 = (($50) + 1)|0;\n    $53 = ($52|0)<($45|0);\n    if ($53) {\n     $50 = $52;\n    } else {\n     break;\n    }\n   }\n  }\n  $$pre66 = HEAP32[$39>>2]|0;\n  $54 = $$pre66;\n }\n _png_free($0,$54);\n HEAP32[$39>>2] = 0;\n return;\n}\nfunction _png_build_16bit_table($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$05964 = 0, $$05964$us = 0, $$06066 = 0, $$06066$us = 0, $$06165$us = 0, $$off$i = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0;\n var $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, $exitcond = 0, $exitcond75 = 0, $exitcond76 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = (8 - ($2))|0;\n $5 = 1 << $4;\n $6 = (16 - ($2))|0;\n $7 = 1 << $6;\n $8 = (($7) + -1)|0;\n $9 = (+($8|0));\n $10 = 1.0 / $9;\n $11 = (15 - ($2))|0;\n $12 = 1 << $11;\n $13 = $5 << 2;\n $14 = (_png_calloc($0,$13)|0);\n HEAP32[$1>>2] = $14;\n $$off$i = (($3) + -95000)|0;\n $15 = ($$off$i>>>0)>(10000);\n $16 = (+($3|0));\n $17 = $16 * 1.0000000000000001E-5;\n $18 = ($2|0)==(0);\n if ($15) {\n  $$06066$us = 0;\n  while(1) {\n   $19 = (_png_malloc($0,512)|0);\n   $20 = (($14) + ($$06066$us<<2)|0);\n   HEAP32[$20>>2] = $19;\n   $$06165$us = 0;\n   while(1) {\n    $21 = $$06165$us << $4;\n    $22 = (($21) + ($$06066$us))|0;\n    $23 = (+($22>>>0));\n    $24 = $10 * $23;\n    $25 = (+Math_pow((+$24),(+$17)));\n    $26 = $25 * 65535.0;\n    $27 = $26 + 0.5;\n    $28 = (+Math_floor((+$27)));\n    $29 = (~~(($28))&65535);\n    $30 = (($19) + ($$06165$us<<1)|0);\n    HEAP16[$30>>1] = $29;\n    $31 = (($$06165$us) + 1)|0;\n    $exitcond = ($31|0)==(256);\n    if ($exitcond) {\n     break;\n    } else {\n     $$06165$us = $31;\n    }\n   }\n   $32 = (($$06066$us) + 1)|0;\n   $33 = ($32>>>0)<($5>>>0);\n   if ($33) {\n    $$06066$us = $32;\n   } else {\n    break;\n   }\n  }\n  return;\n } else {\n  $$06066 = 0;\n }\n while(1) {\n  $34 = (_png_malloc($0,512)|0);\n  $35 = (($14) + ($$06066<<2)|0);\n  HEAP32[$35>>2] = $34;\n  if ($18) {\n   $$05964$us = 0;\n   while(1) {\n    $36 = $$05964$us << $4;\n    $37 = (($36) + ($$06066))|0;\n    $38 = $37&65535;\n    $39 = (($34) + ($$05964$us<<1)|0);\n    HEAP16[$39>>1] = $38;\n    $40 = (($$05964$us) + 1)|0;\n    $exitcond76 = ($40|0)==(256);\n    if ($exitcond76) {\n     break;\n    } else {\n     $$05964$us = $40;\n    }\n   }\n  } else {\n   $$05964 = 0;\n   while(1) {\n    $41 = $$05964 << $4;\n    $42 = (($41) + ($$06066))|0;\n    $43 = ($42*65535)|0;\n    $44 = (($43) + ($12))|0;\n    $45 = (($44>>>0) / ($8>>>0))&-1;\n    $46 = $45&65535;\n    $47 = (($34) + ($$05964<<1)|0);\n    HEAP16[$47>>1] = $46;\n    $48 = (($$05964) + 1)|0;\n    $exitcond75 = ($48|0)==(256);\n    if ($exitcond75) {\n     break;\n    } else {\n     $$05964 = $48;\n    }\n   }\n  }\n  $49 = (($$06066) + 1)|0;\n  $50 = ($49>>>0)<($5>>>0);\n  if ($50) {\n   $$06066 = $49;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _png_read_row($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $$0673$i$lver$orig = 0, $$0682$i$lver$orig = 0, $$0715$i$lver$orig = 0, $$0724$i$lver$orig = 0, $$1$i = 0, $$idx$val = 0, $$idx98$val = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre102 = 0, $$pre103 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;\n var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;\n var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;\n var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;\n var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;\n var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;\n var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$lver$orig = 0, $exitcond8$i$lver$orig = 0, $or$cond = 0, $or$cond97 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  STACKTOP = sp;return;\n }\n $5 = ((($0)) + 212|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 64;\n $8 = ($7|0)==(0);\n if ($8) {\n  _png_read_start_row($0);\n }\n $9 = ((($0)) + 368|0);\n $10 = HEAP32[$9>>2]|0;\n HEAP32[$3>>2] = $10;\n $11 = ((($0)) + 435|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = ((($3)) + 8|0);\n HEAP8[$13>>0] = $12;\n $14 = ((($0)) + 436|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = $15&255;\n $17 = ((($3)) + 9|0);\n HEAP8[$17>>0] = $16;\n $18 = $15 >>> 24;\n $19 = $18&255;\n $20 = ((($3)) + 10|0);\n HEAP8[$20>>0] = $19;\n $21 = $15 >>> 16;\n $22 = $21&255;\n $23 = ((($3)) + 11|0);\n HEAP8[$23>>0] = $22;\n $24 = $21 & 255;\n $25 = ($22&255)>(7);\n if ($25) {\n  $26 = $24 >>> 3;\n  $27 = Math_imul($10, $26)|0;\n  $32 = $27;\n } else {\n  $28 = Math_imul($10, $24)|0;\n  $29 = (($28) + 7)|0;\n  $30 = $29 >>> 3;\n  $32 = $30;\n }\n $31 = ((($3)) + 4|0);\n HEAP32[$31>>2] = $32;\n $33 = ((($0)) + 372|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($0)) + 432|0);\n $36 = HEAP16[$35>>1]|0;\n $37 = $36&255;\n $38 = ($37<<24>>24)==(0);\n $39 = ($36&65535) >>> 8;\n $40 = $39&255;\n L11: do {\n  if (!($38)) {\n   $41 = ((($0)) + 216|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = $42 & 2;\n   $44 = ($43|0)==(0);\n   if (!($44)) {\n    switch ($40<<24>>24) {\n    case 0:  {\n     $45 = $34 & 7;\n     $46 = ($45|0)==(0);\n     if ($46) {\n      break L11;\n     }\n     $47 = ($2|0)==(0|0);\n     if (!($47)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 1:  {\n     $48 = $34 & 7;\n     $49 = ($48|0)==(0);\n     if ($49) {\n      $50 = ((($0)) + 348|0);\n      $51 = HEAP32[$50>>2]|0;\n      $52 = ($51>>>0)<(5);\n      if (!($52)) {\n       break L11;\n      }\n     }\n     $53 = ($2|0)==(0|0);\n     if (!($53)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 2:  {\n     $54 = $34 & 7;\n     $55 = ($54|0)==(4);\n     if ($55) {\n      break L11;\n     }\n     $56 = ($2|0)==(0|0);\n     $57 = $34 & 4;\n     $58 = ($57|0)==(0);\n     $or$cond = $56 | $58;\n     if (!($or$cond)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 3:  {\n     $59 = $34 & 3;\n     $60 = ($59|0)==(0);\n     if ($60) {\n      $61 = ((($0)) + 348|0);\n      $62 = HEAP32[$61>>2]|0;\n      $63 = ($62>>>0)<(3);\n      if (!($63)) {\n       break L11;\n      }\n     }\n     $64 = ($2|0)==(0|0);\n     if (!($64)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 4:  {\n     $65 = $34 & 3;\n     $66 = ($65|0)==(2);\n     if ($66) {\n      break L11;\n     }\n     $67 = ($2|0)==(0|0);\n     $68 = $34 & 2;\n     $69 = ($68|0)==(0);\n     $or$cond97 = $67 | $69;\n     if (!($or$cond97)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 5:  {\n     $70 = $34 & 1;\n     $71 = ($70|0)==(0);\n     if ($71) {\n      $72 = ((($0)) + 348|0);\n      $73 = HEAP32[$72>>2]|0;\n      $74 = ($73>>>0)<(2);\n      if (!($74)) {\n       break L11;\n      }\n     }\n     $75 = ($2|0)==(0|0);\n     if (!($75)) {\n      _png_combine_row($0,$2,1);\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    default: {\n     $76 = $34 & 1;\n     $77 = ($76|0)==(0);\n     if (!($77)) {\n      break L11;\n     }\n     _png_read_finish_row($0);\n     STACKTOP = sp;return;\n    }\n    }\n   }\n  }\n } while(0);\n $78 = ((($0)) + 208|0);\n $79 = HEAP32[$78>>2]|0;\n $80 = $79 & 4;\n $81 = ($80|0)==(0);\n if ($81) {\n  _png_error($0,25864);\n  // unreachable;\n }\n $82 = ((($0)) + 384|0);\n $83 = HEAP32[$82>>2]|0;\n $84 = (($32) + 1)|0;\n _png_read_IDAT_data($0,$83,$84);\n $85 = HEAP32[$82>>2]|0;\n $86 = HEAP8[$85>>0]|0;\n $87 = $86&255;\n $88 = ($86<<24>>24)==(0);\n do {\n  if ($88) {\n   $$pre103 = ((($0)) + 380|0);\n   $$pre$phiZ2D = $$pre103;$96 = $32;$97 = $85;\n  } else {\n   $89 = ($86&255)<(5);\n   if ($89) {\n    $90 = ((($85)) + 1|0);\n    $91 = ((($0)) + 380|0);\n    $92 = HEAP32[$91>>2]|0;\n    $93 = ((($92)) + 1|0);\n    _png_read_filter_row($0,$3,$90,$93,$87);\n    $$pre = HEAP32[$82>>2]|0;\n    $$pre102 = HEAP32[$31>>2]|0;\n    $$pre$phiZ2D = $91;$96 = $$pre102;$97 = $$pre;\n    break;\n   } else {\n    _png_error($0,25897);\n    // unreachable;\n   }\n  }\n } while(0);\n $94 = HEAP32[$$pre$phiZ2D>>2]|0;\n $95 = (($96) + 1)|0;\n _memcpy(($94|0),($97|0),($95|0))|0;\n $98 = ((($0)) + 708|0);\n $99 = HEAP32[$98>>2]|0;\n $100 = $99 & 4;\n $101 = ($100|0)==(0);\n L71: do {\n  if (!($101)) {\n   $102 = ((($0)) + 712|0);\n   $103 = HEAP8[$102>>0]|0;\n   $104 = ($103<<24>>24)==(64);\n   if ($104) {\n    $105 = HEAP32[$82>>2]|0;\n    $106 = ((($105)) + 1|0);\n    $$idx$val = HEAP32[$3>>2]|0;\n    $$idx98$val = HEAP16[$13>>1]|0;\n    $107 = $$idx98$val&255;\n    $108 = $107 & 2;\n    $109 = ($108<<24>>24)==(0);\n    if (!($109)) {\n     $110 = ($$idx98$val&65535) >>> 8;\n     $111 = $110&255;\n     switch ($111<<24>>24) {\n     case 8:  {\n      switch ($107<<24>>24) {\n      case 2:  {\n       $$0$i = 3;\n       break;\n      }\n      case 6:  {\n       $$0$i = 4;\n       break;\n      }\n      default: {\n       break L71;\n      }\n      }\n      $112 = ($$idx$val|0)==(0);\n      if ($112) {\n       break L71;\n      } else {\n       $$0673$i$lver$orig = $106;$$0682$i$lver$orig = 0;\n      }\n      while(1) {\n       $113 = HEAP8[$$0673$i$lver$orig>>0]|0;\n       $114 = $113&255;\n       $115 = ((($$0673$i$lver$orig)) + 1|0);\n       $116 = HEAP8[$115>>0]|0;\n       $117 = $116&255;\n       $118 = (($117) + ($114))|0;\n       $119 = $118&255;\n       HEAP8[$$0673$i$lver$orig>>0] = $119;\n       $120 = ((($$0673$i$lver$orig)) + 2|0);\n       $121 = HEAP8[$120>>0]|0;\n       $122 = $121&255;\n       $123 = (($122) + ($117))|0;\n       $124 = $123&255;\n       HEAP8[$120>>0] = $124;\n       $125 = (($$0682$i$lver$orig) + 1)|0;\n       $126 = (($$0673$i$lver$orig) + ($$0$i)|0);\n       $exitcond$i$lver$orig = ($125|0)==($$idx$val|0);\n       if ($exitcond$i$lver$orig) {\n        break;\n       } else {\n        $$0673$i$lver$orig = $126;$$0682$i$lver$orig = $125;\n       }\n      }\n      break;\n     }\n     case 16:  {\n      switch ($107<<24>>24) {\n      case 2:  {\n       $$1$i = 6;\n       break;\n      }\n      case 6:  {\n       $$1$i = 8;\n       break;\n      }\n      default: {\n       break L71;\n      }\n      }\n      $127 = ($$idx$val|0)==(0);\n      if ($127) {\n       break L71;\n      } else {\n       $$0715$i$lver$orig = $106;$$0724$i$lver$orig = 0;\n      }\n      while(1) {\n       $128 = HEAP8[$$0715$i$lver$orig>>0]|0;\n       $129 = $128&255;\n       $130 = $129 << 8;\n       $131 = ((($$0715$i$lver$orig)) + 1|0);\n       $132 = HEAP8[$131>>0]|0;\n       $133 = $132&255;\n       $134 = $130 | $133;\n       $135 = ((($$0715$i$lver$orig)) + 2|0);\n       $136 = HEAP8[$135>>0]|0;\n       $137 = $136&255;\n       $138 = $137 << 8;\n       $139 = ((($$0715$i$lver$orig)) + 3|0);\n       $140 = HEAP8[$139>>0]|0;\n       $141 = $140&255;\n       $142 = $138 | $141;\n       $143 = ((($$0715$i$lver$orig)) + 4|0);\n       $144 = HEAP8[$143>>0]|0;\n       $145 = $144&255;\n       $146 = $145 << 8;\n       $147 = ((($$0715$i$lver$orig)) + 5|0);\n       $148 = HEAP8[$147>>0]|0;\n       $149 = $148&255;\n       $150 = $146 | $149;\n       $151 = (($142) + ($134))|0;\n       $152 = (($150) + ($142))|0;\n       $153 = $151 >>> 8;\n       $154 = $153&255;\n       HEAP8[$$0715$i$lver$orig>>0] = $154;\n       $155 = $151&255;\n       HEAP8[$131>>0] = $155;\n       $156 = $152 >>> 8;\n       $157 = $156&255;\n       HEAP8[$143>>0] = $157;\n       $158 = $152&255;\n       HEAP8[$147>>0] = $158;\n       $159 = (($$0724$i$lver$orig) + 1)|0;\n       $160 = (($$0715$i$lver$orig) + ($$1$i)|0);\n       $exitcond8$i$lver$orig = ($159|0)==($$idx$val|0);\n       if ($exitcond8$i$lver$orig) {\n        break;\n       } else {\n        $$0715$i$lver$orig = $160;$$0724$i$lver$orig = $159;\n       }\n      }\n      break;\n     }\n     default: {\n      break L71;\n     }\n     }\n    }\n   }\n  }\n } while(0);\n $161 = ((($0)) + 216|0);\n $162 = HEAP32[$161>>2]|0;\n $163 = ($162|0)==(0);\n if (!($163)) {\n  _png_do_read_transformations($0,$3);\n }\n $164 = ((($0)) + 443|0);\n $165 = HEAP8[$164>>0]|0;\n $166 = ($165<<24>>24)==(0);\n $167 = HEAP8[$23>>0]|0;\n if ($166) {\n  HEAP8[$164>>0] = $167;\n  $168 = ((($0)) + 442|0);\n  $169 = HEAP8[$168>>0]|0;\n  $170 = ($167&255)>($169&255);\n  if ($170) {\n   _png_error($0,25923);\n   // unreachable;\n  }\n } else {\n  $171 = ($165<<24>>24)==($167<<24>>24);\n  if (!($171)) {\n   _png_error($0,25947);\n   // unreachable;\n  }\n }\n $172 = HEAP16[$35>>1]|0;\n $173 = $172&255;\n $174 = ($173<<24>>24)==(0);\n $175 = ($172&65535) >>> 8;\n $176 = $175&255;\n if ($174) {\n  label = 73;\n } else {\n  $177 = HEAP32[$161>>2]|0;\n  $178 = $177 & 2;\n  $179 = ($178|0)==(0);\n  if ($179) {\n   label = 73;\n  } else {\n   $180 = ($176&255)<(6);\n   if ($180) {\n    $181 = $175&65535;\n    $182 = HEAP32[$82>>2]|0;\n    $183 = ((($182)) + 1|0);\n    _png_do_read_interlace($3,$183,$181,$177);\n   }\n   $184 = ($2|0)==(0|0);\n   if (!($184)) {\n    _png_combine_row($0,$2,1);\n   }\n   $185 = ($1|0)==(0|0);\n   if (!($185)) {\n    _png_combine_row($0,$1,0);\n   }\n  }\n }\n if ((label|0) == 73) {\n  $186 = ($1|0)==(0|0);\n  if (!($186)) {\n   _png_combine_row($0,$1,-1);\n  }\n  $187 = ($2|0)==(0|0);\n  if (!($187)) {\n   _png_combine_row($0,$2,-1);\n  }\n }\n _png_read_finish_row($0);\n $188 = ((($0)) + 544|0);\n $189 = HEAP32[$188>>2]|0;\n $190 = ($189|0)==(0|0);\n if ($190) {\n  STACKTOP = sp;return;\n }\n $191 = HEAP32[$33>>2]|0;\n $192 = ((($0)) + 433|0);\n $193 = HEAP8[$192>>0]|0;\n $194 = $193&255;\n FUNCTION_TABLE_viii[$189 & 127]($0,$191,$194);\n STACKTOP = sp;return;\n}\nfunction _png_combine_row($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$$1283 = 0, $$0 = 0, $$0252 = 0, $$0253 = 0, $$0256 = 0, $$0259 = 0, $$0260 = 0, $$0263 = 0, $$0266 = 0, $$0274 = 0, $$0282 = 0, $$0284 = 0, $$0284$ph = 0, $$0284$ph$in = 0, $$0285 = 0, $$0289 = 0, $$0290 = 0, $$10 = 0, $$11339 = 0;\n var $$1254 = 0, $$1257 = 0, $$1261 = 0, $$1264 = 0, $$1283338 = 0, $$2268343 = 0, $$2276342 = 0, $$2344 = 0, $$3 = 0, $$3269 = 0, $$3277 = 0, $$4270347 = 0, $$4278346 = 0, $$4348 = 0, $$5 = 0, $$5271 = 0, $$5279 = 0, $$6 = 0, $$6272 = 0, $$7273340 = 0;\n var $$7281 = 0, $$7341 = 0, $$8 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;\n var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;\n var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;\n var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;\n var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;\n var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;\n var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;\n var $222 = 0, $223 = 0, $224 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;\n var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;\n var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $trunc = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 443|0);\n $4 = HEAP8[$3>>0]|0;\n $5 = $4&255;\n $6 = ((($0)) + 384|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ((($7)) + 1|0);\n $9 = ((($0)) + 348|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($0)) + 433|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12&255;\n $14 = ($4<<24>>24)==(0);\n if ($14) {\n  _png_error($0,26218);\n  // unreachable;\n }\n $15 = ((($0)) + 404|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ($16|0)==(0);\n if (!($17)) {\n  $18 = ($4&255)>(7);\n  if ($18) {\n   $19 = $5 >>> 3;\n   $20 = Math_imul($10, $19)|0;\n   $25 = $20;\n  } else {\n   $21 = Math_imul($10, $5)|0;\n   $22 = (($21) + 7)|0;\n   $23 = $22 >>> 3;\n   $25 = $23;\n  }\n  $24 = ($16|0)==($25|0);\n  if (!($24)) {\n   _png_error($0,26243);\n   // unreachable;\n  }\n }\n $26 = ($10|0)==(0);\n if ($26) {\n  _png_error($0,26279);\n  // unreachable;\n }\n $27 = Math_imul($10, $5)|0;\n $28 = $27 & 7;\n $29 = ($28|0)==(0);\n do {\n  if ($29) {\n   $$0285 = 0;$$0289 = 0;$$0290 = 0;\n  } else {\n   $30 = ($4&255)>(7);\n   $31 = $5 >>> 3;\n   $32 = Math_imul($10, $31)|0;\n   $33 = (($27) + 7)|0;\n   $34 = $33 >>> 3;\n   $35 = $30 ? $32 : $34;\n   $36 = (($1) + ($35)|0);\n   $37 = ((($36)) + -1|0);\n   $38 = HEAP8[$37>>0]|0;\n   $39 = ((($0)) + 216|0);\n   $40 = HEAP32[$39>>2]|0;\n   $41 = $40 & 65536;\n   $42 = ($41|0)==(0);\n   if ($42) {\n    $44 = 255 >>> $28;\n    $$0285 = $37;$$0289 = $44;$$0290 = $38;\n    break;\n   } else {\n    $43 = 255 << $28;\n    $$0285 = $37;$$0289 = $43;$$0290 = $38;\n    break;\n   }\n  }\n } while(0);\n $45 = ((($0)) + 432|0);\n $46 = HEAP8[$45>>0]|0;\n $47 = ($46<<24>>24)==(0);\n L21: do {\n  if ($47) {\n   label = 64;\n  } else {\n   $48 = ((($0)) + 216|0);\n   $49 = HEAP32[$48>>2]|0;\n   $50 = $49 & 2;\n   $51 = ($50|0)!=(0);\n   $52 = ($12&255)<(6);\n   $or$cond = $52 & $51;\n   if ($or$cond) {\n    switch ($2|0) {\n    case 0:  {\n     $$pre = $13 & 1;\n     $$pre$phiZ2D = $$pre;\n     break;\n    }\n    case 1:  {\n     $53 = $13 & 1;\n     $54 = ($53|0)==(0);\n     if ($54) {\n      label = 64;\n      break L21;\n     } else {\n      $$pre$phiZ2D = 1;\n     }\n     break;\n    }\n    default: {\n     label = 64;\n     break L21;\n    }\n    }\n    $55 = (($13) + 1)|0;\n    $56 = $55 >>> 1;\n    $57 = (3 - ($56))|0;\n    $58 = $$pre$phiZ2D << $57;\n    $59 = $58 & 7;\n    $60 = ($10>>>0)>($59>>>0);\n    if (!($60)) {\n     return;\n    }\n    $61 = ($4&255)<(8);\n    if ($61) {\n     $62 = (8 / ($5>>>0))&-1;\n     $63 = $49 & 65536;\n     $64 = ($63|0)==(0);\n     $65 = ($2|0)!=(0);\n     do {\n      if ($64) {\n       if ($65) {\n        $77 = $13 >>> 1;\n        $78 = ($4<<24>>24)==(1);\n        $79 = ($4<<24>>24)==(2);\n        $80 = $79 ? 1 : 2;\n        $81 = $78 ? 0 : $80;\n        $82 = ((836 + (($81*12)|0)|0) + ($77<<2)|0);\n        $$0284$ph$in = $82;\n        break;\n       } else {\n        $83 = ($4<<24>>24)==(1);\n        $84 = ($4<<24>>24)==(2);\n        $85 = $84 ? 1 : 2;\n        $86 = $83 ? 0 : $85;\n        $87 = ((944 + (($86*24)|0)|0) + ($13<<2)|0);\n        $$0284$ph$in = $87;\n        break;\n       }\n      } else {\n       if ($65) {\n        $66 = $13 >>> 1;\n        $67 = ($4<<24>>24)==(1);\n        $68 = ($4<<24>>24)==(2);\n        $69 = $68 ? 1 : 2;\n        $70 = $67 ? 0 : $69;\n        $71 = ((800 + (($70*12)|0)|0) + ($66<<2)|0);\n        $$0284$ph$in = $71;\n        break;\n       } else {\n        $72 = ($4<<24>>24)==(1);\n        $73 = ($4<<24>>24)==(2);\n        $74 = $73 ? 1 : 2;\n        $75 = $72 ? 0 : $74;\n        $76 = ((872 + (($75*24)|0)|0) + ($13<<2)|0);\n        $$0284$ph$in = $76;\n        break;\n       }\n      }\n     } while(0);\n     $$0284$ph = HEAP32[$$0284$ph$in>>2]|0;\n     $$0252 = $1;$$0266 = $8;$$0274 = $10;$$0284 = $$0284$ph;\n     while(1) {\n      $88 = $$0284 >>> 8;\n      $89 = $$0284 << 24;\n      $90 = $88 | $89;\n      $trunc = $$0284&255;\n      switch ($trunc<<24>>24) {\n      case 0:  {\n       break;\n      }\n      case -1:  {\n       $100 = HEAP8[$$0266>>0]|0;\n       HEAP8[$$0252>>0] = $100;\n       break;\n      }\n      default: {\n       $91 = HEAP8[$$0252>>0]|0;\n       $92 = $91&255;\n       $93 = $$0284 ^ 255;\n       $94 = $92 & $93;\n       $95 = HEAP8[$$0266>>0]|0;\n       $96 = $95&255;\n       $97 = $96 & $$0284;\n       $98 = $97 | $94;\n       $99 = $98&255;\n       HEAP8[$$0252>>0] = $99;\n      }\n      }\n      $101 = ($$0274>>>0)>($62>>>0);\n      $102 = (($$0274) - ($62))|0;\n      $103 = ((($$0252)) + 1|0);\n      $104 = ((($$0266)) + 1|0);\n      if ($101) {\n       $$0252 = $103;$$0266 = $104;$$0274 = $102;$$0284 = $90;\n      } else {\n       break L21;\n      }\n     }\n    }\n    $105 = $5 & 7;\n    $106 = ($105|0)==(0);\n    if (!($106)) {\n     _png_error($0,26304);\n     // unreachable;\n    }\n    $107 = $5 >>> 3;\n    $108 = Math_imul($10, $107)|0;\n    $109 = Math_imul($59, $107)|0;\n    $110 = (($108) - ($109))|0;\n    $111 = (($1) + ($109)|0);\n    $112 = (($8) + ($109)|0);\n    $113 = ($2|0)==(0);\n    $114 = (6 - ($13))|0;\n    $115 = $114 >>> 1;\n    $116 = $107 << $115;\n    $117 = ($116>>>0)>($110>>>0);\n    $$ = $117 ? $110 : $116;\n    $$0282 = $113 ? $107 : $$;\n    $118 = (7 - ($13))|0;\n    $119 = $118 >>> 1;\n    $120 = $107 << $119;\n    switch ($$0282|0) {\n    case 1:  {\n     $129 = HEAP8[$112>>0]|0;\n     HEAP8[$111>>0] = $129;\n     $130 = ($110>>>0)>($120>>>0);\n     if ($130) {\n      $$2268343 = $112;$$2276342 = $110;$$2344 = $111;\n     } else {\n      return;\n     }\n     while(1) {\n      $131 = (($$2344) + ($120)|0);\n      $132 = (($$2268343) + ($120)|0);\n      $133 = (($$2276342) - ($120))|0;\n      $134 = HEAP8[$132>>0]|0;\n      HEAP8[$131>>0] = $134;\n      $135 = ($133>>>0)>($120>>>0);\n      if ($135) {\n       $$2268343 = $132;$$2276342 = $133;$$2344 = $131;\n      } else {\n       break;\n      }\n     }\n     return;\n     break;\n    }\n    case 2:  {\n     $$3 = $111;$$3269 = $112;$$3277 = $110;\n     while(1) {\n      $136 = HEAP8[$$3269>>0]|0;\n      HEAP8[$$3>>0] = $136;\n      $137 = ((($$3269)) + 1|0);\n      $138 = HEAP8[$137>>0]|0;\n      $139 = ((($$3)) + 1|0);\n      HEAP8[$139>>0] = $138;\n      $140 = ($$3277>>>0)>($120>>>0);\n      if (!($140)) {\n       label = 67;\n       break;\n      }\n      $141 = (($$3269) + ($120)|0);\n      $142 = (($$3) + ($120)|0);\n      $143 = (($$3277) - ($120))|0;\n      $144 = ($143>>>0)>(1);\n      if ($144) {\n       $$3 = $142;$$3269 = $141;$$3277 = $143;\n      } else {\n       break;\n      }\n     }\n     if ((label|0) == 67) {\n      return;\n     }\n     $145 = HEAP8[$141>>0]|0;\n     HEAP8[$142>>0] = $145;\n     return;\n     break;\n    }\n    case 3:  {\n     $121 = HEAP8[$112>>0]|0;\n     HEAP8[$111>>0] = $121;\n     $122 = ((($112)) + 1|0);\n     $123 = HEAP8[$122>>0]|0;\n     $124 = ((($111)) + 1|0);\n     HEAP8[$124>>0] = $123;\n     $125 = ((($112)) + 2|0);\n     $126 = HEAP8[$125>>0]|0;\n     $127 = ((($111)) + 2|0);\n     HEAP8[$127>>0] = $126;\n     $128 = ($110>>>0)>($120>>>0);\n     if ($128) {\n      $$4270347 = $112;$$4278346 = $110;$$4348 = $111;\n     } else {\n      return;\n     }\n     while(1) {\n      $146 = (($$4270347) + ($120)|0);\n      $147 = (($$4348) + ($120)|0);\n      $148 = (($$4278346) - ($120))|0;\n      $149 = HEAP8[$146>>0]|0;\n      HEAP8[$147>>0] = $149;\n      $150 = ((($146)) + 1|0);\n      $151 = HEAP8[$150>>0]|0;\n      $152 = ((($147)) + 1|0);\n      HEAP8[$152>>0] = $151;\n      $153 = ((($146)) + 2|0);\n      $154 = HEAP8[$153>>0]|0;\n      $155 = ((($147)) + 2|0);\n      HEAP8[$155>>0] = $154;\n      $156 = ($148>>>0)>($120>>>0);\n      if ($156) {\n       $$4270347 = $146;$$4278346 = $148;$$4348 = $147;\n      } else {\n       break;\n      }\n     }\n     return;\n     break;\n    }\n    default: {\n     $157 = ($$0282>>>0)<(16);\n     if ($157) {\n      $159 = $111;\n      $160 = $159 & 1;\n      $161 = ($160|0)==(0);\n      if ($161) {\n       $162 = $112;\n       $163 = $162 | $120;\n       $164 = $163 | $$0282;\n       $165 = $164 & 1;\n       $166 = ($165|0)==(0);\n       if ($166) {\n        $167 = $163 | $159;\n        $168 = $167 | $$0282;\n        $169 = $168 & 3;\n        $170 = ($169|0)==(0);\n        if ($170) {\n         $171 = (($120) - ($$0282))|0;\n         $172 = $171 >>> 2;\n         $$0260 = $112;$$0263 = $111;$$5279 = $110;\n         while(1) {\n          $$0259 = $$0282;$$1261 = $$0260;$$1264 = $$0263;\n          while(1) {\n           $173 = ((($$1261)) + 4|0);\n           $174 = HEAP32[$$1261>>2]|0;\n           $175 = ((($$1264)) + 4|0);\n           HEAP32[$$1264>>2] = $174;\n           $176 = (($$0259) + -4)|0;\n           $177 = ($176|0)==(0);\n           if ($177) {\n            break;\n           } else {\n            $$0259 = $176;$$1261 = $173;$$1264 = $175;\n           }\n          }\n          $178 = ($$5279>>>0)>($120>>>0);\n          $179 = (($175) + ($172<<2)|0);\n          $180 = (($173) + ($172<<2)|0);\n          $181 = (($$5279) - ($120))|0;\n          if (!($178)) {\n           label = 67;\n           break;\n          }\n          $182 = ($$0282>>>0)>($181>>>0);\n          if ($182) {\n           break;\n          } else {\n           $$0260 = $180;$$0263 = $179;$$5279 = $181;\n          }\n         }\n         if ((label|0) == 67) {\n          return;\n         }\n         $$5 = $179;$$5271 = $180;$$7281 = $181;\n         while(1) {\n          $183 = ((($$5271)) + 1|0);\n          $184 = HEAP8[$$5271>>0]|0;\n          $185 = ((($$5)) + 1|0);\n          HEAP8[$$5>>0] = $184;\n          $186 = (($$7281) + -1)|0;\n          $187 = ($186|0)==(0);\n          if ($187) {\n           break;\n          } else {\n           $$5 = $185;$$5271 = $183;$$7281 = $186;\n          }\n         }\n         return;\n        } else {\n         $188 = (($120) - ($$0282))|0;\n         $189 = $188 >>> 1;\n         $$0253 = $112;$$0256 = $111;$$8 = $110;\n         while(1) {\n          $$0 = $$0282;$$1254 = $$0253;$$1257 = $$0256;\n          while(1) {\n           $190 = ((($$1254)) + 2|0);\n           $191 = HEAP16[$$1254>>1]|0;\n           $192 = ((($$1257)) + 2|0);\n           HEAP16[$$1257>>1] = $191;\n           $193 = (($$0) + -2)|0;\n           $194 = ($193|0)==(0);\n           if ($194) {\n            break;\n           } else {\n            $$0 = $193;$$1254 = $190;$$1257 = $192;\n           }\n          }\n          $195 = ($$8>>>0)>($120>>>0);\n          $196 = (($192) + ($189<<1)|0);\n          $197 = (($190) + ($189<<1)|0);\n          $198 = (($$8) - ($120))|0;\n          if (!($195)) {\n           label = 67;\n           break;\n          }\n          $199 = ($$0282>>>0)>($198>>>0);\n          if ($199) {\n           break;\n          } else {\n           $$0253 = $197;$$0256 = $196;$$8 = $198;\n          }\n         }\n         if ((label|0) == 67) {\n          return;\n         }\n         $$10 = $198;$$6 = $196;$$6272 = $197;\n         while(1) {\n          $200 = ((($$6272)) + 1|0);\n          $201 = HEAP8[$$6272>>0]|0;\n          $202 = ((($$6)) + 1|0);\n          HEAP8[$$6>>0] = $201;\n          $203 = (($$10) + -1)|0;\n          $204 = ($203|0)==(0);\n          if ($204) {\n           break;\n          } else {\n           $$10 = $203;$$6 = $202;$$6272 = $200;\n          }\n         }\n         return;\n        }\n       }\n      }\n     }\n     _memcpy(($111|0),($112|0),($$0282|0))|0;\n     $158 = ($110>>>0)>($120>>>0);\n     if ($158) {\n      $$11339 = $110;$$1283338 = $$0282;$$7273340 = $112;$$7341 = $111;\n     } else {\n      return;\n     }\n     while(1) {\n      $205 = (($$7273340) + ($120)|0);\n      $206 = (($$7341) + ($120)|0);\n      $207 = (($$11339) - ($120))|0;\n      $208 = ($$1283338>>>0)>($207>>>0);\n      $$$1283 = $208 ? $207 : $$1283338;\n      _memcpy(($206|0),($205|0),($$$1283|0))|0;\n      $209 = ($207>>>0)>($120>>>0);\n      if ($209) {\n       $$11339 = $207;$$1283338 = $$$1283;$$7273340 = $205;$$7341 = $206;\n      } else {\n       break;\n      }\n     }\n     return;\n    }\n    }\n   } else {\n    label = 64;\n   }\n  }\n } while(0);\n if ((label|0) == 64) {\n  $210 = ($4&255)>(7);\n  $211 = $5 >>> 3;\n  $212 = Math_imul($10, $211)|0;\n  $213 = (($27) + 7)|0;\n  $214 = $213 >>> 3;\n  $215 = $210 ? $212 : $214;\n  _memcpy(($1|0),($8|0),($215|0))|0;\n }\n $216 = ($$0285|0)==(0|0);\n if ($216) {\n  return;\n }\n $217 = $$0290&255;\n $218 = $217 & $$0289;\n $219 = HEAP8[$$0285>>0]|0;\n $220 = $219&255;\n $221 = $$0289 ^ 255;\n $222 = $220 & $221;\n $223 = $222 | $218;\n $224 = $223&255;\n HEAP8[$$0285>>0] = $224;\n return;\n}\nfunction _png_read_finish_row($0) {\n $0 = $0|0;\n var $$lcssa = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 372|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = (($2) + 1)|0;\n HEAP32[$1>>2] = $3;\n $4 = ((($0)) + 356|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($3>>>0)<($5>>>0);\n if ($6) {\n  return;\n }\n $7 = ((($0)) + 432|0);\n $8 = HEAP8[$7>>0]|0;\n $9 = ($8<<24>>24)==(0);\n L4: do {\n  if (!($9)) {\n   HEAP32[$1>>2] = 0;\n   $10 = ((($0)) + 380|0);\n   $11 = HEAP32[$10>>2]|0;\n   $12 = ((($0)) + 364|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = (($13) + 1)|0;\n   _memset(($11|0),0,($14|0))|0;\n   $15 = ((($0)) + 433|0);\n   $16 = HEAP8[$15>>0]|0;\n   $17 = (($16) + 1)<<24>>24;\n   HEAP8[$15>>0] = $17;\n   $18 = $17&255;\n   $19 = ($17&255)>(6);\n   if (!($19)) {\n    $20 = ((($0)) + 348|0);\n    $21 = HEAP32[$20>>2]|0;\n    $22 = (($21) + -1)|0;\n    $23 = ((($0)) + 368|0);\n    $24 = ((($0)) + 216|0);\n    $25 = HEAP32[$24>>2]|0;\n    $26 = $25 & 2;\n    $27 = ($26|0)==(0);\n    do {\n     if ($27) {\n      $28 = ((($0)) + 352|0);\n      $$pre = HEAP32[$28>>2]|0;\n      $29 = (($$pre) + -1)|0;\n      $31 = $18;$40 = $17;\n      while(1) {\n       $30 = (25562 + ($31)|0);\n       $32 = HEAP8[$30>>0]|0;\n       $33 = $32&255;\n       $34 = (25569 + ($31)|0);\n       $35 = HEAP8[$34>>0]|0;\n       $36 = $35&255;\n       $37 = (($22) + ($33))|0;\n       $38 = (($37) - ($36))|0;\n       $39 = $40&255;\n       $41 = (26204 + ($39)|0);\n       $42 = HEAP8[$41>>0]|0;\n       $43 = $42&255;\n       $44 = (26211 + ($39)|0);\n       $45 = HEAP8[$44>>0]|0;\n       $46 = $45&255;\n       $47 = (($29) + ($43))|0;\n       $48 = (($47) - ($46))|0;\n       $49 = ($43>>>0)>($48>>>0);\n       $50 = ($33>>>0)>($38>>>0);\n       $or$cond = $49 | $50;\n       if (!($or$cond)) {\n        label = 9;\n        break;\n       }\n       $51 = (($40) + 1)<<24>>24;\n       HEAP8[$15>>0] = $51;\n       $52 = $51&255;\n       $53 = ($51&255)>(6);\n       if ($53) {\n        label = 11;\n        break;\n       } else {\n        $31 = $52;$40 = $51;\n       }\n      }\n      if ((label|0) == 9) {\n       $63 = (($48>>>0) / ($43>>>0))&-1;\n       HEAP32[$4>>2] = $63;\n       $64 = (($38>>>0) / ($33>>>0))&-1;\n       $$lcssa = $64;\n       break;\n      }\n      else if ((label|0) == 11) {\n       $65 = (($48>>>0) / ($43>>>0))&-1;\n       HEAP32[$4>>2] = $65;\n       $66 = (($38>>>0) / ($33>>>0))&-1;\n       HEAP32[$23>>2] = $66;\n       break L4;\n      }\n     } else {\n      $54 = (25562 + ($18)|0);\n      $55 = HEAP8[$54>>0]|0;\n      $56 = $55&255;\n      $57 = (25569 + ($18)|0);\n      $58 = HEAP8[$57>>0]|0;\n      $59 = $58&255;\n      $60 = (($22) + ($56))|0;\n      $61 = (($60) - ($59))|0;\n      $62 = (($61>>>0) / ($56>>>0))&-1;\n      $$lcssa = $62;\n     }\n    } while(0);\n    HEAP32[$23>>2] = $$lcssa;\n    return;\n   }\n  }\n } while(0);\n $67 = ((($0)) + 212|0);\n $68 = HEAP32[$67>>2]|0;\n $69 = $68 & 8;\n $70 = ($69|0)==(0);\n if ($70) {\n  _png_read_IDAT_data($0,0,0);\n  $71 = ((($0)) + 236|0);\n  HEAP32[$71>>2] = 0;\n  $72 = HEAP32[$67>>2]|0;\n  $73 = $72 & 8;\n  $74 = ($73|0)==(0);\n  $75 = ((($0)) + 208|0);\n  if ($74) {\n   $76 = $72 | 8;\n   $77 = HEAP32[$75>>2]|0;\n   $78 = $77 | 8;\n   HEAP32[$75>>2] = $78;\n   HEAP32[$67>>2] = $76;\n  }\n }\n $79 = ((($0)) + 220|0);\n $80 = HEAP32[$79>>2]|0;\n $81 = ($80|0)==(1229209940);\n if (!($81)) {\n  return;\n }\n $82 = ((($0)) + 224|0);\n HEAP32[$82>>2] = 0;\n $83 = ((($0)) + 228|0);\n HEAP32[$83>>2] = 0;\n HEAP32[$79>>2] = 0;\n $84 = ((($0)) + 408|0);\n $85 = HEAP32[$84>>2]|0;\n (_png_crc_finish($0,$85)|0);\n return;\n}\nfunction _png_read_IDAT_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$066 = 0, $$066$us = 0, $$1$i = 0, $$1$i$us = 0, $$2 = 0, $$2$lcssa73 = 0, $$68 = 0, $$68$us = 0, $$lcssa75 = 0, $$pre = 0, $$pre113 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $cond$us = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 1024|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1024|0);\n $3 = sp;\n $4 = ((($0)) + 224|0);\n $5 = ((($0)) + 236|0);\n HEAP32[$5>>2] = $1;\n $6 = ((($0)) + 240|0);\n HEAP32[$6>>2] = 0;\n $7 = ($1|0)==(0|0);\n $$ = $7 ? 0 : $2;\n $8 = ((($0)) + 228|0);\n $9 = ($1|0)!=(0|0);\n $10 = ((($0)) + 408|0);\n $11 = ((($0)) + 376|0);\n $12 = ((($0)) + 796|0);\n $13 = ((($0)) + 788|0);\n $14 = ((($0)) + 792|0);\n L1: do {\n  if ($9) {\n   $$066$us = $$;\n   L2: while(1) {\n    $15 = HEAP32[$8>>2]|0;\n    $16 = ($15|0)==(0);\n    if ($16) {\n     $$pre113 = HEAP32[$10>>2]|0;\n     $17 = $$pre113;\n     while(1) {\n      $18 = ($17|0)==(0);\n      if (!($18)) {\n       break;\n      }\n      (_png_crc_finish($0,0)|0);\n      $31 = (_png_read_chunk_header($0)|0);\n      HEAP32[$10>>2] = $31;\n      $32 = HEAP32[$11>>2]|0;\n      $33 = ($32|0)==(1229209940);\n      if ($33) {\n       $17 = $31;\n      } else {\n       label = 18;\n       break L2;\n      }\n     }\n     $19 = HEAP32[$12>>2]|0;\n     $20 = ($19>>>0)>($17>>>0);\n     $$68$us = $20 ? $17 : $19;\n     $21 = HEAP32[$13>>2]|0;\n     $22 = ($21|0)==(0|0);\n     if ($22) {\n      label = 8;\n     } else {\n      $23 = HEAP32[$14>>2]|0;\n      $24 = ($23>>>0)<($$68$us>>>0);\n      if ($24) {\n       HEAP32[$13>>2] = 0;\n       HEAP32[$14>>2] = 0;\n       _png_free($0,$21);\n       label = 8;\n      } else {\n       $$1$i$us = $21;\n      }\n     }\n     if ((label|0) == 8) {\n      label = 0;\n      $25 = (_png_malloc_base($0,$$68$us)|0);\n      $26 = ($25|0)==(0|0);\n      if ($26) {\n       label = 24;\n       break;\n      }\n      HEAP32[$13>>2] = $25;\n      HEAP32[$14>>2] = $$68$us;\n      $$1$i$us = $25;\n     }\n     _png_read_data($0,$$1$i$us,$$68$us);\n     _png_calculate_crc($0,$$1$i$us,$$68$us);\n     $27 = HEAP32[$10>>2]|0;\n     $28 = (($27) - ($$68$us))|0;\n     HEAP32[$10>>2] = $28;\n     HEAP32[$4>>2] = $$1$i$us;\n     HEAP32[$8>>2] = $$68$us;\n    }\n    HEAP32[$6>>2] = $$066$us;\n    $29 = (_inflate($4,0)|0);\n    $30 = HEAP32[$6>>2]|0;\n    HEAP32[$6>>2] = 0;\n    switch ($29|0) {\n    case 1:  {\n     $$2$lcssa73 = $30;\n     break L1;\n     break;\n    }\n    case 0:  {\n     break;\n    }\n    default: {\n     $$lcssa75 = $29;\n     label = 30;\n     break L1;\n    }\n    }\n    $cond$us = ($30|0)==(0);\n    if ($cond$us) {\n     label = 38;\n     break;\n    } else {\n     $$066$us = $30;\n    }\n   }\n   if ((label|0) == 18) {\n    _png_error($0,26140);\n    // unreachable;\n   }\n   else if ((label|0) == 24) {\n    _png_chunk_error($0,24414);\n    // unreachable;\n   }\n   else if ((label|0) == 38) {\n    STACKTOP = sp;return;\n   }\n  } else {\n   $$066 = $$;\n   L23: while(1) {\n    $34 = HEAP32[$8>>2]|0;\n    $35 = ($34|0)==(0);\n    if ($35) {\n     $$pre = HEAP32[$10>>2]|0;\n     $36 = $$pre;\n     while(1) {\n      $37 = ($36|0)==(0);\n      if (!($37)) {\n       break;\n      }\n      (_png_crc_finish($0,0)|0);\n      $38 = (_png_read_chunk_header($0)|0);\n      HEAP32[$10>>2] = $38;\n      $39 = HEAP32[$11>>2]|0;\n      $40 = ($39|0)==(1229209940);\n      if ($40) {\n       $36 = $38;\n      } else {\n       label = 18;\n       break L23;\n      }\n     }\n     $41 = HEAP32[$12>>2]|0;\n     $42 = ($41>>>0)>($36>>>0);\n     $$68 = $42 ? $36 : $41;\n     $43 = HEAP32[$13>>2]|0;\n     $44 = ($43|0)==(0|0);\n     if ($44) {\n      label = 22;\n     } else {\n      $45 = HEAP32[$14>>2]|0;\n      $46 = ($45>>>0)<($$68>>>0);\n      if ($46) {\n       HEAP32[$13>>2] = 0;\n       HEAP32[$14>>2] = 0;\n       _png_free($0,$43);\n       label = 22;\n      } else {\n       $$1$i = $43;\n      }\n     }\n     if ((label|0) == 22) {\n      label = 0;\n      $47 = (_png_malloc_base($0,$$68)|0);\n      $48 = ($47|0)==(0|0);\n      if ($48) {\n       label = 24;\n       break;\n      }\n      HEAP32[$13>>2] = $47;\n      HEAP32[$14>>2] = $$68;\n      $$1$i = $47;\n     }\n     _png_read_data($0,$$1$i,$$68);\n     _png_calculate_crc($0,$$1$i,$$68);\n     $49 = HEAP32[$10>>2]|0;\n     $50 = (($49) - ($$68))|0;\n     HEAP32[$10>>2] = $50;\n     HEAP32[$4>>2] = $$1$i;\n     HEAP32[$8>>2] = $$68;\n    }\n    HEAP32[$5>>2] = $3;\n    HEAP32[$6>>2] = 1024;\n    $51 = (_inflate($4,0)|0);\n    $52 = HEAP32[$6>>2]|0;\n    $53 = (1024 - ($52))|0;\n    $$2 = (($53) + ($$066))|0;\n    HEAP32[$6>>2] = 0;\n    switch ($51|0) {\n    case 1:  {\n     $$2$lcssa73 = $$2;\n     break L1;\n     break;\n    }\n    case 0:  {\n     break;\n    }\n    default: {\n     $$lcssa75 = $51;\n     label = 30;\n     break L1;\n    }\n    }\n    $cond = ($$2|0)==(0);\n    if ($cond) {\n     label = 38;\n     break;\n    } else {\n     $$066 = $$2;\n    }\n   }\n   if ((label|0) == 18) {\n    _png_error($0,26140);\n    // unreachable;\n   }\n   else if ((label|0) == 24) {\n    _png_chunk_error($0,24414);\n    // unreachable;\n   }\n   else if ((label|0) == 38) {\n    STACKTOP = sp;return;\n   }\n  }\n } while(0);\n if ((label|0) == 30) {\n  _png_zstream_error($0,$$lcssa75);\n  $64 = ((($0)) + 248|0);\n  $65 = HEAP32[$64>>2]|0;\n  if ($9) {\n   _png_chunk_error($0,$65);\n   // unreachable;\n  }\n  _png_chunk_benign_error($0,$65);\n  STACKTOP = sp;return;\n }\n HEAP32[$5>>2] = 0;\n $54 = ((($0)) + 208|0);\n $55 = HEAP32[$54>>2]|0;\n $56 = $55 | 8;\n HEAP32[$54>>2] = $56;\n $57 = ((($0)) + 212|0);\n $58 = HEAP32[$57>>2]|0;\n $59 = $58 | 8;\n HEAP32[$57>>2] = $59;\n $60 = HEAP32[$8>>2]|0;\n $61 = ($60|0)==(0);\n if ($61) {\n  $62 = HEAP32[$10>>2]|0;\n  $63 = ($62|0)==(0);\n  if (!($63)) {\n   label = 29;\n  }\n } else {\n  label = 29;\n }\n if ((label|0) == 29) {\n  _png_chunk_benign_error($0,26162);\n }\n $66 = ($$2$lcssa73|0)==(0);\n if ($66) {\n  STACKTOP = sp;return;\n }\n if ($9) {\n  _png_error($0,26140);\n  // unreachable;\n }\n _png_chunk_benign_error($0,26184);\n STACKTOP = sp;return;\n}\nfunction _png_read_filter_row($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$mask$i = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $png_read_filter_row_paeth_1byte_pixel$png_read_filter_row_paeth_multibyte_pixel$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$off = (($4) + -1)|0;\n $5 = ($$off>>>0)<(4);\n if (!($5)) {\n  return;\n }\n $6 = ((($0)) + 808|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = ($7|0)==(0|0);\n if ($8) {\n  $9 = ((($0)) + 438|0);\n  $10 = HEAP8[$9>>0]|0;\n  $11 = $10&255;\n  $12 = (($11) + 7)|0;\n  HEAP32[$6>>2] = 61;\n  $13 = ((($0)) + 812|0);\n  HEAP32[$13>>2] = 62;\n  $14 = ((($0)) + 816|0);\n  HEAP32[$14>>2] = 63;\n  $$mask$i = $12 & 504;\n  $15 = ($$mask$i|0)==(8);\n  $16 = ((($0)) + 820|0);\n  $png_read_filter_row_paeth_1byte_pixel$png_read_filter_row_paeth_multibyte_pixel$i = $15 ? 65 : 64;\n  HEAP32[$16>>2] = $png_read_filter_row_paeth_1byte_pixel$png_read_filter_row_paeth_multibyte_pixel$i;\n }\n $17 = (((($0)) + 808|0) + ($$off<<2)|0);\n $18 = HEAP32[$17>>2]|0;\n FUNCTION_TABLE_viii[$18 & 127]($1,$2,$3);\n return;\n}\nfunction _png_do_read_transformations($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$i = 0, $$$i168 = 0, $$0$i = 0, $$0100114$i = 0, $$0101113$i = 0, $$0106$i = 0, $$0115152$i = 0, $$0118140$i = 0, $$0119143$i = 0, $$0120139$i = 0, $$0120154$i = 0, $$0120154$pn$i = 0, $$0121142$i = 0, $$0122$i = 0, $$0123137$i = 0, $$0126136$i = 0, $$0126151$i = 0, $$0127133$i = 0, $$0128134$i = 0, $$0153$i = 0;\n var $$019$i = 0, $$01920$i = 0, $$0206258$i = 0, $$0207264$i = 0, $$0208263$i = 0, $$0209249$i = 0, $$021$i = 0, $$0210248$i = 0, $$0211254$i = 0, $$02122$i = 0, $$0212253$i = 0, $$0213239$i = 0, $$0214238$i = 0, $$0215244$i = 0, $$0216243$i = 0, $$0217231$i = 0, $$0218230$i = 0, $$0219234$i = 0, $$0220233$i = 0, $$0221232$i = 0;\n var $$022718$i = 0, $$023$i = 0, $$0237286$i = 0, $$0237286$us$i = 0, $$0239285$i = 0, $$0239285$us$i = 0, $$0242284$i = 0, $$0242284$us$i = 0, $$0244292$i = 0, $$0244292$us$i = 0, $$0245291$i = 0, $$0245291$us$i = 0, $$0247290$i = 0, $$0247290$us$i = 0, $$0249282$i = 0, $$0249282$us$i = 0, $$0251281$i = 0, $$0251281$us$i = 0, $$02526$i = 0, $$0254280$i = 0;\n var $$0254280$us$i = 0, $$0255298$i = 0, $$0255298$i$us = 0, $$0257297$i = 0, $$0257297$i$us = 0, $$0259$i = 0, $$0259$off0$i = 0, $$0259$off0$i$us = 0, $$0259$off8$i = 0, $$0259$off8$i$us = 0, $$0260296$i = 0, $$0260296$i$us = 0, $$027$i = 0, $$0287$i = 0, $$0287$us$i = 0, $$05056$i = 0, $$057$i = 0, $$073107$i = 0, $$073107$pn$i = 0, $$07398$i = 0;\n var $$074105$i = 0, $$07496$i = 0, $$07595$i = 0, $$076100$i = 0, $$07792$i = 0, $$078101$i = 0, $$078101$pn$i = 0, $$07991$i = 0, $$07999$i = 0, $$08090$i = 0, $$08195$i = 0, $$0822947$i = 0, $$08289$i = 0, $$08396$i = 0, $$08396$pn$i = 0, $$0843946$i = 0, $$08494$i = 0, $$0858$off0$i = 0, $$0858$off8$i = 0, $$08693$i = 0;\n var $$08896$i = 0, $$09095$i = 0, $$092111$i = 0, $$094121$i = 0, $$0948$i = 0, $$096118$i = 0, $$097$i = 0, $$097109$i = 0, $$098117$i = 0, $$099$i = 0, $$1$i = 0, $$1$i148 = 0, $$1$i163 = 0, $$1$i166 = 0, $$1$i176 = 0, $$1$us$i = 0, $$10832977$i = 0, $$10969$i = 0, $$1100$i = 0, $$1116159$i = 0;\n var $$1121161$i = 0, $$1121161$pn$i = 0, $$1122$i = 0, $$1127$i = 0, $$11833987$i = 0, $$11966$i = 0, $$121$i = 0, $$122820$i = 0, $$1229$i = 0, $$1240$i = 0, $$1240$us$i = 0, $$1252$i = 0, $$1252$us$i = 0, $$12834984$i = 0, $$12975$i = 0, $$13835991$i = 0, $$13835991$us$i = 0, $$13972$i = 0, $$14836995$i = 0, $$14981$i = 0;\n var $$15158$i = 0, $$15837998$i = 0, $$15837998$us$i = 0, $$159$i = 0, $$15978$i = 0, $$168381002$i = 0, $$16988$i = 0, $$175$i = 0, $$177$i = 0, $$178391005$i = 0, $$178391005$us$i = 0, $$17985$i = 0, $$180$i = 0, $$182$i = 0, $$1823954$i = 0, $$1844$i = 0, $$185$i = 0, $$1859$off0$i = 0, $$1859$off8$i = 0, $$18798$i = 0;\n var $$188401009$i = 0, $$18992$i = 0, $$18992$us$i = 0, $$18999$i = 0, $$19198$i = 0, $$198411012$i = 0, $$19996$i = 0, $$2$i = 0, $$208421016$i = 0, $$20999$i = 0, $$20999$us$i = 0, $$2104$i = 0, $$2104$i199 = 0, $$211003$i = 0, $$2117166$i = 0, $$2122168$i = 0, $$2122168$pn$i = 0, $$2128158$i = 0, $$2160$i = 0, $$221006$i = 0;\n var $$221006$us$i = 0, $$222923$i = 0, $$224$i = 0, $$2242$i = 0, $$2283$i = 0, $$2283$us$i = 0, $$231010$i = 0, $$241013$i = 0, $$251017$i = 0, $$2824950$i = 0, $$2845953$i = 0, $$2860$off0$i = 0, $$2860$off8$i = 0, $$292103$i = 0, $$2955$i = 0, $$3$i = 0, $$3$i150 = 0, $$3$i178 = 0, $$3$us$i = 0, $$3118142$i = 0;\n var $$3123143$i = 0, $$3129$i = 0, $$323026$i = 0, $$3237$i = 0, $$327$i = 0, $$3825962$i = 0, $$3846$i = 0, $$4119146$i = 0, $$4124$i = 0, $$4130165$i = 0, $$4167$i = 0, $$423129$i = 0, $$4252$i = 0, $$4299$i = 0, $$4299$i$us = 0, $$430$i = 0, $$4826958$i = 0, $$4847949$i = 0, $$4951$i = 0, $$5$i = 0;\n var $$5$i151 = 0, $$5$i151$us = 0, $$5$i179 = 0, $$5125$i = 0, $$5131$i = 0, $$523232$i = 0, $$5247$i = 0, $$533$i = 0, $$5827968$i = 0, $$5848$i = 0, $$6140$i = 0, $$623344$i = 0, $$6262$i = 0, $$6293$i = 0, $$6293$us$i = 0, $$645$i = 0, $$6828965$i = 0, $$6849961$i = 0, $$6963$i = 0, $$7$i = 0;\n var $$7$i180 = 0, $$7$us$i = 0, $$7144$i = 0, $$723435$i = 0, $$7257$i = 0, $$736$i = 0, $$7829974$i = 0, $$7850$i = 0, $$8$i = 0, $$823538$i = 0, $$839$i = 0, $$8830971$i = 0, $$8851957$i = 0, $$8959$i = 0, $$9$i181 = 0, $$923641$i = 0, $$942$i = 0, $$9831980$i = 0, $$9852$i = 0, $$idx = 0;\n var $$idx$val = 0, $$idx144 = 0, $$idx144$val = 0, $$idx145 = 0, $$idx145$val = 0, $$lobit$i = 0, $$mask$i = 0, $$mask$i165 = 0, $$masked865$i = 0, $$masked869$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert346 = 0, $$pn$i = 0, $$pn132141$i = 0, $$pn145$i = 0, $$pr$pre$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i197 = 0;\n var $$pre$phi353Z2D = 0, $$pre1069$i = 0, $$pre109$i = 0, $$pre22$i = 0, $$pre324 = 0, $$pre325 = 0, $$pre326 = 0, $$pre327 = 0, $$pre328 = 0, $$pre329 = 0, $$pre330 = 0, $$pre331 = 0, $$pre332 = 0, $$pre333 = 0, $$pre334 = 0, $$pre335 = 0, $$pre335$pre = 0, $$pre336 = 0, $$pre336$pre = 0, $$pre337 = 0;\n var $$pre338 = 0, $$pre338$pre = 0, $$pre339 = 0, $$pre340 = 0, $$pre341 = 0, $$pre342 = 0, $$pre343 = 0, $$pre344 = 0, $$pre347 = 0, $$pre352 = 0, $$sink = 0, $$sink$i = 0, $$sink$in = 0, $$sink217$off0 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0;\n var $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0;\n var $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0;\n var $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0;\n var $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0;\n var $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0;\n var $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0;\n var $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0;\n var $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0;\n var $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0;\n var $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0;\n var $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0;\n var $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0;\n var $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0;\n var $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0;\n var $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0;\n var $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0;\n var $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0;\n var $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0;\n var $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0;\n var $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0;\n var $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0;\n var $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0;\n var $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0;\n var $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0;\n var $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0;\n var $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0;\n var $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0;\n var $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0;\n var $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0;\n var $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0;\n var $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0;\n var $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0;\n var $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0;\n var $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0;\n var $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0;\n var $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0;\n var $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0;\n var $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0;\n var $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0;\n var $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0;\n var $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0;\n var $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0;\n var $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0;\n var $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0;\n var $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0;\n var $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0;\n var $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0;\n var $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0;\n var $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0;\n var $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0;\n var $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0;\n var $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0;\n var $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0;\n var $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0;\n var $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0;\n var $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0;\n var $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0;\n var $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0;\n var $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0;\n var $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0;\n var $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0;\n var $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0;\n var $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0;\n var $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0;\n var $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0;\n var $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0;\n var $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0;\n var $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0;\n var $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0;\n var $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0;\n var $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0;\n var $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0;\n var $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0;\n var $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0;\n var $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0;\n var $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0;\n var $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0;\n var $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0;\n var $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0;\n var $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0;\n var $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0;\n var $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0;\n var $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0;\n var $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0;\n var $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0;\n var $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0;\n var $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0;\n var $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0;\n var $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0;\n var $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0;\n var $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0;\n var $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0;\n var $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0;\n var $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0;\n var $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0;\n var $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0;\n var $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0;\n var $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0;\n var $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $279 = 0, $28 = 0, $280 = 0;\n var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;\n var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;\n var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;\n var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;\n var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;\n var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;\n var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;\n var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;\n var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;\n var $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0;\n var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0;\n var $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;\n var $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0;\n var $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0;\n var $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0;\n var $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0;\n var $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0;\n var $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0;\n var $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0;\n var $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0;\n var $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0;\n var $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0;\n var $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0;\n var $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0;\n var $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0;\n var $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0;\n var $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0;\n var $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0;\n var $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0;\n var $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0;\n var $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0;\n var $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0;\n var $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0;\n var $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0;\n var $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0;\n var $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0;\n var $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0;\n var $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0;\n var $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0;\n var $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond$i = 0, $exitcond$i147 = 0, $exitcond$i153 = 0;\n var $exitcond$i157 = 0, $exitcond$i161 = 0, $exitcond$i171 = 0, $exitcond$i177 = 0, $exitcond$i192 = 0, $exitcond$i210 = 0, $exitcond104$i = 0, $exitcond1046$i = 0, $exitcond1047$i = 0, $exitcond1048$i = 0, $exitcond1049$i = 0, $exitcond105$i = 0, $exitcond1050$i = 0, $exitcond1051$i = 0, $exitcond1052$i = 0, $exitcond1053$i = 0, $exitcond1054$i = 0, $exitcond1055$i = 0, $exitcond1056$i = 0, $exitcond1057$i = 0;\n var $exitcond1058$i = 0, $exitcond1059$i = 0, $exitcond106$i = 0, $exitcond1060$i = 0, $exitcond1061$i = 0, $exitcond1062$i = 0, $exitcond1063$i = 0, $exitcond1064$i = 0, $exitcond1065$i = 0, $exitcond1066$i = 0, $exitcond1067$i = 0, $exitcond1068$i = 0, $exitcond107$i = 0, $exitcond108$i = 0, $exitcond111$i = 0, $exitcond112$i = 0, $exitcond127$i = 0, $exitcond128$i = 0, $exitcond129$i = 0, $exitcond173$i = 0;\n var $exitcond174$i = 0, $exitcond175$i = 0, $exitcond176$i = 0, $exitcond267$i = 0, $exitcond268$i = 0, $exitcond269$i = 0, $exitcond270$i = 0, $exitcond271$i = 0, $exitcond272$i = 0, $exitcond273$i = 0, $exitcond308$i = 0, $exitcond309$i = 0, $exitcond310$i = 0, $exitcond311$i = 0, $exitcond312$i = 0, $exitcond313$i = 0, $exitcond313$i$us = 0, $exitcond55$i = 0, $exitcond56$i = 0, $exitcond57$i = 0;\n var $exitcond58$i = 0, $exitcond59$i = 0, $exitcond60$i = 0, $exitcond61$i = 0, $extract$i = 0, $extract$i$us = 0, $extract$i185 = 0, $extract$t$i = 0, $extract$t$i$us = 0, $extract$t$i184 = 0, $extract$t263$i = 0, $extract$t263$i$us = 0, $extract$t264$i = 0, $extract$t264$i$us = 0, $extract$t268$i = 0, $extract$t268$i$us = 0, $extract$t269 = 0, $extract$t270 = 0, $extract$t409 = 0, $extract$t871$i = 0;\n var $extract$t872$i = 0, $extract$t874$i = 0, $extract$t876$i = 0, $extract$t877$i = 0, $extract$t879$i = 0, $extract$t881$i = 0, $extract$t883$i = 0, $extract$t884$i = 0, $extract$t886$i = 0, $extract$t888$i = 0, $extract$t890$i = 0, $extract$t891$us$i = 0, $extract$t893$i = 0, $extract$t895$us$i = 0, $extract267$i = 0, $extract267$i$us = 0, $extract873875$i = 0, $extract878$i = 0, $extract880882$i = 0, $extract885$i = 0;\n var $extract887889$i = 0, $extract892896$i = 0, $extract894$us$i = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i183 = 0, $or$cond$i190 = 0, $or$cond$i207 = 0, $or$cond106$i = 0, $or$cond1096$i = 0, $or$cond1099$i = 0, $or$cond11$i = 0, $or$cond13$i = 0, $or$cond137 = 0, $or$cond15$i = 0, $or$cond271$i = 0, $or$cond271$us$i = 0, $or$cond272$i = 0, $or$cond272$us$i = 0, $or$cond273$i = 0;\n var $or$cond273$us$i = 0, $or$cond3$i = 0, $or$cond3$i196 = 0, $or$cond3$i208 = 0, $or$cond5$i = 0, $or$cond5$i198 = 0, $or$cond7$i = 0, $or$cond9$i = 0, $storemerge$i = 0, $storemerge$i149 = 0, $storemerge$us$i = 0, $storemerge261$i = 0, $storemerge261$us$i = 0, $storemerge862$i = 0, $storemerge864$i = 0, $storemerge864$in$i = 0, $storemerge868$i = 0, $storemerge868$in$i = 0, $trunc$i = 0, $trunc898$i = 0;\n var $trunc899$i = 0, $trunc900$i = 0, $trunc900$us$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = ((($0)) + 384|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  _png_error($0,25994);\n  // unreachable;\n }\n $6 = ((($0)) + 212|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = $7 & 16448;\n $9 = ($8|0)==(16384);\n if ($9) {\n  _png_error($0,26010);\n  // unreachable;\n }\n $10 = ((($0)) + 216|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = $11 & 4096;\n $13 = ($12|0)==(0);\n do {\n  if (!($13)) {\n   $14 = ((($1)) + 8|0);\n   $15 = HEAP8[$14>>0]|0;\n   $16 = ($15<<24>>24)==(3);\n   if (!($16)) {\n    $138 = ((($0)) + 428|0);\n    $139 = HEAP16[$138>>1]|0;\n    $140 = ($139<<16>>16)==(0);\n    $141 = $11 & 33554432;\n    $142 = ($141|0)==(0);\n    $or$cond137 = $142 | $140;\n    $143 = ((($4)) + 1|0);\n    if ($or$cond137) {\n     _png_do_expand($1,$143,0);\n     break;\n    } else {\n     $144 = ((($0)) + 532|0);\n     _png_do_expand($1,$143,$144);\n     break;\n    }\n   }\n   $17 = ((($4)) + 1|0);\n   $18 = ((($0)) + 416|0);\n   $19 = HEAP32[$18>>2]|0;\n   $20 = ((($0)) + 528|0);\n   $21 = HEAP32[$20>>2]|0;\n   $22 = ((($0)) + 428|0);\n   $23 = HEAP16[$22>>1]|0;\n   $24 = $23&65535;\n   $25 = HEAP32[$1>>2]|0;\n   $26 = HEAP16[$14>>1]|0;\n   $27 = $26&255;\n   $28 = ($27<<24>>24)==(3);\n   $29 = ($26&65535) >>> 8;\n   $30 = $29&255;\n   if ($28) {\n    $31 = ((($1)) + 9|0);\n    $32 = ($30&255)<(8);\n    if ($32) {\n     switch ($30<<24>>24) {\n     case 1:  {\n      $33 = ($25|0)==(0);\n      if (!($33)) {\n       $34 = (($25) + 7)|0;\n       $35 = $34 & 7;\n       $36 = $35 ^ 7;\n       $37 = (($17) + ($25)|0);\n       $38 = (($25) + -1)|0;\n       $39 = $38 >>> 3;\n       $40 = (($17) + ($39)|0);\n       $$0115152$i = 0;$$0120154$pn$i = $37;$$0126151$i = $40;$$0153$i = $36;\n       while(1) {\n        $$0120154$i = ((($$0120154$pn$i)) + -1|0);\n        $41 = HEAP8[$$0126151$i>>0]|0;\n        $42 = $41&255;\n        $43 = 1 << $$0153$i;\n        $44 = $42 & $43;\n        $not$$i = ($44|0)!=(0);\n        $$$i = $not$$i&1;\n        HEAP8[$$0120154$i>>0] = $$$i;\n        $45 = ($$0153$i|0)==(7);\n        $46 = ((($$0126151$i)) + -1|0);\n        $47 = (($$0153$i) + 1)|0;\n        $$1127$i = $45 ? $46 : $$0126151$i;\n        $$1$i = $45 ? 0 : $47;\n        $48 = (($$0115152$i) + 1)|0;\n        $exitcond174$i = ($48|0)==($25|0);\n        if ($exitcond174$i) {\n         break;\n        } else {\n         $$0115152$i = $48;$$0120154$pn$i = $$0120154$i;$$0126151$i = $$1127$i;$$0153$i = $$1$i;\n        }\n       }\n      }\n      break;\n     }\n     case 2:  {\n      $49 = ($25|0)==(0);\n      if (!($49)) {\n       $50 = $25 << 1;\n       $51 = (($50) + 6)|0;\n       $52 = $51 & 6;\n       $53 = $52 ^ 6;\n       $54 = (($17) + ($25)|0);\n       $55 = (($25) + -1)|0;\n       $56 = $55 >>> 2;\n       $57 = (($17) + ($56)|0);\n       $$1116159$i = 0;$$1121161$pn$i = $54;$$2128158$i = $57;$$2160$i = $53;\n       while(1) {\n        $$1121161$i = ((($$1121161$pn$i)) + -1|0);\n        $58 = HEAP8[$$2128158$i>>0]|0;\n        $59 = $58&255;\n        $60 = $59 >>> $$2160$i;\n        $61 = $60 & 3;\n        $62 = $61&255;\n        HEAP8[$$1121161$i>>0] = $62;\n        $63 = ($$2160$i|0)==(6);\n        $64 = ((($$2128158$i)) + -1|0);\n        $65 = (($$2160$i) + 2)|0;\n        $$3129$i = $63 ? $64 : $$2128158$i;\n        $$3$i = $63 ? 0 : $65;\n        $66 = (($$1116159$i) + 1)|0;\n        $exitcond175$i = ($66|0)==($25|0);\n        if ($exitcond175$i) {\n         break;\n        } else {\n         $$1116159$i = $66;$$1121161$pn$i = $$1121161$i;$$2128158$i = $$3129$i;$$2160$i = $$3$i;\n        }\n       }\n      }\n      break;\n     }\n     case 4:  {\n      $67 = ($25|0)==(0);\n      if (!($67)) {\n       $68 = $25 << 2;\n       $69 = $68 & 4;\n       $70 = (($17) + ($25)|0);\n       $71 = (($25) + -1)|0;\n       $72 = $71 >>> 1;\n       $73 = (($17) + ($72)|0);\n       $$2117166$i = 0;$$2122168$pn$i = $70;$$4130165$i = $73;$$4167$i = $69;\n       while(1) {\n        $$2122168$i = ((($$2122168$pn$i)) + -1|0);\n        $74 = HEAP8[$$4130165$i>>0]|0;\n        $75 = $74&255;\n        $76 = $75 >>> $$4167$i;\n        $77 = $76 & 15;\n        $78 = $77&255;\n        HEAP8[$$2122168$i>>0] = $78;\n        $79 = ($$4167$i|0)==(4);\n        $80 = ((($$4130165$i)) + -1|0);\n        $81 = (($$4167$i) + 4)|0;\n        $$5131$i = $79 ? $80 : $$4130165$i;\n        $$5$i = $79 ? 0 : $81;\n        $82 = (($$2117166$i) + 1)|0;\n        $exitcond176$i = ($82|0)==($25|0);\n        if ($exitcond176$i) {\n         break;\n        } else {\n         $$2117166$i = $82;$$2122168$pn$i = $$2122168$i;$$4130165$i = $$5131$i;$$4167$i = $$5$i;\n        }\n       }\n      }\n      break;\n     }\n     default: {\n     }\n     }\n     HEAP8[$31>>0] = 8;\n     $83 = ((($1)) + 11|0);\n     HEAP8[$83>>0] = 8;\n     $84 = ((($1)) + 4|0);\n     HEAP32[$84>>2] = $25;\n    } else {\n     $85 = ($30<<24>>24)==(8);\n     if (!($85)) {\n      break;\n     }\n    }\n    $86 = ($23<<16>>16)==(0);\n    $87 = (($17) + ($25)|0);\n    $88 = ((($87)) + -1|0);\n    if ($86) {\n     $116 = ($25*3)|0;\n     $117 = ($25|0)==(0);\n     if (!($117)) {\n      $118 = (($17) + ($116)|0);\n      $$4119146$i = 0;$$7144$i = $88;$$pn145$i = $118;\n      while(1) {\n       $$5125$i = ((($$pn145$i)) + -1|0);\n       $119 = HEAP8[$$7144$i>>0]|0;\n       $120 = $119&255;\n       $121 = (((($19) + (($120*3)|0)|0)) + 2|0);\n       $122 = HEAP8[$121>>0]|0;\n       $123 = ((($$pn145$i)) + -2|0);\n       HEAP8[$$5125$i>>0] = $122;\n       $124 = HEAP8[$$7144$i>>0]|0;\n       $125 = $124&255;\n       $126 = (((($19) + (($125*3)|0)|0)) + 1|0);\n       $127 = HEAP8[$126>>0]|0;\n       $128 = ((($$pn145$i)) + -3|0);\n       HEAP8[$123>>0] = $127;\n       $129 = HEAP8[$$7144$i>>0]|0;\n       $130 = $129&255;\n       $131 = (($19) + (($130*3)|0)|0);\n       $132 = HEAP8[$131>>0]|0;\n       HEAP8[$128>>0] = $132;\n       $133 = ((($$7144$i)) + -1|0);\n       $134 = (($$4119146$i) + 1)|0;\n       $exitcond173$i = ($134|0)==($25|0);\n       if ($exitcond173$i) {\n        break;\n       } else {\n        $$4119146$i = $134;$$7144$i = $133;$$pn145$i = $128;\n       }\n      }\n     }\n     HEAP8[$31>>0] = 8;\n     $135 = ((($1)) + 11|0);\n     HEAP8[$135>>0] = 24;\n     $136 = ((($1)) + 4|0);\n     HEAP32[$136>>2] = $116;\n     HEAP8[$14>>0] = 2;\n     $137 = ((($1)) + 10|0);\n     HEAP8[$137>>0] = 3;\n     break;\n    }\n    $89 = $25 << 2;\n    $90 = ($25|0)==(0);\n    if (!($90)) {\n     $91 = (($17) + ($89)|0);\n     $$3118142$i = 0;$$6140$i = $88;$$pn132141$i = $91;\n     while(1) {\n      $$3123143$i = ((($$pn132141$i)) + -1|0);\n      $92 = HEAP8[$$6140$i>>0]|0;\n      $93 = $92&255;\n      $94 = ($93>>>0)<($24>>>0);\n      if ($94) {\n       $95 = (($21) + ($93)|0);\n       $96 = HEAP8[$95>>0]|0;\n       $storemerge$i = $96;\n      } else {\n       $storemerge$i = -1;\n      }\n      $$4124$i = ((($$pn132141$i)) + -2|0);\n      HEAP8[$$3123143$i>>0] = $storemerge$i;\n      $97 = HEAP8[$$6140$i>>0]|0;\n      $98 = $97&255;\n      $99 = (((($19) + (($98*3)|0)|0)) + 2|0);\n      $100 = HEAP8[$99>>0]|0;\n      $101 = ((($$pn132141$i)) + -3|0);\n      HEAP8[$$4124$i>>0] = $100;\n      $102 = HEAP8[$$6140$i>>0]|0;\n      $103 = $102&255;\n      $104 = (((($19) + (($103*3)|0)|0)) + 1|0);\n      $105 = HEAP8[$104>>0]|0;\n      $106 = ((($$pn132141$i)) + -4|0);\n      HEAP8[$101>>0] = $105;\n      $107 = HEAP8[$$6140$i>>0]|0;\n      $108 = $107&255;\n      $109 = (($19) + (($108*3)|0)|0);\n      $110 = HEAP8[$109>>0]|0;\n      HEAP8[$106>>0] = $110;\n      $111 = ((($$6140$i)) + -1|0);\n      $112 = (($$3118142$i) + 1)|0;\n      $exitcond$i = ($112|0)==($25|0);\n      if ($exitcond$i) {\n       break;\n      } else {\n       $$3118142$i = $112;$$6140$i = $111;$$pn132141$i = $106;\n      }\n     }\n    }\n    HEAP8[$31>>0] = 8;\n    $113 = ((($1)) + 11|0);\n    HEAP8[$113>>0] = 32;\n    $114 = ((($1)) + 4|0);\n    HEAP32[$114>>2] = $89;\n    HEAP8[$14>>0] = 6;\n    $115 = ((($1)) + 10|0);\n    HEAP8[$115>>0] = 4;\n   }\n  }\n } while(0);\n $145 = HEAP32[$10>>2]|0;\n $146 = $145 & 262272;\n $147 = ($146|0)==(262144);\n L51: do {\n  if ($147) {\n   $148 = ((($1)) + 8|0);\n   $149 = HEAP8[$148>>0]|0;\n   switch ($149<<24>>24) {\n   case 4: case 6:  {\n    break;\n   }\n   default: {\n    $153 = $145;\n    break L51;\n   }\n   }\n   $150 = HEAP32[$3>>2]|0;\n   $151 = ((($150)) + 1|0);\n   _png_do_strip_channel($1,$151,0);\n   $$pre = HEAP32[$10>>2]|0;\n   $153 = $$pre;\n  } else {\n   $153 = $145;\n  }\n } while(0);\n $152 = $153 & 6291456;\n $154 = ($152|0)==(0);\n do {\n  if ($154) {\n   $580 = $153;\n  } else {\n   $155 = HEAP32[$3>>2]|0;\n   $156 = ((($155)) + 1|0);\n   $157 = ((($1)) + 8|0);\n   $158 = HEAP16[$157>>1]|0;\n   $159 = $158&65535;\n   $160 = $159 & 3;\n   $161 = ($160|0)==(2);\n   if ($161) {\n    $162 = ((($0)) + 702|0);\n    $163 = HEAP16[$162>>1]|0;\n    $164 = $163&65535;\n    $165 = ((($0)) + 704|0);\n    $166 = HEAP16[$165>>1]|0;\n    $167 = $166&65535;\n    $168 = (32768 - ($164))|0;\n    $169 = (($168) - ($167))|0;\n    $170 = HEAP32[$1>>2]|0;\n    $171 = $159 & 4;\n    $172 = ($171|0)!=(0);\n    $$mask$i = $158 & -256;\n    $173 = ($$mask$i<<16>>16)==(2048);\n    L58: do {\n     if ($173) {\n      $174 = ((($0)) + 500|0);\n      $175 = HEAP32[$174>>2]|0;\n      $176 = ($175|0)==(0|0);\n      if (!($176)) {\n       $201 = ((($0)) + 504|0);\n       $202 = HEAP32[$201>>2]|0;\n       $203 = ($202|0)==(0|0);\n       if (!($203)) {\n        $204 = ($170|0)==(0);\n        if ($204) {\n         $$8$i = 0;\n         break;\n        }\n        $205 = ((($0)) + 492|0);\n        if ($172) {\n         $$0237286$us$i = $156;$$0239285$us$i = $156;$$0242284$us$i = 0;$$0287$us$i = 0;\n         while(1) {\n          $206 = ((($$0237286$us$i)) + 1|0);\n          $207 = HEAP8[$$0237286$us$i>>0]|0;\n          $208 = ((($$0237286$us$i)) + 2|0);\n          $209 = HEAP8[$206>>0]|0;\n          $210 = ((($$0237286$us$i)) + 3|0);\n          $211 = HEAP8[$208>>0]|0;\n          $212 = $207&255;\n          $213 = ($207<<24>>24)==($209<<24>>24);\n          $214 = ($207<<24>>24)==($211<<24>>24);\n          $or$cond271$us$i = $213 & $214;\n          if ($or$cond271$us$i) {\n           $236 = HEAP32[$205>>2]|0;\n           $237 = ($236|0)==(0|0);\n           if ($237) {\n            $$1$us$i = $$0287$us$i;$storemerge261$us$i = $207;\n           } else {\n            $238 = (($236) + ($212)|0);\n            $239 = HEAP8[$238>>0]|0;\n            $$1$us$i = $$0287$us$i;$storemerge261$us$i = $239;\n           }\n          } else {\n           $215 = $209&255;\n           $216 = (($202) + ($212)|0);\n           $217 = HEAP8[$216>>0]|0;\n           $218 = (($202) + ($215)|0);\n           $219 = HEAP8[$218>>0]|0;\n           $220 = $211&255;\n           $221 = (($202) + ($220)|0);\n           $222 = HEAP8[$221>>0]|0;\n           $223 = $$0287$us$i | 1;\n           $224 = $217&255;\n           $225 = Math_imul($224, $164)|0;\n           $226 = $219&255;\n           $227 = Math_imul($226, $167)|0;\n           $228 = $222&255;\n           $229 = Math_imul($228, $169)|0;\n           $230 = (($225) + 16384)|0;\n           $231 = (($230) + ($227))|0;\n           $232 = (($231) + ($229))|0;\n           $233 = $232 >>> 15;\n           $234 = (($175) + ($233)|0);\n           $235 = HEAP8[$234>>0]|0;\n           $$1$us$i = $223;$storemerge261$us$i = $235;\n          }\n          $$1240$us$i = ((($$0239285$us$i)) + 1|0);\n          HEAP8[$$0239285$us$i>>0] = $storemerge261$us$i;\n          $240 = ((($$0237286$us$i)) + 4|0);\n          $241 = HEAP8[$210>>0]|0;\n          $242 = ((($$0239285$us$i)) + 2|0);\n          HEAP8[$$1240$us$i>>0] = $241;\n          $243 = (($$0242284$us$i) + 1)|0;\n          $exitcond309$i = ($243|0)==($170|0);\n          if ($exitcond309$i) {\n           $$8$i = $$1$us$i;\n           break L58;\n          } else {\n           $$0237286$us$i = $240;$$0239285$us$i = $242;$$0242284$us$i = $243;$$0287$us$i = $$1$us$i;\n          }\n         }\n        } else {\n         $$0237286$i = $156;$$0239285$i = $156;$$0242284$i = 0;$$0287$i = 0;\n         while(1) {\n          $244 = ((($$0237286$i)) + 1|0);\n          $245 = HEAP8[$$0237286$i>>0]|0;\n          $246 = ((($$0237286$i)) + 2|0);\n          $247 = HEAP8[$244>>0]|0;\n          $248 = ((($$0237286$i)) + 3|0);\n          $249 = HEAP8[$246>>0]|0;\n          $250 = $245&255;\n          $251 = ($245<<24>>24)==($247<<24>>24);\n          $252 = ($245<<24>>24)==($249<<24>>24);\n          $or$cond271$i = $251 & $252;\n          if ($or$cond271$i) {\n           $274 = HEAP32[$205>>2]|0;\n           $275 = ($274|0)==(0|0);\n           if ($275) {\n            $$1$i148 = $$0287$i;$storemerge261$i = $245;\n           } else {\n            $276 = (($274) + ($250)|0);\n            $277 = HEAP8[$276>>0]|0;\n            $$1$i148 = $$0287$i;$storemerge261$i = $277;\n           }\n          } else {\n           $253 = $247&255;\n           $254 = (($202) + ($250)|0);\n           $255 = HEAP8[$254>>0]|0;\n           $256 = (($202) + ($253)|0);\n           $257 = HEAP8[$256>>0]|0;\n           $258 = $249&255;\n           $259 = (($202) + ($258)|0);\n           $260 = HEAP8[$259>>0]|0;\n           $261 = $$0287$i | 1;\n           $262 = $255&255;\n           $263 = Math_imul($262, $164)|0;\n           $264 = $257&255;\n           $265 = Math_imul($264, $167)|0;\n           $266 = $260&255;\n           $267 = Math_imul($266, $169)|0;\n           $268 = (($263) + 16384)|0;\n           $269 = (($268) + ($265))|0;\n           $270 = (($269) + ($267))|0;\n           $271 = $270 >>> 15;\n           $272 = (($175) + ($271)|0);\n           $273 = HEAP8[$272>>0]|0;\n           $$1$i148 = $261;$storemerge261$i = $273;\n          }\n          $$1240$i = ((($$0239285$i)) + 1|0);\n          HEAP8[$$0239285$i>>0] = $storemerge261$i;\n          $278 = (($$0242284$i) + 1)|0;\n          $exitcond310$i = ($278|0)==($170|0);\n          if ($exitcond310$i) {\n           $$8$i = $$1$i148;\n           break L58;\n          } else {\n           $$0237286$i = $248;$$0239285$i = $$1240$i;$$0242284$i = $278;$$0287$i = $$1$i148;\n          }\n         }\n        }\n       }\n      }\n      $177 = ($170|0)==(0);\n      if ($177) {\n       $$8$i = 0;\n      } else {\n       if ($172) {\n        $$0249282$us$i = $156;$$0251281$us$i = $156;$$0254280$us$i = 0;$$2283$us$i = 0;\n        while(1) {\n         $178 = ((($$0249282$us$i)) + 1|0);\n         $179 = HEAP8[$$0249282$us$i>>0]|0;\n         $180 = ((($$0249282$us$i)) + 2|0);\n         $181 = HEAP8[$178>>0]|0;\n         $182 = ((($$0249282$us$i)) + 3|0);\n         $183 = HEAP8[$180>>0]|0;\n         $184 = ($179<<24>>24)==($181<<24>>24);\n         $185 = ($179<<24>>24)==($183<<24>>24);\n         $or$cond272$us$i = $184 & $185;\n         if ($or$cond272$us$i) {\n          $$3$us$i = $$2283$us$i;$storemerge$us$i = $179;\n         } else {\n          $186 = $181&255;\n          $187 = $179&255;\n          $188 = $$2283$us$i | 1;\n          $189 = Math_imul($187, $164)|0;\n          $190 = Math_imul($186, $167)|0;\n          $191 = (($190) + ($189))|0;\n          $192 = $183&255;\n          $193 = Math_imul($192, $169)|0;\n          $194 = (($191) + ($193))|0;\n          $195 = $194 >>> 15;\n          $196 = $195&255;\n          $$3$us$i = $188;$storemerge$us$i = $196;\n         }\n         $$1252$us$i = ((($$0251281$us$i)) + 1|0);\n         HEAP8[$$0251281$us$i>>0] = $storemerge$us$i;\n         $197 = ((($$0249282$us$i)) + 4|0);\n         $198 = HEAP8[$182>>0]|0;\n         $199 = ((($$0251281$us$i)) + 2|0);\n         HEAP8[$$1252$us$i>>0] = $198;\n         $200 = (($$0254280$us$i) + 1)|0;\n         $exitcond$i147 = ($200|0)==($170|0);\n         if ($exitcond$i147) {\n          $$8$i = $$3$us$i;\n          break;\n         } else {\n          $$0249282$us$i = $197;$$0251281$us$i = $199;$$0254280$us$i = $200;$$2283$us$i = $$3$us$i;\n         }\n        }\n       } else {\n        $$0249282$i = $156;$$0251281$i = $156;$$0254280$i = 0;$$2283$i = 0;\n        while(1) {\n         $279 = ((($$0249282$i)) + 1|0);\n         $280 = HEAP8[$$0249282$i>>0]|0;\n         $281 = ((($$0249282$i)) + 2|0);\n         $282 = HEAP8[$279>>0]|0;\n         $283 = ((($$0249282$i)) + 3|0);\n         $284 = HEAP8[$281>>0]|0;\n         $285 = ($280<<24>>24)==($282<<24>>24);\n         $286 = ($280<<24>>24)==($284<<24>>24);\n         $or$cond272$i = $285 & $286;\n         if ($or$cond272$i) {\n          $$3$i150 = $$2283$i;$storemerge$i149 = $280;\n         } else {\n          $287 = $282&255;\n          $288 = $280&255;\n          $289 = $$2283$i | 1;\n          $290 = Math_imul($288, $164)|0;\n          $291 = Math_imul($287, $167)|0;\n          $292 = (($291) + ($290))|0;\n          $293 = $284&255;\n          $294 = Math_imul($293, $169)|0;\n          $295 = (($292) + ($294))|0;\n          $296 = $295 >>> 15;\n          $297 = $296&255;\n          $$3$i150 = $289;$storemerge$i149 = $297;\n         }\n         $$1252$i = ((($$0251281$i)) + 1|0);\n         HEAP8[$$0251281$i>>0] = $storemerge$i149;\n         $298 = (($$0254280$i) + 1)|0;\n         $exitcond308$i = ($298|0)==($170|0);\n         if ($exitcond308$i) {\n          $$8$i = $$3$i150;\n          break;\n         } else {\n          $$0249282$i = $283;$$0251281$i = $$1252$i;$$0254280$i = $298;$$2283$i = $$3$i150;\n         }\n        }\n       }\n      }\n     } else {\n      $299 = ((($0)) + 512|0);\n      $300 = HEAP32[$299>>2]|0;\n      $301 = ($300|0)==(0|0);\n      if (!($301)) {\n       $350 = ((($0)) + 508|0);\n       $351 = HEAP32[$350>>2]|0;\n       $352 = ($351|0)==(0|0);\n       if (!($352)) {\n        $353 = ($170|0)==(0);\n        if ($353) {\n         $$8$i = 0;\n         break;\n        }\n        $354 = ((($0)) + 496|0);\n        $355 = ((($0)) + 484|0);\n        if ($172) {\n         $$0255298$i$us = $156;$$0257297$i$us = $156;$$0260296$i$us = 0;$$4299$i$us = 0;\n         while(1) {\n          $356 = ((($$0255298$i$us)) + 1|0);\n          $357 = HEAP8[$$0255298$i$us>>0]|0;\n          $358 = ((($$0255298$i$us)) + 2|0);\n          $359 = HEAP8[$356>>0]|0;\n          $360 = $357&255;\n          $361 = $360 << 8;\n          $362 = $359&255;\n          $363 = $361 | $362;\n          $364 = ((($$0255298$i$us)) + 3|0);\n          $365 = HEAP8[$358>>0]|0;\n          $366 = ((($$0255298$i$us)) + 4|0);\n          $367 = HEAP8[$364>>0]|0;\n          $368 = $365&255;\n          $369 = $368 << 8;\n          $370 = $367&255;\n          $371 = $369 | $370;\n          $372 = ((($$0255298$i$us)) + 5|0);\n          $373 = HEAP8[$366>>0]|0;\n          $374 = ((($$0255298$i$us)) + 6|0);\n          $375 = HEAP8[$372>>0]|0;\n          $376 = $373&255;\n          $377 = $375&255;\n          $378 = ($363|0)==($371|0);\n          if ($378) {\n           $379 = $376 << 8;\n           $380 = $379 | $377;\n           $381 = ($363|0)==($380|0);\n           if ($381) {\n            $417 = HEAP32[$354>>2]|0;\n            $418 = ($417|0)==(0|0);\n            if ($418) {\n             $$0259$off0$i$us = $359;$$0259$off8$i$us = $357;$$5$i151$us = $$4299$i$us;\n            } else {\n             $419 = HEAP32[$355>>2]|0;\n             $420 = $362 >>> $419;\n             $421 = (($417) + ($420<<2)|0);\n             $422 = HEAP32[$421>>2]|0;\n             $423 = (($422) + ($360<<1)|0);\n             $424 = HEAP16[$423>>1]|0;\n             $extract$t$i$us = $424&255;\n             $extract$i$us = ($424&65535) >>> 8;\n             $extract$t264$i$us = $extract$i$us&255;\n             $$0259$off0$i$us = $extract$t$i$us;$$0259$off8$i$us = $extract$t264$i$us;$$5$i151$us = $$4299$i$us;\n            }\n           } else {\n            label = 72;\n           }\n          } else {\n           label = 72;\n          }\n          if ((label|0) == 72) {\n           label = 0;\n           $382 = HEAP32[$355>>2]|0;\n           $383 = $362 >>> $382;\n           $384 = (($300) + ($383<<2)|0);\n           $385 = HEAP32[$384>>2]|0;\n           $386 = (($385) + ($360<<1)|0);\n           $387 = HEAP16[$386>>1]|0;\n           $388 = $370 >>> $382;\n           $389 = (($300) + ($388<<2)|0);\n           $390 = HEAP32[$389>>2]|0;\n           $391 = (($390) + ($368<<1)|0);\n           $392 = HEAP16[$391>>1]|0;\n           $393 = $377 >>> $382;\n           $394 = (($300) + ($393<<2)|0);\n           $395 = HEAP32[$394>>2]|0;\n           $396 = (($395) + ($376<<1)|0);\n           $397 = HEAP16[$396>>1]|0;\n           $398 = $387&65535;\n           $399 = Math_imul($398, $164)|0;\n           $400 = $392&65535;\n           $401 = Math_imul($400, $167)|0;\n           $402 = $397&65535;\n           $403 = Math_imul($402, $169)|0;\n           $404 = (($399) + 16384)|0;\n           $405 = (($404) + ($401))|0;\n           $406 = (($405) + ($403))|0;\n           $407 = $406 >>> 15;\n           $408 = $406 >>> 23;\n           $409 = $408 & 255;\n           $410 = $407 & 255;\n           $411 = $410 >>> $382;\n           $412 = (($351) + ($411<<2)|0);\n           $413 = HEAP32[$412>>2]|0;\n           $414 = (($413) + ($409<<1)|0);\n           $415 = HEAP16[$414>>1]|0;\n           $416 = $$4299$i$us | 1;\n           $extract$t263$i$us = $415&255;\n           $extract267$i$us = ($415&65535) >>> 8;\n           $extract$t268$i$us = $extract267$i$us&255;\n           $$0259$off0$i$us = $extract$t263$i$us;$$0259$off8$i$us = $extract$t268$i$us;$$5$i151$us = $416;\n          }\n          $425 = ((($$0257297$i$us)) + 1|0);\n          HEAP8[$$0257297$i$us>>0] = $$0259$off8$i$us;\n          $426 = ((($$0257297$i$us)) + 2|0);\n          HEAP8[$425>>0] = $$0259$off0$i$us;\n          $427 = ((($$0255298$i$us)) + 7|0);\n          $428 = HEAP8[$374>>0]|0;\n          $429 = ((($$0257297$i$us)) + 3|0);\n          HEAP8[$426>>0] = $428;\n          $430 = ((($$0255298$i$us)) + 8|0);\n          $431 = HEAP8[$427>>0]|0;\n          $432 = ((($$0257297$i$us)) + 4|0);\n          HEAP8[$429>>0] = $431;\n          $433 = (($$0260296$i$us) + 1)|0;\n          $exitcond313$i$us = ($433|0)==($170|0);\n          if ($exitcond313$i$us) {\n           $$8$i = $$5$i151$us;\n           break L58;\n          } else {\n           $$0255298$i$us = $430;$$0257297$i$us = $432;$$0260296$i$us = $433;$$4299$i$us = $$5$i151$us;\n          }\n         }\n        } else {\n         $$0255298$i = $156;$$0257297$i = $156;$$0260296$i = 0;$$4299$i = 0;\n         while(1) {\n          $434 = ((($$0255298$i)) + 1|0);\n          $435 = HEAP8[$$0255298$i>>0]|0;\n          $436 = ((($$0255298$i)) + 2|0);\n          $437 = HEAP8[$434>>0]|0;\n          $438 = $435&255;\n          $439 = $438 << 8;\n          $440 = $437&255;\n          $441 = $439 | $440;\n          $442 = ((($$0255298$i)) + 3|0);\n          $443 = HEAP8[$436>>0]|0;\n          $444 = ((($$0255298$i)) + 4|0);\n          $445 = HEAP8[$442>>0]|0;\n          $446 = $443&255;\n          $447 = $446 << 8;\n          $448 = $445&255;\n          $449 = $447 | $448;\n          $450 = ((($$0255298$i)) + 5|0);\n          $451 = HEAP8[$444>>0]|0;\n          $452 = ((($$0255298$i)) + 6|0);\n          $453 = HEAP8[$450>>0]|0;\n          $454 = $451&255;\n          $455 = $453&255;\n          $456 = ($441|0)==($449|0);\n          if ($456) {\n           $457 = $454 << 8;\n           $458 = $457 | $455;\n           $459 = ($441|0)==($458|0);\n           if ($459) {\n            $460 = HEAP32[$354>>2]|0;\n            $461 = ($460|0)==(0|0);\n            if ($461) {\n             $$0259$off0$i = $437;$$0259$off8$i = $435;$$5$i151 = $$4299$i;\n            } else {\n             $462 = HEAP32[$355>>2]|0;\n             $463 = $440 >>> $462;\n             $464 = (($460) + ($463<<2)|0);\n             $465 = HEAP32[$464>>2]|0;\n             $466 = (($465) + ($438<<1)|0);\n             $467 = HEAP16[$466>>1]|0;\n             $extract$t$i = $467&255;\n             $extract$i = ($467&65535) >>> 8;\n             $extract$t264$i = $extract$i&255;\n             $$0259$off0$i = $extract$t$i;$$0259$off8$i = $extract$t264$i;$$5$i151 = $$4299$i;\n            }\n           } else {\n            label = 80;\n           }\n          } else {\n           label = 80;\n          }\n          if ((label|0) == 80) {\n           label = 0;\n           $468 = HEAP32[$355>>2]|0;\n           $469 = $440 >>> $468;\n           $470 = (($300) + ($469<<2)|0);\n           $471 = HEAP32[$470>>2]|0;\n           $472 = (($471) + ($438<<1)|0);\n           $473 = HEAP16[$472>>1]|0;\n           $474 = $448 >>> $468;\n           $475 = (($300) + ($474<<2)|0);\n           $476 = HEAP32[$475>>2]|0;\n           $477 = (($476) + ($446<<1)|0);\n           $478 = HEAP16[$477>>1]|0;\n           $479 = $455 >>> $468;\n           $480 = (($300) + ($479<<2)|0);\n           $481 = HEAP32[$480>>2]|0;\n           $482 = (($481) + ($454<<1)|0);\n           $483 = HEAP16[$482>>1]|0;\n           $484 = $473&65535;\n           $485 = Math_imul($484, $164)|0;\n           $486 = $478&65535;\n           $487 = Math_imul($486, $167)|0;\n           $488 = $483&65535;\n           $489 = Math_imul($488, $169)|0;\n           $490 = (($485) + 16384)|0;\n           $491 = (($490) + ($487))|0;\n           $492 = (($491) + ($489))|0;\n           $493 = $492 >>> 15;\n           $494 = $492 >>> 23;\n           $495 = $494 & 255;\n           $496 = $493 & 255;\n           $497 = $496 >>> $468;\n           $498 = (($351) + ($497<<2)|0);\n           $499 = HEAP32[$498>>2]|0;\n           $500 = (($499) + ($495<<1)|0);\n           $501 = HEAP16[$500>>1]|0;\n           $502 = $$4299$i | 1;\n           $extract$t263$i = $501&255;\n           $extract267$i = ($501&65535) >>> 8;\n           $extract$t268$i = $extract267$i&255;\n           $$0259$off0$i = $extract$t263$i;$$0259$off8$i = $extract$t268$i;$$5$i151 = $502;\n          }\n          $503 = ((($$0257297$i)) + 1|0);\n          HEAP8[$$0257297$i>>0] = $$0259$off8$i;\n          $504 = ((($$0257297$i)) + 2|0);\n          HEAP8[$503>>0] = $$0259$off0$i;\n          $505 = (($$0260296$i) + 1)|0;\n          $exitcond313$i = ($505|0)==($170|0);\n          if ($exitcond313$i) {\n           $$8$i = $$5$i151;\n           break L58;\n          } else {\n           $$0255298$i = $452;$$0257297$i = $504;$$0260296$i = $505;$$4299$i = $$5$i151;\n          }\n         }\n        }\n       }\n      }\n      $302 = ($170|0)==(0);\n      if ($302) {\n       $$8$i = 0;\n      } else {\n       if ($172) {\n        $$0244292$us$i = 0;$$0245291$us$i = $156;$$0247290$us$i = $156;$$6293$us$i = 0;\n        while(1) {\n         $303 = ((($$0247290$us$i)) + 1|0);\n         $304 = HEAP8[$$0247290$us$i>>0]|0;\n         $305 = ((($$0247290$us$i)) + 2|0);\n         $306 = HEAP8[$303>>0]|0;\n         $307 = $304&255;\n         $308 = $307 << 8;\n         $309 = $306&255;\n         $310 = $308 | $309;\n         $311 = ((($$0247290$us$i)) + 3|0);\n         $312 = HEAP8[$305>>0]|0;\n         $313 = ((($$0247290$us$i)) + 4|0);\n         $314 = HEAP8[$311>>0]|0;\n         $315 = $312&255;\n         $316 = $315 << 8;\n         $317 = $314&255;\n         $318 = $316 | $317;\n         $319 = ((($$0247290$us$i)) + 5|0);\n         $320 = HEAP8[$313>>0]|0;\n         $321 = ((($$0247290$us$i)) + 6|0);\n         $322 = HEAP8[$319>>0]|0;\n         $323 = $320&255;\n         $324 = $323 << 8;\n         $325 = $322&255;\n         $326 = $324 | $325;\n         $327 = ($310|0)==($318|0);\n         $328 = ($310|0)==($326|0);\n         $or$cond273$us$i = $327 & $328;\n         $329 = $or$cond273$us$i&1;\n         $330 = $329 ^ 1;\n         $$7$us$i = $330 | $$6293$us$i;\n         $331 = Math_imul($310, $164)|0;\n         $332 = Math_imul($318, $167)|0;\n         $333 = Math_imul($326, $169)|0;\n         $334 = (($331) + 16384)|0;\n         $335 = (($334) + ($332))|0;\n         $336 = (($335) + ($333))|0;\n         $337 = $336 >>> 15;\n         $338 = $336 >>> 23;\n         $339 = $338&255;\n         $340 = ((($$0245291$us$i)) + 1|0);\n         HEAP8[$$0245291$us$i>>0] = $339;\n         $341 = $337&255;\n         $342 = ((($$0245291$us$i)) + 2|0);\n         HEAP8[$340>>0] = $341;\n         $343 = ((($$0247290$us$i)) + 7|0);\n         $344 = HEAP8[$321>>0]|0;\n         $345 = ((($$0245291$us$i)) + 3|0);\n         HEAP8[$342>>0] = $344;\n         $346 = ((($$0247290$us$i)) + 8|0);\n         $347 = HEAP8[$343>>0]|0;\n         $348 = ((($$0245291$us$i)) + 4|0);\n         HEAP8[$345>>0] = $347;\n         $349 = (($$0244292$us$i) + 1)|0;\n         $exitcond311$i = ($349|0)==($170|0);\n         if ($exitcond311$i) {\n          $$8$i = $$7$us$i;\n          break;\n         } else {\n          $$0244292$us$i = $349;$$0245291$us$i = $348;$$0247290$us$i = $346;$$6293$us$i = $$7$us$i;\n         }\n        }\n       } else {\n        $$0244292$i = 0;$$0245291$i = $156;$$0247290$i = $156;$$6293$i = 0;\n        while(1) {\n         $506 = ((($$0247290$i)) + 1|0);\n         $507 = HEAP8[$$0247290$i>>0]|0;\n         $508 = ((($$0247290$i)) + 2|0);\n         $509 = HEAP8[$506>>0]|0;\n         $510 = $507&255;\n         $511 = $510 << 8;\n         $512 = $509&255;\n         $513 = $511 | $512;\n         $514 = ((($$0247290$i)) + 3|0);\n         $515 = HEAP8[$508>>0]|0;\n         $516 = ((($$0247290$i)) + 4|0);\n         $517 = HEAP8[$514>>0]|0;\n         $518 = $515&255;\n         $519 = $518 << 8;\n         $520 = $517&255;\n         $521 = $519 | $520;\n         $522 = ((($$0247290$i)) + 5|0);\n         $523 = HEAP8[$516>>0]|0;\n         $524 = ((($$0247290$i)) + 6|0);\n         $525 = HEAP8[$522>>0]|0;\n         $526 = $523&255;\n         $527 = $526 << 8;\n         $528 = $525&255;\n         $529 = $527 | $528;\n         $530 = ($513|0)==($521|0);\n         $531 = ($513|0)==($529|0);\n         $or$cond273$i = $530 & $531;\n         $532 = $or$cond273$i&1;\n         $533 = $532 ^ 1;\n         $$7$i = $533 | $$6293$i;\n         $534 = Math_imul($513, $164)|0;\n         $535 = Math_imul($521, $167)|0;\n         $536 = Math_imul($529, $169)|0;\n         $537 = (($534) + 16384)|0;\n         $538 = (($537) + ($535))|0;\n         $539 = (($538) + ($536))|0;\n         $540 = $539 >>> 15;\n         $541 = $539 >>> 23;\n         $542 = $541&255;\n         $543 = ((($$0245291$i)) + 1|0);\n         HEAP8[$$0245291$i>>0] = $542;\n         $544 = $540&255;\n         $545 = ((($$0245291$i)) + 2|0);\n         HEAP8[$543>>0] = $544;\n         $546 = (($$0244292$i) + 1)|0;\n         $exitcond312$i = ($546|0)==($170|0);\n         if ($exitcond312$i) {\n          $$8$i = $$7$i;\n          break;\n         } else {\n          $$0244292$i = $546;$$0245291$i = $545;$$0247290$i = $524;$$6293$i = $$7$i;\n         }\n        }\n       }\n      }\n     }\n    } while(0);\n    $547 = ((($1)) + 10|0);\n    $548 = HEAP8[$547>>0]|0;\n    $549 = $548&255;\n    $550 = (($549) + 254)|0;\n    $551 = $550&255;\n    HEAP8[$547>>0] = $551;\n    $552 = HEAP16[$157>>1]|0;\n    $553 = $552&65535;\n    $554 = $553 & 253;\n    $555 = $554&255;\n    HEAP8[$157>>0] = $555;\n    $556 = $550 & 255;\n    $557 = ($552&65535) >>> 8;\n    $558 = $557&65535;\n    $559 = Math_imul($558, $556)|0;\n    $560 = $559&255;\n    $561 = ((($1)) + 11|0);\n    HEAP8[$561>>0] = $560;\n    $562 = $559 & 255;\n    $563 = ($562>>>0)>(7);\n    if ($563) {\n     $564 = $562 >>> 3;\n     $565 = Math_imul($564, $170)|0;\n     $570 = $565;\n    } else {\n     $566 = Math_imul($562, $170)|0;\n     $567 = (($566) + 7)|0;\n     $568 = $567 >>> 3;\n     $570 = $568;\n    }\n    $569 = ((($1)) + 4|0);\n    HEAP32[$569>>2] = $570;\n    $571 = ($$8$i|0)==(0);\n    if ($571) {\n     $$pre325 = HEAP32[$10>>2]|0;\n     $580 = $$pre325;\n     break;\n    }\n    $572 = ((($0)) + 700|0);\n    HEAP8[$572>>0] = 1;\n    $573 = HEAP32[$10>>2]|0;\n    $574 = $573 & 6291456;\n    $575 = ($574|0)==(4194304);\n    if ($575) {\n     _png_warning($0,26028);\n     $$pre324 = HEAP32[$10>>2]|0;\n     $577 = $$pre324;\n    } else {\n     $577 = $573;\n    }\n    $576 = $577 & 6291456;\n    $578 = ($576|0)==(2097152);\n    if ($578) {\n     _png_error($0,26028);\n     // unreachable;\n    } else {\n     $580 = $577;\n    }\n   } else {\n    $580 = $153;\n   }\n  }\n } while(0);\n $579 = $580 & 16384;\n $581 = ($579|0)==(0);\n if ($581) {\n  $589 = $580;\n } else {\n  $582 = ((($0)) + 208|0);\n  $583 = HEAP32[$582>>2]|0;\n  $584 = $583 & 2048;\n  $585 = ($584|0)==(0);\n  if ($585) {\n   $586 = HEAP32[$3>>2]|0;\n   $587 = ((($586)) + 1|0);\n   _png_do_gray_to_rgb($1,$587);\n   $$pre326 = HEAP32[$10>>2]|0;\n   $589 = $$pre326;\n  } else {\n   $589 = $580;\n  }\n }\n $588 = $589 & 128;\n $590 = ($588|0)==(0);\n L140: do {\n  if (!($590)) {\n   $591 = HEAP32[$3>>2]|0;\n   $592 = ((($591)) + 1|0);\n   $593 = ((($0)) + 492|0);\n   $594 = HEAP32[$593>>2]|0;\n   $595 = ((($0)) + 500|0);\n   $596 = HEAP32[$595>>2]|0;\n   $597 = ((($0)) + 504|0);\n   $598 = HEAP32[$597>>2]|0;\n   $599 = ((($0)) + 496|0);\n   $600 = HEAP32[$599>>2]|0;\n   $601 = ((($0)) + 508|0);\n   $602 = HEAP32[$601>>2]|0;\n   $603 = ((($0)) + 512|0);\n   $604 = HEAP32[$603>>2]|0;\n   $605 = ((($0)) + 484|0);\n   $606 = HEAP32[$605>>2]|0;\n   $607 = HEAP32[$6>>2]|0;\n   $608 = $607 & 8192;\n   $609 = ($608|0)==(0);\n   $$lobit$i = $608 >>> 13;\n   $610 = HEAP32[$1>>2]|0;\n   $611 = ((($1)) + 8|0);\n   $612 = HEAP16[$611>>1]|0;\n   $613 = $612&255;\n   $614 = ($612&65535) >>> 8;\n   $615 = $614&255;\n   switch ($613<<24>>24) {\n   case 0:  {\n    switch ($615<<24>>24) {\n    case 1:  {\n     $616 = ($610|0)==(0);\n     if ($616) {\n      break L140;\n     }\n     $617 = ((($0)) + 540|0);\n     $618 = ((($0)) + 460|0);\n     $619 = HEAP16[$617>>1]|0;\n     $620 = $619&65535;\n     $$0822947$i = 0;$$0843946$i = 7;$$0948$i = $592;\n     while(1) {\n      $621 = HEAP8[$$0948$i>>0]|0;\n      $622 = $621&255;\n      $623 = $622 >>> $$0843946$i;\n      $624 = $623 & 1;\n      $625 = ($624|0)==($620|0);\n      if ($625) {\n       $626 = (7 - ($$0843946$i))|0;\n       $627 = 32639 >>> $626;\n       $628 = $622 & $627;\n       $629 = HEAP16[$618>>1]|0;\n       $630 = $629&65535;\n       $631 = $630 << $$0843946$i;\n       $632 = $631 | $628;\n       $633 = $632&255;\n       HEAP8[$$0948$i>>0] = $633;\n      }\n      $634 = ($$0843946$i|0)==(0);\n      $635 = ((($$0948$i)) + 1|0);\n      $636 = (($$0843946$i) + -1)|0;\n      $$1844$i = $634 ? 7 : $636;\n      $$1$i176 = $634 ? $635 : $$0948$i;\n      $637 = (($$0822947$i) + 1)|0;\n      $exitcond$i177 = ($637|0)==($610|0);\n      if ($exitcond$i177) {\n       break;\n      } else {\n       $$0822947$i = $637;$$0843946$i = $$1844$i;$$0948$i = $$1$i176;\n      }\n     }\n     break;\n    }\n    case 2:  {\n     $638 = ($594|0)==(0|0);\n     $639 = ($610|0)!=(0);\n     if ($638) {\n      if (!($639)) {\n       break L140;\n      }\n      $643 = ((($0)) + 540|0);\n      $644 = ((($0)) + 460|0);\n      $645 = HEAP16[$643>>1]|0;\n      $646 = $645&65535;\n      $$2824950$i = 0;$$4847949$i = 6;$$4951$i = $592;\n      while(1) {\n       $678 = HEAP8[$$4951$i>>0]|0;\n       $679 = $678&255;\n       $680 = $679 >>> $$4847949$i;\n       $681 = $680 & 3;\n       $682 = ($681|0)==($646|0);\n       if ($682) {\n        $683 = (6 - ($$4847949$i))|0;\n        $684 = 16191 >>> $683;\n        $685 = $679 & $684;\n        $686 = HEAP16[$644>>1]|0;\n        $687 = $686&65535;\n        $688 = $687 << $$4847949$i;\n        $689 = $688 | $685;\n        $690 = $689&255;\n        HEAP8[$$4951$i>>0] = $690;\n       }\n       $691 = ($$4847949$i|0)==(0);\n       $692 = ((($$4951$i)) + 1|0);\n       $693 = (($$4847949$i) + -2)|0;\n       $$5848$i = $691 ? 6 : $693;\n       $$5$i179 = $691 ? $692 : $$4951$i;\n       $694 = (($$2824950$i) + 1)|0;\n       $exitcond1046$i = ($694|0)==($610|0);\n       if ($exitcond1046$i) {\n        break L140;\n       } else {\n        $$2824950$i = $694;$$4847949$i = $$5848$i;$$4951$i = $$5$i179;\n       }\n      }\n     }\n     if (!($639)) {\n      break L140;\n     }\n     $640 = ((($0)) + 540|0);\n     $641 = ((($0)) + 460|0);\n     $$pre332 = HEAP16[$640>>1]|0;\n     $642 = $$pre332&65535;\n     $$1823954$i = 0;$$2845953$i = 6;$$2955$i = $592;\n     while(1) {\n      $647 = HEAP8[$$2955$i>>0]|0;\n      $648 = $647&255;\n      $649 = $648 >>> $$2845953$i;\n      $650 = $649 & 3;\n      $651 = ($650|0)==($642|0);\n      if ($651) {\n       $652 = (6 - ($$2845953$i))|0;\n       $653 = 16191 >>> $652;\n       $654 = $648 & $653;\n       $655 = HEAP16[$641>>1]|0;\n       $656 = $655&65535;\n       $657 = $656 << $$2845953$i;\n       $$masked869$i = $657 & 255;\n       $658 = $$masked869$i | $654;\n       $storemerge868$in$i = $658;\n      } else {\n       $659 = $650 << 2;\n       $660 = $659 | $650;\n       $661 = $650 << 4;\n       $662 = $660 | $661;\n       $663 = $650 << 6;\n       $664 = $662 | $663;\n       $665 = (($594) + ($664)|0);\n       $666 = HEAP8[$665>>0]|0;\n       $667 = $666&255;\n       $668 = $667 >>> 6;\n       $669 = (6 - ($$2845953$i))|0;\n       $670 = 16191 >>> $669;\n       $671 = $648 & $670;\n       $672 = $668 << $$2845953$i;\n       $673 = $672 | $671;\n       $storemerge868$in$i = $673;\n      }\n      $storemerge868$i = $storemerge868$in$i&255;\n      HEAP8[$$2955$i>>0] = $storemerge868$i;\n      $674 = ($$2845953$i|0)==(0);\n      $675 = ((($$2955$i)) + 1|0);\n      $676 = (($$2845953$i) + -2)|0;\n      $$3846$i = $674 ? 6 : $676;\n      $$3$i178 = $674 ? $675 : $$2955$i;\n      $677 = (($$1823954$i) + 1)|0;\n      $exitcond1047$i = ($677|0)==($610|0);\n      if ($exitcond1047$i) {\n       break;\n      } else {\n       $$1823954$i = $677;$$2845953$i = $$3846$i;$$2955$i = $$3$i178;\n      }\n     }\n     break;\n    }\n    case 4:  {\n     $695 = ($594|0)==(0|0);\n     $696 = ($610|0)!=(0);\n     if ($695) {\n      if (!($696)) {\n       break L140;\n      }\n      $700 = ((($0)) + 540|0);\n      $701 = ((($0)) + 460|0);\n      $702 = HEAP16[$700>>1]|0;\n      $703 = $702&65535;\n      $$4826958$i = 0;$$8851957$i = 4;$$8959$i = $592;\n      while(1) {\n       $731 = HEAP8[$$8959$i>>0]|0;\n       $732 = $731&255;\n       $733 = $732 >>> $$8851957$i;\n       $734 = $733 & 15;\n       $735 = ($734|0)==($703|0);\n       if ($735) {\n        $736 = (4 - ($$8851957$i))|0;\n        $737 = 3855 >>> $736;\n        $738 = $732 & $737;\n        $739 = HEAP16[$701>>1]|0;\n        $740 = $739&65535;\n        $741 = $740 << $$8851957$i;\n        $742 = $741 | $738;\n        $743 = $742&255;\n        HEAP8[$$8959$i>>0] = $743;\n       }\n       $744 = ($$8851957$i|0)==(0);\n       $745 = ((($$8959$i)) + 1|0);\n       $746 = (($$8851957$i) + -4)|0;\n       $$9852$i = $744 ? 4 : $746;\n       $$9$i181 = $744 ? $745 : $$8959$i;\n       $747 = (($$4826958$i) + 1)|0;\n       $exitcond1048$i = ($747|0)==($610|0);\n       if ($exitcond1048$i) {\n        break L140;\n       } else {\n        $$4826958$i = $747;$$8851957$i = $$9852$i;$$8959$i = $$9$i181;\n       }\n      }\n     }\n     if (!($696)) {\n      break L140;\n     }\n     $697 = ((($0)) + 540|0);\n     $698 = ((($0)) + 460|0);\n     $$pre331 = HEAP16[$697>>1]|0;\n     $699 = $$pre331&65535;\n     $$3825962$i = 0;$$6849961$i = 4;$$6963$i = $592;\n     while(1) {\n      $704 = HEAP8[$$6963$i>>0]|0;\n      $705 = $704&255;\n      $706 = $705 >>> $$6849961$i;\n      $707 = $706 & 15;\n      $708 = ($707|0)==($699|0);\n      if ($708) {\n       $709 = (4 - ($$6849961$i))|0;\n       $710 = 3855 >>> $709;\n       $711 = $705 & $710;\n       $712 = HEAP16[$698>>1]|0;\n       $713 = $712&65535;\n       $714 = $713 << $$6849961$i;\n       $$masked865$i = $714 & 255;\n       $715 = $$masked865$i | $711;\n       $storemerge864$in$i = $715;\n      } else {\n       $716 = $707 << 4;\n       $717 = $716 | $707;\n       $718 = (($594) + ($717)|0);\n       $719 = HEAP8[$718>>0]|0;\n       $720 = $719&255;\n       $721 = $720 >>> 4;\n       $722 = (4 - ($$6849961$i))|0;\n       $723 = 3855 >>> $722;\n       $724 = $705 & $723;\n       $725 = $721 << $$6849961$i;\n       $726 = $725 | $724;\n       $storemerge864$in$i = $726;\n      }\n      $storemerge864$i = $storemerge864$in$i&255;\n      HEAP8[$$6963$i>>0] = $storemerge864$i;\n      $727 = ($$6849961$i|0)==(0);\n      $728 = ((($$6963$i)) + 1|0);\n      $729 = (($$6849961$i) + -4)|0;\n      $$7850$i = $727 ? 4 : $729;\n      $$7$i180 = $727 ? $728 : $$6963$i;\n      $730 = (($$3825962$i) + 1)|0;\n      $exitcond1049$i = ($730|0)==($610|0);\n      if ($exitcond1049$i) {\n       break;\n      } else {\n       $$3825962$i = $730;$$6849961$i = $$7850$i;$$6963$i = $$7$i180;\n      }\n     }\n     break;\n    }\n    case 8:  {\n     $748 = ($594|0)==(0|0);\n     $749 = ($610|0)!=(0);\n     if ($748) {\n      if (!($749)) {\n       break L140;\n      }\n      $753 = ((($0)) + 540|0);\n      $754 = ((($0)) + 460|0);\n      $755 = HEAP16[$753>>1]|0;\n      $756 = $755&65535;\n      $$11966$i = $592;$$6828965$i = 0;\n      while(1) {\n       $766 = HEAP8[$$11966$i>>0]|0;\n       $767 = $766&255;\n       $768 = ($767|0)==($756|0);\n       if ($768) {\n        $769 = HEAP16[$754>>1]|0;\n        $770 = $769&255;\n        HEAP8[$$11966$i>>0] = $770;\n       }\n       $771 = (($$6828965$i) + 1)|0;\n       $772 = ((($$11966$i)) + 1|0);\n       $exitcond1050$i = ($771|0)==($610|0);\n       if ($exitcond1050$i) {\n        break L140;\n       } else {\n        $$11966$i = $772;$$6828965$i = $771;\n       }\n      }\n     }\n     if (!($749)) {\n      break L140;\n     }\n     $750 = ((($0)) + 540|0);\n     $751 = ((($0)) + 460|0);\n     $$pre330 = HEAP16[$750>>1]|0;\n     $752 = $$pre330&65535;\n     $$10969$i = $592;$$5827968$i = 0;\n     while(1) {\n      $757 = HEAP8[$$10969$i>>0]|0;\n      $758 = $757&255;\n      $759 = ($758|0)==($752|0);\n      if ($759) {\n       $760 = HEAP16[$751>>1]|0;\n       $761 = $760&255;\n       $storemerge862$i = $761;\n      } else {\n       $762 = (($594) + ($758)|0);\n       $763 = HEAP8[$762>>0]|0;\n       $storemerge862$i = $763;\n      }\n      HEAP8[$$10969$i>>0] = $storemerge862$i;\n      $764 = (($$5827968$i) + 1)|0;\n      $765 = ((($$10969$i)) + 1|0);\n      $exitcond1051$i = ($764|0)==($610|0);\n      if ($exitcond1051$i) {\n       break;\n      } else {\n       $$10969$i = $765;$$5827968$i = $764;\n      }\n     }\n     break;\n    }\n    case 16:  {\n     $773 = ($600|0)==(0|0);\n     $774 = ($610|0)!=(0);\n     if ($773) {\n      if (!($774)) {\n       break L140;\n      }\n      $778 = ((($0)) + 540|0);\n      $779 = ((($0)) + 460|0);\n      $780 = HEAP16[$778>>1]|0;\n      $781 = $780&65535;\n      $$13972$i = $592;$$8830971$i = 0;\n      while(1) {\n       $798 = HEAP8[$$13972$i>>0]|0;\n       $799 = $798&255;\n       $800 = $799 << 8;\n       $801 = ((($$13972$i)) + 1|0);\n       $802 = HEAP8[$801>>0]|0;\n       $803 = $802&255;\n       $804 = $800 | $803;\n       $805 = ($804|0)==($781|0);\n       if ($805) {\n        $806 = HEAP16[$779>>1]|0;\n        $807 = ($806&65535) >>> 8;\n        $808 = $807&255;\n        HEAP8[$$13972$i>>0] = $808;\n        $809 = $806&255;\n        HEAP8[$801>>0] = $809;\n       }\n       $810 = (($$8830971$i) + 1)|0;\n       $811 = ((($$13972$i)) + 2|0);\n       $exitcond1052$i = ($810|0)==($610|0);\n       if ($exitcond1052$i) {\n        break;\n       } else {\n        $$13972$i = $811;$$8830971$i = $810;\n       }\n      }\n     } else {\n      if (!($774)) {\n       break L140;\n      }\n      $775 = ((($0)) + 540|0);\n      $776 = ((($0)) + 460|0);\n      $$pre329 = HEAP16[$775>>1]|0;\n      $777 = $$pre329&65535;\n      $$12975$i = $592;$$7829974$i = 0;\n      while(1) {\n       $782 = HEAP8[$$12975$i>>0]|0;\n       $783 = $782&255;\n       $784 = $783 << 8;\n       $785 = ((($$12975$i)) + 1|0);\n       $786 = HEAP8[$785>>0]|0;\n       $787 = $786&255;\n       $788 = $784 | $787;\n       $789 = ($788|0)==($777|0);\n       if ($789) {\n        $$sink$in = $776;\n       } else {\n        $790 = $787 >>> $606;\n        $791 = (($600) + ($790<<2)|0);\n        $792 = HEAP32[$791>>2]|0;\n        $793 = (($792) + ($783<<1)|0);\n        $$sink$in = $793;\n       }\n       $$sink = HEAP16[$$sink$in>>1]|0;\n       $794 = ($$sink&65535) >>> 8;\n       $795 = $794&255;\n       $extract$t409 = $$sink&255;\n       HEAP8[$$12975$i>>0] = $795;\n       HEAP8[$785>>0] = $extract$t409;\n       $796 = (($$7829974$i) + 1)|0;\n       $797 = ((($$12975$i)) + 2|0);\n       $exitcond1053$i = ($796|0)==($610|0);\n       if ($exitcond1053$i) {\n        break;\n       } else {\n        $$12975$i = $797;$$7829974$i = $796;\n       }\n      }\n     }\n     break;\n    }\n    default: {\n     break L140;\n    }\n    }\n    break;\n   }\n   case 2:  {\n    $812 = ($615<<24>>24)==(8);\n    if (!($812)) {\n     $879 = ($600|0)==(0|0);\n     $880 = ($610|0)!=(0);\n     if ($879) {\n      if (!($880)) {\n       break L140;\n      }\n      $886 = ((($0)) + 534|0);\n      $887 = ((($0)) + 536|0);\n      $888 = ((($0)) + 454|0);\n      $889 = ((($0)) + 456|0);\n      $890 = HEAP16[$886>>1]|0;\n      $891 = $890&65535;\n      $$12834984$i = 0;$$17985$i = $592;\n      while(1) {\n       $960 = HEAP8[$$17985$i>>0]|0;\n       $961 = $960&255;\n       $962 = $961 << 8;\n       $963 = ((($$17985$i)) + 1|0);\n       $964 = HEAP8[$963>>0]|0;\n       $965 = $964&255;\n       $966 = $962 | $965;\n       $967 = ((($$17985$i)) + 2|0);\n       $968 = ((($$17985$i)) + 3|0);\n       $969 = ((($$17985$i)) + 4|0);\n       $970 = ((($$17985$i)) + 5|0);\n       $971 = ($966|0)==($891|0);\n       if ($971) {\n        $972 = HEAP8[$969>>0]|0;\n        $973 = $972&255;\n        $974 = $973 << 8;\n        $975 = HEAP8[$970>>0]|0;\n        $976 = $975&255;\n        $977 = $974 | $976;\n        $978 = HEAP8[$967>>0]|0;\n        $979 = $978&255;\n        $980 = $979 << 8;\n        $981 = HEAP8[$968>>0]|0;\n        $982 = $981&255;\n        $983 = $980 | $982;\n        $984 = HEAP32[$887>>2]|0;\n        $985 = $984 & 65535;\n        $986 = ($983|0)==($985|0);\n        $987 = $984 >>> 16;\n        $988 = ($977|0)==($987|0);\n        $or$cond1099$i = $986 & $988;\n        if ($or$cond1099$i) {\n         $989 = HEAP16[$888>>1]|0;\n         $990 = ($989&65535) >>> 8;\n         $991 = $990&255;\n         HEAP8[$$17985$i>>0] = $991;\n         $992 = $989&255;\n         HEAP8[$963>>0] = $992;\n         $993 = HEAP32[$889>>2]|0;\n         $994 = $993&65535;\n         $995 = ($994&65535) >>> 8;\n         $996 = $995&255;\n         HEAP8[$967>>0] = $996;\n         $997 = $993&255;\n         HEAP8[$968>>0] = $997;\n         $998 = $993 >>> 16;\n         $999 = $993 >>> 24;\n         $1000 = $999&255;\n         HEAP8[$969>>0] = $1000;\n         $1001 = $998&255;\n         HEAP8[$970>>0] = $1001;\n        }\n       }\n       $1002 = (($$12834984$i) + 1)|0;\n       $1003 = ((($$17985$i)) + 6|0);\n       $exitcond1056$i = ($1002|0)==($610|0);\n       if ($exitcond1056$i) {\n        break L140;\n       } else {\n        $$12834984$i = $1002;$$17985$i = $1003;\n       }\n      }\n     }\n     if (!($880)) {\n      break L140;\n     }\n     $881 = ((($0)) + 534|0);\n     $882 = ((($0)) + 536|0);\n     $883 = ((($0)) + 454|0);\n     $884 = ((($0)) + 456|0);\n     $$pre327 = HEAP16[$881>>1]|0;\n     $885 = $$pre327&65535;\n     $$11833987$i = 0;$$16988$i = $592;\n     while(1) {\n      $892 = HEAP8[$$16988$i>>0]|0;\n      $893 = $892&255;\n      $894 = $893 << 8;\n      $895 = ((($$16988$i)) + 1|0);\n      $896 = HEAP8[$895>>0]|0;\n      $897 = $896&255;\n      $898 = $894 | $897;\n      $899 = ((($$16988$i)) + 2|0);\n      $900 = ((($$16988$i)) + 3|0);\n      $901 = ((($$16988$i)) + 4|0);\n      $902 = HEAP8[$901>>0]|0;\n      $903 = $902&255;\n      $904 = ((($$16988$i)) + 5|0);\n      $905 = HEAP8[$904>>0]|0;\n      $906 = $905&255;\n      $907 = ($898|0)==($885|0);\n      $908 = HEAP8[$899>>0]|0;\n      if ($907) {\n       $909 = $903 << 8;\n       $910 = $909 | $906;\n       $911 = $908&255;\n       $912 = $911 << 8;\n       $913 = HEAP8[$900>>0]|0;\n       $914 = $913&255;\n       $915 = $914 | $912;\n       $916 = HEAP32[$882>>2]|0;\n       $917 = $916 & 65535;\n       $918 = ($915|0)==($917|0);\n       $919 = $916 >>> 16;\n       $920 = ($910|0)==($919|0);\n       $or$cond1096$i = $918 & $920;\n       if ($or$cond1096$i) {\n        $921 = HEAP16[$883>>1]|0;\n        $922 = ($921&65535) >>> 8;\n        $923 = $922&255;\n        HEAP8[$$16988$i>>0] = $923;\n        $924 = $921&255;\n        HEAP8[$895>>0] = $924;\n        $925 = HEAP32[$884>>2]|0;\n        $926 = $925&65535;\n        $927 = ($926&65535) >>> 8;\n        $928 = $927&255;\n        HEAP8[$899>>0] = $928;\n        $929 = $925&255;\n        HEAP8[$900>>0] = $929;\n        $930 = $925 >>> 16;\n        $931 = $925 >>> 24;\n        $932 = $931&255;\n        HEAP8[$901>>0] = $932;\n        $extract$t269 = $930&255;\n        $$sink217$off0 = $extract$t269;\n       } else {\n        $$pre$phi353Z2D = $911;$942 = $913;\n        label = 176;\n       }\n      } else {\n       $$pre1069$i = HEAP8[$900>>0]|0;\n       $$pre352 = $908&255;\n       $$pre$phi353Z2D = $$pre352;$942 = $$pre1069$i;\n       label = 176;\n      }\n      if ((label|0) == 176) {\n       label = 0;\n       $933 = $897 >>> $606;\n       $934 = (($600) + ($933<<2)|0);\n       $935 = HEAP32[$934>>2]|0;\n       $936 = (($935) + ($893<<1)|0);\n       $937 = HEAP16[$936>>1]|0;\n       $938 = ($937&65535) >>> 8;\n       $939 = $938&255;\n       HEAP8[$$16988$i>>0] = $939;\n       $940 = $937&255;\n       HEAP8[$895>>0] = $940;\n       $941 = $942&255;\n       $943 = $941 >>> $606;\n       $944 = (($600) + ($943<<2)|0);\n       $945 = HEAP32[$944>>2]|0;\n       $946 = (($945) + ($$pre$phi353Z2D<<1)|0);\n       $947 = HEAP16[$946>>1]|0;\n       $948 = ($947&65535) >>> 8;\n       $949 = $948&255;\n       HEAP8[$899>>0] = $949;\n       $950 = $947&255;\n       HEAP8[$900>>0] = $950;\n       $951 = $906 >>> $606;\n       $952 = (($600) + ($951<<2)|0);\n       $953 = HEAP32[$952>>2]|0;\n       $954 = (($953) + ($903<<1)|0);\n       $955 = HEAP16[$954>>1]|0;\n       $956 = ($955&65535) >>> 8;\n       $957 = $956&255;\n       HEAP8[$901>>0] = $957;\n       $extract$t270 = $955&255;\n       $$sink217$off0 = $extract$t270;\n      }\n      HEAP8[$904>>0] = $$sink217$off0;\n      $958 = (($$11833987$i) + 1)|0;\n      $959 = ((($$16988$i)) + 6|0);\n      $exitcond1057$i = ($958|0)==($610|0);\n      if ($exitcond1057$i) {\n       break L140;\n      } else {\n       $$11833987$i = $958;$$16988$i = $959;\n      }\n     }\n    }\n    $813 = ($594|0)==(0|0);\n    $814 = ($610|0)!=(0);\n    if ($813) {\n     if (!($814)) {\n      break L140;\n     }\n     $820 = ((($0)) + 534|0);\n     $821 = ((($0)) + 536|0);\n     $822 = ((($0)) + 454|0);\n     $823 = ((($0)) + 456|0);\n     $824 = HEAP16[$820>>1]|0;\n     $825 = $824&65535;\n     $$10832977$i = 0;$$15978$i = $592;\n     while(1) {\n      $857 = HEAP8[$$15978$i>>0]|0;\n      $858 = $857&255;\n      $859 = ($858|0)==($825|0);\n      if ($859) {\n       $860 = ((($$15978$i)) + 1|0);\n       $861 = HEAP8[$860>>0]|0;\n       $862 = $861&255;\n       $863 = HEAP32[$821>>2]|0;\n       $864 = $863 & 65535;\n       $865 = ($862|0)==($864|0);\n       if ($865) {\n        $866 = $863 >>> 16;\n        $867 = ((($$15978$i)) + 2|0);\n        $868 = HEAP8[$867>>0]|0;\n        $869 = $868&255;\n        $870 = ($869|0)==($866|0);\n        if ($870) {\n         $871 = HEAP16[$822>>1]|0;\n         $872 = $871&255;\n         HEAP8[$$15978$i>>0] = $872;\n         $873 = HEAP32[$823>>2]|0;\n         $874 = $873&255;\n         HEAP8[$860>>0] = $874;\n         $875 = $873 >>> 16;\n         $876 = $875&255;\n         HEAP8[$867>>0] = $876;\n        }\n       }\n      }\n      $877 = (($$10832977$i) + 1)|0;\n      $878 = ((($$15978$i)) + 3|0);\n      $exitcond1054$i = ($877|0)==($610|0);\n      if ($exitcond1054$i) {\n       break L140;\n      } else {\n       $$10832977$i = $877;$$15978$i = $878;\n      }\n     }\n    }\n    if (!($814)) {\n     break L140;\n    }\n    $815 = ((($0)) + 534|0);\n    $816 = ((($0)) + 536|0);\n    $817 = ((($0)) + 454|0);\n    $818 = ((($0)) + 456|0);\n    $$pre328 = HEAP16[$815>>1]|0;\n    $819 = $$pre328&65535;\n    $$14981$i = $592;$$9831980$i = 0;\n    while(1) {\n     $826 = HEAP8[$$14981$i>>0]|0;\n     $827 = $826&255;\n     $828 = ($827|0)==($819|0);\n     $829 = ((($$14981$i)) + 1|0);\n     $830 = HEAP8[$829>>0]|0;\n     $831 = $830&255;\n     if ($828) {\n      $832 = HEAP32[$816>>2]|0;\n      $833 = $832 & 65535;\n      $834 = ($831|0)==($833|0);\n      if ($834) {\n       $835 = $832 >>> 16;\n       $836 = ((($$14981$i)) + 2|0);\n       $837 = HEAP8[$836>>0]|0;\n       $838 = $837&255;\n       $839 = ($838|0)==($835|0);\n       if ($839) {\n        $840 = HEAP16[$817>>1]|0;\n        $841 = $840&255;\n        HEAP8[$$14981$i>>0] = $841;\n        $842 = HEAP32[$818>>2]|0;\n        $843 = $842&255;\n        HEAP8[$829>>0] = $843;\n        $844 = $842 >>> 16;\n        $845 = $844&255;\n        HEAP8[$836>>0] = $845;\n       } else {\n        label = 160;\n       }\n      } else {\n       label = 160;\n      }\n     } else {\n      label = 160;\n     }\n     if ((label|0) == 160) {\n      label = 0;\n      $846 = (($594) + ($827)|0);\n      $847 = HEAP8[$846>>0]|0;\n      HEAP8[$$14981$i>>0] = $847;\n      $848 = (($594) + ($831)|0);\n      $849 = HEAP8[$848>>0]|0;\n      HEAP8[$829>>0] = $849;\n      $850 = ((($$14981$i)) + 2|0);\n      $851 = HEAP8[$850>>0]|0;\n      $852 = $851&255;\n      $853 = (($594) + ($852)|0);\n      $854 = HEAP8[$853>>0]|0;\n      HEAP8[$850>>0] = $854;\n     }\n     $855 = (($$9831980$i) + 1)|0;\n     $856 = ((($$14981$i)) + 3|0);\n     $exitcond1055$i = ($855|0)==($610|0);\n     if ($exitcond1055$i) {\n      break;\n     } else {\n      $$14981$i = $856;$$9831980$i = $855;\n     }\n    }\n    break;\n   }\n   case 4:  {\n    $1004 = ($615<<24>>24)==(8);\n    if ($1004) {\n     $1005 = ($598|0)!=(0|0);\n     $1006 = ($596|0)!=(0|0);\n     $or$cond$i183 = $1006 & $1005;\n     $1007 = ($594|0)!=(0|0);\n     $or$cond3$i = $1007 & $or$cond$i183;\n     $1008 = ($610|0)!=(0);\n     if (!($or$cond3$i)) {\n      if (!($1008)) {\n       break L140;\n      }\n      $1009 = ((($0)) + 460|0);\n      $$14836995$i = 0;$$19996$i = $592;\n      while(1) {\n       $1071 = ((($$19996$i)) + 1|0);\n       $1072 = HEAP8[$1071>>0]|0;\n       switch ($1072<<24>>24) {\n       case 0:  {\n        $1073 = HEAP16[$1009>>1]|0;\n        $1074 = $1073&255;\n        HEAP8[$$19996$i>>0] = $1074;\n        break;\n       }\n       case -1:  {\n        break;\n       }\n       default: {\n        $1075 = HEAP8[$$19996$i>>0]|0;\n        $1076 = $1075&255;\n        $1077 = $1072&255;\n        $1078 = Math_imul($1076, $1077)|0;\n        $1079 = HEAP16[$1009>>1]|0;\n        $1080 = $1079&65535;\n        $1081 = $1077 ^ 255;\n        $1082 = Math_imul($1080, $1081)|0;\n        $1083 = (($1078) + 128)|0;\n        $1084 = (($1083) + ($1082))|0;\n        $1085 = $1084 >>> 8;\n        $1086 = $1085 & 255;\n        $1087 = (($1086) + ($1084))|0;\n        $1088 = $1087 >>> 8;\n        $1089 = $1088&255;\n        HEAP8[$$19996$i>>0] = $1089;\n       }\n       }\n       $1090 = (($$14836995$i) + 1)|0;\n       $1091 = ((($$19996$i)) + 2|0);\n       $exitcond1060$i = ($1090|0)==($610|0);\n       if ($exitcond1060$i) {\n        break L140;\n       } else {\n        $$14836995$i = $1090;$$19996$i = $1091;\n       }\n      }\n     }\n     if (!($1008)) {\n      break L140;\n     }\n     $1010 = ((($0)) + 470|0);\n     $1011 = ($$lobit$i|0)==(0);\n     $1012 = ((($0)) + 460|0);\n     if ($1011) {\n      $$13835991$us$i = 0;$$18992$us$i = $592;\n      while(1) {\n       $1013 = ((($$18992$us$i)) + 1|0);\n       $1014 = HEAP8[$1013>>0]|0;\n       $1015 = $1014&255;\n       switch ($1014<<24>>24) {\n       case -1:  {\n        $1018 = HEAP8[$$18992$us$i>>0]|0;\n        $1019 = $1018&255;\n        $1020 = (($594) + ($1019)|0);\n        $1021 = HEAP8[$1020>>0]|0;\n        HEAP8[$$18992$us$i>>0] = $1021;\n        break;\n       }\n       case 0:  {\n        $1016 = HEAP16[$1012>>1]|0;\n        $1017 = $1016&255;\n        HEAP8[$$18992$us$i>>0] = $1017;\n        break;\n       }\n       default: {\n        $1022 = HEAP8[$$18992$us$i>>0]|0;\n        $1023 = $1022&255;\n        $1024 = (($598) + ($1023)|0);\n        $1025 = HEAP8[$1024>>0]|0;\n        $1026 = $1025&255;\n        $1027 = Math_imul($1026, $1015)|0;\n        $1028 = HEAP16[$1010>>1]|0;\n        $1029 = $1028&65535;\n        $1030 = $1015 ^ 255;\n        $1031 = Math_imul($1029, $1030)|0;\n        $1032 = (($1027) + 128)|0;\n        $1033 = (($1032) + ($1031))|0;\n        $1034 = $1033 >>> 8;\n        $1035 = $1034 & 255;\n        $1036 = (($1035) + ($1033))|0;\n        $1037 = $1036 >>> 8;\n        $1038 = $1037 & 255;\n        $1039 = (($596) + ($1038)|0);\n        $1040 = HEAP8[$1039>>0]|0;\n        HEAP8[$$18992$us$i>>0] = $1040;\n       }\n       }\n       $1041 = (($$13835991$us$i) + 1)|0;\n       $1042 = ((($$18992$us$i)) + 2|0);\n       $exitcond1058$i = ($1041|0)==($610|0);\n       if ($exitcond1058$i) {\n        break L140;\n       } else {\n        $$13835991$us$i = $1041;$$18992$us$i = $1042;\n       }\n      }\n     } else {\n      $$13835991$i = 0;$$18992$i = $592;\n      while(1) {\n       $1043 = ((($$18992$i)) + 1|0);\n       $1044 = HEAP8[$1043>>0]|0;\n       $1045 = $1044&255;\n       switch ($1044<<24>>24) {\n       case -1:  {\n        $1046 = HEAP8[$$18992$i>>0]|0;\n        $1047 = $1046&255;\n        $1048 = (($594) + ($1047)|0);\n        $1049 = HEAP8[$1048>>0]|0;\n        HEAP8[$$18992$i>>0] = $1049;\n        break;\n       }\n       case 0:  {\n        $1050 = HEAP16[$1012>>1]|0;\n        $1051 = $1050&255;\n        HEAP8[$$18992$i>>0] = $1051;\n        break;\n       }\n       default: {\n        $1052 = HEAP8[$$18992$i>>0]|0;\n        $1053 = $1052&255;\n        $1054 = (($598) + ($1053)|0);\n        $1055 = HEAP8[$1054>>0]|0;\n        $1056 = $1055&255;\n        $1057 = Math_imul($1056, $1045)|0;\n        $1058 = HEAP16[$1010>>1]|0;\n        $1059 = $1058&65535;\n        $1060 = $1045 ^ 255;\n        $1061 = Math_imul($1059, $1060)|0;\n        $1062 = (($1057) + 128)|0;\n        $1063 = (($1062) + ($1061))|0;\n        $1064 = $1063 >>> 8;\n        $1065 = $1064 & 255;\n        $1066 = (($1065) + ($1063))|0;\n        $1067 = $1066 >>> 8;\n        $1068 = $1067&255;\n        HEAP8[$$18992$i>>0] = $1068;\n       }\n       }\n       $1069 = (($$13835991$i) + 1)|0;\n       $1070 = ((($$18992$i)) + 2|0);\n       $exitcond1059$i = ($1069|0)==($610|0);\n       if ($exitcond1059$i) {\n        break L140;\n       } else {\n        $$13835991$i = $1069;$$18992$i = $1070;\n       }\n      }\n     }\n    } else {\n     $1092 = ($600|0)!=(0|0);\n     $1093 = ($602|0)!=(0|0);\n     $or$cond5$i = $1092 & $1093;\n     $1094 = ($604|0)!=(0|0);\n     $or$cond7$i = $or$cond5$i & $1094;\n     $1095 = ($610|0)!=(0);\n     if (!($or$cond7$i)) {\n      if (!($1095)) {\n       break L140;\n      }\n      $1096 = ((($0)) + 460|0);\n      $$168381002$i = 0;$$211003$i = $592;\n      while(1) {\n       $1204 = ((($$211003$i)) + 2|0);\n       $1205 = HEAP8[$1204>>0]|0;\n       $1206 = $1205&255;\n       $1207 = $1206 << 8;\n       $1208 = ((($$211003$i)) + 3|0);\n       $1209 = HEAP8[$1208>>0]|0;\n       $1210 = $1209&255;\n       $1211 = $1207 | $1210;\n       $trunc899$i = $1211&65535;\n       switch ($trunc899$i<<16>>16) {\n       case 0:  {\n        $1212 = HEAP16[$1096>>1]|0;\n        $1213 = ($1212&65535) >>> 8;\n        $1214 = $1213&255;\n        HEAP8[$$211003$i>>0] = $1214;\n        $1215 = $1212&255;\n        $1216 = ((($$211003$i)) + 1|0);\n        HEAP8[$1216>>0] = $1215;\n        break;\n       }\n       case -1:  {\n        break;\n       }\n       default: {\n        $1217 = HEAP8[$$211003$i>>0]|0;\n        $1218 = $1217&255;\n        $1219 = $1218 << 8;\n        $1220 = ((($$211003$i)) + 1|0);\n        $1221 = HEAP8[$1220>>0]|0;\n        $1222 = $1221&255;\n        $1223 = $1219 | $1222;\n        $1224 = Math_imul($1223, $1211)|0;\n        $1225 = HEAP16[$1096>>1]|0;\n        $1226 = $1225&65535;\n        $1227 = $1211 ^ 65535;\n        $1228 = Math_imul($1226, $1227)|0;\n        $1229 = (($1228) + 32768)|0;\n        $1230 = (($1229) + ($1224))|0;\n        $1231 = $1230 >>> 16;\n        $1232 = (($1231) + ($1230))|0;\n        $1233 = $1232 >>> 16;\n        $1234 = $1232 >>> 24;\n        $1235 = $1234&255;\n        HEAP8[$$211003$i>>0] = $1235;\n        $1236 = $1233&255;\n        HEAP8[$1220>>0] = $1236;\n       }\n       }\n       $1237 = (($$168381002$i) + 1)|0;\n       $1238 = ((($$211003$i)) + 4|0);\n       $exitcond1063$i = ($1237|0)==($610|0);\n       if ($exitcond1063$i) {\n        break L140;\n       } else {\n        $$168381002$i = $1237;$$211003$i = $1238;\n       }\n      }\n     }\n     if (!($1095)) {\n      break L140;\n     }\n     $1097 = ((($0)) + 470|0);\n     $1098 = ((($0)) + 460|0);\n     if ($609) {\n      $$15837998$us$i = 0;$$20999$us$i = $592;\n      while(1) {\n       $1099 = ((($$20999$us$i)) + 2|0);\n       $1100 = HEAP8[$1099>>0]|0;\n       $1101 = $1100&255;\n       $1102 = $1101 << 8;\n       $1103 = ((($$20999$us$i)) + 3|0);\n       $1104 = HEAP8[$1103>>0]|0;\n       $1105 = $1104&255;\n       $1106 = $1102 | $1105;\n       $trunc900$us$i = $1106&65535;\n       switch ($trunc900$us$i<<16>>16) {\n       case -1:  {\n        $1112 = HEAP8[$$20999$us$i>>0]|0;\n        $1113 = $1112&255;\n        $1114 = ((($$20999$us$i)) + 1|0);\n        $1115 = HEAP8[$1114>>0]|0;\n        $1116 = $1115&255;\n        $1117 = $1116 >>> $606;\n        $1118 = (($600) + ($1117<<2)|0);\n        $1119 = HEAP32[$1118>>2]|0;\n        $1120 = (($1119) + ($1113<<1)|0);\n        $1121 = HEAP16[$1120>>1]|0;\n        $1122 = ($1121&65535) >>> 8;\n        $1123 = $1122&255;\n        HEAP8[$$20999$us$i>>0] = $1123;\n        $1124 = $1121&255;\n        HEAP8[$1114>>0] = $1124;\n        break;\n       }\n       case 0:  {\n        $1107 = HEAP16[$1098>>1]|0;\n        $1108 = ($1107&65535) >>> 8;\n        $1109 = $1108&255;\n        HEAP8[$$20999$us$i>>0] = $1109;\n        $1110 = $1107&255;\n        $1111 = ((($$20999$us$i)) + 1|0);\n        HEAP8[$1111>>0] = $1110;\n        break;\n       }\n       default: {\n        $1125 = HEAP8[$$20999$us$i>>0]|0;\n        $1126 = $1125&255;\n        $1127 = ((($$20999$us$i)) + 1|0);\n        $1128 = HEAP8[$1127>>0]|0;\n        $1129 = $1128&255;\n        $1130 = $1129 >>> $606;\n        $1131 = (($604) + ($1130<<2)|0);\n        $1132 = HEAP32[$1131>>2]|0;\n        $1133 = (($1132) + ($1126<<1)|0);\n        $1134 = HEAP16[$1133>>1]|0;\n        $1135 = $1134&65535;\n        $1136 = Math_imul($1135, $1106)|0;\n        $1137 = HEAP16[$1097>>1]|0;\n        $1138 = $1137&65535;\n        $1139 = $1106 ^ 65535;\n        $1140 = Math_imul($1138, $1139)|0;\n        $1141 = (($1136) + 32768)|0;\n        $1142 = (($1141) + ($1140))|0;\n        $1143 = $1142 >>> 16;\n        $1144 = (($1143) + ($1142))|0;\n        $1145 = $1144 >>> 16;\n        $1146 = $1144 >>> 24;\n        $1147 = $1145 & 255;\n        $1148 = $1147 >>> $606;\n        $1149 = (($602) + ($1148<<2)|0);\n        $1150 = HEAP32[$1149>>2]|0;\n        $1151 = (($1150) + ($1146<<1)|0);\n        $1152 = HEAP16[$1151>>1]|0;\n        $extract$t891$us$i = $1152&255;\n        $extract894$us$i = ($1152&65535) >>> 8;\n        $extract$t895$us$i = $extract894$us$i&255;\n        HEAP8[$$20999$us$i>>0] = $extract$t895$us$i;\n        HEAP8[$1127>>0] = $extract$t891$us$i;\n       }\n       }\n       $1153 = (($$15837998$us$i) + 1)|0;\n       $1154 = ((($$20999$us$i)) + 4|0);\n       $exitcond1061$i = ($1153|0)==($610|0);\n       if ($exitcond1061$i) {\n        break L140;\n       } else {\n        $$15837998$us$i = $1153;$$20999$us$i = $1154;\n       }\n      }\n     } else {\n      $$15837998$i = 0;$$20999$i = $592;\n      while(1) {\n       $1155 = ((($$20999$i)) + 2|0);\n       $1156 = HEAP8[$1155>>0]|0;\n       $1157 = $1156&255;\n       $1158 = $1157 << 8;\n       $1159 = ((($$20999$i)) + 3|0);\n       $1160 = HEAP8[$1159>>0]|0;\n       $1161 = $1160&255;\n       $1162 = $1158 | $1161;\n       $trunc900$i = $1162&65535;\n       switch ($trunc900$i<<16>>16) {\n       case -1:  {\n        $1163 = HEAP8[$$20999$i>>0]|0;\n        $1164 = $1163&255;\n        $1165 = ((($$20999$i)) + 1|0);\n        $1166 = HEAP8[$1165>>0]|0;\n        $1167 = $1166&255;\n        $1168 = $1167 >>> $606;\n        $1169 = (($600) + ($1168<<2)|0);\n        $1170 = HEAP32[$1169>>2]|0;\n        $1171 = (($1170) + ($1164<<1)|0);\n        $1172 = HEAP16[$1171>>1]|0;\n        $1173 = ($1172&65535) >>> 8;\n        $1174 = $1173&255;\n        HEAP8[$$20999$i>>0] = $1174;\n        $1175 = $1172&255;\n        HEAP8[$1165>>0] = $1175;\n        break;\n       }\n       case 0:  {\n        $1176 = HEAP16[$1098>>1]|0;\n        $1177 = ($1176&65535) >>> 8;\n        $1178 = $1177&255;\n        HEAP8[$$20999$i>>0] = $1178;\n        $1179 = $1176&255;\n        $1180 = ((($$20999$i)) + 1|0);\n        HEAP8[$1180>>0] = $1179;\n        break;\n       }\n       default: {\n        $1181 = HEAP8[$$20999$i>>0]|0;\n        $1182 = $1181&255;\n        $1183 = ((($$20999$i)) + 1|0);\n        $1184 = HEAP8[$1183>>0]|0;\n        $1185 = $1184&255;\n        $1186 = $1185 >>> $606;\n        $1187 = (($604) + ($1186<<2)|0);\n        $1188 = HEAP32[$1187>>2]|0;\n        $1189 = (($1188) + ($1182<<1)|0);\n        $1190 = HEAP16[$1189>>1]|0;\n        $1191 = $1190&65535;\n        $1192 = Math_imul($1191, $1162)|0;\n        $1193 = HEAP16[$1097>>1]|0;\n        $1194 = $1193&65535;\n        $1195 = $1162 ^ 65535;\n        $1196 = Math_imul($1194, $1195)|0;\n        $1197 = (($1192) + 32768)|0;\n        $1198 = (($1197) + ($1196))|0;\n        $1199 = $1198 >>> 16;\n        $1200 = (($1199) + ($1198))|0;\n        $1201 = $1200 >>> 16;\n        $extract$t890$i = $1201&255;\n        $extract892896$i = $1200 >>> 24;\n        $extract$t893$i = $extract892896$i&255;\n        HEAP8[$$20999$i>>0] = $extract$t893$i;\n        HEAP8[$1183>>0] = $extract$t890$i;\n       }\n       }\n       $1202 = (($$15837998$i) + 1)|0;\n       $1203 = ((($$20999$i)) + 4|0);\n       $exitcond1062$i = ($1202|0)==($610|0);\n       if ($exitcond1062$i) {\n        break L140;\n       } else {\n        $$15837998$i = $1202;$$20999$i = $1203;\n       }\n      }\n     }\n    }\n    break;\n   }\n   case 6:  {\n    $1239 = ($615<<24>>24)==(8);\n    if ($1239) {\n     $1240 = ($598|0)!=(0|0);\n     $1241 = ($596|0)!=(0|0);\n     $or$cond9$i = $1241 & $1240;\n     $1242 = ($594|0)!=(0|0);\n     $or$cond11$i = $1242 & $or$cond9$i;\n     $1243 = ($610|0)!=(0);\n     if (!($or$cond11$i)) {\n      if (!($1243)) {\n       break L140;\n      }\n      $1244 = ((($0)) + 454|0);\n      $1245 = ((($0)) + 456|0);\n      $$188401009$i = 0;$$231010$i = $592;\n      while(1) {\n       $1414 = ((($$231010$i)) + 3|0);\n       $1415 = HEAP8[$1414>>0]|0;\n       switch ($1415<<24>>24) {\n       case 0:  {\n        $1416 = HEAP16[$1244>>1]|0;\n        $1417 = $1416&255;\n        HEAP8[$$231010$i>>0] = $1417;\n        $1418 = HEAP32[$1245>>2]|0;\n        $1419 = $1418&255;\n        $1420 = ((($$231010$i)) + 1|0);\n        HEAP8[$1420>>0] = $1419;\n        $1421 = $1418 >>> 16;\n        $1422 = $1421&255;\n        $1423 = ((($$231010$i)) + 2|0);\n        HEAP8[$1423>>0] = $1422;\n        break;\n       }\n       case -1:  {\n        break;\n       }\n       default: {\n        $1424 = HEAP8[$$231010$i>>0]|0;\n        $1425 = $1424&255;\n        $1426 = $1415&255;\n        $1427 = Math_imul($1425, $1426)|0;\n        $1428 = HEAP16[$1244>>1]|0;\n        $1429 = $1428&65535;\n        $1430 = $1426 ^ 255;\n        $1431 = Math_imul($1429, $1430)|0;\n        $1432 = (($1427) + 128)|0;\n        $1433 = (($1432) + ($1431))|0;\n        $1434 = $1433 >>> 8;\n        $1435 = $1434 & 255;\n        $1436 = (($1435) + ($1433))|0;\n        $1437 = $1436 >>> 8;\n        $1438 = $1437&255;\n        HEAP8[$$231010$i>>0] = $1438;\n        $1439 = ((($$231010$i)) + 1|0);\n        $1440 = HEAP8[$1439>>0]|0;\n        $1441 = $1440&255;\n        $1442 = Math_imul($1441, $1426)|0;\n        $1443 = HEAP32[$1245>>2]|0;\n        $1444 = $1443 & 65535;\n        $1445 = Math_imul($1444, $1430)|0;\n        $1446 = (($1442) + 128)|0;\n        $1447 = (($1446) + ($1445))|0;\n        $1448 = $1447 >>> 8;\n        $1449 = $1448 & 255;\n        $1450 = (($1449) + ($1447))|0;\n        $1451 = $1450 >>> 8;\n        $1452 = $1451&255;\n        HEAP8[$1439>>0] = $1452;\n        $1453 = ((($$231010$i)) + 2|0);\n        $1454 = HEAP8[$1453>>0]|0;\n        $1455 = $1454&255;\n        $1456 = Math_imul($1455, $1426)|0;\n        $1457 = $1443 >>> 16;\n        $1458 = Math_imul($1457, $1430)|0;\n        $1459 = (($1456) + 128)|0;\n        $1460 = (($1459) + ($1458))|0;\n        $1461 = $1460 >>> 8;\n        $1462 = $1461 & 255;\n        $1463 = (($1462) + ($1460))|0;\n        $1464 = $1463 >>> 8;\n        $1465 = $1464&255;\n        HEAP8[$1453>>0] = $1465;\n       }\n       }\n       $1466 = (($$188401009$i) + 1)|0;\n       $1467 = ((($$231010$i)) + 4|0);\n       $exitcond1066$i = ($1466|0)==($610|0);\n       if ($exitcond1066$i) {\n        break L140;\n       } else {\n        $$188401009$i = $1466;$$231010$i = $1467;\n       }\n      }\n     }\n     if (!($1243)) {\n      break L140;\n     }\n     $1246 = ((($0)) + 464|0);\n     $1247 = ($$lobit$i|0)==(0);\n     $1248 = ((($0)) + 466|0);\n     $1249 = ((($0)) + 468|0);\n     $1250 = ((($0)) + 454|0);\n     $1251 = ((($0)) + 456|0);\n     if ($1247) {\n      $$178391005$us$i = 0;$$221006$us$i = $592;\n      while(1) {\n       $1252 = ((($$221006$us$i)) + 3|0);\n       $1253 = HEAP8[$1252>>0]|0;\n       switch ($1253<<24>>24) {\n       case -1:  {\n        $1262 = HEAP8[$$221006$us$i>>0]|0;\n        $1263 = $1262&255;\n        $1264 = (($594) + ($1263)|0);\n        $1265 = HEAP8[$1264>>0]|0;\n        HEAP8[$$221006$us$i>>0] = $1265;\n        $1266 = ((($$221006$us$i)) + 1|0);\n        $1267 = HEAP8[$1266>>0]|0;\n        $1268 = $1267&255;\n        $1269 = (($594) + ($1268)|0);\n        $1270 = HEAP8[$1269>>0]|0;\n        HEAP8[$1266>>0] = $1270;\n        $1271 = ((($$221006$us$i)) + 2|0);\n        $1272 = HEAP8[$1271>>0]|0;\n        $1273 = $1272&255;\n        $1274 = (($594) + ($1273)|0);\n        $1275 = HEAP8[$1274>>0]|0;\n        HEAP8[$1271>>0] = $1275;\n        break;\n       }\n       case 0:  {\n        $1254 = HEAP16[$1250>>1]|0;\n        $1255 = $1254&255;\n        HEAP8[$$221006$us$i>>0] = $1255;\n        $1256 = HEAP32[$1251>>2]|0;\n        $1257 = $1256&255;\n        $1258 = ((($$221006$us$i)) + 1|0);\n        HEAP8[$1258>>0] = $1257;\n        $1259 = $1256 >>> 16;\n        $1260 = $1259&255;\n        $1261 = ((($$221006$us$i)) + 2|0);\n        HEAP8[$1261>>0] = $1260;\n        break;\n       }\n       default: {\n        $1276 = HEAP8[$$221006$us$i>>0]|0;\n        $1277 = $1276&255;\n        $1278 = (($598) + ($1277)|0);\n        $1279 = HEAP8[$1278>>0]|0;\n        $1280 = $1279&255;\n        $1281 = $1253&255;\n        $1282 = Math_imul($1280, $1281)|0;\n        $1283 = HEAP16[$1246>>1]|0;\n        $1284 = $1283&65535;\n        $1285 = $1281 ^ 255;\n        $1286 = Math_imul($1284, $1285)|0;\n        $1287 = (($1282) + 128)|0;\n        $1288 = (($1287) + ($1286))|0;\n        $1289 = $1288 >>> 8;\n        $1290 = $1289 & 255;\n        $1291 = (($1290) + ($1288))|0;\n        $1292 = $1291 >>> 8;\n        $1293 = $1292 & 255;\n        $1294 = (($596) + ($1293)|0);\n        $1295 = HEAP8[$1294>>0]|0;\n        HEAP8[$$221006$us$i>>0] = $1295;\n        $1296 = ((($$221006$us$i)) + 1|0);\n        $1297 = HEAP8[$1296>>0]|0;\n        $1298 = $1297&255;\n        $1299 = (($598) + ($1298)|0);\n        $1300 = HEAP8[$1299>>0]|0;\n        $1301 = $1300&255;\n        $1302 = Math_imul($1301, $1281)|0;\n        $1303 = HEAP16[$1248>>1]|0;\n        $1304 = $1303&65535;\n        $1305 = Math_imul($1304, $1285)|0;\n        $1306 = (($1302) + 128)|0;\n        $1307 = (($1306) + ($1305))|0;\n        $1308 = $1307 >>> 8;\n        $1309 = $1308 & 255;\n        $1310 = (($1309) + ($1307))|0;\n        $1311 = $1310 >>> 8;\n        $1312 = $1311 & 255;\n        $1313 = (($596) + ($1312)|0);\n        $1314 = HEAP8[$1313>>0]|0;\n        HEAP8[$1296>>0] = $1314;\n        $1315 = ((($$221006$us$i)) + 2|0);\n        $1316 = HEAP8[$1315>>0]|0;\n        $1317 = $1316&255;\n        $1318 = (($598) + ($1317)|0);\n        $1319 = HEAP8[$1318>>0]|0;\n        $1320 = $1319&255;\n        $1321 = Math_imul($1320, $1281)|0;\n        $1322 = HEAP16[$1249>>1]|0;\n        $1323 = $1322&65535;\n        $1324 = Math_imul($1323, $1285)|0;\n        $1325 = (($1321) + 128)|0;\n        $1326 = (($1325) + ($1324))|0;\n        $1327 = $1326 >>> 8;\n        $1328 = $1327 & 255;\n        $1329 = (($1328) + ($1326))|0;\n        $1330 = $1329 >>> 8;\n        $1331 = $1330 & 255;\n        $1332 = (($596) + ($1331)|0);\n        $1333 = HEAP8[$1332>>0]|0;\n        HEAP8[$1315>>0] = $1333;\n       }\n       }\n       $1334 = (($$178391005$us$i) + 1)|0;\n       $1335 = ((($$221006$us$i)) + 4|0);\n       $exitcond1064$i = ($1334|0)==($610|0);\n       if ($exitcond1064$i) {\n        break L140;\n       } else {\n        $$178391005$us$i = $1334;$$221006$us$i = $1335;\n       }\n      }\n     } else {\n      $$178391005$i = 0;$$221006$i = $592;\n      while(1) {\n       $1336 = ((($$221006$i)) + 3|0);\n       $1337 = HEAP8[$1336>>0]|0;\n       switch ($1337<<24>>24) {\n       case -1:  {\n        $1338 = HEAP8[$$221006$i>>0]|0;\n        $1339 = $1338&255;\n        $1340 = (($594) + ($1339)|0);\n        $1341 = HEAP8[$1340>>0]|0;\n        HEAP8[$$221006$i>>0] = $1341;\n        $1342 = ((($$221006$i)) + 1|0);\n        $1343 = HEAP8[$1342>>0]|0;\n        $1344 = $1343&255;\n        $1345 = (($594) + ($1344)|0);\n        $1346 = HEAP8[$1345>>0]|0;\n        HEAP8[$1342>>0] = $1346;\n        $1347 = ((($$221006$i)) + 2|0);\n        $1348 = HEAP8[$1347>>0]|0;\n        $1349 = $1348&255;\n        $1350 = (($594) + ($1349)|0);\n        $1351 = HEAP8[$1350>>0]|0;\n        HEAP8[$1347>>0] = $1351;\n        break;\n       }\n       case 0:  {\n        $1352 = HEAP16[$1250>>1]|0;\n        $1353 = $1352&255;\n        HEAP8[$$221006$i>>0] = $1353;\n        $1354 = HEAP32[$1251>>2]|0;\n        $1355 = $1354&255;\n        $1356 = ((($$221006$i)) + 1|0);\n        HEAP8[$1356>>0] = $1355;\n        $1357 = $1354 >>> 16;\n        $1358 = $1357&255;\n        $1359 = ((($$221006$i)) + 2|0);\n        HEAP8[$1359>>0] = $1358;\n        break;\n       }\n       default: {\n        $1360 = HEAP8[$$221006$i>>0]|0;\n        $1361 = $1360&255;\n        $1362 = (($598) + ($1361)|0);\n        $1363 = HEAP8[$1362>>0]|0;\n        $1364 = $1363&255;\n        $1365 = $1337&255;\n        $1366 = Math_imul($1364, $1365)|0;\n        $1367 = HEAP16[$1246>>1]|0;\n        $1368 = $1367&65535;\n        $1369 = $1365 ^ 255;\n        $1370 = Math_imul($1368, $1369)|0;\n        $1371 = (($1366) + 128)|0;\n        $1372 = (($1371) + ($1370))|0;\n        $1373 = $1372 >>> 8;\n        $1374 = $1373 & 255;\n        $1375 = (($1374) + ($1372))|0;\n        $1376 = $1375 >>> 8;\n        $1377 = $1376&255;\n        HEAP8[$$221006$i>>0] = $1377;\n        $1378 = ((($$221006$i)) + 1|0);\n        $1379 = HEAP8[$1378>>0]|0;\n        $1380 = $1379&255;\n        $1381 = (($598) + ($1380)|0);\n        $1382 = HEAP8[$1381>>0]|0;\n        $1383 = $1382&255;\n        $1384 = Math_imul($1383, $1365)|0;\n        $1385 = HEAP16[$1248>>1]|0;\n        $1386 = $1385&65535;\n        $1387 = Math_imul($1386, $1369)|0;\n        $1388 = (($1384) + 128)|0;\n        $1389 = (($1388) + ($1387))|0;\n        $1390 = $1389 >>> 8;\n        $1391 = $1390 & 255;\n        $1392 = (($1391) + ($1389))|0;\n        $1393 = $1392 >>> 8;\n        $1394 = $1393&255;\n        HEAP8[$1378>>0] = $1394;\n        $1395 = ((($$221006$i)) + 2|0);\n        $1396 = HEAP8[$1395>>0]|0;\n        $1397 = $1396&255;\n        $1398 = (($598) + ($1397)|0);\n        $1399 = HEAP8[$1398>>0]|0;\n        $1400 = $1399&255;\n        $1401 = Math_imul($1400, $1365)|0;\n        $1402 = HEAP16[$1249>>1]|0;\n        $1403 = $1402&65535;\n        $1404 = Math_imul($1403, $1369)|0;\n        $1405 = (($1401) + 128)|0;\n        $1406 = (($1405) + ($1404))|0;\n        $1407 = $1406 >>> 8;\n        $1408 = $1407 & 255;\n        $1409 = (($1408) + ($1406))|0;\n        $1410 = $1409 >>> 8;\n        $1411 = $1410&255;\n        HEAP8[$1395>>0] = $1411;\n       }\n       }\n       $1412 = (($$178391005$i) + 1)|0;\n       $1413 = ((($$221006$i)) + 4|0);\n       $exitcond1065$i = ($1412|0)==($610|0);\n       if ($exitcond1065$i) {\n        break L140;\n       } else {\n        $$178391005$i = $1412;$$221006$i = $1413;\n       }\n      }\n     }\n    }\n    $1468 = ($600|0)!=(0|0);\n    $1469 = ($602|0)!=(0|0);\n    $or$cond13$i = $1468 & $1469;\n    $1470 = ($604|0)!=(0|0);\n    $or$cond15$i = $or$cond13$i & $1470;\n    $1471 = ($610|0)!=(0);\n    if (!($or$cond15$i)) {\n     if (!($1471)) {\n      break L140;\n     }\n     $1472 = ((($0)) + 454|0);\n     $1473 = ((($0)) + 456|0);\n     $$208421016$i = 0;$$251017$i = $592;\n     while(1) {\n      $1630 = ((($$251017$i)) + 6|0);\n      $1631 = HEAP8[$1630>>0]|0;\n      $1632 = $1631&255;\n      $1633 = $1632 << 8;\n      $1634 = ((($$251017$i)) + 7|0);\n      $1635 = HEAP8[$1634>>0]|0;\n      $1636 = $1635&255;\n      $1637 = $1633 | $1636;\n      $trunc$i = $1637&65535;\n      switch ($trunc$i<<16>>16) {\n      case 0:  {\n       $1638 = HEAP16[$1472>>1]|0;\n       $1639 = ($1638&65535) >>> 8;\n       $1640 = $1639&255;\n       HEAP8[$$251017$i>>0] = $1640;\n       $1641 = $1638&255;\n       $1642 = ((($$251017$i)) + 1|0);\n       HEAP8[$1642>>0] = $1641;\n       $1643 = HEAP32[$1473>>2]|0;\n       $1644 = $1643&65535;\n       $1645 = ($1644&65535) >>> 8;\n       $1646 = $1645&255;\n       $1647 = ((($$251017$i)) + 2|0);\n       HEAP8[$1647>>0] = $1646;\n       $1648 = $1643&255;\n       $1649 = ((($$251017$i)) + 3|0);\n       HEAP8[$1649>>0] = $1648;\n       $1650 = $1643 >>> 16;\n       $1651 = $1643 >>> 24;\n       $1652 = $1651&255;\n       $1653 = ((($$251017$i)) + 4|0);\n       HEAP8[$1653>>0] = $1652;\n       $1654 = $1650&255;\n       $1655 = ((($$251017$i)) + 5|0);\n       HEAP8[$1655>>0] = $1654;\n       break;\n      }\n      case -1:  {\n       break;\n      }\n      default: {\n       $1656 = HEAP8[$$251017$i>>0]|0;\n       $1657 = $1656&255;\n       $1658 = $1657 << 8;\n       $1659 = ((($$251017$i)) + 1|0);\n       $1660 = HEAP8[$1659>>0]|0;\n       $1661 = $1660&255;\n       $1662 = $1658 | $1661;\n       $1663 = ((($$251017$i)) + 2|0);\n       $1664 = HEAP8[$1663>>0]|0;\n       $1665 = $1664&255;\n       $1666 = $1665 << 8;\n       $1667 = ((($$251017$i)) + 3|0);\n       $1668 = HEAP8[$1667>>0]|0;\n       $1669 = $1668&255;\n       $1670 = $1666 | $1669;\n       $1671 = ((($$251017$i)) + 4|0);\n       $1672 = HEAP8[$1671>>0]|0;\n       $1673 = $1672&255;\n       $1674 = $1673 << 8;\n       $1675 = ((($$251017$i)) + 5|0);\n       $1676 = HEAP8[$1675>>0]|0;\n       $1677 = $1676&255;\n       $1678 = $1674 | $1677;\n       $1679 = Math_imul($1662, $1637)|0;\n       $1680 = HEAP16[$1472>>1]|0;\n       $1681 = $1680&65535;\n       $1682 = $1637 ^ 65535;\n       $1683 = Math_imul($1681, $1682)|0;\n       $1684 = (($1679) + 32768)|0;\n       $1685 = (($1684) + ($1683))|0;\n       $1686 = $1685 >>> 16;\n       $1687 = (($1686) + ($1685))|0;\n       $1688 = $1687 >>> 16;\n       $1689 = $1687 >>> 24;\n       $1690 = $1689&255;\n       HEAP8[$$251017$i>>0] = $1690;\n       $1691 = $1688&255;\n       HEAP8[$1659>>0] = $1691;\n       $1692 = Math_imul($1670, $1637)|0;\n       $1693 = HEAP32[$1473>>2]|0;\n       $1694 = $1693 & 65535;\n       $1695 = Math_imul($1694, $1682)|0;\n       $1696 = (($1692) + 32768)|0;\n       $1697 = (($1696) + ($1695))|0;\n       $1698 = $1697 >>> 16;\n       $1699 = (($1698) + ($1697))|0;\n       $1700 = $1699 >>> 16;\n       $1701 = $1699 >>> 24;\n       $1702 = $1701&255;\n       HEAP8[$1663>>0] = $1702;\n       $1703 = $1700&255;\n       HEAP8[$1667>>0] = $1703;\n       $1704 = Math_imul($1678, $1637)|0;\n       $1705 = $1693 >>> 16;\n       $1706 = Math_imul($1705, $1682)|0;\n       $1707 = (($1704) + 32768)|0;\n       $1708 = (($1707) + ($1706))|0;\n       $1709 = $1708 >>> 16;\n       $1710 = (($1709) + ($1708))|0;\n       $1711 = $1710 >>> 16;\n       $1712 = $1710 >>> 24;\n       $1713 = $1712&255;\n       HEAP8[$1671>>0] = $1713;\n       $1714 = $1711&255;\n       HEAP8[$1675>>0] = $1714;\n      }\n      }\n      $1715 = (($$208421016$i) + 1)|0;\n      $1716 = ((($$251017$i)) + 8|0);\n      $exitcond1068$i = ($1715|0)==($610|0);\n      if ($exitcond1068$i) {\n       break L140;\n      } else {\n       $$208421016$i = $1715;$$251017$i = $1716;\n      }\n     }\n    }\n    if (!($1471)) {\n     break L140;\n    }\n    $1474 = ((($0)) + 464|0);\n    $1475 = ($$lobit$i|0)==(0);\n    $1476 = ((($0)) + 466|0);\n    $1477 = ((($0)) + 468|0);\n    $1478 = ((($0)) + 454|0);\n    $1479 = ((($0)) + 456|0);\n    $$198411012$i = 0;$$241013$i = $592;\n    while(1) {\n     $1480 = ((($$241013$i)) + 6|0);\n     $1481 = HEAP8[$1480>>0]|0;\n     $1482 = $1481&255;\n     $1483 = $1482 << 8;\n     $1484 = ((($$241013$i)) + 7|0);\n     $1485 = HEAP8[$1484>>0]|0;\n     $1486 = $1485&255;\n     $1487 = $1483 | $1486;\n     $trunc898$i = $1487&65535;\n     switch ($trunc898$i<<16>>16) {\n     case -1:  {\n      $1488 = HEAP8[$$241013$i>>0]|0;\n      $1489 = $1488&255;\n      $1490 = ((($$241013$i)) + 1|0);\n      $1491 = HEAP8[$1490>>0]|0;\n      $1492 = $1491&255;\n      $1493 = $1492 >>> $606;\n      $1494 = (($600) + ($1493<<2)|0);\n      $1495 = HEAP32[$1494>>2]|0;\n      $1496 = (($1495) + ($1489<<1)|0);\n      $1497 = HEAP16[$1496>>1]|0;\n      $1498 = ($1497&65535) >>> 8;\n      $1499 = $1498&255;\n      HEAP8[$$241013$i>>0] = $1499;\n      $1500 = $1497&255;\n      HEAP8[$1490>>0] = $1500;\n      $1501 = ((($$241013$i)) + 2|0);\n      $1502 = HEAP8[$1501>>0]|0;\n      $1503 = $1502&255;\n      $1504 = ((($$241013$i)) + 3|0);\n      $1505 = HEAP8[$1504>>0]|0;\n      $1506 = $1505&255;\n      $1507 = $1506 >>> $606;\n      $1508 = (($600) + ($1507<<2)|0);\n      $1509 = HEAP32[$1508>>2]|0;\n      $1510 = (($1509) + ($1503<<1)|0);\n      $1511 = HEAP16[$1510>>1]|0;\n      $1512 = ($1511&65535) >>> 8;\n      $1513 = $1512&255;\n      HEAP8[$1501>>0] = $1513;\n      $1514 = $1511&255;\n      HEAP8[$1504>>0] = $1514;\n      $1515 = ((($$241013$i)) + 4|0);\n      $1516 = HEAP8[$1515>>0]|0;\n      $1517 = $1516&255;\n      $1518 = ((($$241013$i)) + 5|0);\n      $1519 = HEAP8[$1518>>0]|0;\n      $1520 = $1519&255;\n      $1521 = $1520 >>> $606;\n      $1522 = (($600) + ($1521<<2)|0);\n      $1523 = HEAP32[$1522>>2]|0;\n      $1524 = (($1523) + ($1517<<1)|0);\n      $1525 = HEAP16[$1524>>1]|0;\n      $1526 = ($1525&65535) >>> 8;\n      $1527 = $1526&255;\n      HEAP8[$1515>>0] = $1527;\n      $1528 = $1525&255;\n      HEAP8[$1518>>0] = $1528;\n      break;\n     }\n     case 0:  {\n      $1529 = HEAP16[$1478>>1]|0;\n      $1530 = ($1529&65535) >>> 8;\n      $1531 = $1530&255;\n      HEAP8[$$241013$i>>0] = $1531;\n      $1532 = $1529&255;\n      $1533 = ((($$241013$i)) + 1|0);\n      HEAP8[$1533>>0] = $1532;\n      $1534 = HEAP32[$1479>>2]|0;\n      $1535 = $1534&65535;\n      $1536 = ($1535&65535) >>> 8;\n      $1537 = $1536&255;\n      $1538 = ((($$241013$i)) + 2|0);\n      HEAP8[$1538>>0] = $1537;\n      $1539 = $1534&255;\n      $1540 = ((($$241013$i)) + 3|0);\n      HEAP8[$1540>>0] = $1539;\n      $1541 = $1534 >>> 16;\n      $1542 = $1534 >>> 24;\n      $1543 = $1542&255;\n      $1544 = ((($$241013$i)) + 4|0);\n      HEAP8[$1544>>0] = $1543;\n      $1545 = $1541&255;\n      $1546 = ((($$241013$i)) + 5|0);\n      HEAP8[$1546>>0] = $1545;\n      break;\n     }\n     default: {\n      $1547 = HEAP8[$$241013$i>>0]|0;\n      $1548 = $1547&255;\n      $1549 = ((($$241013$i)) + 1|0);\n      $1550 = HEAP8[$1549>>0]|0;\n      $1551 = $1550&255;\n      $1552 = $1551 >>> $606;\n      $1553 = (($604) + ($1552<<2)|0);\n      $1554 = HEAP32[$1553>>2]|0;\n      $1555 = (($1554) + ($1548<<1)|0);\n      $1556 = HEAP16[$1555>>1]|0;\n      $1557 = $1556&65535;\n      $1558 = Math_imul($1557, $1487)|0;\n      $1559 = HEAP16[$1474>>1]|0;\n      $1560 = $1559&65535;\n      $1561 = $1487 ^ 65535;\n      $1562 = Math_imul($1560, $1561)|0;\n      $1563 = (($1558) + 32768)|0;\n      $1564 = (($1563) + ($1562))|0;\n      $1565 = $1564 >>> 16;\n      $1566 = (($1565) + ($1564))|0;\n      $1567 = $1566 >>> 16;\n      $extract$t871$i = $1567&255;\n      $extract873875$i = $1566 >>> 24;\n      $extract$t874$i = $extract873875$i&255;\n      if ($1475) {\n       $1568 = $1567 & 255;\n       $1569 = $1568 >>> $606;\n       $1570 = (($602) + ($1569<<2)|0);\n       $1571 = HEAP32[$1570>>2]|0;\n       $1572 = (($1571) + ($extract873875$i<<1)|0);\n       $1573 = HEAP16[$1572>>1]|0;\n       $extract$t$i184 = $1573&255;\n       $extract$i185 = ($1573&65535) >>> 8;\n       $extract$t872$i = $extract$i185&255;\n       $$0858$off0$i = $extract$t$i184;$$0858$off8$i = $extract$t872$i;\n      } else {\n       $$0858$off0$i = $extract$t871$i;$$0858$off8$i = $extract$t874$i;\n      }\n      HEAP8[$$241013$i>>0] = $$0858$off8$i;\n      HEAP8[$1549>>0] = $$0858$off0$i;\n      $1574 = ((($$241013$i)) + 2|0);\n      $1575 = HEAP8[$1574>>0]|0;\n      $1576 = $1575&255;\n      $1577 = ((($$241013$i)) + 3|0);\n      $1578 = HEAP8[$1577>>0]|0;\n      $1579 = $1578&255;\n      $1580 = $1579 >>> $606;\n      $1581 = (($604) + ($1580<<2)|0);\n      $1582 = HEAP32[$1581>>2]|0;\n      $1583 = (($1582) + ($1576<<1)|0);\n      $1584 = HEAP16[$1583>>1]|0;\n      $1585 = $1584&65535;\n      $1586 = Math_imul($1585, $1487)|0;\n      $1587 = HEAP16[$1476>>1]|0;\n      $1588 = $1587&65535;\n      $1589 = Math_imul($1588, $1561)|0;\n      $1590 = (($1586) + 32768)|0;\n      $1591 = (($1590) + ($1589))|0;\n      $1592 = $1591 >>> 16;\n      $1593 = (($1592) + ($1591))|0;\n      $1594 = $1593 >>> 16;\n      $extract$t877$i = $1594&255;\n      $extract880882$i = $1593 >>> 24;\n      $extract$t881$i = $extract880882$i&255;\n      if ($1475) {\n       $1595 = $1594 & 255;\n       $1596 = $1595 >>> $606;\n       $1597 = (($602) + ($1596<<2)|0);\n       $1598 = HEAP32[$1597>>2]|0;\n       $1599 = (($1598) + ($extract880882$i<<1)|0);\n       $1600 = HEAP16[$1599>>1]|0;\n       $extract$t876$i = $1600&255;\n       $extract878$i = ($1600&65535) >>> 8;\n       $extract$t879$i = $extract878$i&255;\n       $$1859$off0$i = $extract$t876$i;$$1859$off8$i = $extract$t879$i;\n      } else {\n       $$1859$off0$i = $extract$t877$i;$$1859$off8$i = $extract$t881$i;\n      }\n      HEAP8[$1574>>0] = $$1859$off8$i;\n      HEAP8[$1577>>0] = $$1859$off0$i;\n      $1601 = ((($$241013$i)) + 4|0);\n      $1602 = HEAP8[$1601>>0]|0;\n      $1603 = $1602&255;\n      $1604 = ((($$241013$i)) + 5|0);\n      $1605 = HEAP8[$1604>>0]|0;\n      $1606 = $1605&255;\n      $1607 = $1606 >>> $606;\n      $1608 = (($604) + ($1607<<2)|0);\n      $1609 = HEAP32[$1608>>2]|0;\n      $1610 = (($1609) + ($1603<<1)|0);\n      $1611 = HEAP16[$1610>>1]|0;\n      $1612 = $1611&65535;\n      $1613 = Math_imul($1612, $1487)|0;\n      $1614 = HEAP16[$1477>>1]|0;\n      $1615 = $1614&65535;\n      $1616 = Math_imul($1615, $1561)|0;\n      $1617 = (($1613) + 32768)|0;\n      $1618 = (($1617) + ($1616))|0;\n      $1619 = $1618 >>> 16;\n      $1620 = (($1619) + ($1618))|0;\n      $1621 = $1620 >>> 16;\n      $extract$t884$i = $1621&255;\n      $extract887889$i = $1620 >>> 24;\n      $extract$t888$i = $extract887889$i&255;\n      if ($1475) {\n       $1622 = $1621 & 255;\n       $1623 = $1622 >>> $606;\n       $1624 = (($602) + ($1623<<2)|0);\n       $1625 = HEAP32[$1624>>2]|0;\n       $1626 = (($1625) + ($extract887889$i<<1)|0);\n       $1627 = HEAP16[$1626>>1]|0;\n       $extract$t883$i = $1627&255;\n       $extract885$i = ($1627&65535) >>> 8;\n       $extract$t886$i = $extract885$i&255;\n       $$2860$off0$i = $extract$t883$i;$$2860$off8$i = $extract$t886$i;\n      } else {\n       $$2860$off0$i = $extract$t884$i;$$2860$off8$i = $extract$t888$i;\n      }\n      HEAP8[$1601>>0] = $$2860$off8$i;\n      HEAP8[$1604>>0] = $$2860$off0$i;\n     }\n     }\n     $1628 = (($$198411012$i) + 1)|0;\n     $1629 = ((($$241013$i)) + 8|0);\n     $exitcond1067$i = ($1628|0)==($610|0);\n     if ($exitcond1067$i) {\n      break L140;\n     } else {\n      $$198411012$i = $1628;$$241013$i = $1629;\n     }\n    }\n    break;\n   }\n   default: {\n    break L140;\n   }\n   }\n  }\n } while(0);\n $1717 = HEAP32[$10>>2]|0;\n $1718 = $1717 & 6299648;\n $1719 = ($1718|0)==(8192);\n L378: do {\n  if ($1719) {\n   $1720 = $1717 & 128;\n   $1721 = ($1720|0)==(0);\n   if ($1721) {\n    $$phi$trans$insert = ((($0)) + 435|0);\n    $$pre333 = HEAP8[$$phi$trans$insert>>0]|0;\n    $1729 = $$pre333;\n   } else {\n    $1722 = ((($0)) + 428|0);\n    $1723 = HEAP16[$1722>>1]|0;\n    $1724 = ($1723<<16>>16)==(0);\n    if (!($1724)) {\n     break;\n    }\n    $1725 = ((($0)) + 435|0);\n    $1726 = HEAP8[$1725>>0]|0;\n    $1727 = $1726 & 4;\n    $1728 = ($1727<<24>>24)==(0);\n    if ($1728) {\n     $1729 = $1726;\n    } else {\n     break;\n    }\n   }\n   $1730 = ($1729<<24>>24)==(3);\n   if (!($1730)) {\n    $1731 = HEAP32[$3>>2]|0;\n    $1732 = ((($1731)) + 1|0);\n    $$idx = ((($0)) + 484|0);\n    $$idx$val = HEAP32[$$idx>>2]|0;\n    $$idx144 = ((($0)) + 492|0);\n    $$idx144$val = HEAP32[$$idx144>>2]|0;\n    $$idx145 = ((($0)) + 496|0);\n    $$idx145$val = HEAP32[$$idx145>>2]|0;\n    $1733 = HEAP32[$1>>2]|0;\n    $1734 = ((($1)) + 9|0);\n    $1735 = HEAP8[$1734>>0]|0;\n    $1736 = ($1735&255)<(9);\n    $1737 = ($$idx144$val|0)!=(0|0);\n    $or$cond$i207 = $1737 & $1736;\n    if (!($or$cond$i207)) {\n     $1738 = ($1735<<24>>24)==(16);\n     $1739 = ($$idx145$val|0)!=(0|0);\n     $or$cond3$i208 = $1739 & $1738;\n     if (!($or$cond3$i208)) {\n      break;\n     }\n    }\n    $1740 = ((($1)) + 8|0);\n    $1741 = HEAP16[$1740>>1]|0;\n    $1742 = $1741&255;\n    $1743 = ($1741&65535) >>> 8;\n    $1744 = $1743&255;\n    switch ($1742<<24>>24) {\n    case 2:  {\n     $1745 = ($1744<<24>>24)==(8);\n     $1746 = ($1733|0)!=(0);\n     if ($1745) {\n      if ($1746) {\n       $$019$i = $1732;$$022718$i = 0;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1747 = HEAP8[$$019$i>>0]|0;\n       $1748 = $1747&255;\n       $1749 = (($$idx144$val) + ($1748)|0);\n       $1750 = HEAP8[$1749>>0]|0;\n       HEAP8[$$019$i>>0] = $1750;\n       $1751 = ((($$019$i)) + 1|0);\n       $1752 = HEAP8[$1751>>0]|0;\n       $1753 = $1752&255;\n       $1754 = (($$idx144$val) + ($1753)|0);\n       $1755 = HEAP8[$1754>>0]|0;\n       HEAP8[$1751>>0] = $1755;\n       $1756 = ((($$019$i)) + 2|0);\n       $1757 = HEAP8[$1756>>0]|0;\n       $1758 = $1757&255;\n       $1759 = (($$idx144$val) + ($1758)|0);\n       $1760 = HEAP8[$1759>>0]|0;\n       HEAP8[$1756>>0] = $1760;\n       $1761 = ((($$019$i)) + 3|0);\n       $1762 = (($$022718$i) + 1)|0;\n       $exitcond$i210 = ($1762|0)==($1733|0);\n       if ($exitcond$i210) {\n        break;\n       } else {\n        $$019$i = $1761;$$022718$i = $1762;\n       }\n      }\n     } else {\n      if ($1746) {\n       $$121$i = $1732;$$122820$i = 0;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1763 = HEAP8[$$121$i>>0]|0;\n       $1764 = $1763&255;\n       $1765 = ((($$121$i)) + 1|0);\n       $1766 = HEAP8[$1765>>0]|0;\n       $1767 = $1766&255;\n       $1768 = $1767 >>> $$idx$val;\n       $1769 = (($$idx145$val) + ($1768<<2)|0);\n       $1770 = HEAP32[$1769>>2]|0;\n       $1771 = (($1770) + ($1764<<1)|0);\n       $1772 = HEAP16[$1771>>1]|0;\n       $1773 = ($1772&65535) >>> 8;\n       $1774 = $1773&255;\n       HEAP8[$$121$i>>0] = $1774;\n       $1775 = $1772&255;\n       HEAP8[$1765>>0] = $1775;\n       $1776 = ((($$121$i)) + 2|0);\n       $1777 = HEAP8[$1776>>0]|0;\n       $1778 = $1777&255;\n       $1779 = ((($$121$i)) + 3|0);\n       $1780 = HEAP8[$1779>>0]|0;\n       $1781 = $1780&255;\n       $1782 = $1781 >>> $$idx$val;\n       $1783 = (($$idx145$val) + ($1782<<2)|0);\n       $1784 = HEAP32[$1783>>2]|0;\n       $1785 = (($1784) + ($1778<<1)|0);\n       $1786 = HEAP16[$1785>>1]|0;\n       $1787 = ($1786&65535) >>> 8;\n       $1788 = $1787&255;\n       HEAP8[$1776>>0] = $1788;\n       $1789 = $1786&255;\n       HEAP8[$1779>>0] = $1789;\n       $1790 = ((($$121$i)) + 4|0);\n       $1791 = HEAP8[$1790>>0]|0;\n       $1792 = $1791&255;\n       $1793 = ((($$121$i)) + 5|0);\n       $1794 = HEAP8[$1793>>0]|0;\n       $1795 = $1794&255;\n       $1796 = $1795 >>> $$idx$val;\n       $1797 = (($$idx145$val) + ($1796<<2)|0);\n       $1798 = HEAP32[$1797>>2]|0;\n       $1799 = (($1798) + ($1792<<1)|0);\n       $1800 = HEAP16[$1799>>1]|0;\n       $1801 = ($1800&65535) >>> 8;\n       $1802 = $1801&255;\n       HEAP8[$1790>>0] = $1802;\n       $1803 = $1800&255;\n       HEAP8[$1793>>0] = $1803;\n       $1804 = ((($$121$i)) + 6|0);\n       $1805 = (($$122820$i) + 1)|0;\n       $exitcond55$i = ($1805|0)==($1733|0);\n       if ($exitcond55$i) {\n        break;\n       } else {\n        $$121$i = $1804;$$122820$i = $1805;\n       }\n      }\n     }\n     break;\n    }\n    case 6:  {\n     $1806 = ($1744<<24>>24)==(8);\n     $1807 = ($1733|0)!=(0);\n     if ($1806) {\n      if ($1807) {\n       $$222923$i = 0;$$224$i = $1732;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1808 = HEAP8[$$224$i>>0]|0;\n       $1809 = $1808&255;\n       $1810 = (($$idx144$val) + ($1809)|0);\n       $1811 = HEAP8[$1810>>0]|0;\n       HEAP8[$$224$i>>0] = $1811;\n       $1812 = ((($$224$i)) + 1|0);\n       $1813 = HEAP8[$1812>>0]|0;\n       $1814 = $1813&255;\n       $1815 = (($$idx144$val) + ($1814)|0);\n       $1816 = HEAP8[$1815>>0]|0;\n       HEAP8[$1812>>0] = $1816;\n       $1817 = ((($$224$i)) + 2|0);\n       $1818 = HEAP8[$1817>>0]|0;\n       $1819 = $1818&255;\n       $1820 = (($$idx144$val) + ($1819)|0);\n       $1821 = HEAP8[$1820>>0]|0;\n       HEAP8[$1817>>0] = $1821;\n       $1822 = ((($$224$i)) + 4|0);\n       $1823 = (($$222923$i) + 1)|0;\n       $exitcond56$i = ($1823|0)==($1733|0);\n       if ($exitcond56$i) {\n        break;\n       } else {\n        $$222923$i = $1823;$$224$i = $1822;\n       }\n      }\n     } else {\n      if ($1807) {\n       $$323026$i = 0;$$327$i = $1732;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1824 = HEAP8[$$327$i>>0]|0;\n       $1825 = $1824&255;\n       $1826 = ((($$327$i)) + 1|0);\n       $1827 = HEAP8[$1826>>0]|0;\n       $1828 = $1827&255;\n       $1829 = $1828 >>> $$idx$val;\n       $1830 = (($$idx145$val) + ($1829<<2)|0);\n       $1831 = HEAP32[$1830>>2]|0;\n       $1832 = (($1831) + ($1825<<1)|0);\n       $1833 = HEAP16[$1832>>1]|0;\n       $1834 = ($1833&65535) >>> 8;\n       $1835 = $1834&255;\n       HEAP8[$$327$i>>0] = $1835;\n       $1836 = $1833&255;\n       HEAP8[$1826>>0] = $1836;\n       $1837 = ((($$327$i)) + 2|0);\n       $1838 = HEAP8[$1837>>0]|0;\n       $1839 = $1838&255;\n       $1840 = ((($$327$i)) + 3|0);\n       $1841 = HEAP8[$1840>>0]|0;\n       $1842 = $1841&255;\n       $1843 = $1842 >>> $$idx$val;\n       $1844 = (($$idx145$val) + ($1843<<2)|0);\n       $1845 = HEAP32[$1844>>2]|0;\n       $1846 = (($1845) + ($1839<<1)|0);\n       $1847 = HEAP16[$1846>>1]|0;\n       $1848 = ($1847&65535) >>> 8;\n       $1849 = $1848&255;\n       HEAP8[$1837>>0] = $1849;\n       $1850 = $1847&255;\n       HEAP8[$1840>>0] = $1850;\n       $1851 = ((($$327$i)) + 4|0);\n       $1852 = HEAP8[$1851>>0]|0;\n       $1853 = $1852&255;\n       $1854 = ((($$327$i)) + 5|0);\n       $1855 = HEAP8[$1854>>0]|0;\n       $1856 = $1855&255;\n       $1857 = $1856 >>> $$idx$val;\n       $1858 = (($$idx145$val) + ($1857<<2)|0);\n       $1859 = HEAP32[$1858>>2]|0;\n       $1860 = (($1859) + ($1853<<1)|0);\n       $1861 = HEAP16[$1860>>1]|0;\n       $1862 = ($1861&65535) >>> 8;\n       $1863 = $1862&255;\n       HEAP8[$1851>>0] = $1863;\n       $1864 = $1861&255;\n       HEAP8[$1854>>0] = $1864;\n       $1865 = ((($$327$i)) + 8|0);\n       $1866 = (($$323026$i) + 1)|0;\n       $exitcond57$i = ($1866|0)==($1733|0);\n       if ($exitcond57$i) {\n        break;\n       } else {\n        $$323026$i = $1866;$$327$i = $1865;\n       }\n      }\n     }\n     break;\n    }\n    case 4:  {\n     $1867 = ($1744<<24>>24)==(8);\n     $1868 = ($1733|0)!=(0);\n     if ($1867) {\n      if ($1868) {\n       $$423129$i = 0;$$430$i = $1732;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1869 = HEAP8[$$430$i>>0]|0;\n       $1870 = $1869&255;\n       $1871 = (($$idx144$val) + ($1870)|0);\n       $1872 = HEAP8[$1871>>0]|0;\n       HEAP8[$$430$i>>0] = $1872;\n       $1873 = ((($$430$i)) + 2|0);\n       $1874 = (($$423129$i) + 1)|0;\n       $exitcond58$i = ($1874|0)==($1733|0);\n       if ($exitcond58$i) {\n        break;\n       } else {\n        $$423129$i = $1874;$$430$i = $1873;\n       }\n      }\n     } else {\n      if ($1868) {\n       $$523232$i = 0;$$533$i = $1732;\n      } else {\n       break L378;\n      }\n      while(1) {\n       $1875 = HEAP8[$$533$i>>0]|0;\n       $1876 = $1875&255;\n       $1877 = ((($$533$i)) + 1|0);\n       $1878 = HEAP8[$1877>>0]|0;\n       $1879 = $1878&255;\n       $1880 = $1879 >>> $$idx$val;\n       $1881 = (($$idx145$val) + ($1880<<2)|0);\n       $1882 = HEAP32[$1881>>2]|0;\n       $1883 = (($1882) + ($1876<<1)|0);\n       $1884 = HEAP16[$1883>>1]|0;\n       $1885 = ($1884&65535) >>> 8;\n       $1886 = $1885&255;\n       HEAP8[$$533$i>>0] = $1886;\n       $1887 = $1884&255;\n       HEAP8[$1877>>0] = $1887;\n       $1888 = ((($$533$i)) + 4|0);\n       $1889 = (($$523232$i) + 1)|0;\n       $exitcond59$i = ($1889|0)==($1733|0);\n       if ($exitcond59$i) {\n        break;\n       } else {\n        $$523232$i = $1889;$$533$i = $1888;\n       }\n      }\n     }\n     break;\n    }\n    case 0:  {\n     $1890 = ($1744<<24>>24)==(2);\n     if ($1890) {\n      $1891 = ($1733|0)==(0);\n      if ($1891) {\n       break L378;\n      } else {\n       $$623344$i = 0;$$645$i = $1732;\n      }\n      while(1) {\n       $1892 = HEAP8[$$645$i>>0]|0;\n       $1893 = $1892&255;\n       $1894 = $1893 & 192;\n       $1895 = $1893 & 48;\n       $1896 = $1893 & 12;\n       $1897 = $1893 & 3;\n       $1898 = $1894 >>> 2;\n       $1899 = $1894 >>> 4;\n       $1900 = $1893 >>> 6;\n       $1901 = $1900 | $1894;\n       $1902 = $1901 | $1898;\n       $1903 = $1902 | $1899;\n       $1904 = (($$idx144$val) + ($1903)|0);\n       $1905 = HEAP8[$1904>>0]|0;\n       $1906 = $1905&255;\n       $1907 = $1906 & 192;\n       $1908 = $1895 << 2;\n       $1909 = $1908 | $1895;\n       $1910 = $1895 >>> 2;\n       $1911 = $1909 | $1910;\n       $1912 = $1895 >>> 4;\n       $1913 = $1911 | $1912;\n       $1914 = (($$idx144$val) + ($1913)|0);\n       $1915 = HEAP8[$1914>>0]|0;\n       $1916 = $1915&255;\n       $1917 = $1916 >>> 2;\n       $1918 = $1917 & 48;\n       $1919 = $1918 | $1907;\n       $1920 = $1896 << 4;\n       $1921 = $1896 << 2;\n       $1922 = $1896 >>> 2;\n       $1923 = $1921 | $1896;\n       $1924 = $1923 | $1920;\n       $1925 = $1924 | $1922;\n       $1926 = (($$idx144$val) + ($1925)|0);\n       $1927 = HEAP8[$1926>>0]|0;\n       $1928 = $1927&255;\n       $1929 = $1928 >>> 4;\n       $1930 = $1929 & 12;\n       $1931 = $1919 | $1930;\n       $1932 = $1897 << 6;\n       $1933 = $1897 << 4;\n       $1934 = $1897 << 2;\n       $1935 = $1933 | $1897;\n       $1936 = $1935 | $1932;\n       $1937 = $1936 | $1934;\n       $1938 = (($$idx144$val) + ($1937)|0);\n       $1939 = HEAP8[$1938>>0]|0;\n       $1940 = $1939&255;\n       $1941 = $1940 >>> 6;\n       $1942 = $1931 | $1941;\n       $1943 = $1942&255;\n       HEAP8[$$645$i>>0] = $1943;\n       $1944 = ((($$645$i)) + 1|0);\n       $1945 = (($$623344$i) + 4)|0;\n       $1946 = ($1945>>>0)<($1733>>>0);\n       if ($1946) {\n        $$623344$i = $1945;$$645$i = $1944;\n       } else {\n        break;\n       }\n      }\n      $$pr$pre$i = HEAP8[$1734>>0]|0;\n      $1947 = $$pr$pre$i;\n     } else {\n      $1947 = $1744;\n     }\n     switch ($1947<<24>>24) {\n     case 4:  {\n      $1950 = ($1733|0)==(0);\n      if ($1950) {\n       break L378;\n      } else {\n       $$723435$i = 0;$$736$i = $1732;\n      }\n      while(1) {\n       $1951 = HEAP8[$$736$i>>0]|0;\n       $1952 = $1951&255;\n       $1953 = $1952 & 240;\n       $1954 = $1952 & 15;\n       $1955 = $1952 >>> 4;\n       $1956 = $1953 | $1955;\n       $1957 = (($$idx144$val) + ($1956)|0);\n       $1958 = HEAP8[$1957>>0]|0;\n       $1959 = $1958&255;\n       $1960 = $1959 & 240;\n       $1961 = $1954 << 4;\n       $1962 = $1961 | $1954;\n       $1963 = (($$idx144$val) + ($1962)|0);\n       $1964 = HEAP8[$1963>>0]|0;\n       $1965 = $1964&255;\n       $1966 = $1965 >>> 4;\n       $1967 = $1966 | $1960;\n       $1968 = $1967&255;\n       HEAP8[$$736$i>>0] = $1968;\n       $1969 = ((($$736$i)) + 1|0);\n       $1970 = (($$723435$i) + 2)|0;\n       $1971 = ($1970>>>0)<($1733>>>0);\n       if ($1971) {\n        $$723435$i = $1970;$$736$i = $1969;\n       } else {\n        break;\n       }\n      }\n      break;\n     }\n     case 8:  {\n      $1949 = ($1733|0)==(0);\n      if ($1949) {\n       break L378;\n      } else {\n       $$823538$i = 0;$$839$i = $1732;\n      }\n      while(1) {\n       $1972 = HEAP8[$$839$i>>0]|0;\n       $1973 = $1972&255;\n       $1974 = (($$idx144$val) + ($1973)|0);\n       $1975 = HEAP8[$1974>>0]|0;\n       HEAP8[$$839$i>>0] = $1975;\n       $1976 = ((($$839$i)) + 1|0);\n       $1977 = (($$823538$i) + 1)|0;\n       $exitcond60$i = ($1977|0)==($1733|0);\n       if ($exitcond60$i) {\n        break;\n       } else {\n        $$823538$i = $1977;$$839$i = $1976;\n       }\n      }\n      break;\n     }\n     case 16:  {\n      $1948 = ($1733|0)==(0);\n      if ($1948) {\n       break L378;\n      } else {\n       $$923641$i = 0;$$942$i = $1732;\n      }\n      while(1) {\n       $1978 = HEAP8[$$942$i>>0]|0;\n       $1979 = $1978&255;\n       $1980 = ((($$942$i)) + 1|0);\n       $1981 = HEAP8[$1980>>0]|0;\n       $1982 = $1981&255;\n       $1983 = $1982 >>> $$idx$val;\n       $1984 = (($$idx145$val) + ($1983<<2)|0);\n       $1985 = HEAP32[$1984>>2]|0;\n       $1986 = (($1985) + ($1979<<1)|0);\n       $1987 = HEAP16[$1986>>1]|0;\n       $1988 = ($1987&65535) >>> 8;\n       $1989 = $1988&255;\n       HEAP8[$$942$i>>0] = $1989;\n       $1990 = $1987&255;\n       HEAP8[$1980>>0] = $1990;\n       $1991 = ((($$942$i)) + 2|0);\n       $1992 = (($$923641$i) + 1)|0;\n       $exitcond61$i = ($1992|0)==($1733|0);\n       if ($exitcond61$i) {\n        break;\n       } else {\n        $$923641$i = $1992;$$942$i = $1991;\n       }\n      }\n      break;\n     }\n     default: {\n      break L378;\n     }\n     }\n     break;\n    }\n    default: {\n     break L378;\n    }\n    }\n   }\n  }\n } while(0);\n $1993 = HEAP32[$10>>2]|0;\n $1994 = $1993 & 262272;\n $1995 = ($1994|0)==(262272);\n L432: do {\n  if ($1995) {\n   $1996 = ((($1)) + 8|0);\n   $1997 = HEAP8[$1996>>0]|0;\n   switch ($1997<<24>>24) {\n   case 4: case 6:  {\n    break;\n   }\n   default: {\n    $2001 = $1993;\n    break L432;\n   }\n   }\n   $1998 = HEAP32[$3>>2]|0;\n   $1999 = ((($1998)) + 1|0);\n   _png_do_strip_channel($1,$1999,0);\n   $$pre334 = HEAP32[$10>>2]|0;\n   $2001 = $$pre334;\n  } else {\n   $2001 = $1993;\n  }\n } while(0);\n $2000 = $2001 & 8388608;\n $2002 = ($2000|0)==(0);\n L436: do {\n  if (!($2002)) {\n   $2003 = ((($1)) + 8|0);\n   $2004 = HEAP8[$2003>>0]|0;\n   $2005 = $2004 & 4;\n   $2006 = ($2005<<24>>24)==(0);\n   if (!($2006)) {\n    $2007 = HEAP32[$3>>2]|0;\n    $2008 = ((($2007)) + 1|0);\n    $2009 = HEAP32[$1>>2]|0;\n    $2010 = HEAP16[$2003>>1]|0;\n    $2011 = $2010&65535;\n    $2012 = $2011 & 4;\n    $2013 = ($2012|0)==(0);\n    L439: do {\n     if (!($2013)) {\n      $2014 = ($2010&65535) >>> 8;\n      $2015 = $2014&255;\n      switch ($2015<<24>>24) {\n      case 8:  {\n       $2016 = ((($0)) + 500|0);\n       $2017 = HEAP32[$2016>>2]|0;\n       $2018 = ($2017|0)==(0|0);\n       if ($2018) {\n        break L439;\n       }\n       $2019 = $2011 & 2;\n       $2020 = (($2019) + 2)|0;\n       $2021 = ($2009|0)==(0);\n       if ($2021) {\n        break L436;\n       }\n       $2022 = $2019 | 1;\n       $2023 = (($2008) + ($2022)|0);\n       $$05056$i = $2009;$$057$i = $2023;\n       while(1) {\n        $2024 = HEAP8[$$057$i>>0]|0;\n        $2025 = $2024&255;\n        $2026 = (($2017) + ($2025)|0);\n        $2027 = HEAP8[$2026>>0]|0;\n        HEAP8[$$057$i>>0] = $2027;\n        $2028 = (($$05056$i) + -1)|0;\n        $2029 = (($$057$i) + ($2020)|0);\n        $2030 = ($2028|0)==(0);\n        if ($2030) {\n         break L436;\n        } else {\n         $$05056$i = $2028;$$057$i = $2029;\n        }\n       }\n       break;\n      }\n      case 16:  {\n       $2031 = ((($0)) + 508|0);\n       $2032 = HEAP32[$2031>>2]|0;\n       $2033 = ((($0)) + 484|0);\n       $2034 = HEAP32[$2033>>2]|0;\n       $2035 = ($2032|0)==(0|0);\n       if ($2035) {\n        break L439;\n       }\n       $2036 = $2011 << 1;\n       $2037 = $2036 & 4;\n       $2038 = (($2037) + 4)|0;\n       $2039 = ($2009|0)==(0);\n       if ($2039) {\n        break L436;\n       }\n       $2040 = $2037 | 2;\n       $2041 = (($2008) + ($2040)|0);\n       $$15158$i = $2009;$$159$i = $2041;\n       while(1) {\n        $2042 = HEAP8[$$159$i>>0]|0;\n        $2043 = $2042&255;\n        $2044 = ((($$159$i)) + 1|0);\n        $2045 = HEAP8[$2044>>0]|0;\n        $2046 = $2045&255;\n        $2047 = $2046 >>> $2034;\n        $2048 = (($2032) + ($2047<<2)|0);\n        $2049 = HEAP32[$2048>>2]|0;\n        $2050 = (($2049) + ($2043<<1)|0);\n        $2051 = HEAP16[$2050>>1]|0;\n        $2052 = ($2051&65535) >>> 8;\n        $2053 = $2052&255;\n        HEAP8[$$159$i>>0] = $2053;\n        $2054 = $2051&255;\n        HEAP8[$2044>>0] = $2054;\n        $2055 = (($$15158$i) + -1)|0;\n        $2056 = (($$159$i) + ($2038)|0);\n        $2057 = ($2055|0)==(0);\n        if ($2057) {\n         break L436;\n        } else {\n         $$15158$i = $2055;$$159$i = $2056;\n        }\n       }\n       break;\n      }\n      default: {\n       break L439;\n      }\n      }\n     }\n    } while(0);\n    _png_warning($0,26067);\n   }\n  }\n } while(0);\n $2058 = HEAP32[$10>>2]|0;\n $2059 = $2058 & 67108864;\n $2060 = ($2059|0)==(0);\n if ($2060) {\n  $2093 = $2058;\n } else {\n  $2061 = HEAP32[$3>>2]|0;\n  $2062 = ((($2061)) + 1|0);\n  $2063 = ((($1)) + 9|0);\n  $2064 = HEAP8[$2063>>0]|0;\n  $2065 = ($2064<<24>>24)==(16);\n  if ($2065) {\n   $2066 = ((($1)) + 4|0);\n   $2067 = HEAP32[$2066>>2]|0;\n   $2068 = (($2062) + ($2067)|0);\n   $2069 = ($2067|0)>(0);\n   if ($2069) {\n    $$02526$i = $2062;$$027$i = $2062;\n    while(1) {\n     $2070 = ((($$027$i)) + 1|0);\n     $2071 = HEAP8[$$027$i>>0]|0;\n     $2072 = $2071&255;\n     $2073 = ((($$027$i)) + 2|0);\n     $2074 = HEAP8[$2070>>0]|0;\n     $2075 = $2074&255;\n     $2076 = (($2075) - ($2072))|0;\n     $2077 = ($2076*65535)|0;\n     $2078 = (($2077) + 8388480)|0;\n     $2079 = $2078 >>> 24;\n     $2080 = (($2079) + ($2072))|0;\n     $2081 = $2080&255;\n     $2082 = ((($$02526$i)) + 1|0);\n     HEAP8[$$02526$i>>0] = $2081;\n     $2083 = ($2073>>>0)<($2068>>>0);\n     if ($2083) {\n      $$02526$i = $2082;$$027$i = $2073;\n     } else {\n      break;\n     }\n    }\n    $$pre335$pre = HEAP32[$10>>2]|0;\n    $$pre335 = $$pre335$pre;\n   } else {\n    $$pre335 = $2058;\n   }\n   HEAP8[$2063>>0] = 8;\n   $2084 = ((($1)) + 10|0);\n   $2085 = HEAP8[$2084>>0]|0;\n   $2086 = $2085&255;\n   $2087 = $2086 << 3;\n   $2088 = $2087&255;\n   $2089 = ((($1)) + 11|0);\n   HEAP8[$2089>>0] = $2088;\n   $2090 = HEAP32[$1>>2]|0;\n   $2091 = Math_imul($2090, $2086)|0;\n   HEAP32[$2066>>2] = $2091;\n   $2093 = $$pre335;\n  } else {\n   $2093 = $2058;\n  }\n }\n $2092 = $2093 & 1024;\n $2094 = ($2092|0)==(0);\n if ($2094) {\n  $2117 = $2093;\n } else {\n  $2095 = HEAP32[$3>>2]|0;\n  $2096 = ((($2095)) + 1|0);\n  $2097 = ((($1)) + 9|0);\n  $2098 = HEAP8[$2097>>0]|0;\n  $2099 = ($2098<<24>>24)==(16);\n  if ($2099) {\n   $2100 = ((($1)) + 4|0);\n   $2101 = HEAP32[$2100>>2]|0;\n   $2102 = (($2096) + ($2101)|0);\n   $2103 = ($2101|0)>(0);\n   if ($2103) {\n    $$02122$i = $2096;$$023$i = $2096;\n    while(1) {\n     $2104 = HEAP8[$$023$i>>0]|0;\n     $2105 = ((($$02122$i)) + 1|0);\n     HEAP8[$$02122$i>>0] = $2104;\n     $2106 = ((($$023$i)) + 2|0);\n     $2107 = ($2106>>>0)<($2102>>>0);\n     if ($2107) {\n      $$02122$i = $2105;$$023$i = $2106;\n     } else {\n      break;\n     }\n    }\n    $$pre336$pre = HEAP32[$10>>2]|0;\n    $$pre336 = $$pre336$pre;\n   } else {\n    $$pre336 = $2093;\n   }\n   HEAP8[$2097>>0] = 8;\n   $2108 = ((($1)) + 10|0);\n   $2109 = HEAP8[$2108>>0]|0;\n   $2110 = $2109&255;\n   $2111 = $2110 << 3;\n   $2112 = $2111&255;\n   $2113 = ((($1)) + 11|0);\n   HEAP8[$2113>>0] = $2112;\n   $2114 = HEAP32[$1>>2]|0;\n   $2115 = Math_imul($2114, $2110)|0;\n   HEAP32[$2100>>2] = $2115;\n   $2117 = $$pre336;\n  } else {\n   $2117 = $2093;\n  }\n }\n $2116 = $2117 & 64;\n $2118 = ($2116|0)==(0);\n do {\n  if ($2118) {\n   $2216 = $2117;\n  } else {\n   $2119 = HEAP32[$3>>2]|0;\n   $2120 = ((($2119)) + 1|0);\n   $2121 = ((($0)) + 612|0);\n   $2122 = HEAP32[$2121>>2]|0;\n   $2123 = ((($0)) + 616|0);\n   $2124 = HEAP32[$2123>>2]|0;\n   $2125 = HEAP32[$1>>2]|0;\n   $2126 = ((($1)) + 9|0);\n   $2127 = HEAP8[$2126>>0]|0;\n   $2128 = ($2127<<24>>24)==(8);\n   L474: do {\n    if ($2128) {\n     $2129 = ((($1)) + 8|0);\n     $2130 = HEAP16[$2129>>1]|0;\n     $2131 = $2130&255;\n     $2132 = ($2131<<24>>24)==(2);\n     $2133 = ($2122|0)!=(0|0);\n     $or$cond$i190 = $2133 & $2132;\n     $2134 = ($2130&65535) >>> 8;\n     $2135 = $2134&255;\n     if ($or$cond$i190) {\n      $2136 = ($2125|0)==(0);\n      if ($2136) {\n       $2159 = $2135;\n      } else {\n       $$08896$i = $2120;$$09095$i = 0;$$097$i = $2120;\n       while(1) {\n        $2137 = ((($$097$i)) + 1|0);\n        $2138 = HEAP8[$$097$i>>0]|0;\n        $2139 = $2138&255;\n        $2140 = ((($$097$i)) + 2|0);\n        $2141 = HEAP8[$2137>>0]|0;\n        $2142 = $2141&255;\n        $2143 = ((($$097$i)) + 3|0);\n        $2144 = HEAP8[$2140>>0]|0;\n        $2145 = $2144&255;\n        $2146 = $2139 >>> 3;\n        $2147 = $2146 << 10;\n        $2148 = $2142 >>> 3;\n        $2149 = $2148 << 5;\n        $2150 = $2149 | $2147;\n        $2151 = $2145 >>> 3;\n        $2152 = $2150 | $2151;\n        $2153 = (($2122) + ($2152)|0);\n        $2154 = HEAP8[$2153>>0]|0;\n        $2155 = ((($$08896$i)) + 1|0);\n        HEAP8[$$08896$i>>0] = $2154;\n        $2156 = (($$09095$i) + 1)|0;\n        $exitcond$i192 = ($2156|0)==($2125|0);\n        if ($exitcond$i192) {\n         break;\n        } else {\n         $$08896$i = $2155;$$09095$i = $2156;$$097$i = $2143;\n        }\n       }\n       $$pre109$i = HEAP8[$2126>>0]|0;\n       $2159 = $$pre109$i;\n      }\n      HEAP8[$2129>>0] = 3;\n      $2157 = ((($1)) + 10|0);\n      HEAP8[$2157>>0] = 1;\n      $2158 = ((($1)) + 11|0);\n      HEAP8[$2158>>0] = $2159;\n      $2160 = $2159&255;\n      $2161 = ($2159&255)>(7);\n      if ($2161) {\n       $2162 = $2160 >>> 3;\n       $2163 = Math_imul($2162, $2125)|0;\n       $2168 = $2163;\n      } else {\n       $2164 = Math_imul($2160, $2125)|0;\n       $2165 = (($2164) + 7)|0;\n       $2166 = $2165 >>> 3;\n       $2168 = $2166;\n      }\n      $2167 = ((($1)) + 4|0);\n      HEAP32[$2167>>2] = $2168;\n      break;\n     }\n     $2169 = ($2131<<24>>24)==(6);\n     $or$cond3$i196 = $2133 & $2169;\n     if (!($or$cond3$i196)) {\n      $2203 = ($2131<<24>>24)==(3);\n      $2204 = ($2124|0)!=(0|0);\n      $or$cond5$i198 = $2204 & $2203;\n      $2205 = ($2125|0)!=(0);\n      $or$cond106$i = $2205 & $or$cond5$i198;\n      if ($or$cond106$i) {\n       $$2104$i199 = $2120;$$292103$i = 0;\n      } else {\n       break;\n      }\n      while(1) {\n       $2206 = HEAP8[$$2104$i199>>0]|0;\n       $2207 = $2206&255;\n       $2208 = (($2124) + ($2207)|0);\n       $2209 = HEAP8[$2208>>0]|0;\n       HEAP8[$$2104$i199>>0] = $2209;\n       $2210 = (($$292103$i) + 1)|0;\n       $2211 = ((($$2104$i199)) + 1|0);\n       $exitcond108$i = ($2210|0)==($2125|0);\n       if ($exitcond108$i) {\n        break L474;\n       } else {\n        $$2104$i199 = $2211;$$292103$i = $2210;\n       }\n      }\n     }\n     $2170 = ($2125|0)==(0);\n     if ($2170) {\n      $2193 = $2135;\n     } else {\n      $$1100$i = $2120;$$18999$i = $2120;$$19198$i = 0;\n      while(1) {\n       $2171 = ((($$1100$i)) + 1|0);\n       $2172 = HEAP8[$$1100$i>>0]|0;\n       $2173 = $2172&255;\n       $2174 = ((($$1100$i)) + 2|0);\n       $2175 = HEAP8[$2171>>0]|0;\n       $2176 = $2175&255;\n       $2177 = HEAP8[$2174>>0]|0;\n       $2178 = $2177&255;\n       $2179 = ((($$1100$i)) + 4|0);\n       $2180 = $2173 >>> 3;\n       $2181 = $2180 << 10;\n       $2182 = $2176 >>> 3;\n       $2183 = $2182 << 5;\n       $2184 = $2183 | $2181;\n       $2185 = $2178 >>> 3;\n       $2186 = $2184 | $2185;\n       $2187 = (($2122) + ($2186)|0);\n       $2188 = HEAP8[$2187>>0]|0;\n       $2189 = ((($$18999$i)) + 1|0);\n       HEAP8[$$18999$i>>0] = $2188;\n       $2190 = (($$19198$i) + 1)|0;\n       $exitcond107$i = ($2190|0)==($2125|0);\n       if ($exitcond107$i) {\n        break;\n       } else {\n        $$1100$i = $2179;$$18999$i = $2189;$$19198$i = $2190;\n       }\n      }\n      $$pre$i197 = HEAP8[$2126>>0]|0;\n      $2193 = $$pre$i197;\n     }\n     HEAP8[$2129>>0] = 3;\n     $2191 = ((($1)) + 10|0);\n     HEAP8[$2191>>0] = 1;\n     $2192 = ((($1)) + 11|0);\n     HEAP8[$2192>>0] = $2193;\n     $2194 = $2193&255;\n     $2195 = ($2193&255)>(7);\n     if ($2195) {\n      $2196 = $2194 >>> 3;\n      $2197 = Math_imul($2196, $2125)|0;\n      $2202 = $2197;\n     } else {\n      $2198 = Math_imul($2194, $2125)|0;\n      $2199 = (($2198) + 7)|0;\n      $2200 = $2199 >>> 3;\n      $2202 = $2200;\n     }\n     $2201 = ((($1)) + 4|0);\n     HEAP32[$2201>>2] = $2202;\n    }\n   } while(0);\n   $2212 = ((($1)) + 4|0);\n   $2213 = HEAP32[$2212>>2]|0;\n   $2214 = ($2213|0)==(0);\n   if ($2214) {\n    _png_error($0,26104);\n    // unreachable;\n   } else {\n    $$pre337 = HEAP32[$10>>2]|0;\n    $2216 = $$pre337;\n    break;\n   }\n  }\n } while(0);\n $2215 = $2216 & 512;\n $2217 = ($2215|0)==(0);\n if ($2217) {\n  $2247 = $2216;\n } else {\n  $2218 = HEAP32[$3>>2]|0;\n  $2219 = ((($2218)) + 1|0);\n  $2220 = ((($1)) + 9|0);\n  $2221 = HEAP8[$2220>>0]|0;\n  $2222 = ($2221<<24>>24)==(8);\n  if ($2222) {\n   $2223 = ((($1)) + 8|0);\n   $2224 = HEAP32[$2223>>2]|0;\n   $2225 = $2224&255;\n   $2226 = ($2225<<24>>24)==(3);\n   if ($2226) {\n    $2247 = $2216;\n   } else {\n    $2227 = $2224 >>> 16;\n    $2228 = $2227&255;\n    $2229 = ((($1)) + 4|0);\n    $2230 = HEAP32[$2229>>2]|0;\n    $2231 = (($2219) + ($2230)|0);\n    $2232 = ($2230|0)>(0);\n    if ($2232) {\n     $2233 = (($2231) + ($2230)|0);\n     $$01920$i = $2231;$$021$i = $2233;\n     while(1) {\n      $2234 = ((($$01920$i)) + -1|0);\n      $2235 = HEAP8[$2234>>0]|0;\n      $2236 = ((($$021$i)) + -1|0);\n      HEAP8[$2236>>0] = $2235;\n      $2237 = ((($$021$i)) + -2|0);\n      HEAP8[$2237>>0] = $2235;\n      $2238 = ($2237>>>0)>($2234>>>0);\n      if ($2238) {\n       $$01920$i = $2234;$$021$i = $2237;\n      } else {\n       break;\n      }\n     }\n     $$pre$i = HEAP32[$2229>>2]|0;\n     $$phi$trans$insert$i = ((($1)) + 10|0);\n     $$pre22$i = HEAP8[$$phi$trans$insert$i>>0]|0;\n     $$pre338$pre = HEAP32[$10>>2]|0;\n     $$pre338 = $$pre338$pre;$2240 = $$pre$i;$2242 = $$pre22$i;\n    } else {\n     $$pre338 = $2216;$2240 = $2230;$2242 = $2228;\n    }\n    $2239 = $2240 << 1;\n    HEAP32[$2229>>2] = $2239;\n    HEAP8[$2220>>0] = 16;\n    $2241 = $2242&255;\n    $2243 = $2241 << 4;\n    $2244 = $2243&255;\n    $2245 = ((($1)) + 11|0);\n    HEAP8[$2245>>0] = $2244;\n    $2247 = $$pre338;\n   }\n  } else {\n   $2247 = $2216;\n  }\n }\n $2246 = $2247 & 16384;\n $2248 = ($2246|0)==(0);\n if ($2248) {\n  $2256 = $2247;\n } else {\n  $2249 = ((($0)) + 208|0);\n  $2250 = HEAP32[$2249>>2]|0;\n  $2251 = $2250 & 2048;\n  $2252 = ($2251|0)==(0);\n  if ($2252) {\n   $2256 = $2247;\n  } else {\n   $2253 = HEAP32[$3>>2]|0;\n   $2254 = ((($2253)) + 1|0);\n   _png_do_gray_to_rgb($1,$2254);\n   $$pre339 = HEAP32[$10>>2]|0;\n   $2256 = $$pre339;\n  }\n }\n $2255 = $2256 & 32;\n $2257 = ($2255|0)==(0);\n if ($2257) {\n  $2261 = $2256;\n } else {\n  $2258 = HEAP32[$3>>2]|0;\n  $2259 = ((($2258)) + 1|0);\n  _png_do_invert($1,$2259);\n  $$pre340 = HEAP32[$10>>2]|0;\n  $2261 = $$pre340;\n }\n $2260 = $2261 & 524288;\n $2262 = ($2260|0)==(0);\n L525: do {\n  if (!($2262)) {\n   $2263 = HEAP32[$3>>2]|0;\n   $2264 = ((($2263)) + 1|0);\n   $2265 = HEAP32[$1>>2]|0;\n   $2266 = ((($1)) + 8|0);\n   $2267 = HEAP16[$2266>>1]|0;\n   $2268 = $2267&255;\n   $2269 = ($2267&65535) >>> 8;\n   $2270 = $2269&255;\n   switch ($2268<<24>>24) {\n   case 6:  {\n    $2271 = ($2270<<24>>24)==(8);\n    $2272 = ((($1)) + 4|0);\n    $2273 = HEAP32[$2272>>2]|0;\n    $2274 = (($2264) + ($2273)|0);\n    $2275 = ($2265|0)!=(0);\n    if ($2271) {\n     if ($2275) {\n      $$08090$i = 0;$$08289$i = $2274;\n     } else {\n      break L525;\n     }\n     while(1) {\n      $2276 = ((($$08289$i)) + -1|0);\n      $2277 = HEAP8[$2276>>0]|0;\n      $2278 = $2277&255;\n      $2279 = $2278 ^ 255;\n      $2280 = $2279&255;\n      HEAP8[$2276>>0] = $2280;\n      $2281 = ((($$08289$i)) + -4|0);\n      $2282 = (($$08090$i) + 1)|0;\n      $exitcond$i171 = ($2282|0)==($2265|0);\n      if ($exitcond$i171) {\n       break;\n      } else {\n       $$08090$i = $2282;$$08289$i = $2281;\n      }\n     }\n    } else {\n     if ($2275) {\n      $$07792$i = 0;$$07991$i = $2274;\n     } else {\n      break L525;\n     }\n     while(1) {\n      $2283 = ((($$07991$i)) + -1|0);\n      $2284 = HEAP8[$2283>>0]|0;\n      $2285 = $2284&255;\n      $2286 = $2285 ^ 255;\n      $2287 = $2286&255;\n      HEAP8[$2283>>0] = $2287;\n      $2288 = ((($$07991$i)) + -2|0);\n      $2289 = HEAP8[$2288>>0]|0;\n      $2290 = $2289&255;\n      $2291 = $2290 ^ 255;\n      $2292 = $2291&255;\n      HEAP8[$2288>>0] = $2292;\n      $2293 = ((($$07991$i)) + -8|0);\n      $2294 = (($$07792$i) + 1)|0;\n      $exitcond104$i = ($2294|0)==($2265|0);\n      if ($exitcond104$i) {\n       break;\n      } else {\n       $$07792$i = $2294;$$07991$i = $2293;\n      }\n     }\n    }\n    break;\n   }\n   case 4:  {\n    $2295 = ($2270<<24>>24)==(8);\n    $2296 = ((($1)) + 4|0);\n    $2297 = HEAP32[$2296>>2]|0;\n    $2298 = (($2264) + ($2297)|0);\n    $2299 = ($2265|0)!=(0);\n    if ($2295) {\n     if ($2299) {\n      $$07496$i = 0;$$07595$i = $2298;\n     } else {\n      break L525;\n     }\n     while(1) {\n      $2300 = ((($$07595$i)) + -1|0);\n      $2301 = HEAP8[$2300>>0]|0;\n      $2302 = $2301&255;\n      $2303 = $2302 ^ 255;\n      $2304 = $2303&255;\n      HEAP8[$2300>>0] = $2304;\n      $2305 = ((($$07595$i)) + -2|0);\n      $2306 = (($$07496$i) + 1)|0;\n      $exitcond105$i = ($2306|0)==($2265|0);\n      if ($exitcond105$i) {\n       break;\n      } else {\n       $$07496$i = $2306;$$07595$i = $2305;\n      }\n     }\n    } else {\n     if ($2299) {\n      $$07398$i = $2298;$$099$i = 0;\n     } else {\n      break L525;\n     }\n     while(1) {\n      $2307 = ((($$07398$i)) + -1|0);\n      $2308 = HEAP8[$2307>>0]|0;\n      $2309 = $2308&255;\n      $2310 = $2309 ^ 255;\n      $2311 = $2310&255;\n      HEAP8[$2307>>0] = $2311;\n      $2312 = ((($$07398$i)) + -2|0);\n      $2313 = HEAP8[$2312>>0]|0;\n      $2314 = $2313&255;\n      $2315 = $2314 ^ 255;\n      $2316 = $2315&255;\n      HEAP8[$2312>>0] = $2316;\n      $2317 = ((($$07398$i)) + -4|0);\n      $2318 = (($$099$i) + 1)|0;\n      $exitcond106$i = ($2318|0)==($2265|0);\n      if ($exitcond106$i) {\n       break;\n      } else {\n       $$07398$i = $2317;$$099$i = $2318;\n      }\n     }\n    }\n    break;\n   }\n   default: {\n    break L525;\n   }\n   }\n  }\n } while(0);\n $2319 = HEAP32[$10>>2]|0;\n $2320 = $2319 & 8;\n $2321 = ($2320|0)==(0);\n if ($2321) {\n  $2427 = $2319;\n } else {\n  $2322 = HEAP32[$3>>2]|0;\n  $2323 = ((($2322)) + 1|0);\n  $2324 = ((($1)) + 8|0);\n  $2325 = HEAP16[$2324>>1]|0;\n  $2326 = $2325&255;\n  $$mask$i165 = $2325 & 255;\n  $2327 = $$mask$i165&65535;\n  $2328 = ($2326<<24>>24)==(3);\n  $2329 = ($2325&65535) >>> 8;\n  $2330 = $2329&255;\n  if ($2328) {\n   $2427 = $2319;\n  } else {\n   $2331 = $2329&65535;\n   $2332 = $2327 & 2;\n   $2333 = ($2332|0)==(0);\n   if ($2333) {\n    $2347 = ((($0)) + 524|0);\n    $2348 = HEAP8[$2347>>0]|0;\n    $2349 = $2348&255;\n    $$0$i = 1;$$pn$i = $2349;\n   } else {\n    $2334 = ((($0)) + 521|0);\n    $2335 = HEAP8[$2334>>0]|0;\n    $2336 = $2335&255;\n    $2337 = ((($0)) + 522|0);\n    $2338 = HEAP8[$2337>>0]|0;\n    $2339 = $2338&255;\n    $2340 = (($2331) - ($2339))|0;\n    $2341 = ((($2)) + 4|0);\n    HEAP32[$2341>>2] = $2340;\n    $2342 = ((($0)) + 523|0);\n    $2343 = HEAP8[$2342>>0]|0;\n    $2344 = $2343&255;\n    $2345 = (($2331) - ($2344))|0;\n    $2346 = ((($2)) + 8|0);\n    HEAP32[$2346>>2] = $2345;\n    $$0$i = 3;$$pn$i = $2336;\n   }\n   $$sink$i = (($2331) - ($$pn$i))|0;\n   HEAP32[$2>>2] = $$sink$i;\n   $2350 = $2327 & 4;\n   $2351 = ($2350|0)==(0);\n   if ($2351) {\n    $$1$i166 = $$0$i;\n   } else {\n    $2352 = ((($0)) + 525|0);\n    $2353 = (($$0$i) + 1)|0;\n    $2354 = (($2) + ($$0$i<<2)|0);\n    $2355 = HEAP8[$2352>>0]|0;\n    $2356 = $2355&255;\n    $2357 = (($2331) - ($2356))|0;\n    HEAP32[$2354>>2] = $2357;\n    $$1$i166 = $2353;\n   }\n   $$0119143$i = 0;$$0121142$i = 0;\n   while(1) {\n    $2358 = (($2) + ($$0119143$i<<2)|0);\n    $2359 = HEAP32[$2358>>2]|0;\n    $2360 = ($2359|0)>(0);\n    $2361 = ($2359|0)<($2331|0);\n    $or$cond$i = $2360 & $2361;\n    if ($or$cond$i) {\n     $$1122$i = 1;\n    } else {\n     HEAP32[$2358>>2] = 0;\n     $$1122$i = $$0121142$i;\n    }\n    $2362 = (($$0119143$i) + 1)|0;\n    $2363 = ($2362|0)<($$1$i166|0);\n    if ($2363) {\n     $$0119143$i = $2362;$$0121142$i = $$1122$i;\n    } else {\n     break;\n    }\n   }\n   $2364 = ($$1122$i|0)==(0);\n   L561: do {\n    if (!($2364)) {\n     switch ($2330<<24>>24) {\n     case 2:  {\n      $2365 = ((($1)) + 4|0);\n      $2366 = HEAP32[$2365>>2]|0;\n      $2367 = (($2323) + ($2366)|0);\n      $2368 = ($2366|0)>(0);\n      if ($2368) {\n       $$0127133$i = $2323;\n      } else {\n       break L561;\n      }\n      while(1) {\n       $2369 = HEAP8[$$0127133$i>>0]|0;\n       $2370 = $2369&255;\n       $2371 = $2370 >>> 1;\n       $2372 = $2371 & 85;\n       $2373 = $2372&255;\n       $2374 = ((($$0127133$i)) + 1|0);\n       HEAP8[$$0127133$i>>0] = $2373;\n       $2375 = ($2374>>>0)<($2367>>>0);\n       if ($2375) {\n        $$0127133$i = $2374;\n       } else {\n        break;\n       }\n      }\n      break;\n     }\n     case 4:  {\n      $2376 = ((($1)) + 4|0);\n      $2377 = HEAP32[$2376>>2]|0;\n      $2378 = (($2323) + ($2377)|0);\n      $2379 = HEAP32[$2>>2]|0;\n      $2380 = 15 >>> $2379;\n      $2381 = $2380 << 4;\n      $2382 = $2381 | $2380;\n      $2383 = ($2377|0)>(0);\n      if ($2383) {\n       $$0128134$i = $2323;\n      } else {\n       break L561;\n      }\n      while(1) {\n       $2384 = HEAP8[$$0128134$i>>0]|0;\n       $2385 = $2384&255;\n       $2386 = $2385 >>> $2379;\n       $2387 = $2386 & $2382;\n       $2388 = $2387&255;\n       $2389 = ((($$0128134$i)) + 1|0);\n       HEAP8[$$0128134$i>>0] = $2388;\n       $2390 = ($2389>>>0)<($2378>>>0);\n       if ($2390) {\n        $$0128134$i = $2389;\n       } else {\n        break;\n       }\n      }\n      break;\n     }\n     case 8:  {\n      $2391 = ((($1)) + 4|0);\n      $2392 = HEAP32[$2391>>2]|0;\n      $2393 = (($2323) + ($2392)|0);\n      $2394 = ($2392|0)>(0);\n      if ($2394) {\n       $$0123137$i = 0;$$0126136$i = $2323;\n      } else {\n       break L561;\n      }\n      while(1) {\n       $2395 = HEAP8[$$0126136$i>>0]|0;\n       $2396 = $2395&255;\n       $2397 = (($2) + ($$0123137$i<<2)|0);\n       $2398 = HEAP32[$2397>>2]|0;\n       $2399 = $2396 >>> $2398;\n       $2400 = (($$0123137$i) + 1)|0;\n       $2401 = ($2400|0)>=($$1$i166|0);\n       $$$i168 = $2401 ? 0 : $2400;\n       $2402 = $2399&255;\n       $2403 = ((($$0126136$i)) + 1|0);\n       HEAP8[$$0126136$i>>0] = $2402;\n       $2404 = ($2403>>>0)<($2393>>>0);\n       if ($2404) {\n        $$0123137$i = $$$i168;$$0126136$i = $2403;\n       } else {\n        break;\n       }\n      }\n      break;\n     }\n     case 16:  {\n      $2405 = ((($1)) + 4|0);\n      $2406 = HEAP32[$2405>>2]|0;\n      $2407 = (($2323) + ($2406)|0);\n      $2408 = ($2406|0)>(0);\n      if ($2408) {\n       $$0118140$i = 0;$$0120139$i = $2323;\n      } else {\n       break L561;\n      }\n      while(1) {\n       $2409 = HEAP8[$$0120139$i>>0]|0;\n       $2410 = $2409&255;\n       $2411 = $2410 << 8;\n       $2412 = ((($$0120139$i)) + 1|0);\n       $2413 = HEAP8[$2412>>0]|0;\n       $2414 = $2413&255;\n       $2415 = $2411 | $2414;\n       $2416 = (($2) + ($$0118140$i<<2)|0);\n       $2417 = HEAP32[$2416>>2]|0;\n       $2418 = $2415 >>> $2417;\n       $2419 = (($$0118140$i) + 1)|0;\n       $2420 = ($2419|0)>=($$1$i166|0);\n       $$2$i = $2420 ? 0 : $2419;\n       $2421 = $2418 >>> 8;\n       $2422 = $2421&255;\n       HEAP8[$$0120139$i>>0] = $2422;\n       $2423 = $2418&255;\n       $2424 = ((($$0120139$i)) + 2|0);\n       HEAP8[$2412>>0] = $2423;\n       $2425 = ($2424>>>0)<($2407>>>0);\n       if ($2425) {\n        $$0118140$i = $$2$i;$$0120139$i = $2424;\n       } else {\n        break;\n       }\n      }\n      break;\n     }\n     default: {\n      break L561;\n     }\n     }\n    }\n   } while(0);\n   $$pre341 = HEAP32[$10>>2]|0;\n   $2427 = $$pre341;\n  }\n }\n $2426 = $2427 & 4;\n $2428 = ($2426|0)==(0);\n do {\n  if (!($2428)) {\n   $2429 = HEAP32[$3>>2]|0;\n   $2430 = ((($2429)) + 1|0);\n   $2431 = ((($1)) + 9|0);\n   $2432 = HEAP8[$2431>>0]|0;\n   $2433 = ($2432&255)<(8);\n   if (!($2433)) {\n    break;\n   }\n   $2434 = HEAP32[$1>>2]|0;\n   L581: do {\n    switch ($2432<<24>>24) {\n    case 1:  {\n     $2435 = ($2434|0)==(0);\n     if ($2435) {\n      break L581;\n     }\n     $2436 = (($2434) + 7)|0;\n     $2437 = $2436 & 7;\n     $2438 = $2437 ^ 7;\n     $2439 = (($2430) + ($2434)|0);\n     $2440 = (($2434) + -1)|0;\n     $2441 = $2440 >>> 3;\n     $2442 = (($2430) + ($2441)|0);\n     $$08195$i = $2438;$$08396$pn$i = $2439;$$08494$i = $2442;$$08693$i = 0;\n     while(1) {\n      $$08396$i = ((($$08396$pn$i)) + -1|0);\n      $2443 = HEAP8[$$08494$i>>0]|0;\n      $2444 = $2443&255;\n      $2445 = $2444 >>> $$08195$i;\n      $2446 = $2445 & 1;\n      $2447 = $2446&255;\n      HEAP8[$$08396$i>>0] = $2447;\n      $2448 = ($$08195$i|0)==(7);\n      $2449 = ((($$08494$i)) + -1|0);\n      $2450 = (($$08195$i) + 1)|0;\n      $$185$i = $2448 ? $2449 : $$08494$i;\n      $$182$i = $2448 ? 0 : $2450;\n      $2451 = (($$08693$i) + 1)|0;\n      $exitcond$i161 = ($2451|0)==($2434|0);\n      if ($exitcond$i161) {\n       break;\n      } else {\n       $$08195$i = $$182$i;$$08396$pn$i = $$08396$i;$$08494$i = $$185$i;$$08693$i = $2451;\n      }\n     }\n     break;\n    }\n    case 2:  {\n     $2452 = ($2434|0)==(0);\n     if ($2452) {\n      break L581;\n     }\n     $2453 = $2434 << 1;\n     $2454 = (($2453) + 6)|0;\n     $2455 = $2454 & 6;\n     $2456 = $2455 ^ 6;\n     $2457 = (($2430) + ($2434)|0);\n     $2458 = (($2434) + -1)|0;\n     $2459 = $2458 >>> 2;\n     $2460 = (($2430) + ($2459)|0);\n     $$076100$i = $2456;$$078101$pn$i = $2457;$$07999$i = $2460;$$18798$i = 0;\n     while(1) {\n      $$078101$i = ((($$078101$pn$i)) + -1|0);\n      $2461 = HEAP8[$$07999$i>>0]|0;\n      $2462 = $2461&255;\n      $2463 = $2462 >>> $$076100$i;\n      $2464 = $2463 & 3;\n      $2465 = $2464&255;\n      HEAP8[$$078101$i>>0] = $2465;\n      $2466 = ($$076100$i|0)==(6);\n      $2467 = ((($$07999$i)) + -1|0);\n      $2468 = (($$076100$i) + 2)|0;\n      $$180$i = $2466 ? $2467 : $$07999$i;\n      $$177$i = $2466 ? 0 : $2468;\n      $2469 = (($$18798$i) + 1)|0;\n      $exitcond111$i = ($2469|0)==($2434|0);\n      if ($exitcond111$i) {\n       break;\n      } else {\n       $$076100$i = $$177$i;$$078101$pn$i = $$078101$i;$$07999$i = $$180$i;$$18798$i = $2469;\n      }\n     }\n     break;\n    }\n    case 4:  {\n     $2470 = ($2434|0)==(0);\n     if ($2470) {\n      break L581;\n     }\n     $2471 = $2434 << 2;\n     $2472 = $2471 & 4;\n     $2473 = (($2430) + ($2434)|0);\n     $2474 = (($2434) + -1)|0;\n     $2475 = $2474 >>> 1;\n     $2476 = (($2430) + ($2475)|0);\n     $$0106$i = $2472;$$073107$pn$i = $2473;$$074105$i = $2476;$$2104$i = 0;\n     while(1) {\n      $$073107$i = ((($$073107$pn$i)) + -1|0);\n      $2477 = HEAP8[$$074105$i>>0]|0;\n      $2478 = $2477&255;\n      $2479 = $2478 >>> $$0106$i;\n      $2480 = $2479 & 15;\n      $2481 = $2480&255;\n      HEAP8[$$073107$i>>0] = $2481;\n      $2482 = ($$0106$i|0)==(4);\n      $2483 = ((($$074105$i)) + -1|0);\n      $$175$i = $2482 ? $2483 : $$074105$i;\n      $$1$i163 = $2482 ? 0 : 4;\n      $2484 = (($$2104$i) + 1)|0;\n      $exitcond112$i = ($2484|0)==($2434|0);\n      if ($exitcond112$i) {\n       break;\n      } else {\n       $$0106$i = $$1$i163;$$073107$pn$i = $$073107$i;$$074105$i = $$175$i;$$2104$i = $2484;\n      }\n     }\n     break;\n    }\n    default: {\n    }\n    }\n   } while(0);\n   HEAP8[$2431>>0] = 8;\n   $2485 = ((($1)) + 10|0);\n   $2486 = HEAP8[$2485>>0]|0;\n   $2487 = $2486&255;\n   $2488 = $2487 << 3;\n   $2489 = $2488&255;\n   $2490 = ((($1)) + 11|0);\n   HEAP8[$2490>>0] = $2489;\n   $2491 = Math_imul($2487, $2434)|0;\n   $2492 = ((($1)) + 4|0);\n   HEAP32[$2492>>2] = $2491;\n  }\n } while(0);\n $2493 = ((($1)) + 8|0);\n $2494 = HEAP32[$2493>>2]|0;\n $2495 = $2494&255;\n $2496 = ($2495<<24>>24)==(3);\n do {\n  if ($2496) {\n   $2497 = ((($0)) + 424|0);\n   $2498 = HEAP32[$2497>>2]|0;\n   $2499 = ($2498|0)>(-1);\n   if (!($2499)) {\n    break;\n   }\n   _png_do_check_palette_indexes($0,$1);\n  }\n } while(0);\n $2500 = HEAP32[$10>>2]|0;\n $2501 = $2500 & 1;\n $2502 = ($2501|0)==(0);\n if ($2502) {\n  $2506 = $2500;\n } else {\n  $2503 = HEAP32[$3>>2]|0;\n  $2504 = ((($2503)) + 1|0);\n  _png_do_bgr($1,$2504);\n  $$pre342 = HEAP32[$10>>2]|0;\n  $2506 = $$pre342;\n }\n $2505 = $2506 & 65536;\n $2507 = ($2505|0)==(0);\n if ($2507) {\n  $2511 = $2506;\n } else {\n  $2508 = HEAP32[$3>>2]|0;\n  $2509 = ((($2508)) + 1|0);\n  _png_do_packswap($1,$2509);\n  $$pre343 = HEAP32[$10>>2]|0;\n  $2511 = $$pre343;\n }\n $2510 = $2511 & 32768;\n $2512 = ($2510|0)==(0);\n L606: do {\n  if (!($2512)) {\n   $2513 = HEAP32[$3>>2]|0;\n   $2514 = ((($2513)) + 1|0);\n   $2515 = ((($0)) + 444|0);\n   $2516 = HEAP16[$2515>>1]|0;\n   $2517 = HEAP32[$6>>2]|0;\n   $2518 = HEAP32[$1>>2]|0;\n   $2519 = ($2516&65535) >>> 8;\n   $2520 = $2519&255;\n   $2521 = $2516&255;\n   $2522 = HEAP32[$2493>>2]|0;\n   $2523 = $2522&65535;\n   $2524 = $2522&255;\n   $2525 = ($2523&65535) >>> 8;\n   $2526 = $2525&255;\n   switch ($2524<<24>>24) {\n   case 0:  {\n    switch ($2526<<24>>24) {\n    case 8:  {\n     $2527 = $2517 & 128;\n     $2528 = ($2527|0)==(0);\n     $2529 = (($2514) + ($2518)|0);\n     $2530 = (($2529) + ($2518)|0);\n     if ($2528) {\n      $2533 = ($2518|0)==(0);\n      if (!($2533)) {\n       $$0217231$i = $2530;$$0218230$i = $2529;$$1229$i = 0;\n       while(1) {\n        $2543 = ((($$0218230$i)) + -1|0);\n        $2544 = HEAP8[$2543>>0]|0;\n        $2545 = ((($$0217231$i)) + -1|0);\n        HEAP8[$2545>>0] = $2544;\n        $2546 = ((($$0217231$i)) + -2|0);\n        HEAP8[$2546>>0] = $2521;\n        $2547 = (($$1229$i) + 1)|0;\n        $exitcond$i157 = ($2547|0)==($2518|0);\n        if ($exitcond$i157) {\n         break;\n        } else {\n         $$0217231$i = $2546;$$0218230$i = $2543;$$1229$i = $2547;\n        }\n       }\n      }\n      $2548 = ((($1)) + 10|0);\n      HEAP8[$2548>>0] = 2;\n      $2549 = ((($1)) + 11|0);\n      HEAP8[$2549>>0] = 16;\n      $2550 = $2518 << 1;\n      $2551 = ((($1)) + 4|0);\n      HEAP32[$2551>>2] = $2550;\n      break L606;\n     } else {\n      $2531 = ($2518>>>0)>(1);\n      $2532 = ((($2530)) + -1|0);\n      HEAP8[$2532>>0] = $2521;\n      if ($2531) {\n       $$0219234$i = $2530;$$0220233$i = $2529;$$0221232$i = 1;\n       while(1) {\n        $2534 = ((($$0220233$i)) + -1|0);\n        $2535 = HEAP8[$2534>>0]|0;\n        $2536 = ((($$0219234$i)) + -2|0);\n        HEAP8[$2536>>0] = $2535;\n        $2537 = (($$0221232$i) + 1)|0;\n        $2538 = ((($$0219234$i)) + -3|0);\n        HEAP8[$2538>>0] = $2521;\n        $exitcond267$i = ($2537|0)==($2518|0);\n        if ($exitcond267$i) {\n         break;\n        } else {\n         $$0219234$i = $2536;$$0220233$i = $2534;$$0221232$i = $2537;\n        }\n       }\n      }\n      $2539 = ((($1)) + 10|0);\n      HEAP8[$2539>>0] = 2;\n      $2540 = ((($1)) + 11|0);\n      HEAP8[$2540>>0] = 16;\n      $2541 = $2518 << 1;\n      $2542 = ((($1)) + 4|0);\n      HEAP32[$2542>>2] = $2541;\n      break L606;\n     }\n     break;\n    }\n    case 16:  {\n     $2552 = $2517 & 128;\n     $2553 = ($2552|0)==(0);\n     $2554 = $2518 << 1;\n     $2555 = (($2514) + ($2554)|0);\n     $2556 = (($2555) + ($2554)|0);\n     if ($2553) {\n      $2560 = ($2518|0)==(0);\n      if (!($2560)) {\n       $$0213239$i = $2556;$$0214238$i = $2555;$$3237$i = 0;\n       while(1) {\n        $2574 = ((($$0214238$i)) + -1|0);\n        $2575 = HEAP8[$2574>>0]|0;\n        $2576 = ((($$0213239$i)) + -1|0);\n        HEAP8[$2576>>0] = $2575;\n        $2577 = ((($$0214238$i)) + -2|0);\n        $2578 = HEAP8[$2577>>0]|0;\n        $2579 = ((($$0213239$i)) + -2|0);\n        HEAP8[$2579>>0] = $2578;\n        $2580 = ((($$0213239$i)) + -3|0);\n        HEAP8[$2580>>0] = $2521;\n        $2581 = ((($$0213239$i)) + -4|0);\n        HEAP8[$2581>>0] = $2520;\n        $2582 = (($$3237$i) + 1)|0;\n        $exitcond268$i = ($2582|0)==($2518|0);\n        if ($exitcond268$i) {\n         break;\n        } else {\n         $$0213239$i = $2581;$$0214238$i = $2577;$$3237$i = $2582;\n        }\n       }\n      }\n      $2583 = ((($1)) + 10|0);\n      HEAP8[$2583>>0] = 2;\n      $2584 = ((($1)) + 11|0);\n      HEAP8[$2584>>0] = 32;\n      $2585 = $2518 << 2;\n      $2586 = ((($1)) + 4|0);\n      HEAP32[$2586>>2] = $2585;\n      break L606;\n     } else {\n      $2557 = ($2518>>>0)>(1);\n      $2558 = ((($2556)) + -1|0);\n      HEAP8[$2558>>0] = $2521;\n      $2559 = ((($2556)) + -2|0);\n      HEAP8[$2559>>0] = $2520;\n      if ($2557) {\n       $$0215244$i = $2556;$$0216243$i = $2555;$$2242$i = 1;\n       while(1) {\n        $2561 = ((($$0216243$i)) + -1|0);\n        $2562 = HEAP8[$2561>>0]|0;\n        $2563 = ((($$0215244$i)) + -3|0);\n        HEAP8[$2563>>0] = $2562;\n        $2564 = ((($$0216243$i)) + -2|0);\n        $2565 = HEAP8[$2564>>0]|0;\n        $2566 = ((($$0215244$i)) + -4|0);\n        HEAP8[$2566>>0] = $2565;\n        $2567 = (($$2242$i) + 1)|0;\n        $2568 = ((($$0215244$i)) + -5|0);\n        HEAP8[$2568>>0] = $2521;\n        $2569 = ((($$0215244$i)) + -6|0);\n        HEAP8[$2569>>0] = $2520;\n        $exitcond269$i = ($2567|0)==($2518|0);\n        if ($exitcond269$i) {\n         break;\n        } else {\n         $$0215244$i = $2566;$$0216243$i = $2564;$$2242$i = $2567;\n        }\n       }\n      }\n      $2570 = ((($1)) + 10|0);\n      HEAP8[$2570>>0] = 2;\n      $2571 = ((($1)) + 11|0);\n      HEAP8[$2571>>0] = 32;\n      $2572 = $2518 << 2;\n      $2573 = ((($1)) + 4|0);\n      HEAP32[$2573>>2] = $2572;\n      break L606;\n     }\n     break;\n    }\n    default: {\n     break L606;\n    }\n    }\n    break;\n   }\n   case 2:  {\n    switch ($2526<<24>>24) {\n    case 8:  {\n     $2587 = $2517 & 128;\n     $2588 = ($2587|0)==(0);\n     $2589 = ($2518*3)|0;\n     $2590 = (($2514) + ($2589)|0);\n     $2591 = (($2590) + ($2518)|0);\n     if ($2588) {\n      $2594 = ($2518|0)==(0);\n      if (!($2594)) {\n       $$0209249$i = $2591;$$0210248$i = $2590;$$5247$i = 0;\n       while(1) {\n        $2610 = ((($$0210248$i)) + -1|0);\n        $2611 = HEAP8[$2610>>0]|0;\n        $2612 = ((($$0209249$i)) + -1|0);\n        HEAP8[$2612>>0] = $2611;\n        $2613 = ((($$0210248$i)) + -2|0);\n        $2614 = HEAP8[$2613>>0]|0;\n        $2615 = ((($$0209249$i)) + -2|0);\n        HEAP8[$2615>>0] = $2614;\n        $2616 = ((($$0210248$i)) + -3|0);\n        $2617 = HEAP8[$2616>>0]|0;\n        $2618 = ((($$0209249$i)) + -3|0);\n        HEAP8[$2618>>0] = $2617;\n        $2619 = ((($$0209249$i)) + -4|0);\n        HEAP8[$2619>>0] = $2521;\n        $2620 = (($$5247$i) + 1)|0;\n        $exitcond270$i = ($2620|0)==($2518|0);\n        if ($exitcond270$i) {\n         break;\n        } else {\n         $$0209249$i = $2619;$$0210248$i = $2616;$$5247$i = $2620;\n        }\n       }\n      }\n      $2621 = ((($1)) + 10|0);\n      HEAP8[$2621>>0] = 4;\n      $2622 = ((($1)) + 11|0);\n      HEAP8[$2622>>0] = 32;\n      $2623 = $2518 << 2;\n      $2624 = ((($1)) + 4|0);\n      HEAP32[$2624>>2] = $2623;\n      break L606;\n     } else {\n      $2592 = ($2518>>>0)>(1);\n      $2593 = ((($2591)) + -1|0);\n      HEAP8[$2593>>0] = $2521;\n      if ($2592) {\n       $$0211254$i = $2591;$$0212253$i = $2590;$$4252$i = 1;\n       while(1) {\n        $2595 = ((($$0212253$i)) + -1|0);\n        $2596 = HEAP8[$2595>>0]|0;\n        $2597 = ((($$0211254$i)) + -2|0);\n        HEAP8[$2597>>0] = $2596;\n        $2598 = ((($$0212253$i)) + -2|0);\n        $2599 = HEAP8[$2598>>0]|0;\n        $2600 = ((($$0211254$i)) + -3|0);\n        HEAP8[$2600>>0] = $2599;\n        $2601 = ((($$0212253$i)) + -3|0);\n        $2602 = HEAP8[$2601>>0]|0;\n        $2603 = ((($$0211254$i)) + -4|0);\n        HEAP8[$2603>>0] = $2602;\n        $2604 = (($$4252$i) + 1)|0;\n        $2605 = ((($$0211254$i)) + -5|0);\n        HEAP8[$2605>>0] = $2521;\n        $exitcond271$i = ($2604|0)==($2518|0);\n        if ($exitcond271$i) {\n         break;\n        } else {\n         $$0211254$i = $2603;$$0212253$i = $2601;$$4252$i = $2604;\n        }\n       }\n      }\n      $2606 = ((($1)) + 10|0);\n      HEAP8[$2606>>0] = 4;\n      $2607 = ((($1)) + 11|0);\n      HEAP8[$2607>>0] = 32;\n      $2608 = $2518 << 2;\n      $2609 = ((($1)) + 4|0);\n      HEAP32[$2609>>2] = $2608;\n      break L606;\n     }\n     break;\n    }\n    case 16:  {\n     $2625 = $2517 & 128;\n     $2626 = ($2625|0)==(0);\n     $2627 = ($2518*6)|0;\n     $2628 = (($2514) + ($2627)|0);\n     $2629 = $2518 << 1;\n     $2630 = (($2628) + ($2629)|0);\n     if ($2626) {\n      $2634 = ($2518|0)==(0);\n      if (!($2634)) {\n       $$0206258$i = $2628;$$0259$i = $2630;$$7257$i = 0;\n       while(1) {\n        $2660 = ((($$0206258$i)) + -1|0);\n        $2661 = HEAP8[$2660>>0]|0;\n        $2662 = ((($$0259$i)) + -1|0);\n        HEAP8[$2662>>0] = $2661;\n        $2663 = ((($$0206258$i)) + -2|0);\n        $2664 = HEAP8[$2663>>0]|0;\n        $2665 = ((($$0259$i)) + -2|0);\n        HEAP8[$2665>>0] = $2664;\n        $2666 = ((($$0206258$i)) + -3|0);\n        $2667 = HEAP8[$2666>>0]|0;\n        $2668 = ((($$0259$i)) + -3|0);\n        HEAP8[$2668>>0] = $2667;\n        $2669 = ((($$0206258$i)) + -4|0);\n        $2670 = HEAP8[$2669>>0]|0;\n        $2671 = ((($$0259$i)) + -4|0);\n        HEAP8[$2671>>0] = $2670;\n        $2672 = ((($$0206258$i)) + -5|0);\n        $2673 = HEAP8[$2672>>0]|0;\n        $2674 = ((($$0259$i)) + -5|0);\n        HEAP8[$2674>>0] = $2673;\n        $2675 = ((($$0206258$i)) + -6|0);\n        $2676 = HEAP8[$2675>>0]|0;\n        $2677 = ((($$0259$i)) + -6|0);\n        HEAP8[$2677>>0] = $2676;\n        $2678 = ((($$0259$i)) + -7|0);\n        HEAP8[$2678>>0] = $2521;\n        $2679 = ((($$0259$i)) + -8|0);\n        HEAP8[$2679>>0] = $2520;\n        $2680 = (($$7257$i) + 1)|0;\n        $exitcond272$i = ($2680|0)==($2518|0);\n        if ($exitcond272$i) {\n         break;\n        } else {\n         $$0206258$i = $2675;$$0259$i = $2679;$$7257$i = $2680;\n        }\n       }\n      }\n      $2681 = ((($1)) + 10|0);\n      HEAP8[$2681>>0] = 4;\n      $2682 = ((($1)) + 11|0);\n      HEAP8[$2682>>0] = 64;\n      $2683 = $2518 << 3;\n      $2684 = ((($1)) + 4|0);\n      HEAP32[$2684>>2] = $2683;\n      break L606;\n     } else {\n      $2631 = ($2518>>>0)>(1);\n      $2632 = ((($2630)) + -1|0);\n      HEAP8[$2632>>0] = $2521;\n      $2633 = ((($2630)) + -2|0);\n      HEAP8[$2633>>0] = $2520;\n      if ($2631) {\n       $$0207264$i = $2630;$$0208263$i = $2628;$$6262$i = 1;\n       while(1) {\n        $2635 = ((($$0208263$i)) + -1|0);\n        $2636 = HEAP8[$2635>>0]|0;\n        $2637 = ((($$0207264$i)) + -3|0);\n        HEAP8[$2637>>0] = $2636;\n        $2638 = ((($$0208263$i)) + -2|0);\n        $2639 = HEAP8[$2638>>0]|0;\n        $2640 = ((($$0207264$i)) + -4|0);\n        HEAP8[$2640>>0] = $2639;\n        $2641 = ((($$0208263$i)) + -3|0);\n        $2642 = HEAP8[$2641>>0]|0;\n        $2643 = ((($$0207264$i)) + -5|0);\n        HEAP8[$2643>>0] = $2642;\n        $2644 = ((($$0208263$i)) + -4|0);\n        $2645 = HEAP8[$2644>>0]|0;\n        $2646 = ((($$0207264$i)) + -6|0);\n        HEAP8[$2646>>0] = $2645;\n        $2647 = ((($$0208263$i)) + -5|0);\n        $2648 = HEAP8[$2647>>0]|0;\n        $2649 = ((($$0207264$i)) + -7|0);\n        HEAP8[$2649>>0] = $2648;\n        $2650 = ((($$0208263$i)) + -6|0);\n        $2651 = HEAP8[$2650>>0]|0;\n        $2652 = ((($$0207264$i)) + -8|0);\n        HEAP8[$2652>>0] = $2651;\n        $2653 = (($$6262$i) + 1)|0;\n        $2654 = ((($$0207264$i)) + -9|0);\n        HEAP8[$2654>>0] = $2521;\n        $2655 = ((($$0207264$i)) + -10|0);\n        HEAP8[$2655>>0] = $2520;\n        $exitcond273$i = ($2653|0)==($2518|0);\n        if ($exitcond273$i) {\n         break;\n        } else {\n         $$0207264$i = $2652;$$0208263$i = $2650;$$6262$i = $2653;\n        }\n       }\n      }\n      $2656 = ((($1)) + 10|0);\n      HEAP8[$2656>>0] = 4;\n      $2657 = ((($1)) + 11|0);\n      HEAP8[$2657>>0] = 64;\n      $2658 = $2518 << 3;\n      $2659 = ((($1)) + 4|0);\n      HEAP32[$2659>>2] = $2658;\n      break L606;\n     }\n     break;\n    }\n    default: {\n     break L606;\n    }\n    }\n    break;\n   }\n   default: {\n    break L606;\n   }\n   }\n  }\n } while(0);\n $2685 = HEAP32[$10>>2]|0;\n $2686 = $2685 & 131072;\n $2687 = ($2686|0)==(0);\n L662: do {\n  if (!($2687)) {\n   $2688 = HEAP32[$3>>2]|0;\n   $2689 = ((($2688)) + 1|0);\n   $2690 = HEAP32[$1>>2]|0;\n   $2691 = HEAP32[$2493>>2]|0;\n   $2692 = $2691&65535;\n   $2693 = $2691&255;\n   $2694 = ($2692&65535) >>> 8;\n   $2695 = $2694&255;\n   switch ($2693<<24>>24) {\n   case 6:  {\n    $2696 = ($2695<<24>>24)==(8);\n    $2697 = ((($1)) + 4|0);\n    $2698 = HEAP32[$2697>>2]|0;\n    $2699 = (($2689) + ($2698)|0);\n    $2700 = ($2690|0)!=(0);\n    if ($2696) {\n     if ($2700) {\n      $$092111$i = $2699;$$097109$i = 0;\n     } else {\n      break L662;\n     }\n     while(1) {\n      $2701 = ((($$092111$i)) + -1|0);\n      $2702 = HEAP8[$2701>>0]|0;\n      $2703 = ((($$092111$i)) + -2|0);\n      $2704 = HEAP8[$2703>>0]|0;\n      HEAP8[$2701>>0] = $2704;\n      $2705 = ((($$092111$i)) + -3|0);\n      $2706 = HEAP8[$2705>>0]|0;\n      HEAP8[$2703>>0] = $2706;\n      $2707 = ((($$092111$i)) + -4|0);\n      $2708 = HEAP8[$2707>>0]|0;\n      HEAP8[$2705>>0] = $2708;\n      HEAP8[$2707>>0] = $2702;\n      $2709 = (($$097109$i) + 1)|0;\n      $exitcond$i153 = ($2709|0)==($2690|0);\n      if ($exitcond$i153) {\n       break;\n      } else {\n       $$092111$i = $2707;$$097109$i = $2709;\n      }\n     }\n    } else {\n     if ($2700) {\n      $$0100114$i = 0;$$0101113$i = $2699;\n     } else {\n      break L662;\n     }\n     while(1) {\n      $2710 = ((($$0101113$i)) + -1|0);\n      $2711 = HEAP8[$2710>>0]|0;\n      $2712 = ((($$0101113$i)) + -2|0);\n      $2713 = HEAP8[$2712>>0]|0;\n      $2714 = ((($$0101113$i)) + -3|0);\n      $2715 = HEAP8[$2714>>0]|0;\n      HEAP8[$2710>>0] = $2715;\n      $2716 = ((($$0101113$i)) + -4|0);\n      $2717 = HEAP8[$2716>>0]|0;\n      HEAP8[$2712>>0] = $2717;\n      $2718 = ((($$0101113$i)) + -5|0);\n      $2719 = HEAP8[$2718>>0]|0;\n      HEAP8[$2714>>0] = $2719;\n      $2720 = ((($$0101113$i)) + -6|0);\n      $2721 = HEAP8[$2720>>0]|0;\n      HEAP8[$2716>>0] = $2721;\n      $2722 = ((($$0101113$i)) + -7|0);\n      $2723 = HEAP8[$2722>>0]|0;\n      HEAP8[$2718>>0] = $2723;\n      $2724 = ((($$0101113$i)) + -8|0);\n      $2725 = HEAP8[$2724>>0]|0;\n      HEAP8[$2720>>0] = $2725;\n      HEAP8[$2722>>0] = $2711;\n      HEAP8[$2724>>0] = $2713;\n      $2726 = (($$0100114$i) + 1)|0;\n      $exitcond127$i = ($2726|0)==($2690|0);\n      if ($exitcond127$i) {\n       break;\n      } else {\n       $$0100114$i = $2726;$$0101113$i = $2724;\n      }\n     }\n    }\n    break;\n   }\n   case 4:  {\n    $2727 = ($2695<<24>>24)==(8);\n    $2728 = ((($1)) + 4|0);\n    $2729 = HEAP32[$2728>>2]|0;\n    $2730 = (($2689) + ($2729)|0);\n    $2731 = ($2690|0)!=(0);\n    if ($2727) {\n     if ($2731) {\n      $$096118$i = 0;$$098117$i = $2730;\n     } else {\n      break L662;\n     }\n     while(1) {\n      $2732 = ((($$098117$i)) + -1|0);\n      $2733 = HEAP8[$2732>>0]|0;\n      $2734 = ((($$098117$i)) + -2|0);\n      $2735 = HEAP8[$2734>>0]|0;\n      HEAP8[$2732>>0] = $2735;\n      HEAP8[$2734>>0] = $2733;\n      $2736 = (($$096118$i) + 1)|0;\n      $exitcond128$i = ($2736|0)==($2690|0);\n      if ($exitcond128$i) {\n       break;\n      } else {\n       $$096118$i = $2736;$$098117$i = $2734;\n      }\n     }\n    } else {\n     if ($2731) {\n      $$0122$i = 0;$$094121$i = $2730;\n     } else {\n      break L662;\n     }\n     while(1) {\n      $2737 = ((($$094121$i)) + -1|0);\n      $2738 = HEAP8[$2737>>0]|0;\n      $2739 = ((($$094121$i)) + -2|0);\n      $2740 = HEAP8[$2739>>0]|0;\n      $2741 = ((($$094121$i)) + -3|0);\n      $2742 = HEAP8[$2741>>0]|0;\n      HEAP8[$2737>>0] = $2742;\n      $2743 = ((($$094121$i)) + -4|0);\n      $2744 = HEAP8[$2743>>0]|0;\n      HEAP8[$2739>>0] = $2744;\n      HEAP8[$2741>>0] = $2738;\n      HEAP8[$2743>>0] = $2740;\n      $2745 = (($$0122$i) + 1)|0;\n      $exitcond129$i = ($2745|0)==($2690|0);\n      if ($exitcond129$i) {\n       break;\n      } else {\n       $$0122$i = $2745;$$094121$i = $2743;\n      }\n     }\n    }\n    break;\n   }\n   default: {\n    break L662;\n   }\n   }\n  }\n } while(0);\n $2746 = HEAP32[$10>>2]|0;\n $2747 = $2746 & 16;\n $2748 = ($2747|0)==(0);\n if ($2748) {\n  $2752 = $2746;\n } else {\n  $2749 = HEAP32[$3>>2]|0;\n  $2750 = ((($2749)) + 1|0);\n  _png_do_swap($1,$2750);\n  $$pre344 = HEAP32[$10>>2]|0;\n  $2752 = $$pre344;\n }\n $2751 = $2752 & 1048576;\n $2753 = ($2751|0)==(0);\n if ($2753) {\n  STACKTOP = sp;return;\n }\n $2754 = ((($0)) + 192|0);\n $2755 = HEAP32[$2754>>2]|0;\n $2756 = ($2755|0)==(0|0);\n if (!($2756)) {\n  $2757 = HEAP32[$3>>2]|0;\n  $2758 = ((($2757)) + 1|0);\n  FUNCTION_TABLE_viii[$2755 & 127]($0,$1,$2758);\n }\n $2759 = ((($0)) + 204|0);\n $2760 = HEAP16[$2759>>1]|0;\n $2761 = $2760&255;\n $2762 = ($2761<<24>>24)==(0);\n $2763 = ($2760&65535) >>> 8;\n $2764 = $2763&255;\n if (!($2762)) {\n  $2765 = ((($1)) + 9|0);\n  HEAP8[$2765>>0] = $2761;\n }\n $2766 = ($2764<<24>>24)==(0);\n $$phi$trans$insert346 = ((($1)) + 10|0);\n if ($2766) {\n  $$pre347 = HEAP8[$$phi$trans$insert346>>0]|0;\n  $2771 = $$pre347;\n } else {\n  HEAP8[$$phi$trans$insert346>>0] = $2764;\n  $2771 = $2764;\n }\n $2767 = ((($1)) + 9|0);\n $2768 = HEAP8[$2767>>0]|0;\n $2769 = $2768&255;\n $2770 = $2771&255;\n $2772 = Math_imul($2770, $2769)|0;\n $2773 = $2772&255;\n $2774 = ((($1)) + 11|0);\n HEAP8[$2774>>0] = $2773;\n $2775 = $2772 & 255;\n $2776 = ($2775>>>0)>(7);\n $2777 = HEAP32[$1>>2]|0;\n if ($2776) {\n  $2778 = $2775 >>> 3;\n  $2779 = Math_imul($2778, $2777)|0;\n  $2784 = $2779;\n } else {\n  $2780 = Math_imul($2775, $2777)|0;\n  $2781 = (($2780) + 7)|0;\n  $2782 = $2781 >>> 3;\n  $2784 = $2782;\n }\n $2783 = ((($1)) + 4|0);\n HEAP32[$2783>>2] = $2784;\n STACKTOP = sp;return;\n}\nfunction _png_do_read_interlace($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0223287$us = 0, $$0224302$us = 0, $$0225286$us = 0, $$0227285$us = 0, $$0228301$us = 0, $$0230 = 0, $$0233322$us = 0, $$0234 = 0, $$0237 = 0, $$0238332$us = 0, $$0239 = 0, $$0240 = 0, $$0241 = 0, $$0242 = 0, $$0242$in = 0, $$0246 = 0, $$0246$in = 0, $$0249329$us = 0, $$0252328$us = 0, $$0254 = 0;\n var $$0255307$us = 0, $$0256 = 0, $$0257317$us = 0, $$0258298$us = 0, $$0259 = 0, $$0260 = 0, $$0261 = 0, $$0262 = 0, $$0266 = 0, $$0269314$us = 0, $$0272313$us = 0, $$0274290$us = 0, $$0284$us = 0, $$1$us = 0, $$1226283$us = 0, $$1229292$us = 0, $$1231300$us = 0, $$1235299$us = 0, $$1243331$us = 0, $$1247330$us = 0;\n var $$1250320$us = 0, $$1253$us = 0, $$1263316$us = 0, $$1267315$us = 0, $$1270305$us = 0, $$1273$us = 0, $$2$us = 0, $$2232$us = 0, $$2236291$us = 0, $$2244321$us = 0, $$2248$us = 0, $$2251$us = 0, $$2264306$us = 0, $$2268$us = 0, $$2271$us = 0, $$3$us = 0, $$3245$us = 0, $$3265$us = 0, $10 = 0, $100 = 0;\n var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;\n var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;\n var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;\n var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $4 = sp;\n $5 = ($1|0)!=(0|0);\n $6 = ($0|0)!=(0|0);\n $or$cond = $6 & $5;\n if (!($or$cond)) {\n  STACKTOP = sp;return;\n }\n $7 = HEAP32[$0>>2]|0;\n $8 = (772 + ($2<<2)|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = Math_imul($9, $7)|0;\n $11 = ((($0)) + 11|0);\n $12 = HEAP8[$11>>0]|0;\n switch ($12<<24>>24) {\n case 1:  {\n  $13 = (($7) + -1)|0;\n  $14 = $13 >>> 3;\n  $15 = (($1) + ($14)|0);\n  $16 = (($10) + -1)|0;\n  $17 = $16 >>> 3;\n  $18 = (($1) + ($17)|0);\n  $19 = $3 & 65536;\n  $20 = ($19|0)==(0);\n  $21 = (($7) + 7)|0;\n  $22 = $21 & 7;\n  if ($20) {\n   $25 = $22 ^ 7;\n   $26 = (($10) + 7)|0;\n   $27 = $26 & 7;\n   $28 = $27 ^ 7;\n   $$0230 = $25;$$0234 = $28;$$0237 = 0;$$0254 = 7;$$0256 = 1;\n  } else {\n   $23 = (($10) + 7)|0;\n   $24 = $23 & 7;\n   $$0230 = $22;$$0234 = $24;$$0237 = 7;$$0254 = 0;$$0256 = -1;\n  }\n  $29 = ($7|0)==(0);\n  if (!($29)) {\n   $$0224302$us = $15;$$0228301$us = $18;$$0258298$us = 0;$$1231300$us = $$0230;$$1235299$us = $$0234;\n   while(1) {\n    $30 = HEAP8[$$0224302$us>>0]|0;\n    $31 = $30&255;\n    $32 = $31 >>> $$1231300$us;\n    $33 = $32 & 1;\n    $$0274290$us = 0;$$1229292$us = $$0228301$us;$$2236291$us = $$1235299$us;\n    while(1) {\n     $34 = HEAP8[$$1229292$us>>0]|0;\n     $35 = $34&255;\n     $36 = (7 - ($$2236291$us))|0;\n     $37 = 32639 >>> $36;\n     $38 = $35 & $37;\n     $39 = $33 << $$2236291$us;\n     $40 = $38 | $39;\n     $41 = $40&255;\n     HEAP8[$$1229292$us>>0] = $41;\n     $42 = ($$2236291$us|0)==($$0254|0);\n     $43 = ((($$1229292$us)) + -1|0);\n     $44 = (($$2236291$us) + ($$0256))|0;\n     $$3$us = $42 ? $$0237 : $44;\n     $$2$us = $42 ? $43 : $$1229292$us;\n     $45 = (($$0274290$us) + 1)|0;\n     $46 = ($45|0)<($9|0);\n     if ($46) {\n      $$0274290$us = $45;$$1229292$us = $$2$us;$$2236291$us = $$3$us;\n     } else {\n      break;\n     }\n    }\n    $47 = ($$1231300$us|0)==($$0254|0);\n    $48 = ((($$0224302$us)) + -1|0);\n    $49 = (($$1231300$us) + ($$0256))|0;\n    $$2232$us = $47 ? $$0237 : $49;\n    $$1$us = $47 ? $48 : $$0224302$us;\n    $50 = (($$0258298$us) + 1)|0;\n    $51 = HEAP32[$0>>2]|0;\n    $52 = ($50>>>0)<($51>>>0);\n    if ($52) {\n     $$0224302$us = $$1$us;$$0228301$us = $$2$us;$$0258298$us = $50;$$1231300$us = $$2232$us;$$1235299$us = $$3$us;\n    } else {\n     break;\n    }\n   }\n  }\n  break;\n }\n case 2:  {\n  $53 = (($7) + -1)|0;\n  $54 = $53 >>> 2;\n  $55 = (($1) + ($54)|0);\n  $56 = (($10) + -1)|0;\n  $57 = $56 >>> 2;\n  $58 = (($1) + ($57)|0);\n  $59 = $3 & 65536;\n  $60 = ($59|0)==(0);\n  $61 = $7 << 1;\n  $62 = (($61) + 6)|0;\n  $63 = $62 & 6;\n  if ($60) {\n   $67 = $63 ^ 6;\n   $68 = $10 << 1;\n   $69 = (($68) + 6)|0;\n   $70 = $69 & 6;\n   $71 = $70 ^ 6;\n   $$0259 = 2;$$0260 = 6;$$0261 = 0;$$0262 = $71;$$0266 = $67;\n  } else {\n   $64 = $10 << 1;\n   $65 = (($64) + 6)|0;\n   $66 = $65 & 6;\n   $$0259 = -2;$$0260 = 0;$$0261 = 6;$$0262 = $66;$$0266 = $63;\n  }\n  $72 = ($7|0)==(0);\n  if (!($72)) {\n   $$0257317$us = 0;$$0269314$us = $58;$$0272313$us = $55;$$1263316$us = $$0262;$$1267315$us = $$0266;\n   while(1) {\n    $73 = HEAP8[$$0272313$us>>0]|0;\n    $74 = $73&255;\n    $75 = $74 >>> $$1267315$us;\n    $76 = $75 & 3;\n    $$0255307$us = 0;$$1270305$us = $$0269314$us;$$2264306$us = $$1263316$us;\n    while(1) {\n     $77 = HEAP8[$$1270305$us>>0]|0;\n     $78 = $77&255;\n     $79 = (6 - ($$2264306$us))|0;\n     $80 = 16191 >>> $79;\n     $81 = $78 & $80;\n     $82 = $76 << $$2264306$us;\n     $83 = $81 | $82;\n     $84 = $83&255;\n     HEAP8[$$1270305$us>>0] = $84;\n     $85 = ($$2264306$us|0)==($$0260|0);\n     $86 = ((($$1270305$us)) + -1|0);\n     $87 = (($$2264306$us) + ($$0259))|0;\n     $$2271$us = $85 ? $86 : $$1270305$us;\n     $$3265$us = $85 ? $$0261 : $87;\n     $88 = (($$0255307$us) + 1)|0;\n     $89 = ($88|0)<($9|0);\n     if ($89) {\n      $$0255307$us = $88;$$1270305$us = $$2271$us;$$2264306$us = $$3265$us;\n     } else {\n      break;\n     }\n    }\n    $90 = ($$1267315$us|0)==($$0260|0);\n    $91 = ((($$0272313$us)) + -1|0);\n    $92 = (($$1267315$us) + ($$0259))|0;\n    $$1273$us = $90 ? $91 : $$0272313$us;\n    $$2268$us = $90 ? $$0261 : $92;\n    $93 = (($$0257317$us) + 1)|0;\n    $94 = HEAP32[$0>>2]|0;\n    $95 = ($93>>>0)<($94>>>0);\n    if ($95) {\n     $$0257317$us = $93;$$0269314$us = $$2271$us;$$0272313$us = $$1273$us;$$1263316$us = $$3265$us;$$1267315$us = $$2268$us;\n    } else {\n     break;\n    }\n   }\n  }\n  break;\n }\n case 4:  {\n  $96 = (($7) + -1)|0;\n  $97 = $96 >>> 1;\n  $98 = (($1) + ($97)|0);\n  $99 = (($10) + -1)|0;\n  $100 = $99 >>> 1;\n  $101 = (($1) + ($100)|0);\n  $102 = $3 & 65536;\n  $103 = ($102|0)==(0);\n  $104 = $7 & 1;\n  if ($103) {\n   $108 = $10 & 1;\n   $$0239 = 4;$$0240 = 4;$$0241 = 0;$$0242$in = $108;$$0246$in = $104;\n  } else {\n   $105 = $104 ^ 1;\n   $106 = $10 & 1;\n   $107 = $106 ^ 1;\n   $$0239 = -4;$$0240 = 0;$$0241 = 4;$$0242$in = $107;$$0246$in = $105;\n  }\n  $109 = ($7|0)==(0);\n  if (!($109)) {\n   $$0242 = $$0242$in << 2;\n   $$0246 = $$0246$in << 2;\n   $$0238332$us = 0;$$0249329$us = $101;$$0252328$us = $98;$$1243331$us = $$0242;$$1247330$us = $$0246;\n   while(1) {\n    $110 = HEAP8[$$0252328$us>>0]|0;\n    $111 = $110&255;\n    $112 = $111 >>> $$1247330$us;\n    $113 = $112 & 15;\n    $$0233322$us = 0;$$1250320$us = $$0249329$us;$$2244321$us = $$1243331$us;\n    while(1) {\n     $114 = HEAP8[$$1250320$us>>0]|0;\n     $115 = $114&255;\n     $116 = (4 - ($$2244321$us))|0;\n     $117 = 3855 >>> $116;\n     $118 = $115 & $117;\n     $119 = $113 << $$2244321$us;\n     $120 = $118 | $119;\n     $121 = $120&255;\n     HEAP8[$$1250320$us>>0] = $121;\n     $122 = ($$2244321$us|0)==($$0240|0);\n     $123 = ((($$1250320$us)) + -1|0);\n     $124 = (($$2244321$us) + ($$0239))|0;\n     $$2251$us = $122 ? $123 : $$1250320$us;\n     $$3245$us = $122 ? $$0241 : $124;\n     $125 = (($$0233322$us) + 1)|0;\n     $126 = ($125|0)<($9|0);\n     if ($126) {\n      $$0233322$us = $125;$$1250320$us = $$2251$us;$$2244321$us = $$3245$us;\n     } else {\n      break;\n     }\n    }\n    $127 = ($$1247330$us|0)==($$0240|0);\n    $128 = ((($$0252328$us)) + -1|0);\n    $129 = (($$1247330$us) + ($$0239))|0;\n    $$1253$us = $127 ? $128 : $$0252328$us;\n    $$2248$us = $127 ? $$0241 : $129;\n    $130 = (($$0238332$us) + 1)|0;\n    $131 = HEAP32[$0>>2]|0;\n    $132 = ($130>>>0)<($131>>>0);\n    if ($132) {\n     $$0238332$us = $130;$$0249329$us = $$2251$us;$$0252328$us = $$1253$us;$$1243331$us = $$3245$us;$$1247330$us = $$2248$us;\n    } else {\n     break;\n    }\n   }\n  }\n  break;\n }\n default: {\n  $133 = $12&255;\n  $134 = $133 >>> 3;\n  $135 = ($7|0)==(0);\n  if (!($135)) {\n   $136 = (0 - ($134))|0;\n   $137 = (($10) + -1)|0;\n   $138 = Math_imul($134, $137)|0;\n   $139 = (($1) + ($138)|0);\n   $140 = (($7) + -1)|0;\n   $141 = Math_imul($134, $140)|0;\n   $142 = (($1) + ($141)|0);\n   $$0223287$us = 0;$$0225286$us = $139;$$0227285$us = $142;\n   while(1) {\n    _memcpy(($4|0),($$0227285$us|0),($134|0))|0;\n    $$0284$us = 0;$$1226283$us = $$0225286$us;\n    while(1) {\n     _memcpy(($$1226283$us|0),($4|0),($134|0))|0;\n     $143 = (($$1226283$us) + ($136)|0);\n     $144 = (($$0284$us) + 1)|0;\n     $145 = ($144|0)<($9|0);\n     if ($145) {\n      $$0284$us = $144;$$1226283$us = $143;\n     } else {\n      break;\n     }\n    }\n    $146 = (($$0227285$us) + ($136)|0);\n    $147 = (($$0223287$us) + 1)|0;\n    $148 = HEAP32[$0>>2]|0;\n    $149 = ($147>>>0)<($148>>>0);\n    if ($149) {\n     $$0223287$us = $147;$$0225286$us = $143;$$0227285$us = $146;\n    } else {\n     break;\n    }\n   }\n  }\n }\n }\n HEAP32[$0>>2] = $10;\n $150 = HEAP8[$11>>0]|0;\n $151 = $150&255;\n $152 = ($150&255)>(7);\n if ($152) {\n  $153 = $151 >>> 3;\n  $154 = Math_imul($153, $10)|0;\n  $159 = $154;\n } else {\n  $155 = Math_imul($151, $10)|0;\n  $156 = (($155) + 7)|0;\n  $157 = $156 >>> 3;\n  $159 = $157;\n }\n $158 = ((($0)) + 4|0);\n HEAP32[$158>>2] = $159;\n STACKTOP = sp;return;\n}\nfunction _png_do_expand($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0202261 = 0, $$0208263 = 0, $$0208263$pn = 0, $$0218260 = 0, $$0225 = 0, $$0262 = 0, $$1 = 0, $$1203 = 0, $$1209269 = 0, $$1209269$pn = 0, $$1219266 = 0, $$1226 = 0, $$2204267 = 0, $$2210275 = 0, $$2210275$pn = 0, $$2220272 = 0, $$2268 = 0, $$239 = 0, $$3 = 0;\n var $$3205 = 0, $$3211 = 0, $$3221248 = 0, $$4206273 = 0, $$4212257 = 0, $$4222253 = 0, $$4274 = 0, $$5 = 0, $$5207 = 0, $$5213 = 0, $$5223279 = 0, $$6214283 = 0, $$6224287 = 0, $$6250 = 0, $$7215 = 0, $$7256 = 0, $$8216291 = 0, $$8282 = 0, $$9217 = 0, $$9290 = 0;\n var $$pn227289 = 0, $$pn228280 = 0, $$pn229281 = 0, $$pn230254 = 0, $$pn231255 = 0, $$pn232249 = 0, $$pn288 = 0, $$pn298 = 0, $$pre$phi310Z2D = 0, $$pre$phi312Z2D = 0, $$pre$phi314Z2D = 0, $$pre309 = 0, $$pre311 = 0, $$pre313 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;\n var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;\n var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;\n var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;\n var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $exitcond = 0, $exitcond303 = 0, $exitcond304 = 0, $exitcond305 = 0, $exitcond306 = 0, $exitcond307 = 0, $exitcond308 = 0, $not$ = 0, $not$240 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = HEAP32[$0>>2]|0;\n $4 = ((($0)) + 8|0);\n $5 = HEAP16[$4>>1]|0;\n $6 = $5&255;\n $7 = ($6<<24>>24)==(0);\n $8 = ($5&65535) >>> 8;\n $9 = $8&255;\n if (!($7)) {\n  $128 = ($6<<24>>24)==(2);\n  $129 = ($2|0)!=(0|0);\n  $or$cond = $129 & $128;\n  if (!($or$cond)) {\n   return;\n  }\n  $130 = ((($0)) + 9|0);\n  switch ($9<<24>>24) {\n  case 8:  {\n   $131 = ($3|0)==(0);\n   if (!($131)) {\n    $132 = $3 << 2;\n    $133 = (($1) + ($132)|0);\n    $134 = ((($0)) + 4|0);\n    $135 = HEAP32[$134>>2]|0;\n    $136 = (($1) + ($135)|0);\n    $137 = ((($2)) + 6|0);\n    $138 = HEAP16[$137>>1]|0;\n    $139 = ((($2)) + 4|0);\n    $140 = HEAP16[$139>>1]|0;\n    $141 = ((($2)) + 2|0);\n    $142 = HEAP16[$141>>1]|0;\n    $143 = $142&255;\n    $144 = $140&255;\n    $145 = $138&255;\n    $$5223279 = 0;$$pn228280 = $133;$$pn229281 = $136;\n    while(1) {\n     $$8282 = ((($$pn229281)) + -1|0);\n     $$6214283 = ((($$pn228280)) + -1|0);\n     $146 = ((($$pn229281)) + -3|0);\n     $147 = HEAP8[$146>>0]|0;\n     $148 = ($147<<24>>24)==($143<<24>>24);\n     $149 = ((($$pn229281)) + -2|0);\n     if ($148) {\n      $150 = HEAP8[$149>>0]|0;\n      $151 = ($150<<24>>24)==($144<<24>>24);\n      if ($151) {\n       $152 = HEAP8[$$8282>>0]|0;\n       $153 = ($152<<24>>24)==($145<<24>>24);\n       if ($153) {\n        $storemerge = 0;\n       } else {\n        label = 39;\n       }\n      } else {\n       label = 39;\n      }\n     } else {\n      label = 39;\n     }\n     if ((label|0) == 39) {\n      label = 0;\n      $storemerge = -1;\n     }\n     $$7215 = ((($$pn228280)) + -2|0);\n     HEAP8[$$6214283>>0] = $storemerge;\n     $154 = HEAP8[$$8282>>0]|0;\n     $155 = ((($$pn228280)) + -3|0);\n     HEAP8[$$7215>>0] = $154;\n     $156 = HEAP8[$149>>0]|0;\n     $157 = ((($$pn228280)) + -4|0);\n     HEAP8[$155>>0] = $156;\n     $158 = HEAP8[$146>>0]|0;\n     HEAP8[$157>>0] = $158;\n     $159 = (($$5223279) + 1)|0;\n     $exitcond307 = ($159|0)==($3|0);\n     if ($exitcond307) {\n      break;\n     } else {\n      $$5223279 = $159;$$pn228280 = $157;$$pn229281 = $146;\n     }\n    }\n   }\n   break;\n  }\n  case 16:  {\n   $160 = ((($2)) + 2|0);\n   $161 = HEAP16[$160>>1]|0;\n   $162 = ($161&65535) >>> 8;\n   $163 = $162&65535;\n   $164 = ((($2)) + 4|0);\n   $165 = HEAP16[$164>>1]|0;\n   $166 = ($165&65535) >>> 8;\n   $167 = $166&65535;\n   $168 = ((($2)) + 6|0);\n   $169 = HEAP16[$168>>1]|0;\n   $170 = ($169&65535) >>> 8;\n   $171 = $170&65535;\n   $172 = ($3|0)==(0);\n   if (!($172)) {\n    $173 = $3 << 3;\n    $174 = (($1) + ($173)|0);\n    $175 = ((($0)) + 4|0);\n    $176 = HEAP32[$175>>2]|0;\n    $177 = (($1) + ($176)|0);\n    $178 = $161&255;\n    $179 = $165&255;\n    $180 = $169&255;\n    $$6224287 = 0;$$pn227289 = $177;$$pn288 = $174;\n    while(1) {\n     $$9290 = ((($$pn227289)) + -1|0);\n     $$8216291 = ((($$pn288)) + -1|0);\n     $181 = ((($$pn227289)) + -6|0);\n     $182 = HEAP8[$181>>0]|0;\n     $183 = $182&255;\n     $184 = ($183|0)==($163|0);\n     $185 = ((($$pn227289)) + -5|0);\n     if ($184) {\n      $186 = HEAP8[$185>>0]|0;\n      $187 = ($186<<24>>24)==($178<<24>>24);\n      if ($187) {\n       $188 = ((($$pn227289)) + -4|0);\n       $189 = HEAP8[$188>>0]|0;\n       $190 = $189&255;\n       $191 = ($190|0)==($167|0);\n       if ($191) {\n        $192 = ((($$pn227289)) + -3|0);\n        $193 = HEAP8[$192>>0]|0;\n        $194 = ($193<<24>>24)==($179<<24>>24);\n        if ($194) {\n         $195 = ((($$pn227289)) + -2|0);\n         $196 = HEAP8[$195>>0]|0;\n         $197 = $196&255;\n         $198 = ($197|0)==($171|0);\n         if ($198) {\n          $199 = HEAP8[$$9290>>0]|0;\n          $200 = ($199<<24>>24)==($180<<24>>24);\n          if ($200) {\n           $201 = ((($$pn288)) + -2|0);\n           HEAP8[$$8216291>>0] = 0;\n           HEAP8[$201>>0] = 0;\n           $$pre$phi310Z2D = $195;$$pre$phi312Z2D = $192;$$pre$phi314Z2D = $188;\n          } else {\n           label = 50;\n          }\n         } else {\n          label = 50;\n         }\n        } else {\n         label = 50;\n        }\n       } else {\n        label = 50;\n       }\n      } else {\n       label = 50;\n      }\n     } else {\n      label = 50;\n     }\n     if ((label|0) == 50) {\n      label = 0;\n      $202 = ((($$pn288)) + -2|0);\n      HEAP8[$$8216291>>0] = -1;\n      HEAP8[$202>>0] = -1;\n      $$pre309 = ((($$pn227289)) + -2|0);\n      $$pre311 = ((($$pn227289)) + -3|0);\n      $$pre313 = ((($$pn227289)) + -4|0);\n      $$pre$phi310Z2D = $$pre309;$$pre$phi312Z2D = $$pre311;$$pre$phi314Z2D = $$pre313;\n     }\n     $$9217 = ((($$pn288)) + -3|0);\n     $203 = HEAP8[$$9290>>0]|0;\n     $204 = ((($$pn288)) + -4|0);\n     HEAP8[$$9217>>0] = $203;\n     $205 = HEAP8[$$pre$phi310Z2D>>0]|0;\n     $206 = ((($$pn288)) + -5|0);\n     HEAP8[$204>>0] = $205;\n     $207 = HEAP8[$$pre$phi312Z2D>>0]|0;\n     $208 = ((($$pn288)) + -6|0);\n     HEAP8[$206>>0] = $207;\n     $209 = HEAP8[$$pre$phi314Z2D>>0]|0;\n     $210 = ((($$pn288)) + -7|0);\n     HEAP8[$208>>0] = $209;\n     $211 = HEAP8[$185>>0]|0;\n     $212 = ((($$pn288)) + -8|0);\n     HEAP8[$210>>0] = $211;\n     $213 = HEAP8[$181>>0]|0;\n     HEAP8[$212>>0] = $213;\n     $214 = (($$6224287) + 1)|0;\n     $exitcond308 = ($214|0)==($3|0);\n     if ($exitcond308) {\n      break;\n     } else {\n      $$6224287 = $214;$$pn227289 = $181;$$pn288 = $212;\n     }\n    }\n   }\n   break;\n  }\n  default: {\n  }\n  }\n  HEAP8[$4>>0] = 6;\n  $215 = ((($0)) + 10|0);\n  HEAP8[$215>>0] = 4;\n  $216 = HEAP8[$130>>0]|0;\n  $217 = $216&255;\n  $218 = $217 << 2;\n  $219 = $218&255;\n  $220 = ((($0)) + 11|0);\n  HEAP8[$220>>0] = $219;\n  $221 = $218 & 252;\n  $222 = ($221>>>0)>(7);\n  if ($222) {\n   $223 = $221 >>> 3;\n   $224 = Math_imul($223, $3)|0;\n   $229 = $224;\n  } else {\n   $225 = Math_imul($221, $3)|0;\n   $226 = (($225) + 7)|0;\n   $227 = $226 >>> 3;\n   $229 = $227;\n  }\n  $228 = ((($0)) + 4|0);\n  HEAP32[$228>>2] = $229;\n  return;\n }\n $10 = ($2|0)!=(0|0);\n if ($10) {\n  $11 = ((($2)) + 8|0);\n  $12 = HEAP16[$11>>1]|0;\n  $13 = $12&65535;\n  $17 = $13;\n } else {\n  $17 = 0;\n }\n $14 = ((($0)) + 9|0);\n $15 = ($9&255)<(8);\n if ($15) {\n  switch ($9<<24>>24) {\n  case 1:  {\n   $16 = $17 & 1;\n   $18 = (0 - ($16))|0;\n   $19 = $18 & 255;\n   $20 = ($3|0)==(0);\n   if ($20) {\n    $$0225 = $19;\n   } else {\n    $21 = (($3) + 7)|0;\n    $22 = $21 & 7;\n    $23 = $22 ^ 7;\n    $24 = (($1) + ($3)|0);\n    $25 = (($3) + -1)|0;\n    $26 = $25 >>> 3;\n    $27 = (($1) + ($26)|0);\n    $$0202261 = $27;$$0208263$pn = $24;$$0218260 = 0;$$0262 = $23;\n    while(1) {\n     $$0208263 = ((($$0208263$pn)) + -1|0);\n     $28 = HEAP8[$$0202261>>0]|0;\n     $29 = $28&255;\n     $30 = 1 << $$0262;\n     $31 = $29 & $30;\n     $not$240 = ($31|0)!=(0);\n     $$ = $not$240 << 31 >> 31;\n     HEAP8[$$0208263>>0] = $$;\n     $32 = ($$0262|0)==(7);\n     $33 = ((($$0202261)) + -1|0);\n     $34 = (($$0262) + 1)|0;\n     $$1203 = $32 ? $33 : $$0202261;\n     $$1 = $32 ? 0 : $34;\n     $35 = (($$0218260) + 1)|0;\n     $exitcond304 = ($35|0)==($3|0);\n     if ($exitcond304) {\n      $$0225 = $19;\n      break;\n     } else {\n      $$0202261 = $$1203;$$0208263$pn = $$0208263;$$0218260 = $35;$$0262 = $$1;\n     }\n    }\n   }\n   break;\n  }\n  case 2:  {\n   $36 = $17 & 3;\n   $37 = ($36*85)|0;\n   $38 = ($3|0)==(0);\n   if ($38) {\n    $$0225 = $37;\n   } else {\n    $39 = $3 << 1;\n    $40 = (($39) + 6)|0;\n    $41 = $40 & 6;\n    $42 = $41 ^ 6;\n    $43 = (($1) + ($3)|0);\n    $44 = (($3) + -1)|0;\n    $45 = $44 >>> 2;\n    $46 = (($1) + ($45)|0);\n    $$1209269$pn = $43;$$1219266 = 0;$$2204267 = $46;$$2268 = $42;\n    while(1) {\n     $$1209269 = ((($$1209269$pn)) + -1|0);\n     $47 = HEAP8[$$2204267>>0]|0;\n     $48 = $47&255;\n     $49 = $48 >>> $$2268;\n     $50 = $49 & 3;\n     $51 = $50 << 2;\n     $52 = $51 | $50;\n     $53 = $50 << 4;\n     $54 = $52 | $53;\n     $55 = $50 << 6;\n     $56 = $54 | $55;\n     $57 = $56&255;\n     HEAP8[$$1209269>>0] = $57;\n     $58 = ($$2268|0)==(6);\n     $59 = ((($$2204267)) + -1|0);\n     $60 = (($$2268) + 2)|0;\n     $$3205 = $58 ? $59 : $$2204267;\n     $$3 = $58 ? 0 : $60;\n     $61 = (($$1219266) + 1)|0;\n     $exitcond305 = ($61|0)==($3|0);\n     if ($exitcond305) {\n      $$0225 = $37;\n      break;\n     } else {\n      $$1209269$pn = $$1209269;$$1219266 = $61;$$2204267 = $$3205;$$2268 = $$3;\n     }\n    }\n   }\n   break;\n  }\n  case 4:  {\n   $62 = $17 & 15;\n   $63 = ($62*17)|0;\n   $64 = ($3|0)==(0);\n   if ($64) {\n    $$0225 = $63;\n   } else {\n    $65 = $3 << 2;\n    $66 = $65 & 4;\n    $67 = (($1) + ($3)|0);\n    $68 = (($3) + -1)|0;\n    $69 = $68 >>> 1;\n    $70 = (($1) + ($69)|0);\n    $$2210275$pn = $67;$$2220272 = 0;$$4206273 = $70;$$4274 = $66;\n    while(1) {\n     $$2210275 = ((($$2210275$pn)) + -1|0);\n     $71 = HEAP8[$$4206273>>0]|0;\n     $72 = $71&255;\n     $73 = $72 >>> $$4274;\n     $74 = $73 & 15;\n     $75 = $74 << 4;\n     $76 = $75 | $74;\n     $77 = $76&255;\n     HEAP8[$$2210275>>0] = $77;\n     $78 = ($$4274|0)==(4);\n     $79 = ((($$4206273)) + -1|0);\n     $$5207 = $78 ? $79 : $$4206273;\n     $$5 = $78 ? 0 : 4;\n     $80 = (($$2220272) + 1)|0;\n     $exitcond306 = ($80|0)==($3|0);\n     if ($exitcond306) {\n      $$0225 = $63;\n      break;\n     } else {\n      $$2210275$pn = $$2210275;$$2220272 = $80;$$4206273 = $$5207;$$4274 = $$5;\n     }\n    }\n   }\n   break;\n  }\n  default: {\n   $$0225 = $17;\n  }\n  }\n  HEAP8[$14>>0] = 8;\n  $81 = ((($0)) + 11|0);\n  HEAP8[$81>>0] = 8;\n  $82 = ((($0)) + 4|0);\n  HEAP32[$82>>2] = $3;\n  $$1226 = $$0225;$83 = 8;\n } else {\n  $$1226 = $17;$83 = $9;\n }\n if (!($10)) {\n  return;\n }\n switch ($83<<24>>24) {\n case 8:  {\n  $84 = ($3|0)==(0);\n  if (!($84)) {\n   $85 = (($1) + ($3)|0);\n   $86 = $3 << 1;\n   $87 = (($1) + ($86)|0);\n   $88 = $$1226&255;\n   $$3221248 = 0;$$pn232249 = $87;$$pn298 = $85;\n   while(1) {\n    $$6250 = ((($$pn298)) + -1|0);\n    $$3211 = ((($$pn232249)) + -1|0);\n    $89 = HEAP8[$$6250>>0]|0;\n    $90 = ((($$pn232249)) + -2|0);\n    $not$ = ($89<<24>>24)!=($88<<24>>24);\n    $$239 = $not$ << 31 >> 31;\n    HEAP8[$$3211>>0] = $$239;\n    $91 = HEAP8[$$6250>>0]|0;\n    HEAP8[$90>>0] = $91;\n    $92 = (($$3221248) + 1)|0;\n    $exitcond = ($92|0)==($3|0);\n    if ($exitcond) {\n     break;\n    } else {\n     $$3221248 = $92;$$pn232249 = $90;$$pn298 = $$6250;\n    }\n   }\n  }\n  break;\n }\n case 16:  {\n  $93 = ((($0)) + 4|0);\n  $94 = HEAP32[$93>>2]|0;\n  $95 = ($3|0)==(0);\n  if (!($95)) {\n   $96 = $94 << 1;\n   $97 = (($1) + ($96)|0);\n   $98 = (($1) + ($94)|0);\n   $99 = $$1226 >>> 8;\n   $100 = $99&255;\n   $101 = $$1226&255;\n   $$4222253 = 0;$$pn230254 = $97;$$pn231255 = $98;\n   while(1) {\n    $$7256 = ((($$pn231255)) + -1|0);\n    $$4212257 = ((($$pn230254)) + -1|0);\n    $102 = ((($$pn231255)) + -2|0);\n    $103 = HEAP8[$102>>0]|0;\n    $104 = ($103<<24>>24)==($100<<24>>24);\n    if ($104) {\n     $105 = HEAP8[$$7256>>0]|0;\n     $106 = ($105<<24>>24)==($101<<24>>24);\n     if ($106) {\n      $107 = ((($$pn230254)) + -2|0);\n      HEAP8[$$4212257>>0] = 0;\n      HEAP8[$107>>0] = 0;\n     } else {\n      label = 26;\n     }\n    } else {\n     label = 26;\n    }\n    if ((label|0) == 26) {\n     label = 0;\n     $108 = ((($$pn230254)) + -2|0);\n     HEAP8[$$4212257>>0] = -1;\n     HEAP8[$108>>0] = -1;\n    }\n    $$5213 = ((($$pn230254)) + -3|0);\n    $109 = HEAP8[$$7256>>0]|0;\n    $110 = ((($$pn230254)) + -4|0);\n    HEAP8[$$5213>>0] = $109;\n    $111 = HEAP8[$102>>0]|0;\n    HEAP8[$110>>0] = $111;\n    $112 = (($$4222253) + 1)|0;\n    $exitcond303 = ($112|0)==($3|0);\n    if ($exitcond303) {\n     break;\n    } else {\n     $$4222253 = $112;$$pn230254 = $110;$$pn231255 = $102;\n    }\n   }\n  }\n  break;\n }\n default: {\n }\n }\n HEAP8[$4>>0] = 4;\n $113 = ((($0)) + 10|0);\n HEAP8[$113>>0] = 2;\n $114 = HEAP8[$14>>0]|0;\n $115 = $114&255;\n $116 = $115 << 1;\n $117 = $116&255;\n $118 = ((($0)) + 11|0);\n HEAP8[$118>>0] = $117;\n $119 = $116 & 254;\n $120 = ($119>>>0)>(7);\n if ($120) {\n  $121 = $119 >>> 3;\n  $122 = Math_imul($121, $3)|0;\n  $127 = $122;\n } else {\n  $123 = Math_imul($119, $3)|0;\n  $124 = (($123) + 7)|0;\n  $125 = $124 >>> 3;\n  $127 = $125;\n }\n $126 = ((($0)) + 4|0);\n HEAP32[$126>>2] = $127;\n return;\n}\nfunction _png_do_gray_to_rgb($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0104127 = 0, $$0105124 = 0, $$0106123 = 0, $$0107120 = 0, $$0108119 = 0, $$0109117 = 0, $$0110116 = 0, $$0111115 = 0, $$0128 = 0, $$1118 = 0, $$2122 = 0, $$3126 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;\n var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;\n var $98 = 0, $99 = 0, $exitcond = 0, $exitcond133 = 0, $exitcond134 = 0, $exitcond135 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = HEAP32[$0>>2]|0;\n $3 = ((($0)) + 9|0);\n $4 = HEAP8[$3>>0]|0;\n $5 = ($4&255)>(7);\n if (!($5)) {\n  return;\n }\n $6 = ((($0)) + 8|0);\n $7 = HEAP8[$6>>0]|0;\n $8 = $7 & 2;\n $9 = ($8<<24>>24)==(0);\n if (!($9)) {\n  return;\n }\n L7: do {\n  switch ($7<<24>>24) {\n  case 0:  {\n   $10 = ($4<<24>>24)==(8);\n   if ($10) {\n    $11 = (($1) + ($2)|0);\n    $12 = ((($11)) + -1|0);\n    $13 = ($2|0)==(0);\n    if ($13) {\n     break L7;\n    }\n    $14 = $2 << 1;\n    $15 = (($12) + ($14)|0);\n    $$0109117 = $15;$$0110116 = $12;$$0111115 = 0;\n    while(1) {\n     $16 = HEAP8[$$0110116>>0]|0;\n     $17 = ((($$0109117)) + -1|0);\n     HEAP8[$$0109117>>0] = $16;\n     $18 = HEAP8[$$0110116>>0]|0;\n     $19 = ((($$0109117)) + -2|0);\n     HEAP8[$17>>0] = $18;\n     $20 = ((($$0110116)) + -1|0);\n     $21 = HEAP8[$$0110116>>0]|0;\n     $22 = ((($$0109117)) + -3|0);\n     HEAP8[$19>>0] = $21;\n     $23 = (($$0111115) + 1)|0;\n     $exitcond = ($23|0)==($2|0);\n     if ($exitcond) {\n      break;\n     } else {\n      $$0109117 = $22;$$0110116 = $20;$$0111115 = $23;\n     }\n    }\n   } else {\n    $24 = $2 << 1;\n    $25 = (($1) + ($24)|0);\n    $26 = ((($25)) + -1|0);\n    $27 = ($2|0)==(0);\n    if ($27) {\n     break L7;\n    }\n    $28 = $2 << 2;\n    $29 = (($26) + ($28)|0);\n    $$0107120 = $29;$$0108119 = $26;$$1118 = 0;\n    while(1) {\n     $30 = HEAP8[$$0108119>>0]|0;\n     $31 = ((($$0107120)) + -1|0);\n     HEAP8[$$0107120>>0] = $30;\n     $32 = ((($$0108119)) + -1|0);\n     $33 = HEAP8[$32>>0]|0;\n     $34 = ((($$0107120)) + -2|0);\n     HEAP8[$31>>0] = $33;\n     $35 = HEAP8[$$0108119>>0]|0;\n     $36 = ((($$0107120)) + -3|0);\n     HEAP8[$34>>0] = $35;\n     $37 = HEAP8[$32>>0]|0;\n     $38 = ((($$0107120)) + -4|0);\n     HEAP8[$36>>0] = $37;\n     $39 = HEAP8[$$0108119>>0]|0;\n     $40 = ((($$0107120)) + -5|0);\n     HEAP8[$38>>0] = $39;\n     $41 = ((($$0108119)) + -2|0);\n     $42 = HEAP8[$32>>0]|0;\n     $43 = ((($$0107120)) + -6|0);\n     HEAP8[$40>>0] = $42;\n     $44 = (($$1118) + 1)|0;\n     $exitcond133 = ($44|0)==($2|0);\n     if ($exitcond133) {\n      break;\n     } else {\n      $$0107120 = $43;$$0108119 = $41;$$1118 = $44;\n     }\n    }\n   }\n   break;\n  }\n  case 4:  {\n   $45 = ($4<<24>>24)==(8);\n   if ($45) {\n    $46 = $2 << 1;\n    $47 = (($1) + ($46)|0);\n    $48 = ((($47)) + -1|0);\n    $49 = ($2|0)==(0);\n    if ($49) {\n     break L7;\n    }\n    $50 = (($48) + ($46)|0);\n    $$0105124 = $50;$$0106123 = $48;$$2122 = 0;\n    while(1) {\n     $51 = ((($$0106123)) + -1|0);\n     $52 = HEAP8[$$0106123>>0]|0;\n     $53 = ((($$0105124)) + -1|0);\n     HEAP8[$$0105124>>0] = $52;\n     $54 = HEAP8[$51>>0]|0;\n     $55 = ((($$0105124)) + -2|0);\n     HEAP8[$53>>0] = $54;\n     $56 = HEAP8[$51>>0]|0;\n     $57 = ((($$0105124)) + -3|0);\n     HEAP8[$55>>0] = $56;\n     $58 = ((($$0106123)) + -2|0);\n     $59 = HEAP8[$51>>0]|0;\n     $60 = ((($$0105124)) + -4|0);\n     HEAP8[$57>>0] = $59;\n     $61 = (($$2122) + 1)|0;\n     $exitcond134 = ($61|0)==($2|0);\n     if ($exitcond134) {\n      break;\n     } else {\n      $$0105124 = $60;$$0106123 = $58;$$2122 = $61;\n     }\n    }\n   } else {\n    $62 = $2 << 2;\n    $63 = (($1) + ($62)|0);\n    $64 = ((($63)) + -1|0);\n    $65 = ($2|0)==(0);\n    if ($65) {\n     break L7;\n    }\n    $66 = (($64) + ($62)|0);\n    $$0104127 = $64;$$0128 = $66;$$3126 = 0;\n    while(1) {\n     $67 = ((($$0104127)) + -1|0);\n     $68 = HEAP8[$$0104127>>0]|0;\n     $69 = ((($$0128)) + -1|0);\n     HEAP8[$$0128>>0] = $68;\n     $70 = ((($$0104127)) + -2|0);\n     $71 = HEAP8[$67>>0]|0;\n     $72 = ((($$0128)) + -2|0);\n     HEAP8[$69>>0] = $71;\n     $73 = HEAP8[$70>>0]|0;\n     $74 = ((($$0128)) + -3|0);\n     HEAP8[$72>>0] = $73;\n     $75 = ((($$0104127)) + -3|0);\n     $76 = HEAP8[$75>>0]|0;\n     $77 = ((($$0128)) + -4|0);\n     HEAP8[$74>>0] = $76;\n     $78 = HEAP8[$70>>0]|0;\n     $79 = ((($$0128)) + -5|0);\n     HEAP8[$77>>0] = $78;\n     $80 = HEAP8[$75>>0]|0;\n     $81 = ((($$0128)) + -6|0);\n     HEAP8[$79>>0] = $80;\n     $82 = HEAP8[$70>>0]|0;\n     $83 = ((($$0128)) + -7|0);\n     HEAP8[$81>>0] = $82;\n     $84 = ((($$0104127)) + -4|0);\n     $85 = HEAP8[$75>>0]|0;\n     $86 = ((($$0128)) + -8|0);\n     HEAP8[$83>>0] = $85;\n     $87 = (($$3126) + 1)|0;\n     $exitcond135 = ($87|0)==($2|0);\n     if ($exitcond135) {\n      break;\n     } else {\n      $$0104127 = $84;$$0128 = $86;$$3126 = $87;\n     }\n    }\n   }\n   break;\n  }\n  default: {\n  }\n  }\n } while(0);\n $88 = ((($0)) + 10|0);\n $89 = HEAP8[$88>>0]|0;\n $90 = $89&255;\n $91 = (($90) + 2)|0;\n $92 = $91&255;\n HEAP8[$88>>0] = $92;\n $93 = HEAP16[$6>>1]|0;\n $94 = $93&65535;\n $95 = $94 | 2;\n $96 = $95&255;\n HEAP8[$6>>0] = $96;\n $97 = $91 & 255;\n $98 = ($93&65535) >>> 8;\n $99 = $98&65535;\n $100 = Math_imul($99, $97)|0;\n $101 = $100&255;\n $102 = ((($0)) + 11|0);\n HEAP8[$102>>0] = $101;\n $103 = $100 & 255;\n $104 = ($103>>>0)>(7);\n if ($104) {\n  $105 = $103 >>> 3;\n  $106 = Math_imul($105, $2)|0;\n  $111 = $106;\n } else {\n  $107 = Math_imul($103, $2)|0;\n  $108 = (($107) + 7)|0;\n  $109 = $108 >>> 3;\n  $111 = $109;\n }\n $110 = ((($0)) + 4|0);\n HEAP32[$110>>2] = $111;\n return;\n}\nfunction _png_do_check_palette_indexes($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$06978 = 0, $$079 = 0, $$17080 = 0, $$181 = 0, $$27183 = 0, $$284 = 0, $$386 = 0, $$pre = 0, $$pre91 = 0, $$pre92 = 0, $$pre93 = 0, $$pre94 = 0, $$pre95 = 0, $$pre96 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;\n var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;\n var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;\n var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;\n var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;\n var $89 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 420|0);\n $3 = HEAP16[$2>>1]|0;\n $4 = $3&65535;\n $5 = ((($1)) + 9|0);\n $6 = HEAP8[$5>>0]|0;\n $7 = $6&255;\n $8 = 1 << $7;\n $9 = ($4|0)>=($8|0);\n $10 = ($3<<16>>16)==(0);\n $or$cond = $10 | $9;\n if ($or$cond) {\n  return;\n }\n $11 = ((($1)) + 11|0);\n $12 = HEAP8[$11>>0]|0;\n $13 = $12&255;\n $14 = (0 - ($13))|0;\n $15 = HEAP32[$1>>2]|0;\n $16 = Math_imul($15, $14)|0;\n $17 = $16 & 7;\n $18 = ((($0)) + 384|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ((($1)) + 4|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = (($19) + ($21)|0);\n switch ($6<<24>>24) {\n case 1:  {\n  $29 = ($21|0)>(0);\n  if (!($29)) {\n   return;\n  }\n  $30 = ((($0)) + 424|0);\n  $$06978 = $17;$$079 = $22;\n  while(1) {\n   $31 = HEAP8[$$079>>0]|0;\n   $32 = $31&255;\n   $33 = $32 >>> $$06978;\n   $34 = ($33|0)==(0);\n   if (!($34)) {\n    HEAP32[$30>>2] = 1;\n   }\n   $35 = ((($$079)) + -1|0);\n   $36 = ($35>>>0)>($19>>>0);\n   if ($36) {\n    $$06978 = 0;$$079 = $35;\n   } else {\n    break;\n   }\n  }\n  return;\n  break;\n }\n case 2:  {\n  $27 = ($21|0)>(0);\n  if (!($27)) {\n   return;\n  }\n  $28 = ((($0)) + 424|0);\n  $$pre93 = HEAP32[$28>>2]|0;\n  $$17080 = $17;$$181 = $22;$42 = $$pre93;\n  while(1) {\n   $37 = HEAP8[$$181>>0]|0;\n   $38 = $37&255;\n   $39 = $38 >>> $$17080;\n   $40 = $39 & 3;\n   $41 = ($40|0)>($42|0);\n   if ($41) {\n    HEAP32[$28>>2] = $40;\n    $$pre94 = HEAP8[$$181>>0]|0;\n    $44 = $$pre94;$49 = $40;\n   } else {\n    $44 = $37;$49 = $42;\n   }\n   $43 = $44&255;\n   $45 = $43 >>> $$17080;\n   $46 = $45 >>> 2;\n   $47 = $46 & 3;\n   $48 = ($47|0)>($49|0);\n   if ($48) {\n    HEAP32[$28>>2] = $47;\n    $$pre95 = HEAP8[$$181>>0]|0;\n    $51 = $$pre95;$56 = $47;\n   } else {\n    $51 = $44;$56 = $49;\n   }\n   $50 = $51&255;\n   $52 = $50 >>> $$17080;\n   $53 = $52 >>> 4;\n   $54 = $53 & 3;\n   $55 = ($54|0)>($56|0);\n   if ($55) {\n    HEAP32[$28>>2] = $54;\n    $$pre96 = HEAP8[$$181>>0]|0;\n    $58 = $$pre96;$63 = $54;\n   } else {\n    $58 = $51;$63 = $56;\n   }\n   $57 = $58&255;\n   $59 = $57 >>> $$17080;\n   $60 = $59 >>> 6;\n   $61 = $60 & 3;\n   $62 = ($61|0)>($63|0);\n   if ($62) {\n    HEAP32[$28>>2] = $61;\n    $87 = $61;\n   } else {\n    $87 = $63;\n   }\n   $64 = ((($$181)) + -1|0);\n   $65 = ($64>>>0)>($19>>>0);\n   if ($65) {\n    $$17080 = 0;$$181 = $64;$42 = $87;\n   } else {\n    break;\n   }\n  }\n  return;\n  break;\n }\n case 4:  {\n  $25 = ($21|0)>(0);\n  if (!($25)) {\n   return;\n  }\n  $26 = ((($0)) + 424|0);\n  $$pre91 = HEAP32[$26>>2]|0;\n  $$27183 = $17;$$284 = $22;$71 = $$pre91;\n  while(1) {\n   $66 = HEAP8[$$284>>0]|0;\n   $67 = $66&255;\n   $68 = $67 >>> $$27183;\n   $69 = $68 & 15;\n   $70 = ($69|0)>($71|0);\n   if ($70) {\n    HEAP32[$26>>2] = $69;\n    $$pre92 = HEAP8[$$284>>0]|0;\n    $73 = $$pre92;$78 = $69;\n   } else {\n    $73 = $66;$78 = $71;\n   }\n   $72 = $73&255;\n   $74 = $72 >>> $$27183;\n   $75 = $74 >>> 4;\n   $76 = $75 & 15;\n   $77 = ($76|0)>($78|0);\n   if ($77) {\n    HEAP32[$26>>2] = $76;\n    $88 = $76;\n   } else {\n    $88 = $78;\n   }\n   $79 = ((($$284)) + -1|0);\n   $80 = ($79>>>0)>($19>>>0);\n   if ($80) {\n    $$27183 = 0;$$284 = $79;$71 = $88;\n   } else {\n    break;\n   }\n  }\n  return;\n  break;\n }\n case 8:  {\n  $23 = ($21|0)>(0);\n  if (!($23)) {\n   return;\n  }\n  $24 = ((($0)) + 424|0);\n  $$pre = HEAP32[$24>>2]|0;\n  $$386 = $22;$84 = $$pre;\n  while(1) {\n   $81 = HEAP8[$$386>>0]|0;\n   $82 = $81&255;\n   $83 = ($82|0)>($84|0);\n   if ($83) {\n    HEAP32[$24>>2] = $82;\n    $89 = $82;\n   } else {\n    $89 = $84;\n   }\n   $85 = ((($$386)) + -1|0);\n   $86 = ($85>>>0)>($19>>>0);\n   if ($86) {\n    $$386 = $85;$84 = $89;\n   } else {\n    break;\n   }\n  }\n  return;\n  break;\n }\n default: {\n  return;\n }\n }\n}\nfunction _png_read_filter_row_sub($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$02021 = 0, $$022 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($0)) + 11|0);\n $6 = HEAP8[$5>>0]|0;\n $7 = $6&255;\n $8 = (($7) + 7)|0;\n $9 = $8 >>> 3;\n $10 = ($9>>>0)<($4>>>0);\n if (!($10)) {\n  return;\n }\n $11 = (($1) + ($9)|0);\n $12 = (0 - ($9))|0;\n $$02021 = $9;$$022 = $11;\n while(1) {\n  $13 = HEAP8[$$022>>0]|0;\n  $14 = $13&255;\n  $15 = (($$022) + ($12)|0);\n  $16 = HEAP8[$15>>0]|0;\n  $17 = $16&255;\n  $18 = (($17) + ($14))|0;\n  $19 = $18&255;\n  HEAP8[$$022>>0] = $19;\n  $20 = ((($$022)) + 1|0);\n  $21 = (($$02021) + 1)|0;\n  $exitcond = ($21|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$02021 = $21;$$022 = $20;\n  }\n }\n return;\n}\nfunction _png_read_filter_row_up($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$01619 = 0, $$01718 = 0, $$020 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0);\n if ($5) {\n  return;\n } else {\n  $$01619 = $1;$$01718 = 0;$$020 = $2;\n }\n while(1) {\n  $6 = HEAP8[$$01619>>0]|0;\n  $7 = $6&255;\n  $8 = ((($$020)) + 1|0);\n  $9 = HEAP8[$$020>>0]|0;\n  $10 = $9&255;\n  $11 = (($10) + ($7))|0;\n  $12 = $11&255;\n  HEAP8[$$01619>>0] = $12;\n  $13 = ((($$01619)) + 1|0);\n  $14 = (($$01718) + 1)|0;\n  $exitcond = ($14|0)==($4|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01619 = $13;$$01718 = $14;$$020 = $8;\n  }\n }\n return;\n}\nfunction _png_read_filter_row_avg($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$029$lcssa = 0, $$02937 = 0, $$031$lcssa = 0, $$03136 = 0, $$038 = 0, $$13034 = 0, $$13233 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;\n var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $div = 0, $exitcond = 0, $exitcond44 = 0, $scevgep = 0, $scevgep43 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 11|0);\n $4 = HEAP8[$3>>0]|0;\n $5 = $4&255;\n $6 = (($5) + 7)|0;\n $7 = $6 >>> 3;\n $8 = ((($0)) + 4|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = (($9) - ($7))|0;\n $11 = ($7|0)==(0);\n if ($11) {\n  $$029$lcssa = $1;$$031$lcssa = $2;\n } else {\n  $scevgep = (($2) + ($7)|0);\n  $$02937 = $1;$$03136 = $2;$$038 = 0;\n  while(1) {\n   $14 = HEAP8[$$02937>>0]|0;\n   $15 = $14&255;\n   $16 = ((($$03136)) + 1|0);\n   $17 = HEAP8[$$03136>>0]|0;\n   $div = ($17&255) >>> 1;\n   $18 = $div&255;\n   $19 = (($18) + ($15))|0;\n   $20 = $19&255;\n   HEAP8[$$02937>>0] = $20;\n   $21 = ((($$02937)) + 1|0);\n   $22 = (($$038) + 1)|0;\n   $exitcond44 = ($22|0)==($7|0);\n   if ($exitcond44) {\n    break;\n   } else {\n    $$02937 = $21;$$03136 = $16;$$038 = $22;\n   }\n  }\n  $scevgep43 = (($1) + ($7)|0);\n  $$029$lcssa = $scevgep43;$$031$lcssa = $scevgep;\n }\n $12 = ($10|0)==(0);\n if ($12) {\n  return;\n }\n $13 = (0 - ($7))|0;\n $$13034 = $$029$lcssa;$$13233 = $$031$lcssa;$$135 = 0;\n while(1) {\n  $23 = HEAP8[$$13034>>0]|0;\n  $24 = $23&255;\n  $25 = ((($$13233)) + 1|0);\n  $26 = HEAP8[$$13233>>0]|0;\n  $27 = $26&255;\n  $28 = (($$13034) + ($13)|0);\n  $29 = HEAP8[$28>>0]|0;\n  $30 = $29&255;\n  $31 = (($30) + ($27))|0;\n  $32 = $31 >>> 1;\n  $33 = (($32) + ($24))|0;\n  $34 = $33&255;\n  HEAP8[$$13034>>0] = $34;\n  $35 = ((($$13034)) + 1|0);\n  $36 = (($$135) + 1)|0;\n  $exitcond = ($36|0)==($10|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$13034 = $35;$$13233 = $25;$$135 = $36;\n  }\n }\n return;\n}\nfunction _png_read_filter_row_paeth_1byte_pixel($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0 = 0, $$04960 = 0, $$04960$pn = 0, $$05158 = 0, $$05257 = 0, $$055 = 0, $$059 = 0, $$2 = 0, $$54 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = (($1) + ($4)|0);\n $6 = HEAP8[$2>>0]|0;\n $7 = $6&255;\n $8 = HEAP8[$1>>0]|0;\n $9 = $8&255;\n $10 = (($9) + ($7))|0;\n $11 = $10&255;\n HEAP8[$1>>0] = $11;\n $12 = ($4|0)>(1);\n if (!($12)) {\n  return;\n }\n $$055 = ((($1)) + 1|0);\n $$04960$pn = $2;$$05158 = $10;$$05257 = $7;$$059 = $$055;\n while(1) {\n  $$04960 = ((($$04960$pn)) + 1|0);\n  $13 = $$05158 & 255;\n  $14 = HEAP8[$$04960>>0]|0;\n  $15 = $14&255;\n  $16 = (($15) - ($$05257))|0;\n  $17 = (($13) - ($$05257))|0;\n  $18 = ($16|0)<(0);\n  $19 = (0 - ($16))|0;\n  $20 = $18 ? $19 : $16;\n  $21 = ($17|0)<(0);\n  $22 = (0 - ($17))|0;\n  $23 = $21 ? $22 : $17;\n  $24 = (($16) + ($17))|0;\n  $25 = ($24|0)<(0);\n  $26 = (0 - ($24))|0;\n  $27 = $25 ? $26 : $24;\n  $28 = ($23|0)<($20|0);\n  $$ = $28 ? $15 : $13;\n  $$54 = $28 ? $23 : $20;\n  $29 = ($27|0)<($$54|0);\n  $$2 = $29 ? $$05257 : $$;\n  $30 = HEAP8[$$059>>0]|0;\n  $31 = $30&255;\n  $32 = (($$2) + ($31))|0;\n  $33 = $32&255;\n  HEAP8[$$059>>0] = $33;\n  $$0 = ((($$059)) + 1|0);\n  $34 = ($$0>>>0)<($5>>>0);\n  if ($34) {\n   $$04960$pn = $$04960;$$05158 = $32;$$05257 = $15;$$059 = $$0;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _png_read_filter_row_paeth_multibyte_pixel($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0$lcssa = 0, $$060$lcssa = 0, $$06068 = 0, $$069 = 0, $$16166 = 0, $$164 = 0, $$167 = 0, $$65 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;\n var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 11|0);\n $4 = HEAP8[$3>>0]|0;\n $5 = $4&255;\n $6 = (($5) + 7)|0;\n $7 = $6 >>> 3;\n $8 = (($1) + ($7)|0);\n $9 = ($7|0)==(0);\n if ($9) {\n  $$0$lcssa = $1;$$060$lcssa = $2;\n } else {\n  $$06068 = $2;$$069 = $1;\n  while(1) {\n   $10 = HEAP8[$$069>>0]|0;\n   $11 = $10&255;\n   $12 = ((($$06068)) + 1|0);\n   $13 = HEAP8[$$06068>>0]|0;\n   $14 = $13&255;\n   $15 = (($14) + ($11))|0;\n   $16 = $15&255;\n   $17 = ((($$069)) + 1|0);\n   HEAP8[$$069>>0] = $16;\n   $18 = ($17>>>0)<($8>>>0);\n   if ($18) {\n    $$06068 = $12;$$069 = $17;\n   } else {\n    $$0$lcssa = $17;$$060$lcssa = $12;\n    break;\n   }\n  }\n }\n $19 = ((($0)) + 4|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = (($20) - ($7))|0;\n $22 = (($8) + ($21)|0);\n $23 = ($$0$lcssa>>>0)<($22>>>0);\n if (!($23)) {\n  return;\n }\n $24 = (0 - ($7))|0;\n $$16166 = $$060$lcssa;$$167 = $$0$lcssa;\n while(1) {\n  $25 = (($$16166) + ($24)|0);\n  $26 = HEAP8[$25>>0]|0;\n  $27 = $26&255;\n  $28 = (($$167) + ($24)|0);\n  $29 = HEAP8[$28>>0]|0;\n  $30 = $29&255;\n  $31 = ((($$16166)) + 1|0);\n  $32 = HEAP8[$$16166>>0]|0;\n  $33 = $32&255;\n  $34 = (($33) - ($27))|0;\n  $35 = (($30) - ($27))|0;\n  $36 = ($34|0)<(0);\n  $37 = (0 - ($34))|0;\n  $38 = $36 ? $37 : $34;\n  $39 = ($35|0)<(0);\n  $40 = (0 - ($35))|0;\n  $41 = $39 ? $40 : $35;\n  $42 = (($34) + ($35))|0;\n  $43 = ($42|0)<(0);\n  $44 = (0 - ($42))|0;\n  $45 = $43 ? $44 : $42;\n  $46 = ($41|0)<($38|0);\n  $$ = $46 ? $33 : $30;\n  $$65 = $46 ? $41 : $38;\n  $47 = ($45|0)<($$65|0);\n  $$164 = $47 ? $27 : $$;\n  $48 = HEAP8[$$167>>0]|0;\n  $49 = $48&255;\n  $50 = (($$164) + ($49))|0;\n  $51 = $50&255;\n  $52 = ((($$167)) + 1|0);\n  HEAP8[$$167>>0] = $51;\n  $exitcond = ($52|0)==($22|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$16166 = $31;$$167 = $52;\n  }\n }\n return;\n}\nfunction _png_read_image($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$02833$us = 0, $$029 = 0, $$03031$us = 0, $$032$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond35 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 212|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 64;\n $6 = ($5|0)==(0);\n do {\n  if ($6) {\n   $7 = (_png_set_interlace_handling($0)|0);\n   $8 = HEAP32[$3>>2]|0;\n   $9 = $8 & 64;\n   $10 = ($9|0)==(0);\n   if ($10) {\n    _png_read_start_row($0);\n    $$029 = $7;\n    break;\n   } else {\n    _png_app_error($0,25806);\n    $$029 = $7;\n    break;\n   }\n  } else {\n   $11 = ((($0)) + 432|0);\n   $12 = HEAP8[$11>>0]|0;\n   $13 = ($12<<24>>24)==(0);\n   if (!($13)) {\n    $14 = ((($0)) + 216|0);\n    $15 = HEAP32[$14>>2]|0;\n    $16 = $15 & 2;\n    $17 = ($16|0)==(0);\n    if ($17) {\n     _png_warning($0,26339);\n     $18 = ((($0)) + 352|0);\n     $19 = HEAP32[$18>>2]|0;\n     $20 = ((($0)) + 356|0);\n     HEAP32[$20>>2] = $19;\n    }\n   }\n   $21 = (_png_set_interlace_handling($0)|0);\n   $$029 = $21;\n  }\n } while(0);\n $22 = ((($0)) + 352|0);\n $23 = HEAP32[$22>>2]|0;\n $24 = ($$029|0)<(1);\n $25 = ($23|0)==(0);\n $or$cond = $24 | $25;\n if ($or$cond) {\n  return;\n } else {\n  $$02833$us = 0;\n }\n while(1) {\n  $$03031$us = 0;$$032$us = $1;\n  while(1) {\n   $26 = HEAP32[$$032$us>>2]|0;\n   _png_read_row($0,$26,0);\n   $27 = ((($$032$us)) + 4|0);\n   $28 = (($$03031$us) + 1)|0;\n   $exitcond = ($28|0)==($23|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$03031$us = $28;$$032$us = $27;\n   }\n  }\n  $29 = (($$02833$us) + 1)|0;\n  $exitcond35 = ($29|0)==($$029|0);\n  if ($exitcond35) {\n   break;\n  } else {\n   $$02833$us = $29;\n  }\n }\n return;\n}\nfunction _png_set_interlace_handling($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $2 = ((($0)) + 432|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = ($3<<24>>24)==(0);\n if ($4) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $5 = ((($0)) + 216|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 | 2;\n HEAP32[$5>>2] = $7;\n $$0 = 7;\n return ($$0|0);\n}\nfunction _png_read_end($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch$split102D = 0, $switch$split12D = 0, $switch$split132D = 0, $switch$split162D = 0, $switch$split192D = 0, $switch$split222D = 0;\n var $switch$split252D = 0, $switch$split282D = 0, $switch$split2D = 0, $switch$split312D = 0, $switch$split342D = 0, $switch$split372D = 0, $switch$split402D = 0, $switch$split42D = 0, $switch$split432D = 0, $switch$split462D = 0, $switch$split492D = 0, $switch$split72D = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = (_png_chunk_unknown_handling($0,1229209940)|0);\n $4 = ($3|0)==(0);\n if ($4) {\n  _png_read_finish_IDAT($0);\n }\n $5 = ((($0)) + 435|0);\n $6 = HEAP8[$5>>0]|0;\n $7 = ($6<<24>>24)==(3);\n if ($7) {\n  $8 = ((($0)) + 424|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ((($0)) + 420|0);\n  $11 = HEAP16[$10>>1]|0;\n  $12 = $11&65535;\n  $13 = ($9|0)>($12|0);\n  if ($13) {\n   _png_benign_error($0,26404);\n  }\n }\n $14 = ((($0)) + 376|0);\n $15 = ($1|0)==(0|0);\n $16 = ((($0)) + 208|0);\n while(1) {\n  $17 = (_png_read_chunk_header($0)|0);\n  $18 = HEAP32[$14>>2]|0;\n  $switch$split2D = ($18|0)<(1229472850);\n  L13: do {\n   if ($switch$split2D) {\n    switch ($18|0) {\n    case 1229278788:  {\n     break;\n    }\n    default: {\n     label = 11;\n     break L13;\n    }\n    }\n    _png_handle_IEND($0,$1,$17);\n   } else {\n    switch ($18|0) {\n    case 1229472850:  {\n     break;\n    }\n    default: {\n     label = 11;\n     break L13;\n    }\n    }\n    _png_handle_IHDR($0,$1,$17);\n   }\n  } while(0);\n  L18: do {\n   if ((label|0) == 11) {\n    label = 0;\n    if ($15) {\n     (_png_crc_finish($0,$17)|0);\n     break;\n    }\n    $19 = (_png_chunk_unknown_handling($0,$18)|0);\n    $20 = ($19|0)==(0);\n    $21 = ($18|0)==(1229209940);\n    if (!($20)) {\n     if (!($21)) {\n      _png_handle_unknown($0,$1,$17,$19);\n      $26 = ($18|0)==(1347179589);\n      if (!($26)) {\n       break;\n      }\n      $27 = HEAP32[$16>>2]|0;\n      $28 = $27 | 2;\n      HEAP32[$16>>2] = $28;\n      break;\n     }\n     $22 = ($17|0)==(0);\n     if ($22) {\n      $23 = HEAP32[$16>>2]|0;\n      $24 = $23 & 8192;\n      $25 = ($24|0)==(0);\n      if (!($25)) {\n       label = 17;\n      }\n     } else {\n      label = 17;\n     }\n     if ((label|0) == 17) {\n      label = 0;\n      _png_benign_error($0,24356);\n     }\n     _png_handle_unknown($0,$1,$17,$19);\n     break;\n    }\n    if ($21) {\n     $29 = ($17|0)==(0);\n     if ($29) {\n      $30 = HEAP32[$16>>2]|0;\n      $31 = $30 & 8192;\n      $32 = ($31|0)==(0);\n      if (!($32)) {\n       label = 24;\n      }\n     } else {\n      label = 24;\n     }\n     if ((label|0) == 24) {\n      label = 0;\n      _png_benign_error($0,24356);\n     }\n     (_png_crc_finish($0,$17)|0);\n     break;\n    }\n    $switch$split12D = ($18|0)<(1883789683);\n    L43: do {\n     if ($switch$split12D) {\n      $switch$split42D = ($18|0)<(1749635924);\n      if ($switch$split42D) {\n       $switch$split102D = ($18|0)<(1665684045);\n       if ($switch$split102D) {\n        $switch$split222D = ($18|0)<(1649100612);\n        if ($switch$split222D) {\n         switch ($18|0) {\n         case 1347179589:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_PLTE($0,$1,$17);\n         break L18;\n        } else {\n         switch ($18|0) {\n         case 1649100612:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_bKGD($0,$1,$17);\n         break L18;\n        }\n       } else {\n        $switch$split252D = ($18|0)<(1732332865);\n        if ($switch$split252D) {\n         switch ($18|0) {\n         case 1665684045:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_cHRM($0,$1,$17);\n         break L18;\n        } else {\n         switch ($18|0) {\n         case 1732332865:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_gAMA($0,$1,$17);\n         break L18;\n        }\n       }\n      }\n      $switch$split132D = ($18|0)<(1767135348);\n      if ($switch$split132D) {\n       $switch$split282D = ($18|0)<(1766015824);\n       if ($switch$split282D) {\n        switch ($18|0) {\n        case 1749635924:  {\n         break;\n        }\n        default: {\n         break L43;\n        }\n        }\n        _png_handle_hIST($0,$1,$17);\n        break L18;\n       } else {\n        switch ($18|0) {\n        case 1766015824:  {\n         break;\n        }\n        default: {\n         break L43;\n        }\n        }\n        _png_handle_iCCP($0,$1,$17);\n        break L18;\n       }\n      }\n      $switch$split312D = ($18|0)<(1866876531);\n      if ($switch$split312D) {\n       switch ($18|0) {\n       case 1767135348:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_iTXt($0,$1,$17);\n       break L18;\n      }\n      $switch$split462D = ($18|0)<(1883455820);\n      if ($switch$split462D) {\n       switch ($18|0) {\n       case 1866876531:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_oFFs($0,$1,$17);\n       break L18;\n      } else {\n       switch ($18|0) {\n       case 1883455820:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_pCAL($0,$1,$17);\n       break L18;\n      }\n     } else {\n      $switch$split72D = ($18|0)<(1934772034);\n      if ($switch$split72D) {\n       $switch$split162D = ($18|0)<(1933787468);\n       if ($switch$split162D) {\n        $switch$split342D = ($18|0)<(1933723988);\n        if ($switch$split342D) {\n         switch ($18|0) {\n         case 1883789683:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_pHYs($0,$1,$17);\n         break L18;\n        } else {\n         switch ($18|0) {\n         case 1933723988:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_sBIT($0,$1,$17);\n         break L18;\n        }\n       } else {\n        $switch$split372D = ($18|0)<(1934642260);\n        if ($switch$split372D) {\n         switch ($18|0) {\n         case 1933787468:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_sCAL($0,$1,$17);\n         break L18;\n        } else {\n         switch ($18|0) {\n         case 1934642260:  {\n          break;\n         }\n         default: {\n          break L43;\n         }\n         }\n         _png_handle_sPLT($0,$1,$17);\n         break L18;\n        }\n       }\n      }\n      $switch$split192D = ($18|0)<(1950960965);\n      if ($switch$split192D) {\n       $switch$split402D = ($18|0)<(1950701684);\n       if ($switch$split402D) {\n        switch ($18|0) {\n        case 1934772034:  {\n         break;\n        }\n        default: {\n         break L43;\n        }\n        }\n        _png_handle_sRGB($0,$1,$17);\n        break L18;\n       } else {\n        switch ($18|0) {\n        case 1950701684:  {\n         break;\n        }\n        default: {\n         break L43;\n        }\n        }\n        _png_handle_tEXt($0,$1,$17);\n        break L18;\n       }\n      }\n      $switch$split432D = ($18|0)<(1951551059);\n      if ($switch$split432D) {\n       switch ($18|0) {\n       case 1950960965:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_tIME($0,$1,$17);\n       break L18;\n      }\n      $switch$split492D = ($18|0)<(2052348020);\n      if ($switch$split492D) {\n       switch ($18|0) {\n       case 1951551059:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_tRNS($0,$1,$17);\n       break L18;\n      } else {\n       switch ($18|0) {\n       case 2052348020:  {\n        break;\n       }\n       default: {\n        break L43;\n       }\n       }\n       _png_handle_zTXt($0,$1,$17);\n       break L18;\n      }\n     }\n    } while(0);\n    _png_handle_unknown($0,$1,$17,0);\n   }\n  } while(0);\n  $33 = HEAP32[$16>>2]|0;\n  $34 = $33 & 16;\n  $35 = ($34|0)==(0);\n  if (!($35)) {\n   break;\n  }\n }\n return;\n}\nfunction _png_read_finish_IDAT($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 212|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = $2 & 8;\n $4 = ($3|0)==(0);\n if ($4) {\n  _png_read_IDAT_data($0,0,0);\n  $5 = ((($0)) + 236|0);\n  HEAP32[$5>>2] = 0;\n  $6 = HEAP32[$1>>2]|0;\n  $7 = $6 & 8;\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $9 = ((($0)) + 208|0);\n   $10 = HEAP32[$9>>2]|0;\n   $11 = $10 | 8;\n   HEAP32[$9>>2] = $11;\n   $12 = $6 | 8;\n   HEAP32[$1>>2] = $12;\n  }\n }\n $13 = ((($0)) + 220|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)==(1229209940);\n if (!($15)) {\n  return;\n }\n $16 = ((($0)) + 224|0);\n HEAP32[$16>>2] = 0;\n $17 = ((($0)) + 228|0);\n HEAP32[$17>>2] = 0;\n HEAP32[$13>>2] = 0;\n $18 = ((($0)) + 408|0);\n $19 = HEAP32[$18>>2]|0;\n (_png_crc_finish($0,$19)|0);\n return;\n}\nfunction _png_destroy_read_struct($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pre$i = 0, $$pre36$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = HEAP32[$0>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  return;\n }\n _png_destroy_info_struct($4,$2);\n _png_destroy_info_struct($4,$1);\n HEAP32[$0>>2] = 0;\n _png_destroy_gamma_table($4);\n $6 = ((($4)) + 728|0);\n $7 = HEAP32[$6>>2]|0;\n _png_free($4,$7);\n HEAP32[$6>>2] = 0;\n $8 = ((($4)) + 804|0);\n $9 = HEAP32[$8>>2]|0;\n _png_free($4,$9);\n HEAP32[$8>>2] = 0;\n $10 = ((($4)) + 788|0);\n $11 = HEAP32[$10>>2]|0;\n _png_free($4,$11);\n HEAP32[$10>>2] = 0;\n $12 = ((($4)) + 612|0);\n $13 = HEAP32[$12>>2]|0;\n _png_free($4,$13);\n HEAP32[$12>>2] = 0;\n $14 = ((($4)) + 616|0);\n $15 = HEAP32[$14>>2]|0;\n _png_free($4,$15);\n HEAP32[$14>>2] = 0;\n $16 = ((($4)) + 676|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = $17 & 4096;\n $19 = ($18|0)==(0);\n if ($19) {\n  $23 = $17;\n } else {\n  $20 = ((($4)) + 416|0);\n  $21 = HEAP32[$20>>2]|0;\n  _png_zfree($4,$21);\n  HEAP32[$20>>2] = 0;\n  $$pre$i = HEAP32[$16>>2]|0;\n  $23 = $$pre$i;\n }\n $22 = $23 & -4097;\n HEAP32[$16>>2] = $22;\n $24 = $23 & 8192;\n $25 = ($24|0)==(0);\n if ($25) {\n  $29 = $22;\n } else {\n  $26 = ((($4)) + 528|0);\n  $27 = HEAP32[$26>>2]|0;\n  _png_free($4,$27);\n  HEAP32[$26>>2] = 0;\n  $$pre36$i = HEAP32[$16>>2]|0;\n  $29 = $$pre36$i;\n }\n $28 = $29 & -8193;\n HEAP32[$16>>2] = $28;\n $30 = ((($4)) + 224|0);\n (_inflateEnd($30)|0);\n $31 = ((($4)) + 568|0);\n $32 = HEAP32[$31>>2]|0;\n _png_free($4,$32);\n HEAP32[$31>>2] = 0;\n $33 = ((($4)) + 772|0);\n $34 = HEAP32[$33>>2]|0;\n _png_free($4,$34);\n HEAP32[$33>>2] = 0;\n $35 = ((($4)) + 696|0);\n $36 = HEAP32[$35>>2]|0;\n _png_free($4,$36);\n HEAP32[$35>>2] = 0;\n _png_destroy_png_struct($4);\n return;\n}\nfunction _png_destroy_info_struct($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  return;\n }\n $4 = HEAP32[$1>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  return;\n }\n HEAP32[$1>>2] = 0;\n _png_free_data($0,$4,32767,-1);\n _memset(($4|0),0,268)|0;\n _png_free($0,$4);\n return;\n}\nfunction _png_set_strip_16($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 212|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 64;\n $5 = ($4|0)==(0);\n if ($5) {\n  $6 = $3 | 16384;\n  HEAP32[$2>>2] = $6;\n  $7 = ((($0)) + 216|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = $8 | 1024;\n  HEAP32[$7>>2] = $9;\n  return;\n } else {\n  _png_app_error($0,26445);\n  return;\n }\n}\nfunction _png_set_packing($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 436|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = ($3&255)<(8);\n if (!($4)) {\n  return;\n }\n $5 = ((($0)) + 216|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 | 4;\n HEAP32[$5>>2] = $7;\n $8 = ((($0)) + 437|0);\n HEAP8[$8>>0] = 8;\n return;\n}\nfunction _png_set_expand($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 212|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 64;\n $5 = ($4|0)==(0);\n if ($5) {\n  $6 = $3 | 16384;\n  HEAP32[$2>>2] = $6;\n  $7 = ((($0)) + 216|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = $8 | 33558528;\n  HEAP32[$7>>2] = $9;\n  return;\n } else {\n  _png_app_error($0,26445);\n  return;\n }\n}\nfunction _png_set_gray_to_rgb($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 212|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & 64;\n $5 = ($4|0)==(0);\n if ($5) {\n  $6 = $3 | 16384;\n  HEAP32[$2>>2] = $6;\n  $7 = ((($0)) + 216|0);\n  $8 = HEAP32[$7>>2]|0;\n  $phitmp = $8 | 20480;\n  HEAP32[$7>>2] = $phitmp;\n  return;\n } else {\n  _png_app_error($0,26445);\n  return;\n }\n}\nfunction _png_destroy_write_struct($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = HEAP32[$0>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  return;\n }\n _png_destroy_info_struct($3,$1);\n HEAP32[$0>>2] = 0;\n $5 = ((($3)) + 212|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 2;\n $8 = ($7|0)==(0);\n if (!($8)) {\n  $9 = ((($3)) + 224|0);\n  (_deflateEnd($9)|0);\n }\n $10 = ((($3)) + 280|0);\n _png_free_buffer_list($3,$10);\n $11 = ((($3)) + 384|0);\n $12 = HEAP32[$11>>2]|0;\n _png_free($3,$12);\n HEAP32[$11>>2] = 0;\n $13 = ((($3)) + 380|0);\n $14 = HEAP32[$13>>2]|0;\n _png_free($3,$14);\n $15 = ((($3)) + 388|0);\n $16 = HEAP32[$15>>2]|0;\n _png_free($3,$16);\n $17 = ((($3)) + 392|0);\n $18 = HEAP32[$17>>2]|0;\n _png_free($3,$18);\n $19 = ((($3)) + 396|0);\n $20 = HEAP32[$19>>2]|0;\n _png_free($3,$20);\n $21 = ((($3)) + 400|0);\n $22 = HEAP32[$21>>2]|0;\n _png_free($3,$22);\n HEAP32[$13>>2] = 0;\n $23 = ((($3)) + 621|0);\n HEAP8[$23>>0] = 0;\n $24 = ((($3)) + 620|0);\n ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;HEAP32[$15+12>>2]=0|0;\n HEAP8[$24>>0] = 1;\n $25 = ((($3)) + 624|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = ($26|0)==(0|0);\n if (!($27)) {\n  HEAP32[$25>>2] = 0;\n  _png_free($3,$26);\n }\n $28 = ((($3)) + 628|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ($29|0)==(0|0);\n if (!($30)) {\n  HEAP32[$28>>2] = 0;\n  _png_free($3,$29);\n }\n $31 = ((($3)) + 632|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = ($32|0)==(0|0);\n if (!($33)) {\n  HEAP32[$31>>2] = 0;\n  _png_free($3,$32);\n }\n $34 = ((($3)) + 636|0);\n $35 = HEAP32[$34>>2]|0;\n _png_free($3,$35);\n $36 = ((($3)) + 640|0);\n $37 = HEAP32[$36>>2]|0;\n _png_free($3,$37);\n HEAP32[$34>>2] = 0;\n HEAP32[$36>>2] = 0;\n $38 = ((($3)) + 696|0);\n $39 = HEAP32[$38>>2]|0;\n _png_free($3,$39);\n HEAP32[$38>>2] = 0;\n _png_destroy_png_struct($3);\n return;\n}\nfunction _png_create_info_struct($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 0;\n } else {\n  $2 = (_png_malloc_base($0,268)|0);\n  $3 = ($2|0)==(0|0);\n  if ($3) {\n   $$0 = $2;\n  } else {\n   _memset(($2|0),0,268)|0;\n   $$0 = $2;\n  }\n }\n return ($$0|0);\n}\nfunction _png_get_rowbytes($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)!=(0|0);\n $3 = ($1|0)!=(0|0);\n $or$cond = $2 & $3;\n if (!($or$cond)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = ((($1)) + 12|0);\n $5 = HEAP32[$4>>2]|0;\n $$0 = $5;\n return ($$0|0);\n}\nfunction _png_get_error_ptr($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $2 = ((($0)) + 176|0);\n $3 = HEAP32[$2>>2]|0;\n $$0 = $3;\n return ($$0|0);\n}\nfunction _png_default_write_data($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 188|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = (_fwrite($1,1,$2,$5)|0);\n $7 = ($6|0)==($2|0);\n if ($7) {\n  return;\n } else {\n  _png_error($0,26601);\n  // unreachable;\n }\n}\nfunction _png_default_flush($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + 188|0);\n $3 = HEAP32[$2>>2]|0;\n (_fflush($3)|0);\n return;\n}\nfunction _png_set_write_fn($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $png_default_write_data$ = 0, $storemerge14 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ($0|0)==(0|0);\n if ($4) {\n  return;\n }\n $5 = ((($0)) + 188|0);\n HEAP32[$5>>2] = $1;\n $6 = ($2|0)==(0|0);\n $7 = ((($0)) + 180|0);\n $png_default_write_data$ = $6 ? 66 : $2;\n HEAP32[$7>>2] = $png_default_write_data$;\n $8 = ($3|0)==(0|0);\n $9 = ((($0)) + 472|0);\n $storemerge14 = $8 ? 67 : $3;\n HEAP32[$9>>2] = $storemerge14;\n $10 = ((($0)) + 184|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ($11|0)==(0|0);\n if ($12) {\n  return;\n }\n HEAP32[$10>>2] = 0;\n _png_warning($0,26613);\n return;\n}\nfunction _png_write_info_before_PLTE($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$024$i = 0, $$pr = 0, $$pre = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $or$cond = 0;\n var $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  return;\n }\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 1024;\n $7 = ($6|0)==(0);\n if (!($7)) {\n  return;\n }\n _png_write_sig($0);\n $8 = HEAP32[$4>>2]|0;\n $9 = $8 & 4096;\n $10 = ($9|0)==(0);\n if (!($10)) {\n  $11 = ((($0)) + 708|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = ($12|0)==(0);\n  if (!($13)) {\n   _png_warning($0,26681);\n   HEAP32[$11>>2] = 0;\n  }\n }\n $14 = HEAP32[$1>>2]|0;\n $15 = ((($1)) + 4|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ((($1)) + 24|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = $18 & 255;\n $20 = ((($1)) + 25|0);\n $21 = $18 >>> 8;\n $22 = $21 & 255;\n $23 = $18 >>> 16;\n $24 = $23 & 255;\n $25 = $18 >>> 24;\n $26 = ((($1)) + 28|0);\n $27 = HEAP8[$26>>0]|0;\n $28 = $27&255;\n _png_write_IHDR($0,$14,$16,$19,$22,$24,$25,$28);\n $29 = ((($1)) + 114|0);\n $30 = HEAP16[$29>>1]|0;\n $31 = $30 & -32760;\n $32 = ($31<<16>>16)==(8);\n if ($32) {\n  $33 = ((($1)) + 8|0);\n  $34 = HEAP32[$33>>2]|0;\n  $35 = $34 & 1;\n  $36 = ($35|0)==(0);\n  if ($36) {\n   $$pr = $30;\n  } else {\n   $37 = ((($1)) + 40|0);\n   $38 = HEAP32[$37>>2]|0;\n   _png_write_gAMA_fixed($0,$38);\n   $$pre = HEAP16[$29>>1]|0;\n   $$pr = $$pre;\n  }\n } else {\n  $$pr = $30;\n }\n $39 = ($$pr<<16>>16)>(-1);\n $40 = ((($1)) + 8|0);\n do {\n  if ($39) {\n   $41 = HEAP32[$40>>2]|0;\n   $42 = $41 & 4096;\n   $43 = ($42|0)==(0);\n   $44 = $41 & 2048;\n   $45 = ($44|0)==(0);\n   if ($43) {\n    if ($45) {\n     break;\n    }\n    $50 = ((($1)) + 112|0);\n    $51 = HEAP16[$50>>1]|0;\n    $52 = $51&65535;\n    _png_write_sRGB($0,$52);\n    break;\n   }\n   if (!($45)) {\n    _png_app_warning($0,26730);\n   }\n   $46 = ((($1)) + 116|0);\n   $47 = HEAP32[$46>>2]|0;\n   $48 = ((($1)) + 120|0);\n   $49 = HEAP32[$48>>2]|0;\n   _png_write_iCCP($0,$47,$49);\n  }\n } while(0);\n $53 = HEAP32[$40>>2]|0;\n $54 = $53 & 2;\n $55 = ($54|0)==(0);\n if (!($55)) {\n  $56 = ((($1)) + 148|0);\n  $57 = HEAP8[$20>>0]|0;\n  $58 = $57&255;\n  _png_write_sBIT($0,$56,$58);\n }\n $59 = HEAP16[$29>>1]|0;\n $60 = $59 & -32752;\n $61 = ($60<<16>>16)==(16);\n if ($61) {\n  $62 = HEAP32[$40>>2]|0;\n  $63 = $62 & 4;\n  $64 = ($63|0)==(0);\n  if (!($64)) {\n   $65 = ((($1)) + 44|0);\n   _png_write_cHRM_fixed($0,$65);\n  }\n }\n $66 = ((($1)) + 240|0);\n $67 = HEAP32[$66>>2]|0;\n $68 = ($67|0)>(0);\n if ($68) {\n  $69 = ((($1)) + 236|0);\n  $70 = HEAP32[$69>>2]|0;\n  $71 = ((($0)) + 688|0);\n  $72 = (($70) + (($67*20)|0)|0);\n  $$024$i = $70;\n  while(1) {\n   $73 = ((($$024$i)) + 16|0);\n   $74 = HEAP8[$73>>0]|0;\n   $75 = $74 & 1;\n   $76 = ($75<<24>>24)==(0);\n   do {\n    if (!($76)) {\n     $77 = (_png_handle_as_unknown($0,$$024$i)|0);\n     $78 = ($77|0)==(1);\n     if (!($78)) {\n      $79 = ((($$024$i)) + 3|0);\n      $80 = HEAP8[$79>>0]|0;\n      $81 = $80 & 32;\n      $82 = ($81<<24>>24)!=(0);\n      $83 = ($77|0)==(3);\n      $or$cond$i = $83 | $82;\n      if (!($or$cond$i)) {\n       $84 = ($77|0)==(0);\n       if (!($84)) {\n        break;\n       }\n       $85 = HEAP32[$71>>2]|0;\n       $86 = ($85|0)==(3);\n       if (!($86)) {\n        break;\n       }\n      }\n      $87 = ((($$024$i)) + 12|0);\n      $88 = HEAP32[$87>>2]|0;\n      $89 = ($88|0)==(0);\n      if ($89) {\n       _png_warning($0,26776);\n       $$pre$i = HEAP32[$87>>2]|0;\n       $92 = $$pre$i;\n      } else {\n       $92 = $88;\n      }\n      $90 = ((($$024$i)) + 8|0);\n      $91 = HEAP32[$90>>2]|0;\n      _png_write_chunk($0,$$024$i,$91,$92);\n     }\n    }\n   } while(0);\n   $93 = ((($$024$i)) + 20|0);\n   $94 = ($93>>>0)<($72>>>0);\n   if ($94) {\n    $$024$i = $93;\n   } else {\n    break;\n   }\n  }\n }\n $95 = HEAP32[$4>>2]|0;\n $96 = $95 | 1024;\n HEAP32[$4>>2] = $96;\n return;\n}\nfunction _png_handle_as_unknown($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $4 = ((($0)) + 692|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0);\n if ($6) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $7 = ((($0)) + 696|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($5*5)|0;\n $10 = (($8) + ($9)|0);\n $$015 = $10;\n while(1) {\n  $11 = ((($$015)) + -5|0);\n  $12 = (_memcmp($1,$11,4)|0);\n  $13 = ($12|0)==(0);\n  if ($13) {\n   break;\n  }\n  $17 = ($11>>>0)>($8>>>0);\n  if ($17) {\n   $$015 = $11;\n  } else {\n   $$0 = 0;\n   label = 7;\n   break;\n  }\n }\n if ((label|0) == 7) {\n  return ($$0|0);\n }\n $14 = ((($$015)) + -1|0);\n $15 = HEAP8[$14>>0]|0;\n $16 = $15&255;\n $$0 = $16;\n return ($$0|0);\n}\nfunction _png_write_info($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0113117 = 0, $$0119 = 0, $$024$i = 0, $$1116 = 0, $$pre = 0, $$pre$i = 0, $$pre121 = 0, $$pre122 = 0, $$pre123 = 0, $$pre124 = 0, $$pre125 = 0, $$pre126 = 0, $$pre127 = 0, $$pre128 = 0, $$pre129 = 0, $$pre130 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;\n var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;\n var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;\n var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;\n var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;\n var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;\n var $194 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n $3 = ($1|0)==(0|0);\n $or$cond = $2 | $3;\n if ($or$cond) {\n  return;\n }\n _png_write_info_before_PLTE($0,$1);\n $4 = ((($1)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 8;\n $7 = ($6|0)==(0);\n if ($7) {\n  $13 = ((($1)) + 25|0);\n  $14 = HEAP8[$13>>0]|0;\n  $15 = ($14<<24>>24)==(3);\n  if ($15) {\n   _png_error($0,26810);\n   // unreachable;\n  } else {\n   $17 = $5;\n  }\n } else {\n  $8 = ((($1)) + 16|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ((($1)) + 20|0);\n  $11 = HEAP16[$10>>1]|0;\n  $12 = $11&65535;\n  _png_write_PLTE($0,$9,$12);\n  $$pre = HEAP32[$4>>2]|0;\n  $17 = $$pre;\n }\n $16 = $17 & 16;\n $18 = ($16|0)==(0);\n if ($18) {\n  $48 = $17;\n } else {\n  $19 = ((($0)) + 216|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = $20 & 524288;\n  $22 = ($21|0)==(0);\n  $$pre130 = ((($1)) + 25|0);\n  if (!($22)) {\n   $23 = HEAP8[$$pre130>>0]|0;\n   $24 = ($23<<24>>24)==(3);\n   if ($24) {\n    $25 = ((($1)) + 22|0);\n    $26 = HEAP16[$25>>1]|0;\n    $27 = ($26<<16>>16)==(0);\n    if (!($27)) {\n     $28 = ((($1)) + 156|0);\n     $$0119 = 0;\n     while(1) {\n      $29 = HEAP32[$28>>2]|0;\n      $30 = (($29) + ($$0119)|0);\n      $31 = HEAP8[$30>>0]|0;\n      $32 = $31&255;\n      $33 = $32 ^ 255;\n      $34 = $33&255;\n      HEAP8[$30>>0] = $34;\n      $35 = (($$0119) + 1)|0;\n      $36 = HEAP16[$25>>1]|0;\n      $37 = $36&65535;\n      $38 = ($35|0)<($37|0);\n      if ($38) {\n       $$0119 = $35;\n      } else {\n       break;\n      }\n     }\n    }\n   }\n  }\n  $39 = ((($1)) + 156|0);\n  $40 = HEAP32[$39>>2]|0;\n  $41 = ((($1)) + 160|0);\n  $42 = ((($1)) + 22|0);\n  $43 = HEAP16[$42>>1]|0;\n  $44 = $43&65535;\n  $45 = HEAP8[$$pre130>>0]|0;\n  $46 = $45&255;\n  _png_write_tRNS($0,$40,$41,$44,$46);\n  $$pre121 = HEAP32[$4>>2]|0;\n  $48 = $$pre121;\n }\n $47 = $48 & 32;\n $49 = ($47|0)==(0);\n if ($49) {\n  $55 = $48;\n } else {\n  $50 = ((($1)) + 170|0);\n  $51 = ((($1)) + 25|0);\n  $52 = HEAP8[$51>>0]|0;\n  $53 = $52&255;\n  _png_write_bKGD($0,$50,$53);\n  $$pre122 = HEAP32[$4>>2]|0;\n  $55 = $$pre122;\n }\n $54 = $55 & 64;\n $56 = ($54|0)==(0);\n if ($56) {\n  $63 = $55;\n } else {\n  $57 = ((($1)) + 204|0);\n  $58 = HEAP32[$57>>2]|0;\n  $59 = ((($1)) + 20|0);\n  $60 = HEAP16[$59>>1]|0;\n  $61 = $60&65535;\n  _png_write_hIST($0,$58,$61);\n  $$pre123 = HEAP32[$4>>2]|0;\n  $63 = $$pre123;\n }\n $62 = $63 & 256;\n $64 = ($62|0)==(0);\n if ($64) {\n  $73 = $63;\n } else {\n  $65 = ((($1)) + 180|0);\n  $66 = HEAP32[$65>>2]|0;\n  $67 = ((($1)) + 184|0);\n  $68 = HEAP32[$67>>2]|0;\n  $69 = ((($1)) + 188|0);\n  $70 = HEAP8[$69>>0]|0;\n  $71 = $70&255;\n  _png_write_oFFs($0,$66,$68,$71);\n  $$pre124 = HEAP32[$4>>2]|0;\n  $73 = $$pre124;\n }\n $72 = $73 & 1024;\n $74 = ($72|0)==(0);\n if ($74) {\n  $92 = $73;\n } else {\n  $75 = ((($1)) + 208|0);\n  $76 = HEAP32[$75>>2]|0;\n  $77 = ((($1)) + 212|0);\n  $78 = HEAP32[$77>>2]|0;\n  $79 = ((($1)) + 216|0);\n  $80 = HEAP32[$79>>2]|0;\n  $81 = ((($1)) + 228|0);\n  $82 = HEAP16[$81>>1]|0;\n  $83 = $82&65535;\n  $84 = $83 & 255;\n  $85 = ($82&65535) >>> 8;\n  $86 = $85&65535;\n  $87 = ((($1)) + 220|0);\n  $88 = HEAP32[$87>>2]|0;\n  $89 = ((($1)) + 224|0);\n  $90 = HEAP32[$89>>2]|0;\n  _png_write_pCAL($0,$76,$78,$80,$84,$86,$88,$90);\n  $$pre125 = HEAP32[$4>>2]|0;\n  $92 = $$pre125;\n }\n $91 = $92 & 16384;\n $93 = ($91|0)==(0);\n if ($93) {\n  $102 = $92;\n } else {\n  $94 = ((($1)) + 252|0);\n  $95 = HEAP8[$94>>0]|0;\n  $96 = $95&255;\n  $97 = ((($1)) + 256|0);\n  $98 = HEAP32[$97>>2]|0;\n  $99 = ((($1)) + 260|0);\n  $100 = HEAP32[$99>>2]|0;\n  _png_write_sCAL_s($0,$96,$98,$100);\n  $$pre126 = HEAP32[$4>>2]|0;\n  $102 = $$pre126;\n }\n $101 = $102 & 128;\n $103 = ($101|0)==(0);\n if ($103) {\n  $112 = $102;\n } else {\n  $104 = ((($1)) + 192|0);\n  $105 = HEAP32[$104>>2]|0;\n  $106 = ((($1)) + 196|0);\n  $107 = HEAP32[$106>>2]|0;\n  $108 = ((($1)) + 200|0);\n  $109 = HEAP8[$108>>0]|0;\n  $110 = $109&255;\n  _png_write_pHYs($0,$105,$107,$110);\n  $$pre127 = HEAP32[$4>>2]|0;\n  $112 = $$pre127;\n }\n $111 = $112 & 512;\n $113 = ($111|0)==(0);\n if ($113) {\n  $119 = $112;\n } else {\n  $114 = ((($1)) + 140|0);\n  _png_write_tIME($0,$114);\n  $115 = ((($0)) + 208|0);\n  $116 = HEAP32[$115>>2]|0;\n  $117 = $116 | 512;\n  HEAP32[$115>>2] = $117;\n  $$pre128 = HEAP32[$4>>2]|0;\n  $119 = $$pre128;\n }\n $118 = $119 & 8192;\n $120 = ($118|0)==(0);\n if (!($120)) {\n  $121 = ((($1)) + 248|0);\n  $122 = HEAP32[$121>>2]|0;\n  $123 = ($122|0)>(0);\n  if ($123) {\n   $124 = ((($1)) + 244|0);\n   $$0113117 = 0;\n   while(1) {\n    $129 = HEAP32[$124>>2]|0;\n    $130 = (($129) + ($$0113117<<4)|0);\n    _png_write_sPLT($0,$130);\n    $131 = (($$0113117) + 1)|0;\n    $132 = HEAP32[$121>>2]|0;\n    $133 = ($131|0)<($132|0);\n    if ($133) {\n     $$0113117 = $131;\n    } else {\n     break;\n    }\n   }\n  }\n }\n $125 = ((($1)) + 128|0);\n $126 = HEAP32[$125>>2]|0;\n $127 = ($126|0)>(0);\n if ($127) {\n  $128 = ((($1)) + 136|0);\n  $$pre129 = HEAP32[$128>>2]|0;\n  $$1116 = 0;$135 = $$pre129;\n  while(1) {\n   $134 = (($135) + (($$1116*28)|0)|0);\n   $136 = HEAP32[$134>>2]|0;\n   $137 = ($136|0)>(0);\n   L50: do {\n    if ($137) {\n     $138 = (((($135) + (($$1116*28)|0)|0)) + 4|0);\n     $139 = HEAP32[$138>>2]|0;\n     $140 = (((($135) + (($$1116*28)|0)|0)) + 20|0);\n     $141 = HEAP32[$140>>2]|0;\n     $142 = (((($135) + (($$1116*28)|0)|0)) + 24|0);\n     $143 = HEAP32[$142>>2]|0;\n     $144 = (((($135) + (($$1116*28)|0)|0)) + 8|0);\n     $145 = HEAP32[$144>>2]|0;\n     _png_write_iTXt($0,$136,$139,$141,$143,$145);\n     $146 = HEAP32[$128>>2]|0;\n     $147 = (($146) + (($$1116*28)|0)|0);\n     $148 = HEAP32[$147>>2]|0;\n     $149 = ($148|0)==(-1);\n     if ($149) {\n      HEAP32[$147>>2] = -3;\n      $194 = $146;\n      break;\n     } else {\n      HEAP32[$147>>2] = -2;\n      $194 = $146;\n      break;\n     }\n    } else {\n     switch ($136|0) {\n     case 0:  {\n      $150 = (((($135) + (($$1116*28)|0)|0)) + 4|0);\n      $151 = HEAP32[$150>>2]|0;\n      $152 = (((($135) + (($$1116*28)|0)|0)) + 8|0);\n      $153 = HEAP32[$152>>2]|0;\n      _png_write_zTXt($0,$151,$153,0);\n      $154 = HEAP32[$128>>2]|0;\n      $155 = (($154) + (($$1116*28)|0)|0);\n      HEAP32[$155>>2] = -2;\n      $194 = $154;\n      break L50;\n      break;\n     }\n     case -1:  {\n      $156 = (((($135) + (($$1116*28)|0)|0)) + 4|0);\n      $157 = HEAP32[$156>>2]|0;\n      $158 = (((($135) + (($$1116*28)|0)|0)) + 8|0);\n      $159 = HEAP32[$158>>2]|0;\n      _png_write_tEXt($0,$157,$159,0);\n      $160 = HEAP32[$128>>2]|0;\n      $161 = (($160) + (($$1116*28)|0)|0);\n      HEAP32[$161>>2] = -3;\n      $194 = $160;\n      break L50;\n      break;\n     }\n     default: {\n      $194 = $135;\n      break L50;\n     }\n     }\n    }\n   } while(0);\n   $162 = (($$1116) + 1)|0;\n   $163 = HEAP32[$125>>2]|0;\n   $164 = ($162|0)<($163|0);\n   if ($164) {\n    $$1116 = $162;$135 = $194;\n   } else {\n    break;\n   }\n  }\n }\n $165 = ((($1)) + 240|0);\n $166 = HEAP32[$165>>2]|0;\n $167 = ($166|0)>(0);\n if (!($167)) {\n  return;\n }\n $168 = ((($1)) + 236|0);\n $169 = HEAP32[$168>>2]|0;\n $170 = ((($0)) + 688|0);\n $171 = (($169) + (($166*20)|0)|0);\n $$024$i = $169;\n while(1) {\n  $172 = ((($$024$i)) + 16|0);\n  $173 = HEAP8[$172>>0]|0;\n  $174 = $173 & 2;\n  $175 = ($174<<24>>24)==(0);\n  do {\n   if (!($175)) {\n    $176 = (_png_handle_as_unknown($0,$$024$i)|0);\n    $177 = ($176|0)==(1);\n    if (!($177)) {\n     $178 = ((($$024$i)) + 3|0);\n     $179 = HEAP8[$178>>0]|0;\n     $180 = $179 & 32;\n     $181 = ($180<<24>>24)!=(0);\n     $182 = ($176|0)==(3);\n     $or$cond$i = $182 | $181;\n     if (!($or$cond$i)) {\n      $183 = ($176|0)==(0);\n      if (!($183)) {\n       break;\n      }\n      $184 = HEAP32[$170>>2]|0;\n      $185 = ($184|0)==(3);\n      if (!($185)) {\n       break;\n      }\n     }\n     $186 = ((($$024$i)) + 12|0);\n     $187 = HEAP32[$186>>2]|0;\n     $188 = ($187|0)==(0);\n     if ($188) {\n      _png_warning($0,26776);\n      $$pre$i = HEAP32[$186>>2]|0;\n      $191 = $$pre$i;\n     } else {\n      $191 = $187;\n     }\n     $189 = ((($$024$i)) + 8|0);\n     $190 = HEAP32[$189>>2]|0;\n     _png_write_chunk($0,$$024$i,$190,$191);\n    }\n   }\n  } while(0);\n  $192 = ((($$024$i)) + 20|0);\n  $193 = ($192>>>0)<($171>>>0);\n  if ($193) {\n   $$024$i = $192;\n  } else {\n   break;\n  }\n }\n return;\n}\nfunction _png_write_end($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$024$i = 0, $$054 = 0, $$pre = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 208|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 4;\n $6 = ($5|0)==(0);\n if ($6) {\n  _png_error($0,26853);\n  // unreachable;\n }\n $7 = ((($0)) + 424|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($0)) + 420|0);\n $10 = HEAP16[$9>>1]|0;\n $11 = $10&65535;\n $12 = ($8|0)>($11|0);\n if ($12) {\n  _png_benign_error($0,26880);\n }\n $13 = ($1|0)==(0|0);\n if (!($13)) {\n  $14 = ((($1)) + 8|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = $15 & 512;\n  $17 = ($16|0)==(0);\n  if (!($17)) {\n   $18 = HEAP32[$3>>2]|0;\n   $19 = $18 & 512;\n   $20 = ($19|0)==(0);\n   if ($20) {\n    $21 = ((($1)) + 140|0);\n    _png_write_tIME($0,$21);\n   }\n  }\n  $22 = ((($1)) + 128|0);\n  $23 = HEAP32[$22>>2]|0;\n  $24 = ($23|0)>(0);\n  if ($24) {\n   $25 = ((($1)) + 136|0);\n   $$pre = HEAP32[$25>>2]|0;\n   $$054 = 0;$27 = $$pre;\n   while(1) {\n    $26 = (($27) + (($$054*28)|0)|0);\n    $28 = HEAP32[$26>>2]|0;\n    $29 = ($28|0)>(0);\n    do {\n     if ($29) {\n      $30 = (((($27) + (($$054*28)|0)|0)) + 4|0);\n      $31 = HEAP32[$30>>2]|0;\n      $32 = (((($27) + (($$054*28)|0)|0)) + 20|0);\n      $33 = HEAP32[$32>>2]|0;\n      $34 = (((($27) + (($$054*28)|0)|0)) + 24|0);\n      $35 = HEAP32[$34>>2]|0;\n      $36 = (((($27) + (($$054*28)|0)|0)) + 8|0);\n      $37 = HEAP32[$36>>2]|0;\n      _png_write_iTXt($0,$28,$31,$33,$35,$37);\n      $38 = HEAP32[$25>>2]|0;\n      $39 = (($38) + (($$054*28)|0)|0);\n      $40 = HEAP32[$39>>2]|0;\n      $41 = ($40|0)==(-1);\n      if ($41) {\n       HEAP32[$39>>2] = -3;\n       $90 = $38;\n       break;\n      } else {\n       HEAP32[$39>>2] = -2;\n       $90 = $38;\n       break;\n      }\n     } else {\n      $42 = ($28|0)>(-1);\n      if ($42) {\n       $43 = (((($27) + (($$054*28)|0)|0)) + 4|0);\n       $44 = HEAP32[$43>>2]|0;\n       $45 = (((($27) + (($$054*28)|0)|0)) + 8|0);\n       $46 = HEAP32[$45>>2]|0;\n       _png_write_zTXt($0,$44,$46,$28);\n       $47 = HEAP32[$25>>2]|0;\n       $48 = (($47) + (($$054*28)|0)|0);\n       HEAP32[$48>>2] = -2;\n       $90 = $47;\n       break;\n      }\n      $49 = ($28|0)==(-1);\n      if ($49) {\n       $50 = (((($27) + (($$054*28)|0)|0)) + 4|0);\n       $51 = HEAP32[$50>>2]|0;\n       $52 = (((($27) + (($$054*28)|0)|0)) + 8|0);\n       $53 = HEAP32[$52>>2]|0;\n       _png_write_tEXt($0,$51,$53,0);\n       $54 = HEAP32[$25>>2]|0;\n       $55 = (($54) + (($$054*28)|0)|0);\n       HEAP32[$55>>2] = -3;\n       $90 = $54;\n      } else {\n       $90 = $27;\n      }\n     }\n    } while(0);\n    $56 = (($$054) + 1)|0;\n    $57 = HEAP32[$22>>2]|0;\n    $58 = ($56|0)<($57|0);\n    if ($58) {\n     $$054 = $56;$27 = $90;\n    } else {\n     break;\n    }\n   }\n  }\n  $59 = ((($1)) + 240|0);\n  $60 = HEAP32[$59>>2]|0;\n  $61 = ($60|0)>(0);\n  if ($61) {\n   $62 = ((($1)) + 236|0);\n   $63 = HEAP32[$62>>2]|0;\n   $64 = ((($0)) + 688|0);\n   $65 = (($63) + (($60*20)|0)|0);\n   $$024$i = $63;\n   while(1) {\n    $66 = ((($$024$i)) + 16|0);\n    $67 = HEAP8[$66>>0]|0;\n    $68 = $67 & 8;\n    $69 = ($68<<24>>24)==(0);\n    do {\n     if (!($69)) {\n      $70 = (_png_handle_as_unknown($0,$$024$i)|0);\n      $71 = ($70|0)==(1);\n      if (!($71)) {\n       $72 = ((($$024$i)) + 3|0);\n       $73 = HEAP8[$72>>0]|0;\n       $74 = $73 & 32;\n       $75 = ($74<<24>>24)!=(0);\n       $76 = ($70|0)==(3);\n       $or$cond$i = $76 | $75;\n       if (!($or$cond$i)) {\n        $77 = ($70|0)==(0);\n        if (!($77)) {\n         break;\n        }\n        $78 = HEAP32[$64>>2]|0;\n        $79 = ($78|0)==(3);\n        if (!($79)) {\n         break;\n        }\n       }\n       $80 = ((($$024$i)) + 12|0);\n       $81 = HEAP32[$80>>2]|0;\n       $82 = ($81|0)==(0);\n       if ($82) {\n        _png_warning($0,26776);\n        $$pre$i = HEAP32[$80>>2]|0;\n        $85 = $$pre$i;\n       } else {\n        $85 = $81;\n       }\n       $83 = ((($$024$i)) + 8|0);\n       $84 = HEAP32[$83>>2]|0;\n       _png_write_chunk($0,$$024$i,$84,$85);\n      }\n     }\n    } while(0);\n    $86 = ((($$024$i)) + 20|0);\n    $87 = ($86>>>0)<($65>>>0);\n    if ($87) {\n     $$024$i = $86;\n    } else {\n     break;\n    }\n   }\n  }\n }\n $88 = HEAP32[$3>>2]|0;\n $89 = $88 | 8;\n HEAP32[$3>>2] = $89;\n _png_write_IEND($0);\n return;\n}\nfunction _png_create_write_struct($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = (_png_create_png_struct($0,$1,$2,$3,0,0,0)|0);\n $5 = ($4|0)==(0|0);\n if ($5) {\n  return ($4|0);\n }\n $6 = ((($4)) + 284|0);\n HEAP32[$6>>2] = 8192;\n $7 = ((($4)) + 304|0);\n HEAP32[$7>>2] = 1;\n $8 = ((($4)) + 288|0);\n HEAP32[$8>>2] = -1;\n $9 = ((($4)) + 300|0);\n HEAP32[$9>>2] = 8;\n $10 = ((($4)) + 296|0);\n HEAP32[$10>>2] = 15;\n $11 = ((($4)) + 292|0);\n HEAP32[$11>>2] = 8;\n $12 = ((($4)) + 324|0);\n HEAP32[$12>>2] = 0;\n $13 = ((($4)) + 308|0);\n HEAP32[$13>>2] = -1;\n $14 = ((($4)) + 320|0);\n HEAP32[$14>>2] = 8;\n $15 = ((($4)) + 316|0);\n HEAP32[$15>>2] = 15;\n $16 = ((($4)) + 312|0);\n HEAP32[$16>>2] = 8;\n $17 = ((($4)) + 212|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = $18 | 2097152;\n HEAP32[$17>>2] = $19;\n _png_set_write_fn($4,0,0,0);\n return ($4|0);\n}\nfunction _png_write_row($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$i = 0, $$0673$i$lver$orig = 0, $$0682$i$lver$orig = 0, $$0715$i$lver$orig = 0, $$0724$i$lver$orig = 0, $$1$i = 0, $$idx$val = 0, $$idx53$val = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;\n var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;\n var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;\n var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;\n var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;\n var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$lver$orig = 0, $exitcond8$i$lver$orig = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  STACKTOP = sp;return;\n }\n $4 = ((($0)) + 372|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0);\n do {\n  if ($6) {\n   $7 = ((($0)) + 433|0);\n   $8 = HEAP8[$7>>0]|0;\n   $9 = ($8<<24>>24)==(0);\n   if ($9) {\n    $10 = ((($0)) + 208|0);\n    $11 = HEAP32[$10>>2]|0;\n    $12 = $11 & 1024;\n    $13 = ($12|0)==(0);\n    if ($13) {\n     _png_error($0,26922);\n     // unreachable;\n    } else {\n     _png_write_start_row($0);\n     break;\n    }\n   }\n  }\n } while(0);\n $14 = ((($0)) + 432|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = $15&65535;\n $17 = $15&255;\n $18 = ($17<<24>>24)==(0);\n $19 = ($16&65535) >>> 8;\n $20 = $19&255;\n $21 = $15 >>> 24;\n $22 = $21&255;\n L11: do {\n  if (!($18)) {\n   $23 = ((($0)) + 216|0);\n   $24 = HEAP32[$23>>2]|0;\n   $25 = $24 & 2;\n   $26 = ($25|0)==(0);\n   if (!($26)) {\n    switch ($20<<24>>24) {\n    case 0:  {\n     $27 = HEAP32[$4>>2]|0;\n     $28 = $27 & 7;\n     $29 = ($28|0)==(0);\n     if ($29) {\n      break L11;\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 1:  {\n     $30 = HEAP32[$4>>2]|0;\n     $31 = $30 & 7;\n     $32 = ($31|0)==(0);\n     if ($32) {\n      $33 = ((($0)) + 348|0);\n      $34 = HEAP32[$33>>2]|0;\n      $35 = ($34>>>0)<(5);\n      if (!($35)) {\n       break L11;\n      }\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 2:  {\n     $36 = HEAP32[$4>>2]|0;\n     $37 = $36 & 7;\n     $38 = ($37|0)==(4);\n     if ($38) {\n      break L11;\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 3:  {\n     $39 = HEAP32[$4>>2]|0;\n     $40 = $39 & 3;\n     $41 = ($40|0)==(0);\n     if ($41) {\n      $42 = ((($0)) + 348|0);\n      $43 = HEAP32[$42>>2]|0;\n      $44 = ($43>>>0)<(3);\n      if (!($44)) {\n       break L11;\n      }\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 4:  {\n     $45 = HEAP32[$4>>2]|0;\n     $46 = $45 & 3;\n     $47 = ($46|0)==(2);\n     if ($47) {\n      break L11;\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 5:  {\n     $48 = HEAP32[$4>>2]|0;\n     $49 = $48 & 1;\n     $50 = ($49|0)==(0);\n     if ($50) {\n      $51 = ((($0)) + 348|0);\n      $52 = HEAP32[$51>>2]|0;\n      $53 = ($52>>>0)<(2);\n      if (!($53)) {\n       break L11;\n      }\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    case 6:  {\n     $54 = HEAP32[$4>>2]|0;\n     $55 = $54 & 1;\n     $56 = ($55|0)==(0);\n     if (!($56)) {\n      break L11;\n     }\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n     break;\n    }\n    default: {\n     break L11;\n    }\n    }\n   }\n  }\n } while(0);\n $57 = ((($2)) + 8|0);\n HEAP8[$57>>0] = $22;\n $58 = ((($0)) + 360|0);\n $59 = HEAP32[$58>>2]|0;\n HEAP32[$2>>2] = $59;\n $60 = ((($0)) + 440|0);\n $61 = HEAP8[$60>>0]|0;\n $62 = ((($2)) + 10|0);\n HEAP8[$62>>0] = $61;\n $63 = ((($0)) + 437|0);\n $64 = HEAP8[$63>>0]|0;\n $65 = ((($2)) + 9|0);\n HEAP8[$65>>0] = $64;\n $66 = $64&255;\n $67 = $61&255;\n $68 = Math_imul($66, $67)|0;\n $69 = $68&255;\n $70 = ((($2)) + 11|0);\n HEAP8[$70>>0] = $69;\n $71 = $68 & 255;\n $72 = ($71>>>0)>(7);\n if ($72) {\n  $73 = $71 >>> 3;\n  $74 = Math_imul($73, $59)|0;\n  $79 = $74;\n } else {\n  $75 = Math_imul($59, $71)|0;\n  $76 = (($75) + 7)|0;\n  $77 = $76 >>> 3;\n  $79 = $77;\n }\n $78 = ((($2)) + 4|0);\n HEAP32[$78>>2] = $79;\n $80 = ((($0)) + 384|0);\n $81 = HEAP32[$80>>2]|0;\n $82 = ((($81)) + 1|0);\n _memcpy(($82|0),($1|0),($79|0))|0;\n $83 = HEAP16[$14>>1]|0;\n $84 = $83&255;\n $85 = ($84<<24>>24)==(0);\n $86 = ($83&65535) >>> 8;\n if (!($85)) {\n  $87 = $86&255;\n  $88 = $86&65535;\n  $89 = ($87&255)<(6);\n  if ($89) {\n   $90 = ((($0)) + 216|0);\n   $91 = HEAP32[$90>>2]|0;\n   $92 = $91 & 2;\n   $93 = ($92|0)==(0);\n   if (!($93)) {\n    $94 = HEAP32[$80>>2]|0;\n    $95 = ((($94)) + 1|0);\n    _png_do_write_interlace($2,$95,$88);\n    $96 = HEAP32[$2>>2]|0;\n    $97 = ($96|0)==(0);\n    if ($97) {\n     _png_write_finish_row($0);\n     STACKTOP = sp;return;\n    }\n   }\n  }\n }\n $98 = ((($0)) + 216|0);\n $99 = HEAP32[$98>>2]|0;\n $100 = ($99|0)==(0);\n if (!($100)) {\n  _png_do_write_transformations($0,$2);\n }\n $101 = HEAP8[$70>>0]|0;\n $102 = ((($0)) + 438|0);\n $103 = HEAP8[$102>>0]|0;\n $104 = ($101<<24>>24)==($103<<24>>24);\n if (!($104)) {\n  _png_error($0,26975);\n  // unreachable;\n }\n $105 = ((($0)) + 443|0);\n $106 = HEAP8[$105>>0]|0;\n $107 = ($101<<24>>24)==($106<<24>>24);\n if (!($107)) {\n  _png_error($0,26975);\n  // unreachable;\n }\n $108 = ((($0)) + 708|0);\n $109 = HEAP32[$108>>2]|0;\n $110 = $109 & 4;\n $111 = ($110|0)==(0);\n L63: do {\n  if (!($111)) {\n   $112 = ((($0)) + 712|0);\n   $113 = HEAP8[$112>>0]|0;\n   $114 = ($113<<24>>24)==(64);\n   if ($114) {\n    $115 = HEAP32[$80>>2]|0;\n    $116 = ((($115)) + 1|0);\n    $$idx$val = HEAP32[$2>>2]|0;\n    $$idx53$val = HEAP16[$57>>1]|0;\n    $117 = $$idx53$val&255;\n    $118 = $117 & 2;\n    $119 = ($118<<24>>24)==(0);\n    if (!($119)) {\n     $120 = ($$idx53$val&65535) >>> 8;\n     $121 = $120&255;\n     switch ($121<<24>>24) {\n     case 8:  {\n      switch ($117<<24>>24) {\n      case 2:  {\n       $$0$i = 3;\n       break;\n      }\n      case 6:  {\n       $$0$i = 4;\n       break;\n      }\n      default: {\n       break L63;\n      }\n      }\n      $122 = ($$idx$val|0)==(0);\n      if ($122) {\n       break L63;\n      } else {\n       $$0673$i$lver$orig = $116;$$0682$i$lver$orig = 0;\n      }\n      while(1) {\n       $123 = HEAP8[$$0673$i$lver$orig>>0]|0;\n       $124 = $123&255;\n       $125 = ((($$0673$i$lver$orig)) + 1|0);\n       $126 = HEAP8[$125>>0]|0;\n       $127 = $126&255;\n       $128 = (($124) - ($127))|0;\n       $129 = $128&255;\n       HEAP8[$$0673$i$lver$orig>>0] = $129;\n       $130 = ((($$0673$i$lver$orig)) + 2|0);\n       $131 = HEAP8[$130>>0]|0;\n       $132 = $131&255;\n       $133 = (($132) - ($127))|0;\n       $134 = $133&255;\n       HEAP8[$130>>0] = $134;\n       $135 = (($$0682$i$lver$orig) + 1)|0;\n       $136 = (($$0673$i$lver$orig) + ($$0$i)|0);\n       $exitcond$i$lver$orig = ($135|0)==($$idx$val|0);\n       if ($exitcond$i$lver$orig) {\n        break;\n       } else {\n        $$0673$i$lver$orig = $136;$$0682$i$lver$orig = $135;\n       }\n      }\n      break;\n     }\n     case 16:  {\n      switch ($117<<24>>24) {\n      case 2:  {\n       $$1$i = 6;\n       break;\n      }\n      case 6:  {\n       $$1$i = 8;\n       break;\n      }\n      default: {\n       break L63;\n      }\n      }\n      $137 = ($$idx$val|0)==(0);\n      if ($137) {\n       break L63;\n      } else {\n       $$0715$i$lver$orig = $116;$$0724$i$lver$orig = 0;\n      }\n      while(1) {\n       $138 = HEAP8[$$0715$i$lver$orig>>0]|0;\n       $139 = $138&255;\n       $140 = $139 << 8;\n       $141 = ((($$0715$i$lver$orig)) + 1|0);\n       $142 = HEAP8[$141>>0]|0;\n       $143 = $142&255;\n       $144 = $140 | $143;\n       $145 = ((($$0715$i$lver$orig)) + 2|0);\n       $146 = HEAP8[$145>>0]|0;\n       $147 = $146&255;\n       $148 = $147 << 8;\n       $149 = ((($$0715$i$lver$orig)) + 3|0);\n       $150 = HEAP8[$149>>0]|0;\n       $151 = $150&255;\n       $152 = $148 | $151;\n       $153 = ((($$0715$i$lver$orig)) + 4|0);\n       $154 = HEAP8[$153>>0]|0;\n       $155 = $154&255;\n       $156 = $155 << 8;\n       $157 = ((($$0715$i$lver$orig)) + 5|0);\n       $158 = HEAP8[$157>>0]|0;\n       $159 = $158&255;\n       $160 = $156 | $159;\n       $161 = (($144) - ($152))|0;\n       $162 = (($160) - ($152))|0;\n       $163 = $161 >>> 8;\n       $164 = $163&255;\n       HEAP8[$$0715$i$lver$orig>>0] = $164;\n       $165 = $161&255;\n       HEAP8[$141>>0] = $165;\n       $166 = $162 >>> 8;\n       $167 = $166&255;\n       HEAP8[$153>>0] = $167;\n       $168 = $162&255;\n       HEAP8[$157>>0] = $168;\n       $169 = (($$0724$i$lver$orig) + 1)|0;\n       $170 = (($$0715$i$lver$orig) + ($$1$i)|0);\n       $exitcond8$i$lver$orig = ($169|0)==($$idx$val|0);\n       if ($exitcond8$i$lver$orig) {\n        break;\n       } else {\n        $$0715$i$lver$orig = $170;$$0724$i$lver$orig = $169;\n       }\n      }\n      break;\n     }\n     default: {\n      break L63;\n     }\n     }\n    }\n   }\n  }\n } while(0);\n $171 = HEAP8[$57>>0]|0;\n $172 = ($171<<24>>24)==(3);\n if ($172) {\n  $173 = ((($0)) + 424|0);\n  $174 = HEAP32[$173>>2]|0;\n  $175 = ($174|0)>(-1);\n  if ($175) {\n   _png_do_check_palette_indexes($0,$2);\n  }\n }\n _png_write_find_filter($0,$2);\n $176 = ((($0)) + 548|0);\n $177 = HEAP32[$176>>2]|0;\n $178 = ($177|0)==(0|0);\n if ($178) {\n  STACKTOP = sp;return;\n }\n $179 = HEAP32[$4>>2]|0;\n $180 = ((($0)) + 433|0);\n $181 = HEAP8[$180>>0]|0;\n $182 = $181&255;\n FUNCTION_TABLE_viii[$177 & 127]($0,$179,$182);\n STACKTOP = sp;return;\n}\nfunction _png_write_image($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$01820 = 0, $$01922 = 0, $$021 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = (_png_set_interlace_handling($0)|0);\n $4 = ($3|0)>(0);\n if (!($4)) {\n  return;\n }\n $5 = ((($0)) + 352|0);\n $$pre = HEAP32[$5>>2]|0;\n $$01922 = 0;$6 = $$pre;\n while(1) {\n  $7 = ($6|0)==(0);\n  if ($7) {\n   $14 = 0;\n  } else {\n   $$01820 = 0;$$021 = $1;\n   while(1) {\n    $8 = HEAP32[$$021>>2]|0;\n    _png_write_row($0,$8);\n    $9 = (($$01820) + 1)|0;\n    $10 = ((($$021)) + 4|0);\n    $11 = HEAP32[$5>>2]|0;\n    $12 = ($9>>>0)<($11>>>0);\n    if ($12) {\n     $$01820 = $9;$$021 = $10;\n    } else {\n     $14 = $11;\n     break;\n    }\n   }\n  }\n  $13 = (($$01922) + 1)|0;\n  $exitcond = ($13|0)==($3|0);\n  if ($exitcond) {\n   break;\n  } else {\n   $$01922 = $13;$6 = $14;\n  }\n }\n return;\n}\nfunction _png_set_filter($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pr$pre = 0, $$pr50$pre = 0, $$pre = 0, $$pre51 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $9 = 0, $or$cond = 0, $trunc = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 708|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 4;\n $7 = ($6|0)!=(0);\n $8 = ($1|0)==(64);\n $or$cond = $8 & $7;\n $9 = ($1|0)==(0);\n $10 = $9 | $or$cond;\n if (!($10)) {\n  _png_error($0,27157);\n  // unreachable;\n }\n $trunc = $2&255;\n switch ($trunc<<24>>24) {\n case 7: case 6: case 5:  {\n  _png_app_error($0,27012);\n  label = 5;\n  break;\n }\n case 0:  {\n  label = 5;\n  break;\n }\n case 1:  {\n  $12 = ((($0)) + 434|0);\n  HEAP8[$12>>0] = 16;\n  $22 = 16;\n  break;\n }\n case 2:  {\n  $13 = ((($0)) + 434|0);\n  HEAP8[$13>>0] = 32;\n  $22 = 32;\n  break;\n }\n case 3:  {\n  $14 = ((($0)) + 434|0);\n  HEAP8[$14>>0] = 64;\n  $22 = 64;\n  break;\n }\n case 4:  {\n  $15 = ((($0)) + 434|0);\n  HEAP8[$15>>0] = -128;\n  $22 = -128;\n  break;\n }\n default: {\n  $16 = ((($0)) + 434|0);\n  HEAP8[$16>>0] = $trunc;\n  $22 = $trunc;\n }\n }\n if ((label|0) == 5) {\n  $11 = ((($0)) + 434|0);\n  HEAP8[$11>>0] = 8;\n  $22 = 8;\n }\n $17 = ((($0)) + 384|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0|0);\n if ($19) {\n  return;\n }\n $20 = ((($0)) + 434|0);\n $21 = $22 & 16;\n $23 = ($21<<24>>24)==(0);\n if ($23) {\n  $32 = $22;\n } else {\n  $24 = ((($0)) + 388|0);\n  $25 = HEAP32[$24>>2]|0;\n  $26 = ($25|0)==(0|0);\n  if ($26) {\n   $27 = ((($0)) + 364|0);\n   $28 = HEAP32[$27>>2]|0;\n   $29 = (($28) + 1)|0;\n   $30 = (_png_malloc($0,$29)|0);\n   HEAP32[$24>>2] = $30;\n   HEAP8[$30>>0] = 1;\n   $$pre = HEAP8[$20>>0]|0;\n   $32 = $$pre;\n  } else {\n   $32 = $22;\n  }\n }\n $31 = $32 & 32;\n $33 = ($31<<24>>24)==(0);\n do {\n  if ($33) {\n   $49 = $32;\n  } else {\n   $34 = ((($0)) + 392|0);\n   $35 = HEAP32[$34>>2]|0;\n   $36 = ($35|0)==(0|0);\n   if ($36) {\n    $37 = ((($0)) + 380|0);\n    $38 = HEAP32[$37>>2]|0;\n    $39 = ($38|0)==(0|0);\n    if ($39) {\n     _png_warning($0,27044);\n     $40 = HEAP8[$20>>0]|0;\n     $41 = $40&255;\n     $42 = $41 & 223;\n     $43 = $42&255;\n     HEAP8[$20>>0] = $43;\n     $49 = $43;\n     break;\n    } else {\n     $44 = ((($0)) + 364|0);\n     $45 = HEAP32[$44>>2]|0;\n     $46 = (($45) + 1)|0;\n     $47 = (_png_malloc($0,$46)|0);\n     HEAP32[$34>>2] = $47;\n     HEAP8[$47>>0] = 2;\n     $$pre51 = HEAP8[$20>>0]|0;\n     $49 = $$pre51;\n     break;\n    }\n   } else {\n    $49 = $32;\n   }\n  }\n } while(0);\n $48 = $49 & 64;\n $50 = ($48<<24>>24)==(0);\n do {\n  if ($50) {\n   $65 = $49;\n  } else {\n   $51 = ((($0)) + 396|0);\n   $52 = HEAP32[$51>>2]|0;\n   $53 = ($52|0)==(0|0);\n   if ($53) {\n    $54 = ((($0)) + 380|0);\n    $55 = HEAP32[$54>>2]|0;\n    $56 = ($55|0)==(0|0);\n    if ($56) {\n     _png_warning($0,27079);\n     $57 = HEAP8[$20>>0]|0;\n     $58 = $57&255;\n     $59 = $58 & 191;\n     $60 = $59&255;\n     HEAP8[$20>>0] = $60;\n     $65 = $60;\n     break;\n    } else {\n     $61 = ((($0)) + 364|0);\n     $62 = HEAP32[$61>>2]|0;\n     $63 = (($62) + 1)|0;\n     $64 = (_png_malloc($0,$63)|0);\n     HEAP32[$51>>2] = $64;\n     HEAP8[$64>>0] = 3;\n     $$pr$pre = HEAP8[$20>>0]|0;\n     $65 = $$pr$pre;\n     break;\n    }\n   } else {\n    $65 = $49;\n   }\n  }\n } while(0);\n $66 = ($65<<24>>24)<(0);\n do {\n  if ($66) {\n   $67 = ((($0)) + 400|0);\n   $68 = HEAP32[$67>>2]|0;\n   $69 = ($68|0)==(0|0);\n   if (!($69)) {\n    return;\n   }\n   $70 = ((($0)) + 380|0);\n   $71 = HEAP32[$70>>2]|0;\n   $72 = ($71|0)==(0|0);\n   if ($72) {\n    _png_warning($0,27119);\n    $73 = HEAP8[$20>>0]|0;\n    $74 = $73&255;\n    $75 = $74 & 127;\n    $76 = $75&255;\n    HEAP8[$20>>0] = $76;\n    $81 = $76;\n    break;\n   } else {\n    $77 = ((($0)) + 364|0);\n    $78 = HEAP32[$77>>2]|0;\n    $79 = (($78) + 1)|0;\n    $80 = (_png_malloc($0,$79)|0);\n    HEAP32[$67>>2] = $80;\n    HEAP8[$80>>0] = 4;\n    $$pr50$pre = HEAP8[$20>>0]|0;\n    $81 = $$pr50$pre;\n    break;\n   }\n  } else {\n   $81 = $65;\n  }\n } while(0);\n $82 = ($81<<24>>24)==(0);\n if (!($82)) {\n  return;\n }\n HEAP8[$20>>0] = 8;\n return;\n}\nfunction _png_set_compression_level($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 288|0);\n HEAP32[$3>>2] = $1;\n return;\n}\nfunction _png_set_compression_mem_level($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 300|0);\n HEAP32[$3>>2] = $1;\n return;\n}\nfunction _png_set_filler($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  return;\n }\n $4 = ((($0)) + 208|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = $5 & 32768;\n $7 = ($6|0)==(0);\n L4: do {\n  if ($7) {\n   $10 = ((($0)) + 435|0);\n   $11 = HEAP8[$10>>0]|0;\n   switch ($11<<24>>24) {\n   case 2:  {\n    $12 = ((($0)) + 440|0);\n    HEAP8[$12>>0] = 4;\n    break L4;\n    break;\n   }\n   case 0:  {\n    $13 = ((($0)) + 436|0);\n    $14 = HEAP8[$13>>0]|0;\n    $15 = ($14&255)>(7);\n    if ($15) {\n     $16 = ((($0)) + 440|0);\n     HEAP8[$16>>0] = 2;\n     break L4;\n    }\n    _png_app_error($0,26504);\n    return;\n    break;\n   }\n   default: {\n    _png_app_error($0,26560);\n    return;\n   }\n   }\n  } else {\n   $8 = $1&65535;\n   $9 = ((($0)) + 444|0);\n   HEAP16[$9>>1] = $8;\n  }\n } while(0);\n $17 = ((($0)) + 216|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = $18 | 32768;\n HEAP32[$17>>2] = $19;\n $20 = ($2|0)==(1);\n $21 = ((($0)) + 212|0);\n $22 = HEAP32[$21>>2]|0;\n if ($20) {\n  $23 = $22 | 128;\n  HEAP32[$21>>2] = $23;\n  return;\n } else {\n  $24 = $22 & -129;\n  HEAP32[$21>>2] = $24;\n  return;\n }\n}\nfunction _png_get_valid($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)!=(0|0);\n $4 = ($1|0)!=(0|0);\n $or$cond = $3 & $4;\n if (!($or$cond)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $5 = ((($1)) + 8|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & $2;\n $$0 = $7;\n return ($$0|0);\n}\nfunction _png_get_gAMA($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)!=(0|0);\n $4 = ($1|0)!=(0|0);\n $or$cond = $3 & $4;\n if (!($or$cond)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $5 = ((($1)) + 114|0);\n $6 = HEAP16[$5>>1]|0;\n $7 = $6 & 1;\n $8 = ($7<<16>>16)!=(0);\n $9 = ($2|0)!=(0|0);\n $or$cond3 = $9 & $8;\n if (!($or$cond3)) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $10 = ((($1)) + 40|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = (+($11|0));\n $13 = $12 * 1.0000000000000001E-5;\n HEAPF64[$2>>3] = $13;\n $$0 = 1;\n return ($$0|0);\n}\nfunction _png_get_IHDR($0,$1,$2,$3,$4,$5,$6,$7,$8) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n $8 = $8|0;\n var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $9 = 0;\n var $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $9 = ($0|0)==(0|0);\n $10 = ($1|0)==(0|0);\n $or$cond = $9 | $10;\n if ($or$cond) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $11 = ($2|0)==(0|0);\n if (!($11)) {\n  $12 = HEAP32[$1>>2]|0;\n  HEAP32[$2>>2] = $12;\n }\n $13 = ($3|0)==(0|0);\n if (!($13)) {\n  $14 = ((($1)) + 4|0);\n  $15 = HEAP32[$14>>2]|0;\n  HEAP32[$3>>2] = $15;\n }\n $16 = ($4|0)==(0|0);\n if (!($16)) {\n  $17 = ((($1)) + 24|0);\n  $18 = HEAP8[$17>>0]|0;\n  $19 = $18&255;\n  HEAP32[$4>>2] = $19;\n }\n $20 = ($5|0)==(0|0);\n if (!($20)) {\n  $21 = ((($1)) + 25|0);\n  $22 = HEAP8[$21>>0]|0;\n  $23 = $22&255;\n  HEAP32[$5>>2] = $23;\n }\n $24 = ($7|0)==(0|0);\n if (!($24)) {\n  $25 = ((($1)) + 26|0);\n  $26 = HEAP8[$25>>0]|0;\n  $27 = $26&255;\n  HEAP32[$7>>2] = $27;\n }\n $28 = ($8|0)==(0|0);\n if (!($28)) {\n  $29 = ((($1)) + 27|0);\n  $30 = HEAP8[$29>>0]|0;\n  $31 = $30&255;\n  HEAP32[$8>>2] = $31;\n }\n $32 = ($6|0)==(0|0);\n $$phi$trans$insert = ((($1)) + 28|0);\n $$pre = HEAP8[$$phi$trans$insert>>0]|0;\n if (!($32)) {\n  $33 = $$pre&255;\n  HEAP32[$6>>2] = $33;\n }\n $34 = HEAP32[$1>>2]|0;\n $35 = ((($1)) + 4|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = ((($1)) + 24|0);\n $38 = HEAP32[$37>>2]|0;\n $39 = $38 & 255;\n $40 = $38 >>> 8;\n $41 = $40 & 255;\n $42 = $$pre&255;\n $43 = $38 >>> 16;\n $44 = $43 & 255;\n $45 = $38 >>> 24;\n _png_check_IHDR($0,$34,$36,$39,$41,$42,$44,$45);\n $$0 = 1;\n return ($$0|0);\n}\nfunction _png_get_user_chunk_ptr($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $4 = 0;\n  return ($4|0);\n }\n $2 = ((($0)) + 680|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3;\n return ($4|0);\n}\nfunction _png_get_io_ptr($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 0;\n  return ($$0|0);\n }\n $2 = ((($0)) + 188|0);\n $3 = HEAP32[$2>>2]|0;\n $$0 = $3;\n return ($$0|0);\n}\nfunction _png_init_io($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  return;\n }\n $3 = ((($0)) + 188|0);\n HEAP32[$3>>2] = $1;\n return;\n}\nfunction _png_get_header_ver($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return (24249|0);\n}\nfunction _png_set_option($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)!=(0|0);\n $4 = ($1>>>0)<(6);\n $5 = $3 & $4;\n $6 = $1 & 1;\n $7 = ($6|0)==(0);\n $or$cond = $5 & $7;\n if (!($or$cond)) {\n  $$0 = 1;\n  return ($$0|0);\n }\n $8 = 3 << $1;\n $9 = ($2|0)!=(0);\n $10 = $9 ? 3 : 2;\n $11 = $10 << $1;\n $12 = ((($0)) + 644|0);\n $13 = HEAP8[$12>>0]|0;\n $14 = $13&255;\n $15 = $8 ^ 255;\n $16 = $14 & $15;\n $17 = $16 | $11;\n $18 = $17&255;\n HEAP8[$12>>0] = $18;\n $19 = $14 & $8;\n $20 = $19 >>> $1;\n $$0 = $20;\n return ($$0|0);\n}\nfunction _adler32($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$$1184 = 0, $$0 = 0, $$0173 = 0, $$0174198 = 0, $$0178197 = 0, $$0190 = 0, $$1$lcssa = 0, $$1175$lcssa245248 = 0, $$1175220 = 0, $$1179$lcssa244249 = 0, $$1179219 = 0, $$1184$lcssa = 0, $$1184196 = 0, $$1199 = 0, $$2$lcssa246247 = 0, $$2176211 = 0, $$2180 = 0, $$2221 = 0, $$3 = 0;\n var $$3177203 = 0, $$3181210 = 0, $$3186$lcssa243250 = 0, $$3186218 = 0, $$4182202 = 0, $$4187 = 0, $$4212 = 0, $$5$lcssa = 0, $$5188209 = 0, $$5204 = 0, $$6 = 0, $$6189$lcssa = 0, $$6189201 = 0, $$7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;\n var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;\n var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;\n var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;\n var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $scevgep = 0, $scevgep241 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $0 >>> 16;\n $4 = $0 & 65535;\n $5 = ($2|0)==(1);\n if ($5) {\n  $6 = HEAP8[$1>>0]|0;\n  $7 = $6&255;\n  $8 = (($7) + ($4))|0;\n  $9 = ($8>>>0)>(65520);\n  $10 = (($8) + -65521)|0;\n  $$ = $9 ? $10 : $8;\n  $11 = (($$) + ($3))|0;\n  $12 = ($11>>>0)>(65520);\n  $13 = (($11) + 15)|0;\n  $$0173 = $12 ? $13 : $11;\n  $14 = $$0173 << 16;\n  $15 = $14 | $$;\n  $$0190 = $15;\n  return ($$0190|0);\n }\n $16 = ($1|0)==(0|0);\n if ($16) {\n  $$0190 = 1;\n  return ($$0190|0);\n }\n $17 = ($2>>>0)<(16);\n if ($17) {\n  $19 = ($2|0)==(0);\n  if ($19) {\n   $$1$lcssa = $3;$$1184$lcssa = $4;\n  } else {\n   $$0174198 = $2;$$0178197 = $1;$$1184196 = $4;$$1199 = $3;\n   while(1) {\n    $20 = (($$0174198) + -1)|0;\n    $21 = ((($$0178197)) + 1|0);\n    $22 = HEAP8[$$0178197>>0]|0;\n    $23 = $22&255;\n    $24 = (($23) + ($$1184196))|0;\n    $25 = (($24) + ($$1199))|0;\n    $26 = ($20|0)==(0);\n    if ($26) {\n     $$1$lcssa = $25;$$1184$lcssa = $24;\n     break;\n    } else {\n     $$0174198 = $20;$$0178197 = $21;$$1184196 = $24;$$1199 = $25;\n    }\n   }\n  }\n  $27 = ($$1184$lcssa>>>0)>(65520);\n  $28 = (($$1184$lcssa) + -65521)|0;\n  $$$1184 = $27 ? $28 : $$1184$lcssa;\n  $29 = (($$1$lcssa>>>0) % 65521)&-1;\n  $30 = $29 << 16;\n  $31 = $30 | $$$1184;\n  $$0190 = $31;\n  return ($$0190|0);\n }\n $18 = ($2>>>0)>(5551);\n if ($18) {\n  $$1175220 = $2;$$1179219 = $1;$$2221 = $3;$$3186218 = $4;\n  while(1) {\n   $32 = (($$1175220) + -5552)|0;\n   $$0 = 347;$$2180 = $$1179219;$$3 = $$2221;$$4187 = $$3186218;\n   while(1) {\n    $33 = HEAP8[$$2180>>0]|0;\n    $34 = $33&255;\n    $35 = (($34) + ($$4187))|0;\n    $36 = (($35) + ($$3))|0;\n    $37 = ((($$2180)) + 1|0);\n    $38 = HEAP8[$37>>0]|0;\n    $39 = $38&255;\n    $40 = (($35) + ($39))|0;\n    $41 = (($36) + ($40))|0;\n    $42 = ((($$2180)) + 2|0);\n    $43 = HEAP8[$42>>0]|0;\n    $44 = $43&255;\n    $45 = (($40) + ($44))|0;\n    $46 = (($41) + ($45))|0;\n    $47 = ((($$2180)) + 3|0);\n    $48 = HEAP8[$47>>0]|0;\n    $49 = $48&255;\n    $50 = (($45) + ($49))|0;\n    $51 = (($46) + ($50))|0;\n    $52 = ((($$2180)) + 4|0);\n    $53 = HEAP8[$52>>0]|0;\n    $54 = $53&255;\n    $55 = (($50) + ($54))|0;\n    $56 = (($51) + ($55))|0;\n    $57 = ((($$2180)) + 5|0);\n    $58 = HEAP8[$57>>0]|0;\n    $59 = $58&255;\n    $60 = (($55) + ($59))|0;\n    $61 = (($56) + ($60))|0;\n    $62 = ((($$2180)) + 6|0);\n    $63 = HEAP8[$62>>0]|0;\n    $64 = $63&255;\n    $65 = (($60) + ($64))|0;\n    $66 = (($61) + ($65))|0;\n    $67 = ((($$2180)) + 7|0);\n    $68 = HEAP8[$67>>0]|0;\n    $69 = $68&255;\n    $70 = (($65) + ($69))|0;\n    $71 = (($66) + ($70))|0;\n    $72 = ((($$2180)) + 8|0);\n    $73 = HEAP8[$72>>0]|0;\n    $74 = $73&255;\n    $75 = (($70) + ($74))|0;\n    $76 = (($71) + ($75))|0;\n    $77 = ((($$2180)) + 9|0);\n    $78 = HEAP8[$77>>0]|0;\n    $79 = $78&255;\n    $80 = (($75) + ($79))|0;\n    $81 = (($76) + ($80))|0;\n    $82 = ((($$2180)) + 10|0);\n    $83 = HEAP8[$82>>0]|0;\n    $84 = $83&255;\n    $85 = (($80) + ($84))|0;\n    $86 = (($81) + ($85))|0;\n    $87 = ((($$2180)) + 11|0);\n    $88 = HEAP8[$87>>0]|0;\n    $89 = $88&255;\n    $90 = (($85) + ($89))|0;\n    $91 = (($86) + ($90))|0;\n    $92 = ((($$2180)) + 12|0);\n    $93 = HEAP8[$92>>0]|0;\n    $94 = $93&255;\n    $95 = (($90) + ($94))|0;\n    $96 = (($91) + ($95))|0;\n    $97 = ((($$2180)) + 13|0);\n    $98 = HEAP8[$97>>0]|0;\n    $99 = $98&255;\n    $100 = (($95) + ($99))|0;\n    $101 = (($96) + ($100))|0;\n    $102 = ((($$2180)) + 14|0);\n    $103 = HEAP8[$102>>0]|0;\n    $104 = $103&255;\n    $105 = (($100) + ($104))|0;\n    $106 = (($101) + ($105))|0;\n    $107 = ((($$2180)) + 15|0);\n    $108 = HEAP8[$107>>0]|0;\n    $109 = $108&255;\n    $110 = (($105) + ($109))|0;\n    $111 = (($106) + ($110))|0;\n    $112 = ((($$2180)) + 16|0);\n    $113 = (($$0) + -1)|0;\n    $114 = ($113|0)==(0);\n    if ($114) {\n     break;\n    } else {\n     $$0 = $113;$$2180 = $112;$$3 = $111;$$4187 = $110;\n    }\n   }\n   $scevgep241 = ((($$1179219)) + 5552|0);\n   $115 = (($110>>>0) % 65521)&-1;\n   $116 = (($111>>>0) % 65521)&-1;\n   $117 = ($32>>>0)>(5551);\n   if ($117) {\n    $$1175220 = $32;$$1179219 = $scevgep241;$$2221 = $116;$$3186218 = $115;\n   } else {\n    break;\n   }\n  }\n  $118 = ($32|0)==(0);\n  if ($118) {\n   $$6 = $116;$$7 = $115;\n  } else {\n   $119 = ($32>>>0)>(15);\n   if ($119) {\n    $$1175$lcssa245248 = $32;$$1179$lcssa244249 = $scevgep241;$$2$lcssa246247 = $116;$$3186$lcssa243250 = $115;\n    label = 14;\n   } else {\n    $$3177203 = $32;$$4182202 = $scevgep241;$$5204 = $116;$$6189201 = $115;\n    label = 17;\n   }\n  }\n } else {\n  $$1175$lcssa245248 = $2;$$1179$lcssa244249 = $1;$$2$lcssa246247 = $3;$$3186$lcssa243250 = $4;\n  label = 14;\n }\n if ((label|0) == 14) {\n  $120 = (($$1175$lcssa245248) + -16)|0;\n  $121 = $120 & -16;\n  $122 = (($121) + 16)|0;\n  $$2176211 = $$1175$lcssa245248;$$3181210 = $$1179$lcssa244249;$$4212 = $$2$lcssa246247;$$5188209 = $$3186$lcssa243250;\n  while(1) {\n   $125 = (($$2176211) + -16)|0;\n   $126 = HEAP8[$$3181210>>0]|0;\n   $127 = $126&255;\n   $128 = (($127) + ($$5188209))|0;\n   $129 = (($128) + ($$4212))|0;\n   $130 = ((($$3181210)) + 1|0);\n   $131 = HEAP8[$130>>0]|0;\n   $132 = $131&255;\n   $133 = (($128) + ($132))|0;\n   $134 = (($129) + ($133))|0;\n   $135 = ((($$3181210)) + 2|0);\n   $136 = HEAP8[$135>>0]|0;\n   $137 = $136&255;\n   $138 = (($133) + ($137))|0;\n   $139 = (($134) + ($138))|0;\n   $140 = ((($$3181210)) + 3|0);\n   $141 = HEAP8[$140>>0]|0;\n   $142 = $141&255;\n   $143 = (($138) + ($142))|0;\n   $144 = (($139) + ($143))|0;\n   $145 = ((($$3181210)) + 4|0);\n   $146 = HEAP8[$145>>0]|0;\n   $147 = $146&255;\n   $148 = (($143) + ($147))|0;\n   $149 = (($144) + ($148))|0;\n   $150 = ((($$3181210)) + 5|0);\n   $151 = HEAP8[$150>>0]|0;\n   $152 = $151&255;\n   $153 = (($148) + ($152))|0;\n   $154 = (($149) + ($153))|0;\n   $155 = ((($$3181210)) + 6|0);\n   $156 = HEAP8[$155>>0]|0;\n   $157 = $156&255;\n   $158 = (($153) + ($157))|0;\n   $159 = (($154) + ($158))|0;\n   $160 = ((($$3181210)) + 7|0);\n   $161 = HEAP8[$160>>0]|0;\n   $162 = $161&255;\n   $163 = (($158) + ($162))|0;\n   $164 = (($159) + ($163))|0;\n   $165 = ((($$3181210)) + 8|0);\n   $166 = HEAP8[$165>>0]|0;\n   $167 = $166&255;\n   $168 = (($163) + ($167))|0;\n   $169 = (($164) + ($168))|0;\n   $170 = ((($$3181210)) + 9|0);\n   $171 = HEAP8[$170>>0]|0;\n   $172 = $171&255;\n   $173 = (($168) + ($172))|0;\n   $174 = (($169) + ($173))|0;\n   $175 = ((($$3181210)) + 10|0);\n   $176 = HEAP8[$175>>0]|0;\n   $177 = $176&255;\n   $178 = (($173) + ($177))|0;\n   $179 = (($174) + ($178))|0;\n   $180 = ((($$3181210)) + 11|0);\n   $181 = HEAP8[$180>>0]|0;\n   $182 = $181&255;\n   $183 = (($178) + ($182))|0;\n   $184 = (($179) + ($183))|0;\n   $185 = ((($$3181210)) + 12|0);\n   $186 = HEAP8[$185>>0]|0;\n   $187 = $186&255;\n   $188 = (($183) + ($187))|0;\n   $189 = (($184) + ($188))|0;\n   $190 = ((($$3181210)) + 13|0);\n   $191 = HEAP8[$190>>0]|0;\n   $192 = $191&255;\n   $193 = (($188) + ($192))|0;\n   $194 = (($189) + ($193))|0;\n   $195 = ((($$3181210)) + 14|0);\n   $196 = HEAP8[$195>>0]|0;\n   $197 = $196&255;\n   $198 = (($193) + ($197))|0;\n   $199 = (($194) + ($198))|0;\n   $200 = ((($$3181210)) + 15|0);\n   $201 = HEAP8[$200>>0]|0;\n   $202 = $201&255;\n   $203 = (($198) + ($202))|0;\n   $204 = (($199) + ($203))|0;\n   $205 = ((($$3181210)) + 16|0);\n   $206 = ($125>>>0)>(15);\n   if ($206) {\n    $$2176211 = $125;$$3181210 = $205;$$4212 = $204;$$5188209 = $203;\n   } else {\n    break;\n   }\n  }\n  $123 = (($120) - ($121))|0;\n  $scevgep = (($$1179$lcssa244249) + ($122)|0);\n  $124 = ($123|0)==(0);\n  if ($124) {\n   $$5$lcssa = $204;$$6189$lcssa = $203;\n   label = 18;\n  } else {\n   $$3177203 = $123;$$4182202 = $scevgep;$$5204 = $204;$$6189201 = $203;\n   label = 17;\n  }\n }\n if ((label|0) == 17) {\n  while(1) {\n   label = 0;\n   $207 = (($$3177203) + -1)|0;\n   $208 = ((($$4182202)) + 1|0);\n   $209 = HEAP8[$$4182202>>0]|0;\n   $210 = $209&255;\n   $211 = (($210) + ($$6189201))|0;\n   $212 = (($211) + ($$5204))|0;\n   $213 = ($207|0)==(0);\n   if ($213) {\n    $$5$lcssa = $212;$$6189$lcssa = $211;\n    label = 18;\n    break;\n   } else {\n    $$3177203 = $207;$$4182202 = $208;$$5204 = $212;$$6189201 = $211;\n    label = 17;\n   }\n  }\n }\n if ((label|0) == 18) {\n  $214 = (($$6189$lcssa>>>0) % 65521)&-1;\n  $215 = (($$5$lcssa>>>0) % 65521)&-1;\n  $$6 = $215;$$7 = $214;\n }\n $216 = $$6 << 16;\n $217 = $216 | $$7;\n $$0190 = $217;\n return ($$0190|0);\n}\nfunction _crc32($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa$i = 0, $$076$masked$i = 0, $$07699$i = 0, $$07898$i = 0, $$08297$i = 0, $$092$i = 0, $$1 = 0, $$1$lcssa$i = 0, $$177$lcssa$i = 0, $$17791$i = 0, $$179$lcssa$i = 0, $$17990$i = 0, $$183$i = 0, $$187$i = 0, $$2$lcssa$i = 0, $$280$lcssa$i = 0, $$28085$i = 0, $$286$i = 0, $$3$i = 0, $$3$masked$i = 0;\n var $$381$i = 0, $$4$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;\n var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;\n var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;\n var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;\n var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;\n var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;\n var $225 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;\n var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;\n var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;\n var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;\n var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $scevgep$i = 0, $scevgep115$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1|0)==(0|0);\n if ($3) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $4 = $0 ^ -1;\n $5 = ($2|0)==(0);\n L4: do {\n  if ($5) {\n   $$4$i = $4;\n  } else {\n   $$07699$i = $4;$$07898$i = $2;$$08297$i = $1;\n   while(1) {\n    $6 = $$08297$i;\n    $7 = $6 & 3;\n    $8 = ($7|0)==(0);\n    if ($8) {\n     break;\n    }\n    $9 = ((($$08297$i)) + 1|0);\n    $10 = HEAP8[$$08297$i>>0]|0;\n    $11 = $10&255;\n    $$076$masked$i = $$07699$i & 255;\n    $12 = $11 ^ $$076$masked$i;\n    $13 = (1016 + ($12<<2)|0);\n    $14 = HEAP32[$13>>2]|0;\n    $15 = $$07699$i >>> 8;\n    $16 = $14 ^ $15;\n    $17 = (($$07898$i) + -1)|0;\n    $18 = ($17|0)==(0);\n    if ($18) {\n     $$4$i = $16;\n     break L4;\n    } else {\n     $$07699$i = $16;$$07898$i = $17;$$08297$i = $9;\n    }\n   }\n   $19 = ($$07898$i>>>0)>(31);\n   if ($19) {\n    $20 = (($$07898$i) + -32)|0;\n    $21 = $20 & -32;\n    $22 = (($21) + 32)|0;\n    $scevgep115$i = (($$08297$i) + ($22)|0);\n    $$092$i = $$08297$i;$$17791$i = $$07699$i;$$17990$i = $$07898$i;\n    while(1) {\n     $28 = ((($$092$i)) + 4|0);\n     $29 = HEAP32[$$092$i>>2]|0;\n     $30 = $29 ^ $$17791$i;\n     $31 = $30 & 255;\n     $32 = (4088 + ($31<<2)|0);\n     $33 = HEAP32[$32>>2]|0;\n     $34 = $30 >>> 8;\n     $35 = $34 & 255;\n     $36 = (3064 + ($35<<2)|0);\n     $37 = HEAP32[$36>>2]|0;\n     $38 = $37 ^ $33;\n     $39 = $30 >>> 16;\n     $40 = $39 & 255;\n     $41 = (2040 + ($40<<2)|0);\n     $42 = HEAP32[$41>>2]|0;\n     $43 = $38 ^ $42;\n     $44 = $30 >>> 24;\n     $45 = (1016 + ($44<<2)|0);\n     $46 = HEAP32[$45>>2]|0;\n     $47 = $43 ^ $46;\n     $48 = ((($$092$i)) + 8|0);\n     $49 = HEAP32[$28>>2]|0;\n     $50 = $47 ^ $49;\n     $51 = $50 & 255;\n     $52 = (4088 + ($51<<2)|0);\n     $53 = HEAP32[$52>>2]|0;\n     $54 = $50 >>> 8;\n     $55 = $54 & 255;\n     $56 = (3064 + ($55<<2)|0);\n     $57 = HEAP32[$56>>2]|0;\n     $58 = $57 ^ $53;\n     $59 = $50 >>> 16;\n     $60 = $59 & 255;\n     $61 = (2040 + ($60<<2)|0);\n     $62 = HEAP32[$61>>2]|0;\n     $63 = $58 ^ $62;\n     $64 = $50 >>> 24;\n     $65 = (1016 + ($64<<2)|0);\n     $66 = HEAP32[$65>>2]|0;\n     $67 = $63 ^ $66;\n     $68 = ((($$092$i)) + 12|0);\n     $69 = HEAP32[$48>>2]|0;\n     $70 = $67 ^ $69;\n     $71 = $70 & 255;\n     $72 = (4088 + ($71<<2)|0);\n     $73 = HEAP32[$72>>2]|0;\n     $74 = $70 >>> 8;\n     $75 = $74 & 255;\n     $76 = (3064 + ($75<<2)|0);\n     $77 = HEAP32[$76>>2]|0;\n     $78 = $77 ^ $73;\n     $79 = $70 >>> 16;\n     $80 = $79 & 255;\n     $81 = (2040 + ($80<<2)|0);\n     $82 = HEAP32[$81>>2]|0;\n     $83 = $78 ^ $82;\n     $84 = $70 >>> 24;\n     $85 = (1016 + ($84<<2)|0);\n     $86 = HEAP32[$85>>2]|0;\n     $87 = $83 ^ $86;\n     $88 = ((($$092$i)) + 16|0);\n     $89 = HEAP32[$68>>2]|0;\n     $90 = $87 ^ $89;\n     $91 = $90 & 255;\n     $92 = (4088 + ($91<<2)|0);\n     $93 = HEAP32[$92>>2]|0;\n     $94 = $90 >>> 8;\n     $95 = $94 & 255;\n     $96 = (3064 + ($95<<2)|0);\n     $97 = HEAP32[$96>>2]|0;\n     $98 = $97 ^ $93;\n     $99 = $90 >>> 16;\n     $100 = $99 & 255;\n     $101 = (2040 + ($100<<2)|0);\n     $102 = HEAP32[$101>>2]|0;\n     $103 = $98 ^ $102;\n     $104 = $90 >>> 24;\n     $105 = (1016 + ($104<<2)|0);\n     $106 = HEAP32[$105>>2]|0;\n     $107 = $103 ^ $106;\n     $108 = ((($$092$i)) + 20|0);\n     $109 = HEAP32[$88>>2]|0;\n     $110 = $107 ^ $109;\n     $111 = $110 & 255;\n     $112 = (4088 + ($111<<2)|0);\n     $113 = HEAP32[$112>>2]|0;\n     $114 = $110 >>> 8;\n     $115 = $114 & 255;\n     $116 = (3064 + ($115<<2)|0);\n     $117 = HEAP32[$116>>2]|0;\n     $118 = $117 ^ $113;\n     $119 = $110 >>> 16;\n     $120 = $119 & 255;\n     $121 = (2040 + ($120<<2)|0);\n     $122 = HEAP32[$121>>2]|0;\n     $123 = $118 ^ $122;\n     $124 = $110 >>> 24;\n     $125 = (1016 + ($124<<2)|0);\n     $126 = HEAP32[$125>>2]|0;\n     $127 = $123 ^ $126;\n     $128 = ((($$092$i)) + 24|0);\n     $129 = HEAP32[$108>>2]|0;\n     $130 = $127 ^ $129;\n     $131 = $130 & 255;\n     $132 = (4088 + ($131<<2)|0);\n     $133 = HEAP32[$132>>2]|0;\n     $134 = $130 >>> 8;\n     $135 = $134 & 255;\n     $136 = (3064 + ($135<<2)|0);\n     $137 = HEAP32[$136>>2]|0;\n     $138 = $137 ^ $133;\n     $139 = $130 >>> 16;\n     $140 = $139 & 255;\n     $141 = (2040 + ($140<<2)|0);\n     $142 = HEAP32[$141>>2]|0;\n     $143 = $138 ^ $142;\n     $144 = $130 >>> 24;\n     $145 = (1016 + ($144<<2)|0);\n     $146 = HEAP32[$145>>2]|0;\n     $147 = $143 ^ $146;\n     $148 = ((($$092$i)) + 28|0);\n     $149 = HEAP32[$128>>2]|0;\n     $150 = $147 ^ $149;\n     $151 = $150 & 255;\n     $152 = (4088 + ($151<<2)|0);\n     $153 = HEAP32[$152>>2]|0;\n     $154 = $150 >>> 8;\n     $155 = $154 & 255;\n     $156 = (3064 + ($155<<2)|0);\n     $157 = HEAP32[$156>>2]|0;\n     $158 = $157 ^ $153;\n     $159 = $150 >>> 16;\n     $160 = $159 & 255;\n     $161 = (2040 + ($160<<2)|0);\n     $162 = HEAP32[$161>>2]|0;\n     $163 = $158 ^ $162;\n     $164 = $150 >>> 24;\n     $165 = (1016 + ($164<<2)|0);\n     $166 = HEAP32[$165>>2]|0;\n     $167 = $163 ^ $166;\n     $168 = ((($$092$i)) + 32|0);\n     $169 = HEAP32[$148>>2]|0;\n     $170 = $167 ^ $169;\n     $171 = $170 & 255;\n     $172 = (4088 + ($171<<2)|0);\n     $173 = HEAP32[$172>>2]|0;\n     $174 = $170 >>> 8;\n     $175 = $174 & 255;\n     $176 = (3064 + ($175<<2)|0);\n     $177 = HEAP32[$176>>2]|0;\n     $178 = $177 ^ $173;\n     $179 = $170 >>> 16;\n     $180 = $179 & 255;\n     $181 = (2040 + ($180<<2)|0);\n     $182 = HEAP32[$181>>2]|0;\n     $183 = $178 ^ $182;\n     $184 = $170 >>> 24;\n     $185 = (1016 + ($184<<2)|0);\n     $186 = HEAP32[$185>>2]|0;\n     $187 = $183 ^ $186;\n     $188 = (($$17990$i) + -32)|0;\n     $189 = ($188>>>0)>(31);\n     if ($189) {\n      $$092$i = $168;$$17791$i = $187;$$17990$i = $188;\n     } else {\n      break;\n     }\n    }\n    $23 = (($20) - ($21))|0;\n    $$0$lcssa$i = $scevgep115$i;$$177$lcssa$i = $187;$$179$lcssa$i = $23;\n   } else {\n    $$0$lcssa$i = $$08297$i;$$177$lcssa$i = $$07699$i;$$179$lcssa$i = $$07898$i;\n   }\n   $24 = ($$179$lcssa$i>>>0)>(3);\n   if ($24) {\n    $25 = (($$179$lcssa$i) + -4)|0;\n    $26 = $25 >>> 2;\n    $27 = (($26) + 1)|0;\n    $$187$i = $$0$lcssa$i;$$28085$i = $$179$lcssa$i;$$286$i = $$177$lcssa$i;\n    while(1) {\n     $190 = ((($$187$i)) + 4|0);\n     $191 = HEAP32[$$187$i>>2]|0;\n     $192 = $191 ^ $$286$i;\n     $193 = $192 & 255;\n     $194 = (4088 + ($193<<2)|0);\n     $195 = HEAP32[$194>>2]|0;\n     $196 = $192 >>> 8;\n     $197 = $196 & 255;\n     $198 = (3064 + ($197<<2)|0);\n     $199 = HEAP32[$198>>2]|0;\n     $200 = $199 ^ $195;\n     $201 = $192 >>> 16;\n     $202 = $201 & 255;\n     $203 = (2040 + ($202<<2)|0);\n     $204 = HEAP32[$203>>2]|0;\n     $205 = $200 ^ $204;\n     $206 = $192 >>> 24;\n     $207 = (1016 + ($206<<2)|0);\n     $208 = HEAP32[$207>>2]|0;\n     $209 = $205 ^ $208;\n     $210 = (($$28085$i) + -4)|0;\n     $211 = ($210>>>0)>(3);\n     if ($211) {\n      $$187$i = $190;$$28085$i = $210;$$286$i = $209;\n     } else {\n      break;\n     }\n    }\n    $212 = $26 << 2;\n    $scevgep$i = (($$0$lcssa$i) + ($27<<2)|0);\n    $213 = (($25) - ($212))|0;\n    $$1$lcssa$i = $scevgep$i;$$2$lcssa$i = $209;$$280$lcssa$i = $213;\n   } else {\n    $$1$lcssa$i = $$0$lcssa$i;$$2$lcssa$i = $$177$lcssa$i;$$280$lcssa$i = $$179$lcssa$i;\n   }\n   $214 = ($$280$lcssa$i|0)==(0);\n   if ($214) {\n    $$4$i = $$2$lcssa$i;\n   } else {\n    $$183$i = $$1$lcssa$i;$$3$i = $$2$lcssa$i;$$381$i = $$280$lcssa$i;\n    while(1) {\n     $215 = ((($$183$i)) + 1|0);\n     $216 = HEAP8[$$183$i>>0]|0;\n     $217 = $216&255;\n     $$3$masked$i = $$3$i & 255;\n     $218 = $217 ^ $$3$masked$i;\n     $219 = (1016 + ($218<<2)|0);\n     $220 = HEAP32[$219>>2]|0;\n     $221 = $$3$i >>> 8;\n     $222 = $220 ^ $221;\n     $223 = (($$381$i) + -1)|0;\n     $224 = ($223|0)==(0);\n     if ($224) {\n      $$4$i = $222;\n      break;\n     } else {\n      $$183$i = $215;$$3$i = $222;$$381$i = $223;\n     }\n    }\n   }\n  }\n } while(0);\n $225 = $$4$i ^ -1;\n $$1 = $225;\n return ($$1|0);\n}\nfunction _deflateInit2_($0,$1,$2,$3,$4,$5,$6,$7) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n $7 = $7|0;\n var $$ = 0, $$$0115 = 0, $$0 = 0, $$0113 = 0, $$0115 = 0, $$116 = 0, $$117 = 0, $$in$i = 0, $$in51$i = 0, $$in52$i = 0, $$off = 0, $$pre$i = 0, $$pre43$i = 0, $$pre44$i = 0, $$pre45$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;\n var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;\n var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;\n var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond118 = 0, $or$cond5 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $8 = ($6|0)==(0|0);\n if ($8) {\n  $$0 = -6;\n  return ($$0|0);\n }\n $9 = HEAP8[$6>>0]|0;\n $10 = ($9<<24>>24)!=(49);\n $11 = ($7|0)!=(56);\n $or$cond = $11 | $10;\n if ($or$cond) {\n  $$0 = -6;\n  return ($$0|0);\n }\n $12 = ($0|0)==(0|0);\n if ($12) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $13 = ((($0)) + 24|0);\n HEAP32[$13>>2] = 0;\n $14 = ((($0)) + 32|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)==(0|0);\n if ($16) {\n  HEAP32[$14>>2] = 68;\n  $17 = ((($0)) + 40|0);\n  HEAP32[$17>>2] = 0;\n  $38 = 68;\n } else {\n  $38 = $15;\n }\n $18 = ((($0)) + 36|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ($19|0)==(0|0);\n if ($20) {\n  HEAP32[$18>>2] = 69;\n }\n $21 = ($1|0)==(-1);\n $$ = $21 ? 6 : $1;\n $22 = ($3|0)<(0);\n if ($22) {\n  $23 = (0 - ($3))|0;\n  $$0113 = 0;$$0115 = $23;\n } else {\n  $24 = ($3|0)>(15);\n  $25 = (($3) + -16)|0;\n  $$116 = $24 ? $25 : $3;\n  $$117 = $24 ? 2 : 1;\n  $$0113 = $$117;$$0115 = $$116;\n }\n $$off = (($4) + -1)|0;\n $26 = ($$off>>>0)>(8);\n $27 = ($2|0)!=(8);\n $or$cond5 = $27 | $26;\n $28 = $$0115 & -8;\n $29 = ($28|0)!=(8);\n $30 = $or$cond5 | $29;\n $31 = ($$>>>0)>(9);\n $32 = $31 | $30;\n $33 = ($5>>>0)>(4);\n $34 = $33 | $32;\n if ($34) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $35 = ($$0115|0)==(8);\n $$$0115 = $35 ? 9 : $$0115;\n $36 = ((($0)) + 40|0);\n $37 = HEAP32[$36>>2]|0;\n $39 = (FUNCTION_TABLE_iiii[$38 & 127]($37,1,5828)|0);\n $40 = ($39|0)==(0|0);\n if ($40) {\n  $$0 = -4;\n  return ($$0|0);\n }\n $41 = ((($0)) + 28|0);\n HEAP32[$41>>2] = $39;\n HEAP32[$39>>2] = $0;\n $42 = ((($39)) + 24|0);\n HEAP32[$42>>2] = $$0113;\n $43 = ((($39)) + 28|0);\n HEAP32[$43>>2] = 0;\n $44 = ((($39)) + 48|0);\n HEAP32[$44>>2] = $$$0115;\n $45 = 1 << $$$0115;\n $46 = ((($39)) + 44|0);\n HEAP32[$46>>2] = $45;\n $47 = (($45) + -1)|0;\n $48 = ((($39)) + 52|0);\n HEAP32[$48>>2] = $47;\n $49 = (($4) + 7)|0;\n $50 = ((($39)) + 80|0);\n HEAP32[$50>>2] = $49;\n $51 = 1 << $49;\n $52 = ((($39)) + 76|0);\n HEAP32[$52>>2] = $51;\n $53 = (($51) + -1)|0;\n $54 = ((($39)) + 84|0);\n HEAP32[$54>>2] = $53;\n $55 = (($4) + 9)|0;\n $56 = (($55>>>0) / 3)&-1;\n $57 = ((($39)) + 88|0);\n HEAP32[$57>>2] = $56;\n $58 = HEAP32[$14>>2]|0;\n $59 = HEAP32[$36>>2]|0;\n $60 = (FUNCTION_TABLE_iiii[$58 & 127]($59,$45,2)|0);\n $61 = ((($39)) + 56|0);\n HEAP32[$61>>2] = $60;\n $62 = HEAP32[$14>>2]|0;\n $63 = HEAP32[$36>>2]|0;\n $64 = HEAP32[$46>>2]|0;\n $65 = (FUNCTION_TABLE_iiii[$62 & 127]($63,$64,2)|0);\n $66 = ((($39)) + 64|0);\n HEAP32[$66>>2] = $65;\n $67 = HEAP32[$14>>2]|0;\n $68 = HEAP32[$36>>2]|0;\n $69 = HEAP32[$52>>2]|0;\n $70 = (FUNCTION_TABLE_iiii[$67 & 127]($68,$69,2)|0);\n $71 = ((($39)) + 68|0);\n HEAP32[$71>>2] = $70;\n $72 = ((($39)) + 5824|0);\n HEAP32[$72>>2] = 0;\n $73 = (($4) + 6)|0;\n $74 = 1 << $73;\n $75 = ((($39)) + 5788|0);\n HEAP32[$75>>2] = $74;\n $76 = HEAP32[$14>>2]|0;\n $77 = HEAP32[$36>>2]|0;\n $78 = (FUNCTION_TABLE_iiii[$76 & 127]($77,$74,4)|0);\n $79 = ((($39)) + 8|0);\n HEAP32[$79>>2] = $78;\n $80 = HEAP32[$75>>2]|0;\n $81 = $80 << 2;\n $82 = ((($39)) + 12|0);\n HEAP32[$82>>2] = $81;\n $83 = HEAP32[$61>>2]|0;\n $84 = ($83|0)==(0|0);\n if (!($84)) {\n  $85 = HEAP32[$66>>2]|0;\n  $86 = ($85|0)==(0|0);\n  if (!($86)) {\n   $87 = HEAP32[$71>>2]|0;\n   $88 = ($87|0)==(0|0);\n   $89 = ($78|0)==(0|0);\n   $or$cond118 = $88 | $89;\n   if (!($or$cond118)) {\n    $119 = $80 >>> 1;\n    $120 = (($78) + ($119<<1)|0);\n    $121 = ((($39)) + 5796|0);\n    HEAP32[$121>>2] = $120;\n    $122 = ($80*3)|0;\n    $123 = (($78) + ($122)|0);\n    $124 = ((($39)) + 5784|0);\n    HEAP32[$124>>2] = $123;\n    $125 = ((($39)) + 132|0);\n    HEAP32[$125>>2] = $$;\n    $126 = ((($39)) + 136|0);\n    HEAP32[$126>>2] = $5;\n    $127 = ((($39)) + 36|0);\n    HEAP8[$127>>0] = 8;\n    $128 = (_deflateReset($0)|0);\n    $$0 = $128;\n    return ($$0|0);\n   }\n  }\n }\n $90 = ((($39)) + 4|0);\n HEAP32[$90>>2] = 666;\n $91 = HEAP32[(9960)>>2]|0;\n HEAP32[$13>>2] = $91;\n $92 = HEAP32[$41>>2]|0;\n $93 = ($92|0)==(0|0);\n if ($93) {\n  $$0 = -4;\n  return ($$0|0);\n }\n $94 = ((($92)) + 4|0);\n $95 = HEAP32[$94>>2]|0;\n switch ($95|0) {\n case 42: case 69: case 73: case 91: case 103: case 113: case 666:  {\n  break;\n }\n default: {\n  $$0 = -4;\n  return ($$0|0);\n }\n }\n $96 = ((($92)) + 8|0);\n $97 = HEAP32[$96>>2]|0;\n $98 = ($97|0)==(0|0);\n if ($98) {\n  $$in$i = $92;\n } else {\n  $99 = HEAP32[$18>>2]|0;\n  $100 = HEAP32[$36>>2]|0;\n  FUNCTION_TABLE_vii[$99 & 127]($100,$97);\n  $$pre$i = HEAP32[$41>>2]|0;\n  $$in$i = $$pre$i;\n }\n $101 = ((($$in$i)) + 68|0);\n $102 = HEAP32[$101>>2]|0;\n $103 = ($102|0)==(0|0);\n if ($103) {\n  $$in51$i = $$in$i;\n } else {\n  $104 = HEAP32[$18>>2]|0;\n  $105 = HEAP32[$36>>2]|0;\n  FUNCTION_TABLE_vii[$104 & 127]($105,$102);\n  $$pre43$i = HEAP32[$41>>2]|0;\n  $$in51$i = $$pre43$i;\n }\n $106 = ((($$in51$i)) + 64|0);\n $107 = HEAP32[$106>>2]|0;\n $108 = ($107|0)==(0|0);\n if ($108) {\n  $$in52$i = $$in51$i;\n } else {\n  $109 = HEAP32[$18>>2]|0;\n  $110 = HEAP32[$36>>2]|0;\n  FUNCTION_TABLE_vii[$109 & 127]($110,$107);\n  $$pre44$i = HEAP32[$41>>2]|0;\n  $$in52$i = $$pre44$i;\n }\n $111 = ((($$in52$i)) + 56|0);\n $112 = HEAP32[$111>>2]|0;\n $113 = ($112|0)==(0|0);\n if ($113) {\n  $118 = $$in52$i;\n } else {\n  $114 = HEAP32[$18>>2]|0;\n  $115 = HEAP32[$36>>2]|0;\n  FUNCTION_TABLE_vii[$114 & 127]($115,$112);\n  $$pre45$i = HEAP32[$41>>2]|0;\n  $118 = $$pre45$i;\n }\n $116 = HEAP32[$18>>2]|0;\n $117 = HEAP32[$36>>2]|0;\n FUNCTION_TABLE_vii[$116 & 127]($117,$118);\n HEAP32[$41>>2] = 0;\n $$0 = -4;\n return ($$0|0);\n}\nfunction _deflateReset($0) {\n $0 = $0|0;\n var $$0$i4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;\n var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0$i4 = -2;\n  return ($$0$i4|0);\n }\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $$0$i4 = -2;\n  return ($$0$i4|0);\n }\n $5 = ((($0)) + 32|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if ($7) {\n  $$0$i4 = -2;\n  return ($$0$i4|0);\n }\n $8 = ((($0)) + 36|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0|0);\n if ($10) {\n  $$0$i4 = -2;\n  return ($$0$i4|0);\n }\n $11 = ((($0)) + 20|0);\n HEAP32[$11>>2] = 0;\n $12 = ((($0)) + 8|0);\n HEAP32[$12>>2] = 0;\n $13 = ((($0)) + 24|0);\n HEAP32[$13>>2] = 0;\n $14 = ((($0)) + 44|0);\n HEAP32[$14>>2] = 2;\n $15 = ((($3)) + 20|0);\n HEAP32[$15>>2] = 0;\n $16 = ((($3)) + 8|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = ((($3)) + 16|0);\n HEAP32[$18>>2] = $17;\n $19 = ((($3)) + 24|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = ($20|0)<(0);\n $22 = (0 - ($20))|0;\n if ($21) {\n  HEAP32[$19>>2] = $22;\n  $23 = $22;\n } else {\n  $23 = $20;\n }\n $24 = ($23|0)!=(0);\n $25 = $24 ? 42 : 113;\n $26 = ((($3)) + 4|0);\n HEAP32[$26>>2] = $25;\n $27 = ($23|0)==(2);\n if ($27) {\n  $28 = (_crc32(0,0,0)|0);\n  $31 = $28;\n } else {\n  $29 = (_adler32(0,0,0)|0);\n  $31 = $29;\n }\n $30 = ((($0)) + 48|0);\n HEAP32[$30>>2] = $31;\n $32 = ((($3)) + 40|0);\n HEAP32[$32>>2] = 0;\n __tr_init($3);\n $33 = HEAP32[$2>>2]|0;\n $34 = ((($33)) + 44|0);\n $35 = HEAP32[$34>>2]|0;\n $36 = $35 << 1;\n $37 = ((($33)) + 60|0);\n HEAP32[$37>>2] = $36;\n $38 = ((($33)) + 76|0);\n $39 = HEAP32[$38>>2]|0;\n $40 = (($39) + -1)|0;\n $41 = ((($33)) + 68|0);\n $42 = HEAP32[$41>>2]|0;\n $43 = (($42) + ($40<<1)|0);\n HEAP16[$43>>1] = 0;\n $44 = $39 << 1;\n $45 = (($44) + -2)|0;\n _memset(($42|0),0,($45|0))|0;\n $46 = ((($33)) + 132|0);\n $47 = HEAP32[$46>>2]|0;\n $48 = (((9208 + (($47*12)|0)|0)) + 2|0);\n $49 = HEAP16[$48>>1]|0;\n $50 = $49&65535;\n $51 = ((($33)) + 128|0);\n HEAP32[$51>>2] = $50;\n $52 = (9208 + (($47*12)|0)|0);\n $53 = HEAP16[$52>>1]|0;\n $54 = $53&65535;\n $55 = ((($33)) + 140|0);\n HEAP32[$55>>2] = $54;\n $56 = (((9208 + (($47*12)|0)|0)) + 4|0);\n $57 = HEAP16[$56>>1]|0;\n $58 = $57&65535;\n $59 = ((($33)) + 144|0);\n HEAP32[$59>>2] = $58;\n $60 = (((9208 + (($47*12)|0)|0)) + 6|0);\n $61 = HEAP16[$60>>1]|0;\n $62 = $61&65535;\n $63 = ((($33)) + 124|0);\n HEAP32[$63>>2] = $62;\n $64 = ((($33)) + 108|0);\n HEAP32[$64>>2] = 0;\n $65 = ((($33)) + 92|0);\n HEAP32[$65>>2] = 0;\n $66 = ((($33)) + 116|0);\n HEAP32[$66>>2] = 0;\n $67 = ((($33)) + 5812|0);\n HEAP32[$67>>2] = 0;\n $68 = ((($33)) + 120|0);\n HEAP32[$68>>2] = 2;\n $69 = ((($33)) + 96|0);\n HEAP32[$69>>2] = 2;\n $70 = ((($33)) + 104|0);\n HEAP32[$70>>2] = 0;\n $71 = ((($33)) + 72|0);\n HEAP32[$71>>2] = 0;\n $$0$i4 = 0;\n return ($$0$i4|0);\n}\nfunction _deflate_stored($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$i = 0, $$$i73 = 0, $$$i75 = 0, $$$i77 = 0, $$0 = 0, $$72 = 0, $$pr = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;\n var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;\n var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;\n var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;\n var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;\n var $182 = 0, $183 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 12|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = (($3) + -5)|0;\n $5 = ($4>>>0)<(65535);\n $$ = $5 ? $4 : 65535;\n $6 = ((($0)) + 116|0);\n $7 = ((($0)) + 108|0);\n $8 = ((($0)) + 92|0);\n $9 = ((($0)) + 44|0);\n $10 = ((($0)) + 56|0);\n while(1) {\n  $11 = HEAP32[$6>>2]|0;\n  $12 = ($11>>>0)<(2);\n  if ($12) {\n   _fill_window($0);\n   $13 = HEAP32[$6>>2]|0;\n   $14 = $13 | $1;\n   $15 = ($14|0)==(0);\n   if ($15) {\n    $$0 = 0;\n    label = 35;\n    break;\n   }\n   $16 = ($13|0)==(0);\n   if ($16) {\n    label = 20;\n    break;\n   } else {\n    $19 = $13;\n   }\n  } else {\n   $19 = $11;\n  }\n  $17 = HEAP32[$7>>2]|0;\n  $18 = (($17) + ($19))|0;\n  HEAP32[$7>>2] = $18;\n  HEAP32[$6>>2] = 0;\n  $20 = HEAP32[$8>>2]|0;\n  $21 = (($20) + ($$))|0;\n  $22 = ($18|0)!=(0);\n  $23 = ($18>>>0)<($21>>>0);\n  $or$cond = $22 & $23;\n  if ($or$cond) {\n   $62 = $20;$63 = $18;\n  } else {\n   $24 = (($18) - ($21))|0;\n   HEAP32[$6>>2] = $24;\n   HEAP32[$7>>2] = $21;\n   $25 = ($20|0)>(-1);\n   if ($25) {\n    $26 = HEAP32[$10>>2]|0;\n    $27 = (($26) + ($20)|0);\n    $28 = $27;\n   } else {\n    $28 = 0;\n   }\n   __tr_flush_block($0,$28,$$,0);\n   $29 = HEAP32[$7>>2]|0;\n   HEAP32[$8>>2] = $29;\n   $30 = HEAP32[$0>>2]|0;\n   $31 = ((($30)) + 28|0);\n   $32 = HEAP32[$31>>2]|0;\n   __tr_flush_bits($32);\n   $33 = ((($32)) + 20|0);\n   $34 = HEAP32[$33>>2]|0;\n   $35 = ((($30)) + 16|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = ($34>>>0)>($36>>>0);\n   $$$i = $37 ? $36 : $34;\n   $38 = ($$$i|0)==(0);\n   if (!($38)) {\n    $39 = ((($30)) + 12|0);\n    $40 = HEAP32[$39>>2]|0;\n    $41 = ((($32)) + 16|0);\n    $42 = HEAP32[$41>>2]|0;\n    _memcpy(($40|0),($42|0),($$$i|0))|0;\n    $43 = HEAP32[$39>>2]|0;\n    $44 = (($43) + ($$$i)|0);\n    HEAP32[$39>>2] = $44;\n    $45 = HEAP32[$41>>2]|0;\n    $46 = (($45) + ($$$i)|0);\n    HEAP32[$41>>2] = $46;\n    $47 = ((($30)) + 20|0);\n    $48 = HEAP32[$47>>2]|0;\n    $49 = (($48) + ($$$i))|0;\n    HEAP32[$47>>2] = $49;\n    $50 = HEAP32[$35>>2]|0;\n    $51 = (($50) - ($$$i))|0;\n    HEAP32[$35>>2] = $51;\n    $52 = HEAP32[$33>>2]|0;\n    $53 = (($52) - ($$$i))|0;\n    HEAP32[$33>>2] = $53;\n    $54 = ($53|0)==(0);\n    if ($54) {\n     $55 = ((($32)) + 8|0);\n     $56 = HEAP32[$55>>2]|0;\n     HEAP32[$41>>2] = $56;\n    }\n   }\n   $57 = HEAP32[$0>>2]|0;\n   $58 = ((($57)) + 16|0);\n   $59 = HEAP32[$58>>2]|0;\n   $60 = ($59|0)==(0);\n   if ($60) {\n    $$0 = 0;\n    label = 35;\n    break;\n   }\n   $$pr = HEAP32[$8>>2]|0;\n   $$pre = HEAP32[$7>>2]|0;\n   $62 = $$pr;$63 = $$pre;\n  }\n  $61 = (($63) - ($62))|0;\n  $64 = HEAP32[$9>>2]|0;\n  $65 = (($64) + -262)|0;\n  $66 = ($61>>>0)<($65>>>0);\n  if ($66) {\n   continue;\n  }\n  $67 = ($62|0)>(-1);\n  if ($67) {\n   $68 = HEAP32[$10>>2]|0;\n   $69 = (($68) + ($62)|0);\n   $70 = $69;\n  } else {\n   $70 = 0;\n  }\n  __tr_flush_block($0,$70,$61,0);\n  $71 = HEAP32[$7>>2]|0;\n  HEAP32[$8>>2] = $71;\n  $72 = HEAP32[$0>>2]|0;\n  $73 = ((($72)) + 28|0);\n  $74 = HEAP32[$73>>2]|0;\n  __tr_flush_bits($74);\n  $75 = ((($74)) + 20|0);\n  $76 = HEAP32[$75>>2]|0;\n  $77 = ((($72)) + 16|0);\n  $78 = HEAP32[$77>>2]|0;\n  $79 = ($76>>>0)>($78>>>0);\n  $$$i73 = $79 ? $78 : $76;\n  $80 = ($$$i73|0)==(0);\n  if (!($80)) {\n   $81 = ((($72)) + 12|0);\n   $82 = HEAP32[$81>>2]|0;\n   $83 = ((($74)) + 16|0);\n   $84 = HEAP32[$83>>2]|0;\n   _memcpy(($82|0),($84|0),($$$i73|0))|0;\n   $85 = HEAP32[$81>>2]|0;\n   $86 = (($85) + ($$$i73)|0);\n   HEAP32[$81>>2] = $86;\n   $87 = HEAP32[$83>>2]|0;\n   $88 = (($87) + ($$$i73)|0);\n   HEAP32[$83>>2] = $88;\n   $89 = ((($72)) + 20|0);\n   $90 = HEAP32[$89>>2]|0;\n   $91 = (($90) + ($$$i73))|0;\n   HEAP32[$89>>2] = $91;\n   $92 = HEAP32[$77>>2]|0;\n   $93 = (($92) - ($$$i73))|0;\n   HEAP32[$77>>2] = $93;\n   $94 = HEAP32[$75>>2]|0;\n   $95 = (($94) - ($$$i73))|0;\n   HEAP32[$75>>2] = $95;\n   $96 = ($95|0)==(0);\n   if ($96) {\n    $97 = ((($74)) + 8|0);\n    $98 = HEAP32[$97>>2]|0;\n    HEAP32[$83>>2] = $98;\n   }\n  }\n  $99 = HEAP32[$0>>2]|0;\n  $100 = ((($99)) + 16|0);\n  $101 = HEAP32[$100>>2]|0;\n  $102 = ($101|0)==(0);\n  if ($102) {\n   $$0 = 0;\n   label = 35;\n   break;\n  }\n }\n if ((label|0) == 20) {\n  $103 = ((($0)) + 5812|0);\n  HEAP32[$103>>2] = 0;\n  $104 = ($1|0)==(4);\n  if ($104) {\n   $105 = HEAP32[$8>>2]|0;\n   $106 = ($105|0)>(-1);\n   if ($106) {\n    $107 = HEAP32[$10>>2]|0;\n    $108 = (($107) + ($105)|0);\n    $111 = $108;\n   } else {\n    $111 = 0;\n   }\n   $109 = HEAP32[$7>>2]|0;\n   $110 = (($109) - ($105))|0;\n   __tr_flush_block($0,$111,$110,1);\n   $112 = HEAP32[$7>>2]|0;\n   HEAP32[$8>>2] = $112;\n   $113 = HEAP32[$0>>2]|0;\n   $114 = ((($113)) + 28|0);\n   $115 = HEAP32[$114>>2]|0;\n   __tr_flush_bits($115);\n   $116 = ((($115)) + 20|0);\n   $117 = HEAP32[$116>>2]|0;\n   $118 = ((($113)) + 16|0);\n   $119 = HEAP32[$118>>2]|0;\n   $120 = ($117>>>0)>($119>>>0);\n   $$$i75 = $120 ? $119 : $117;\n   $121 = ($$$i75|0)==(0);\n   if (!($121)) {\n    $122 = ((($113)) + 12|0);\n    $123 = HEAP32[$122>>2]|0;\n    $124 = ((($115)) + 16|0);\n    $125 = HEAP32[$124>>2]|0;\n    _memcpy(($123|0),($125|0),($$$i75|0))|0;\n    $126 = HEAP32[$122>>2]|0;\n    $127 = (($126) + ($$$i75)|0);\n    HEAP32[$122>>2] = $127;\n    $128 = HEAP32[$124>>2]|0;\n    $129 = (($128) + ($$$i75)|0);\n    HEAP32[$124>>2] = $129;\n    $130 = ((($113)) + 20|0);\n    $131 = HEAP32[$130>>2]|0;\n    $132 = (($131) + ($$$i75))|0;\n    HEAP32[$130>>2] = $132;\n    $133 = HEAP32[$118>>2]|0;\n    $134 = (($133) - ($$$i75))|0;\n    HEAP32[$118>>2] = $134;\n    $135 = HEAP32[$116>>2]|0;\n    $136 = (($135) - ($$$i75))|0;\n    HEAP32[$116>>2] = $136;\n    $137 = ($136|0)==(0);\n    if ($137) {\n     $138 = ((($115)) + 8|0);\n     $139 = HEAP32[$138>>2]|0;\n     HEAP32[$124>>2] = $139;\n    }\n   }\n   $140 = HEAP32[$0>>2]|0;\n   $141 = ((($140)) + 16|0);\n   $142 = HEAP32[$141>>2]|0;\n   $143 = ($142|0)==(0);\n   $$72 = $143 ? 2 : 3;\n   $$0 = $$72;\n   return ($$0|0);\n  }\n  $144 = HEAP32[$7>>2]|0;\n  $145 = HEAP32[$8>>2]|0;\n  $146 = ($144|0)>($145|0);\n  if ($146) {\n   $147 = ($145|0)>(-1);\n   if ($147) {\n    $148 = HEAP32[$10>>2]|0;\n    $149 = (($148) + ($145)|0);\n    $151 = $149;\n   } else {\n    $151 = 0;\n   }\n   $150 = (($144) - ($145))|0;\n   __tr_flush_block($0,$151,$150,0);\n   $152 = HEAP32[$7>>2]|0;\n   HEAP32[$8>>2] = $152;\n   $153 = HEAP32[$0>>2]|0;\n   $154 = ((($153)) + 28|0);\n   $155 = HEAP32[$154>>2]|0;\n   __tr_flush_bits($155);\n   $156 = ((($155)) + 20|0);\n   $157 = HEAP32[$156>>2]|0;\n   $158 = ((($153)) + 16|0);\n   $159 = HEAP32[$158>>2]|0;\n   $160 = ($157>>>0)>($159>>>0);\n   $$$i77 = $160 ? $159 : $157;\n   $161 = ($$$i77|0)==(0);\n   if (!($161)) {\n    $162 = ((($153)) + 12|0);\n    $163 = HEAP32[$162>>2]|0;\n    $164 = ((($155)) + 16|0);\n    $165 = HEAP32[$164>>2]|0;\n    _memcpy(($163|0),($165|0),($$$i77|0))|0;\n    $166 = HEAP32[$162>>2]|0;\n    $167 = (($166) + ($$$i77)|0);\n    HEAP32[$162>>2] = $167;\n    $168 = HEAP32[$164>>2]|0;\n    $169 = (($168) + ($$$i77)|0);\n    HEAP32[$164>>2] = $169;\n    $170 = ((($153)) + 20|0);\n    $171 = HEAP32[$170>>2]|0;\n    $172 = (($171) + ($$$i77))|0;\n    HEAP32[$170>>2] = $172;\n    $173 = HEAP32[$158>>2]|0;\n    $174 = (($173) - ($$$i77))|0;\n    HEAP32[$158>>2] = $174;\n    $175 = HEAP32[$156>>2]|0;\n    $176 = (($175) - ($$$i77))|0;\n    HEAP32[$156>>2] = $176;\n    $177 = ($176|0)==(0);\n    if ($177) {\n     $178 = ((($155)) + 8|0);\n     $179 = HEAP32[$178>>2]|0;\n     HEAP32[$164>>2] = $179;\n    }\n   }\n   $180 = HEAP32[$0>>2]|0;\n   $181 = ((($180)) + 16|0);\n   $182 = HEAP32[$181>>2]|0;\n   $183 = ($182|0)==(0);\n   if ($183) {\n    $$0 = 0;\n    return ($$0|0);\n   }\n  }\n  $$0 = 1;\n  return ($$0|0);\n }\n else if ((label|0) == 35) {\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _deflate_fast($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$i = 0, $$$i138 = 0, $$$i140 = 0, $$0 = 0, $$0135 = 0, $$137 = 0, $$pn = 0, $$pr = 0, $$pre = 0, $$pre143 = 0, $$pre144 = 0, $$pre145 = 0, $$pre146 = 0, $$pre147 = 0, $$pre148 = 0, $$pre149 = 0, $$sink = 0, $$sink$in = 0, $10 = 0;\n var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;\n var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;\n var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;\n var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;\n var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;\n var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;\n var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;\n var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;\n var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;\n var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;\n var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;\n var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;\n var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond136 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 116|0);\n $3 = ($1|0)==(0);\n $4 = ((($0)) + 72|0);\n $5 = ((($0)) + 88|0);\n $6 = ((($0)) + 108|0);\n $7 = ((($0)) + 56|0);\n $8 = ((($0)) + 84|0);\n $9 = ((($0)) + 68|0);\n $10 = ((($0)) + 52|0);\n $11 = ((($0)) + 64|0);\n $12 = ((($0)) + 44|0);\n $13 = ((($0)) + 96|0);\n $14 = ((($0)) + 112|0);\n $15 = ((($0)) + 5792|0);\n $16 = ((($0)) + 5796|0);\n $17 = ((($0)) + 5784|0);\n $18 = ((($0)) + 5788|0);\n $19 = ((($0)) + 128|0);\n $20 = ((($0)) + 92|0);\n while(1) {\n  $21 = HEAP32[$2>>2]|0;\n  $22 = ($21>>>0)<(262);\n  if ($22) {\n   _fill_window($0);\n   $23 = HEAP32[$2>>2]|0;\n   $24 = ($23>>>0)<(262);\n   $or$cond = $3 & $24;\n   if ($or$cond) {\n    $$0 = 0;\n    label = 39;\n    break;\n   }\n   $25 = ($23|0)==(0);\n   if ($25) {\n    label = 24;\n    break;\n   }\n   $26 = ($23>>>0)>(2);\n   if ($26) {\n    label = 6;\n   } else {\n    label = 9;\n   }\n  } else {\n   label = 6;\n  }\n  if ((label|0) == 6) {\n   label = 0;\n   $27 = HEAP32[$4>>2]|0;\n   $28 = HEAP32[$5>>2]|0;\n   $29 = $27 << $28;\n   $30 = HEAP32[$6>>2]|0;\n   $31 = (($30) + 2)|0;\n   $32 = HEAP32[$7>>2]|0;\n   $33 = (($32) + ($31)|0);\n   $34 = HEAP8[$33>>0]|0;\n   $35 = $34&255;\n   $36 = $35 ^ $29;\n   $37 = HEAP32[$8>>2]|0;\n   $38 = $36 & $37;\n   HEAP32[$4>>2] = $38;\n   $39 = HEAP32[$9>>2]|0;\n   $40 = (($39) + ($38<<1)|0);\n   $41 = HEAP16[$40>>1]|0;\n   $42 = HEAP32[$10>>2]|0;\n   $43 = $42 & $30;\n   $44 = HEAP32[$11>>2]|0;\n   $45 = (($44) + ($43<<1)|0);\n   HEAP16[$45>>1] = $41;\n   $46 = $41&65535;\n   $47 = $30&65535;\n   HEAP16[$40>>1] = $47;\n   $48 = ($41<<16>>16)==(0);\n   if ($48) {\n    label = 9;\n   } else {\n    $49 = (($30) - ($46))|0;\n    $50 = HEAP32[$12>>2]|0;\n    $51 = (($50) + -262)|0;\n    $52 = ($49>>>0)>($51>>>0);\n    if ($52) {\n     label = 9;\n    } else {\n     $53 = (_longest_match($0,$46)|0);\n     HEAP32[$13>>2] = $53;\n     $54 = $53;\n    }\n   }\n  }\n  if ((label|0) == 9) {\n   label = 0;\n   $$pr = HEAP32[$13>>2]|0;\n   $54 = $$pr;\n  }\n  $55 = ($54>>>0)>(2);\n  do {\n   if ($55) {\n    $56 = (($54) + 253)|0;\n    $57 = $56&255;\n    $58 = HEAP32[$6>>2]|0;\n    $59 = HEAP32[$14>>2]|0;\n    $60 = (($58) - ($59))|0;\n    $61 = $60&65535;\n    $62 = HEAP32[$15>>2]|0;\n    $63 = HEAP32[$16>>2]|0;\n    $64 = (($63) + ($62<<1)|0);\n    HEAP16[$64>>1] = $61;\n    $65 = (($62) + 1)|0;\n    HEAP32[$15>>2] = $65;\n    $66 = HEAP32[$17>>2]|0;\n    $67 = (($66) + ($62)|0);\n    HEAP8[$67>>0] = $57;\n    $68 = (($60) + 65535)|0;\n    $69 = $56 & 255;\n    $70 = (28079 + ($69)|0);\n    $71 = HEAP8[$70>>0]|0;\n    $72 = $71&255;\n    $73 = $72 | 256;\n    $74 = (($73) + 1)|0;\n    $75 = (((($0)) + 148|0) + ($74<<2)|0);\n    $76 = HEAP16[$75>>1]|0;\n    $77 = (($76) + 1)<<16>>16;\n    HEAP16[$75>>1] = $77;\n    $78 = $68 & 65535;\n    $79 = ($78>>>0)<(256);\n    $80 = $78 >>> 7;\n    $81 = (($80) + 256)|0;\n    $$pn = $79 ? $78 : $81;\n    $$sink$in = (27567 + ($$pn)|0);\n    $$sink = HEAP8[$$sink$in>>0]|0;\n    $82 = $$sink&255;\n    $83 = (((($0)) + 2440|0) + ($82<<2)|0);\n    $84 = HEAP16[$83>>1]|0;\n    $85 = (($84) + 1)<<16>>16;\n    HEAP16[$83>>1] = $85;\n    $86 = HEAP32[$15>>2]|0;\n    $87 = HEAP32[$18>>2]|0;\n    $88 = (($87) + -1)|0;\n    $89 = ($86|0)==($88|0);\n    $90 = $89&1;\n    $91 = HEAP32[$13>>2]|0;\n    $92 = HEAP32[$2>>2]|0;\n    $93 = (($92) - ($91))|0;\n    HEAP32[$2>>2] = $93;\n    $94 = HEAP32[$19>>2]|0;\n    $95 = ($91>>>0)<=($94>>>0);\n    $96 = ($93>>>0)>(2);\n    $or$cond136 = $96 & $95;\n    if (!($or$cond136)) {\n     $117 = HEAP32[$6>>2]|0;\n     $118 = (($117) + ($91))|0;\n     HEAP32[$6>>2] = $118;\n     HEAP32[$13>>2] = 0;\n     $119 = HEAP32[$7>>2]|0;\n     $120 = (($119) + ($118)|0);\n     $121 = HEAP8[$120>>0]|0;\n     $122 = $121&255;\n     HEAP32[$4>>2] = $122;\n     $123 = HEAP32[$5>>2]|0;\n     $124 = $122 << $123;\n     $125 = (($118) + 1)|0;\n     $126 = (($119) + ($125)|0);\n     $127 = HEAP8[$126>>0]|0;\n     $128 = $127&255;\n     $129 = $128 ^ $124;\n     $130 = HEAP32[$8>>2]|0;\n     $131 = $129 & $130;\n     HEAP32[$4>>2] = $131;\n     $$0135 = $90;$161 = $118;\n     break;\n    }\n    $97 = (($91) + -1)|0;\n    HEAP32[$13>>2] = $97;\n    $$pre = HEAP32[$6>>2]|0;\n    $$pre143 = HEAP32[$4>>2]|0;\n    $$pre144 = HEAP32[$5>>2]|0;\n    $$pre145 = HEAP32[$7>>2]|0;\n    $$pre146 = HEAP32[$8>>2]|0;\n    $$pre147 = HEAP32[$9>>2]|0;\n    $$pre148 = HEAP32[$10>>2]|0;\n    $$pre149 = HEAP32[$11>>2]|0;\n    $101 = $$pre143;$114 = $97;$99 = $$pre;\n    while(1) {\n     $98 = (($99) + 1)|0;\n     HEAP32[$6>>2] = $98;\n     $100 = $101 << $$pre144;\n     $102 = (($99) + 3)|0;\n     $103 = (($$pre145) + ($102)|0);\n     $104 = HEAP8[$103>>0]|0;\n     $105 = $104&255;\n     $106 = $105 ^ $100;\n     $107 = $106 & $$pre146;\n     HEAP32[$4>>2] = $107;\n     $108 = (($$pre147) + ($107<<1)|0);\n     $109 = HEAP16[$108>>1]|0;\n     $110 = $$pre148 & $98;\n     $111 = (($$pre149) + ($110<<1)|0);\n     HEAP16[$111>>1] = $109;\n     $112 = $98&65535;\n     HEAP16[$108>>1] = $112;\n     $113 = (($114) + -1)|0;\n     HEAP32[$13>>2] = $113;\n     $115 = ($113|0)==(0);\n     if ($115) {\n      break;\n     } else {\n      $101 = $107;$114 = $113;$99 = $98;\n     }\n    }\n    $116 = (($99) + 2)|0;\n    HEAP32[$6>>2] = $116;\n    $$0135 = $90;$161 = $116;\n   } else {\n    $132 = HEAP32[$6>>2]|0;\n    $133 = HEAP32[$7>>2]|0;\n    $134 = (($133) + ($132)|0);\n    $135 = HEAP8[$134>>0]|0;\n    $136 = HEAP32[$15>>2]|0;\n    $137 = HEAP32[$16>>2]|0;\n    $138 = (($137) + ($136<<1)|0);\n    HEAP16[$138>>1] = 0;\n    $139 = (($136) + 1)|0;\n    HEAP32[$15>>2] = $139;\n    $140 = HEAP32[$17>>2]|0;\n    $141 = (($140) + ($136)|0);\n    HEAP8[$141>>0] = $135;\n    $142 = $135&255;\n    $143 = (((($0)) + 148|0) + ($142<<2)|0);\n    $144 = HEAP16[$143>>1]|0;\n    $145 = (($144) + 1)<<16>>16;\n    HEAP16[$143>>1] = $145;\n    $146 = HEAP32[$15>>2]|0;\n    $147 = HEAP32[$18>>2]|0;\n    $148 = (($147) + -1)|0;\n    $149 = ($146|0)==($148|0);\n    $150 = $149&1;\n    $151 = HEAP32[$2>>2]|0;\n    $152 = (($151) + -1)|0;\n    HEAP32[$2>>2] = $152;\n    $153 = HEAP32[$6>>2]|0;\n    $154 = (($153) + 1)|0;\n    HEAP32[$6>>2] = $154;\n    $$0135 = $150;$161 = $154;\n   }\n  } while(0);\n  $155 = ($$0135|0)==(0);\n  if ($155) {\n   continue;\n  }\n  $156 = HEAP32[$20>>2]|0;\n  $157 = ($156|0)>(-1);\n  if ($157) {\n   $158 = HEAP32[$7>>2]|0;\n   $159 = (($158) + ($156)|0);\n   $162 = $159;\n  } else {\n   $162 = 0;\n  }\n  $160 = (($161) - ($156))|0;\n  __tr_flush_block($0,$162,$160,0);\n  $163 = HEAP32[$6>>2]|0;\n  HEAP32[$20>>2] = $163;\n  $164 = HEAP32[$0>>2]|0;\n  $165 = ((($164)) + 28|0);\n  $166 = HEAP32[$165>>2]|0;\n  __tr_flush_bits($166);\n  $167 = ((($166)) + 20|0);\n  $168 = HEAP32[$167>>2]|0;\n  $169 = ((($164)) + 16|0);\n  $170 = HEAP32[$169>>2]|0;\n  $171 = ($168>>>0)>($170>>>0);\n  $$$i = $171 ? $170 : $168;\n  $172 = ($$$i|0)==(0);\n  if (!($172)) {\n   $173 = ((($164)) + 12|0);\n   $174 = HEAP32[$173>>2]|0;\n   $175 = ((($166)) + 16|0);\n   $176 = HEAP32[$175>>2]|0;\n   _memcpy(($174|0),($176|0),($$$i|0))|0;\n   $177 = HEAP32[$173>>2]|0;\n   $178 = (($177) + ($$$i)|0);\n   HEAP32[$173>>2] = $178;\n   $179 = HEAP32[$175>>2]|0;\n   $180 = (($179) + ($$$i)|0);\n   HEAP32[$175>>2] = $180;\n   $181 = ((($164)) + 20|0);\n   $182 = HEAP32[$181>>2]|0;\n   $183 = (($182) + ($$$i))|0;\n   HEAP32[$181>>2] = $183;\n   $184 = HEAP32[$169>>2]|0;\n   $185 = (($184) - ($$$i))|0;\n   HEAP32[$169>>2] = $185;\n   $186 = HEAP32[$167>>2]|0;\n   $187 = (($186) - ($$$i))|0;\n   HEAP32[$167>>2] = $187;\n   $188 = ($187|0)==(0);\n   if ($188) {\n    $189 = ((($166)) + 8|0);\n    $190 = HEAP32[$189>>2]|0;\n    HEAP32[$175>>2] = $190;\n   }\n  }\n  $191 = HEAP32[$0>>2]|0;\n  $192 = ((($191)) + 16|0);\n  $193 = HEAP32[$192>>2]|0;\n  $194 = ($193|0)==(0);\n  if ($194) {\n   $$0 = 0;\n   label = 39;\n   break;\n  }\n }\n if ((label|0) == 24) {\n  $195 = HEAP32[$6>>2]|0;\n  $196 = ($195>>>0)<(2);\n  $$ = $196 ? $195 : 2;\n  $197 = ((($0)) + 5812|0);\n  HEAP32[$197>>2] = $$;\n  $198 = ($1|0)==(4);\n  if ($198) {\n   $199 = HEAP32[$20>>2]|0;\n   $200 = ($199|0)>(-1);\n   if ($200) {\n    $201 = HEAP32[$7>>2]|0;\n    $202 = (($201) + ($199)|0);\n    $204 = $202;\n   } else {\n    $204 = 0;\n   }\n   $203 = (($195) - ($199))|0;\n   __tr_flush_block($0,$204,$203,1);\n   $205 = HEAP32[$6>>2]|0;\n   HEAP32[$20>>2] = $205;\n   $206 = HEAP32[$0>>2]|0;\n   $207 = ((($206)) + 28|0);\n   $208 = HEAP32[$207>>2]|0;\n   __tr_flush_bits($208);\n   $209 = ((($208)) + 20|0);\n   $210 = HEAP32[$209>>2]|0;\n   $211 = ((($206)) + 16|0);\n   $212 = HEAP32[$211>>2]|0;\n   $213 = ($210>>>0)>($212>>>0);\n   $$$i138 = $213 ? $212 : $210;\n   $214 = ($$$i138|0)==(0);\n   if (!($214)) {\n    $215 = ((($206)) + 12|0);\n    $216 = HEAP32[$215>>2]|0;\n    $217 = ((($208)) + 16|0);\n    $218 = HEAP32[$217>>2]|0;\n    _memcpy(($216|0),($218|0),($$$i138|0))|0;\n    $219 = HEAP32[$215>>2]|0;\n    $220 = (($219) + ($$$i138)|0);\n    HEAP32[$215>>2] = $220;\n    $221 = HEAP32[$217>>2]|0;\n    $222 = (($221) + ($$$i138)|0);\n    HEAP32[$217>>2] = $222;\n    $223 = ((($206)) + 20|0);\n    $224 = HEAP32[$223>>2]|0;\n    $225 = (($224) + ($$$i138))|0;\n    HEAP32[$223>>2] = $225;\n    $226 = HEAP32[$211>>2]|0;\n    $227 = (($226) - ($$$i138))|0;\n    HEAP32[$211>>2] = $227;\n    $228 = HEAP32[$209>>2]|0;\n    $229 = (($228) - ($$$i138))|0;\n    HEAP32[$209>>2] = $229;\n    $230 = ($229|0)==(0);\n    if ($230) {\n     $231 = ((($208)) + 8|0);\n     $232 = HEAP32[$231>>2]|0;\n     HEAP32[$217>>2] = $232;\n    }\n   }\n   $233 = HEAP32[$0>>2]|0;\n   $234 = ((($233)) + 16|0);\n   $235 = HEAP32[$234>>2]|0;\n   $236 = ($235|0)==(0);\n   $$137 = $236 ? 2 : 3;\n   $$0 = $$137;\n   return ($$0|0);\n  }\n  $237 = HEAP32[$15>>2]|0;\n  $238 = ($237|0)==(0);\n  if (!($238)) {\n   $239 = HEAP32[$20>>2]|0;\n   $240 = ($239|0)>(-1);\n   if ($240) {\n    $241 = HEAP32[$7>>2]|0;\n    $242 = (($241) + ($239)|0);\n    $244 = $242;\n   } else {\n    $244 = 0;\n   }\n   $243 = (($195) - ($239))|0;\n   __tr_flush_block($0,$244,$243,0);\n   $245 = HEAP32[$6>>2]|0;\n   HEAP32[$20>>2] = $245;\n   $246 = HEAP32[$0>>2]|0;\n   $247 = ((($246)) + 28|0);\n   $248 = HEAP32[$247>>2]|0;\n   __tr_flush_bits($248);\n   $249 = ((($248)) + 20|0);\n   $250 = HEAP32[$249>>2]|0;\n   $251 = ((($246)) + 16|0);\n   $252 = HEAP32[$251>>2]|0;\n   $253 = ($250>>>0)>($252>>>0);\n   $$$i140 = $253 ? $252 : $250;\n   $254 = ($$$i140|0)==(0);\n   if (!($254)) {\n    $255 = ((($246)) + 12|0);\n    $256 = HEAP32[$255>>2]|0;\n    $257 = ((($248)) + 16|0);\n    $258 = HEAP32[$257>>2]|0;\n    _memcpy(($256|0),($258|0),($$$i140|0))|0;\n    $259 = HEAP32[$255>>2]|0;\n    $260 = (($259) + ($$$i140)|0);\n    HEAP32[$255>>2] = $260;\n    $261 = HEAP32[$257>>2]|0;\n    $262 = (($261) + ($$$i140)|0);\n    HEAP32[$257>>2] = $262;\n    $263 = ((($246)) + 20|0);\n    $264 = HEAP32[$263>>2]|0;\n    $265 = (($264) + ($$$i140))|0;\n    HEAP32[$263>>2] = $265;\n    $266 = HEAP32[$251>>2]|0;\n    $267 = (($266) - ($$$i140))|0;\n    HEAP32[$251>>2] = $267;\n    $268 = HEAP32[$249>>2]|0;\n    $269 = (($268) - ($$$i140))|0;\n    HEAP32[$249>>2] = $269;\n    $270 = ($269|0)==(0);\n    if ($270) {\n     $271 = ((($248)) + 8|0);\n     $272 = HEAP32[$271>>2]|0;\n     HEAP32[$257>>2] = $272;\n    }\n   }\n   $273 = HEAP32[$0>>2]|0;\n   $274 = ((($273)) + 16|0);\n   $275 = HEAP32[$274>>2]|0;\n   $276 = ($275|0)==(0);\n   if ($276) {\n    $$0 = 0;\n    return ($$0|0);\n   }\n  }\n  $$0 = 1;\n  return ($$0|0);\n }\n else if ((label|0) == 39) {\n  return ($$0|0);\n }\n return (0)|0;\n}\nfunction _deflate_slow($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$i = 0, $$$i173 = 0, $$$i175 = 0, $$$i177 = 0, $$172 = 0, $$2 = 0, $$neg181 = 0, $$pn = 0, $$pr = 0, $$pr179 = 0, $$pre = 0, $$sink = 0, $$sink$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;\n var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;\n var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;\n var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;\n var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;\n var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;\n var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;\n var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;\n var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;\n var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;\n var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;\n var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;\n var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond185 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 116|0);\n $3 = ($1|0)==(0);\n $4 = ((($0)) + 72|0);\n $5 = ((($0)) + 88|0);\n $6 = ((($0)) + 108|0);\n $7 = ((($0)) + 56|0);\n $8 = ((($0)) + 84|0);\n $9 = ((($0)) + 68|0);\n $10 = ((($0)) + 52|0);\n $11 = ((($0)) + 64|0);\n $12 = ((($0)) + 96|0);\n $13 = ((($0)) + 120|0);\n $14 = ((($0)) + 112|0);\n $15 = ((($0)) + 100|0);\n $16 = ((($0)) + 5792|0);\n $17 = ((($0)) + 5796|0);\n $18 = ((($0)) + 5784|0);\n $19 = ((($0)) + 5788|0);\n $20 = ((($0)) + 104|0);\n $21 = ((($0)) + 92|0);\n $22 = ((($0)) + 128|0);\n $23 = ((($0)) + 44|0);\n $24 = ((($0)) + 136|0);\n L1: while(1) {\n  $$pr = HEAP32[$2>>2]|0;\n  $25 = $$pr;\n  while(1) {\n   $26 = ($25>>>0)<(262);\n   if ($26) {\n    _fill_window($0);\n    $27 = HEAP32[$2>>2]|0;\n    $28 = ($27>>>0)<(262);\n    $or$cond = $3 & $28;\n    if ($or$cond) {\n     $$2 = 0;\n     label = 55;\n     break L1;\n    }\n    $29 = ($27|0)==(0);\n    if ($29) {\n     label = 38;\n     break L1;\n    }\n    $30 = ($27>>>0)>(2);\n    if ($30) {\n     label = 8;\n    } else {\n     $31 = HEAP32[$12>>2]|0;\n     HEAP32[$13>>2] = $31;\n     $32 = HEAP32[$14>>2]|0;\n     HEAP32[$15>>2] = $32;\n     HEAP32[$12>>2] = 2;\n     $350 = 2;\n     label = 16;\n    }\n   } else {\n    label = 8;\n   }\n   do {\n    if ((label|0) == 8) {\n     label = 0;\n     $33 = HEAP32[$4>>2]|0;\n     $34 = HEAP32[$5>>2]|0;\n     $35 = $33 << $34;\n     $36 = HEAP32[$6>>2]|0;\n     $37 = (($36) + 2)|0;\n     $38 = HEAP32[$7>>2]|0;\n     $39 = (($38) + ($37)|0);\n     $40 = HEAP8[$39>>0]|0;\n     $41 = $40&255;\n     $42 = $41 ^ $35;\n     $43 = HEAP32[$8>>2]|0;\n     $44 = $42 & $43;\n     HEAP32[$4>>2] = $44;\n     $45 = HEAP32[$9>>2]|0;\n     $46 = (($45) + ($44<<1)|0);\n     $47 = HEAP16[$46>>1]|0;\n     $48 = HEAP32[$10>>2]|0;\n     $49 = $48 & $36;\n     $50 = HEAP32[$11>>2]|0;\n     $51 = (($50) + ($49<<1)|0);\n     HEAP16[$51>>1] = $47;\n     $52 = $47&65535;\n     $53 = $36&65535;\n     HEAP16[$46>>1] = $53;\n     $54 = HEAP32[$12>>2]|0;\n     HEAP32[$13>>2] = $54;\n     $55 = HEAP32[$14>>2]|0;\n     HEAP32[$15>>2] = $55;\n     HEAP32[$12>>2] = 2;\n     $56 = ($47<<16>>16)==(0);\n     if ($56) {\n      $350 = 2;\n      label = 16;\n     } else {\n      $57 = HEAP32[$22>>2]|0;\n      $58 = ($54>>>0)<($57>>>0);\n      if ($58) {\n       $59 = HEAP32[$6>>2]|0;\n       $60 = (($59) - ($52))|0;\n       $61 = HEAP32[$23>>2]|0;\n       $62 = (($61) + -262)|0;\n       $63 = ($60>>>0)>($62>>>0);\n       if ($63) {\n        $350 = 2;\n        label = 16;\n       } else {\n        $64 = (_longest_match($0,$52)|0);\n        HEAP32[$12>>2] = $64;\n        $65 = ($64>>>0)<(6);\n        if ($65) {\n         $66 = HEAP32[$24>>2]|0;\n         $67 = ($66|0)==(1);\n         if (!($67)) {\n          $68 = ($64|0)==(3);\n          if (!($68)) {\n           $350 = $64;\n           label = 16;\n           break;\n          }\n          $69 = HEAP32[$6>>2]|0;\n          $70 = HEAP32[$14>>2]|0;\n          $71 = (($69) - ($70))|0;\n          $72 = ($71>>>0)>(4096);\n          if (!($72)) {\n           $350 = 3;\n           label = 16;\n           break;\n          }\n         }\n         HEAP32[$12>>2] = 2;\n         $350 = 2;\n         label = 16;\n        } else {\n         $350 = $64;\n         label = 16;\n        }\n       }\n      } else {\n       $73 = $54;$75 = 2;\n      }\n     }\n    }\n   } while(0);\n   if ((label|0) == 16) {\n    label = 0;\n    $$pr179 = HEAP32[$13>>2]|0;\n    $73 = $$pr179;$75 = $350;\n   }\n   $74 = ($73>>>0)<(3);\n   $76 = ($75>>>0)>($73>>>0);\n   $or$cond185 = $74 | $76;\n   if (!($or$cond185)) {\n    break;\n   }\n   $183 = HEAP32[$20>>2]|0;\n   $184 = ($183|0)==(0);\n   if ($184) {\n    HEAP32[$20>>2] = 1;\n    $247 = HEAP32[$6>>2]|0;\n    $248 = (($247) + 1)|0;\n    HEAP32[$6>>2] = $248;\n    $249 = HEAP32[$2>>2]|0;\n    $250 = (($249) + -1)|0;\n    HEAP32[$2>>2] = $250;\n    $25 = $250;\n    continue;\n   }\n   $185 = HEAP32[$6>>2]|0;\n   $186 = (($185) + -1)|0;\n   $187 = HEAP32[$7>>2]|0;\n   $188 = (($187) + ($186)|0);\n   $189 = HEAP8[$188>>0]|0;\n   $190 = HEAP32[$16>>2]|0;\n   $191 = HEAP32[$17>>2]|0;\n   $192 = (($191) + ($190<<1)|0);\n   HEAP16[$192>>1] = 0;\n   $193 = (($190) + 1)|0;\n   HEAP32[$16>>2] = $193;\n   $194 = HEAP32[$18>>2]|0;\n   $195 = (($194) + ($190)|0);\n   HEAP8[$195>>0] = $189;\n   $196 = $189&255;\n   $197 = (((($0)) + 148|0) + ($196<<2)|0);\n   $198 = HEAP16[$197>>1]|0;\n   $199 = (($198) + 1)<<16>>16;\n   HEAP16[$197>>1] = $199;\n   $200 = HEAP32[$16>>2]|0;\n   $201 = HEAP32[$19>>2]|0;\n   $202 = (($201) + -1)|0;\n   $203 = ($200|0)==($202|0);\n   if ($203) {\n    $204 = HEAP32[$21>>2]|0;\n    $205 = ($204|0)>(-1);\n    if ($205) {\n     $206 = HEAP32[$7>>2]|0;\n     $207 = (($206) + ($204)|0);\n     $210 = $207;\n    } else {\n     $210 = 0;\n    }\n    $208 = HEAP32[$6>>2]|0;\n    $209 = (($208) - ($204))|0;\n    __tr_flush_block($0,$210,$209,0);\n    $211 = HEAP32[$6>>2]|0;\n    HEAP32[$21>>2] = $211;\n    $212 = HEAP32[$0>>2]|0;\n    $213 = ((($212)) + 28|0);\n    $214 = HEAP32[$213>>2]|0;\n    __tr_flush_bits($214);\n    $215 = ((($214)) + 20|0);\n    $216 = HEAP32[$215>>2]|0;\n    $217 = ((($212)) + 16|0);\n    $218 = HEAP32[$217>>2]|0;\n    $219 = ($216>>>0)>($218>>>0);\n    $$$i173 = $219 ? $218 : $216;\n    $220 = ($$$i173|0)==(0);\n    if (!($220)) {\n     $221 = ((($212)) + 12|0);\n     $222 = HEAP32[$221>>2]|0;\n     $223 = ((($214)) + 16|0);\n     $224 = HEAP32[$223>>2]|0;\n     _memcpy(($222|0),($224|0),($$$i173|0))|0;\n     $225 = HEAP32[$221>>2]|0;\n     $226 = (($225) + ($$$i173)|0);\n     HEAP32[$221>>2] = $226;\n     $227 = HEAP32[$223>>2]|0;\n     $228 = (($227) + ($$$i173)|0);\n     HEAP32[$223>>2] = $228;\n     $229 = ((($212)) + 20|0);\n     $230 = HEAP32[$229>>2]|0;\n     $231 = (($230) + ($$$i173))|0;\n     HEAP32[$229>>2] = $231;\n     $232 = HEAP32[$217>>2]|0;\n     $233 = (($232) - ($$$i173))|0;\n     HEAP32[$217>>2] = $233;\n     $234 = HEAP32[$215>>2]|0;\n     $235 = (($234) - ($$$i173))|0;\n     HEAP32[$215>>2] = $235;\n     $236 = ($235|0)==(0);\n     if ($236) {\n      $237 = ((($214)) + 8|0);\n      $238 = HEAP32[$237>>2]|0;\n      HEAP32[$223>>2] = $238;\n     }\n    }\n   }\n   $239 = HEAP32[$6>>2]|0;\n   $240 = (($239) + 1)|0;\n   HEAP32[$6>>2] = $240;\n   $241 = HEAP32[$2>>2]|0;\n   $242 = (($241) + -1)|0;\n   HEAP32[$2>>2] = $242;\n   $243 = HEAP32[$0>>2]|0;\n   $244 = ((($243)) + 16|0);\n   $245 = HEAP32[$244>>2]|0;\n   $246 = ($245|0)==(0);\n   if ($246) {\n    $$2 = 0;\n    label = 55;\n    break L1;\n   } else {\n    $25 = $242;\n   }\n  }\n  $77 = HEAP32[$6>>2]|0;\n  $78 = HEAP32[$2>>2]|0;\n  $79 = (($77) + -3)|0;\n  $80 = (($79) + ($78))|0;\n  $81 = (($73) + 253)|0;\n  $82 = $81&255;\n  $83 = (($77) + 65535)|0;\n  $84 = HEAP32[$15>>2]|0;\n  $85 = (($83) - ($84))|0;\n  $86 = $85&65535;\n  $87 = HEAP32[$16>>2]|0;\n  $88 = HEAP32[$17>>2]|0;\n  $89 = (($88) + ($87<<1)|0);\n  HEAP16[$89>>1] = $86;\n  $90 = (($87) + 1)|0;\n  HEAP32[$16>>2] = $90;\n  $91 = HEAP32[$18>>2]|0;\n  $92 = (($91) + ($87)|0);\n  HEAP8[$92>>0] = $82;\n  $93 = (($85) + 65535)|0;\n  $94 = $81 & 255;\n  $95 = (28079 + ($94)|0);\n  $96 = HEAP8[$95>>0]|0;\n  $97 = $96&255;\n  $98 = $97 | 256;\n  $99 = (($98) + 1)|0;\n  $100 = (((($0)) + 148|0) + ($99<<2)|0);\n  $101 = HEAP16[$100>>1]|0;\n  $102 = (($101) + 1)<<16>>16;\n  HEAP16[$100>>1] = $102;\n  $103 = $93 & 65535;\n  $104 = ($103>>>0)<(256);\n  $105 = $103 >>> 7;\n  $106 = (($105) + 256)|0;\n  $$pn = $104 ? $103 : $106;\n  $$sink$in = (27567 + ($$pn)|0);\n  $$sink = HEAP8[$$sink$in>>0]|0;\n  $107 = $$sink&255;\n  $108 = (((($0)) + 2440|0) + ($107<<2)|0);\n  $109 = HEAP16[$108>>1]|0;\n  $110 = (($109) + 1)<<16>>16;\n  HEAP16[$108>>1] = $110;\n  $111 = HEAP32[$16>>2]|0;\n  $112 = HEAP32[$19>>2]|0;\n  $113 = (($112) + -1)|0;\n  $114 = HEAP32[$13>>2]|0;\n  $115 = HEAP32[$2>>2]|0;\n  $$neg181 = (1 - ($114))|0;\n  $116 = (($$neg181) + ($115))|0;\n  HEAP32[$2>>2] = $116;\n  $117 = (($114) + -2)|0;\n  HEAP32[$13>>2] = $117;\n  $$pre = HEAP32[$6>>2]|0;\n  $119 = $$pre;$141 = $117;\n  while(1) {\n   $118 = (($119) + 1)|0;\n   HEAP32[$6>>2] = $118;\n   $120 = ($118>>>0)>($80>>>0);\n   if (!($120)) {\n    $121 = HEAP32[$4>>2]|0;\n    $122 = HEAP32[$5>>2]|0;\n    $123 = $121 << $122;\n    $124 = (($119) + 3)|0;\n    $125 = HEAP32[$7>>2]|0;\n    $126 = (($125) + ($124)|0);\n    $127 = HEAP8[$126>>0]|0;\n    $128 = $127&255;\n    $129 = $128 ^ $123;\n    $130 = HEAP32[$8>>2]|0;\n    $131 = $129 & $130;\n    HEAP32[$4>>2] = $131;\n    $132 = HEAP32[$9>>2]|0;\n    $133 = (($132) + ($131<<1)|0);\n    $134 = HEAP16[$133>>1]|0;\n    $135 = HEAP32[$10>>2]|0;\n    $136 = $135 & $118;\n    $137 = HEAP32[$11>>2]|0;\n    $138 = (($137) + ($136<<1)|0);\n    HEAP16[$138>>1] = $134;\n    $139 = $118&65535;\n    HEAP16[$133>>1] = $139;\n   }\n   $140 = (($141) + -1)|0;\n   HEAP32[$13>>2] = $140;\n   $142 = ($140|0)==(0);\n   if ($142) {\n    break;\n   } else {\n    $119 = $118;$141 = $140;\n   }\n  }\n  $143 = ($111|0)==($113|0);\n  HEAP32[$20>>2] = 0;\n  HEAP32[$12>>2] = 2;\n  $144 = (($119) + 2)|0;\n  HEAP32[$6>>2] = $144;\n  if (!($143)) {\n   continue;\n  }\n  $145 = HEAP32[$21>>2]|0;\n  $146 = ($145|0)>(-1);\n  if ($146) {\n   $147 = HEAP32[$7>>2]|0;\n   $148 = (($147) + ($145)|0);\n   $150 = $148;\n  } else {\n   $150 = 0;\n  }\n  $149 = (($144) - ($145))|0;\n  __tr_flush_block($0,$150,$149,0);\n  $151 = HEAP32[$6>>2]|0;\n  HEAP32[$21>>2] = $151;\n  $152 = HEAP32[$0>>2]|0;\n  $153 = ((($152)) + 28|0);\n  $154 = HEAP32[$153>>2]|0;\n  __tr_flush_bits($154);\n  $155 = ((($154)) + 20|0);\n  $156 = HEAP32[$155>>2]|0;\n  $157 = ((($152)) + 16|0);\n  $158 = HEAP32[$157>>2]|0;\n  $159 = ($156>>>0)>($158>>>0);\n  $$$i = $159 ? $158 : $156;\n  $160 = ($$$i|0)==(0);\n  if (!($160)) {\n   $161 = ((($152)) + 12|0);\n   $162 = HEAP32[$161>>2]|0;\n   $163 = ((($154)) + 16|0);\n   $164 = HEAP32[$163>>2]|0;\n   _memcpy(($162|0),($164|0),($$$i|0))|0;\n   $165 = HEAP32[$161>>2]|0;\n   $166 = (($165) + ($$$i)|0);\n   HEAP32[$161>>2] = $166;\n   $167 = HEAP32[$163>>2]|0;\n   $168 = (($167) + ($$$i)|0);\n   HEAP32[$163>>2] = $168;\n   $169 = ((($152)) + 20|0);\n   $170 = HEAP32[$169>>2]|0;\n   $171 = (($170) + ($$$i))|0;\n   HEAP32[$169>>2] = $171;\n   $172 = HEAP32[$157>>2]|0;\n   $173 = (($172) - ($$$i))|0;\n   HEAP32[$157>>2] = $173;\n   $174 = HEAP32[$155>>2]|0;\n   $175 = (($174) - ($$$i))|0;\n   HEAP32[$155>>2] = $175;\n   $176 = ($175|0)==(0);\n   if ($176) {\n    $177 = ((($154)) + 8|0);\n    $178 = HEAP32[$177>>2]|0;\n    HEAP32[$163>>2] = $178;\n   }\n  }\n  $179 = HEAP32[$0>>2]|0;\n  $180 = ((($179)) + 16|0);\n  $181 = HEAP32[$180>>2]|0;\n  $182 = ($181|0)==(0);\n  if ($182) {\n   $$2 = 0;\n   label = 55;\n   break;\n  }\n }\n if ((label|0) == 38) {\n  $251 = HEAP32[$20>>2]|0;\n  $252 = ($251|0)==(0);\n  if (!($252)) {\n   $253 = HEAP32[$6>>2]|0;\n   $254 = (($253) + -1)|0;\n   $255 = HEAP32[$7>>2]|0;\n   $256 = (($255) + ($254)|0);\n   $257 = HEAP8[$256>>0]|0;\n   $258 = HEAP32[$16>>2]|0;\n   $259 = HEAP32[$17>>2]|0;\n   $260 = (($259) + ($258<<1)|0);\n   HEAP16[$260>>1] = 0;\n   $261 = (($258) + 1)|0;\n   HEAP32[$16>>2] = $261;\n   $262 = HEAP32[$18>>2]|0;\n   $263 = (($262) + ($258)|0);\n   HEAP8[$263>>0] = $257;\n   $264 = $257&255;\n   $265 = (((($0)) + 148|0) + ($264<<2)|0);\n   $266 = HEAP16[$265>>1]|0;\n   $267 = (($266) + 1)<<16>>16;\n   HEAP16[$265>>1] = $267;\n   HEAP32[$20>>2] = 0;\n  }\n  $268 = HEAP32[$6>>2]|0;\n  $269 = ($268>>>0)<(2);\n  $$ = $269 ? $268 : 2;\n  $270 = ((($0)) + 5812|0);\n  HEAP32[$270>>2] = $$;\n  $271 = ($1|0)==(4);\n  if ($271) {\n   $272 = HEAP32[$21>>2]|0;\n   $273 = ($272|0)>(-1);\n   if ($273) {\n    $274 = HEAP32[$7>>2]|0;\n    $275 = (($274) + ($272)|0);\n    $277 = $275;\n   } else {\n    $277 = 0;\n   }\n   $276 = (($268) - ($272))|0;\n   __tr_flush_block($0,$277,$276,1);\n   $278 = HEAP32[$6>>2]|0;\n   HEAP32[$21>>2] = $278;\n   $279 = HEAP32[$0>>2]|0;\n   $280 = ((($279)) + 28|0);\n   $281 = HEAP32[$280>>2]|0;\n   __tr_flush_bits($281);\n   $282 = ((($281)) + 20|0);\n   $283 = HEAP32[$282>>2]|0;\n   $284 = ((($279)) + 16|0);\n   $285 = HEAP32[$284>>2]|0;\n   $286 = ($283>>>0)>($285>>>0);\n   $$$i175 = $286 ? $285 : $283;\n   $287 = ($$$i175|0)==(0);\n   if (!($287)) {\n    $288 = ((($279)) + 12|0);\n    $289 = HEAP32[$288>>2]|0;\n    $290 = ((($281)) + 16|0);\n    $291 = HEAP32[$290>>2]|0;\n    _memcpy(($289|0),($291|0),($$$i175|0))|0;\n    $292 = HEAP32[$288>>2]|0;\n    $293 = (($292) + ($$$i175)|0);\n    HEAP32[$288>>2] = $293;\n    $294 = HEAP32[$290>>2]|0;\n    $295 = (($294) + ($$$i175)|0);\n    HEAP32[$290>>2] = $295;\n    $296 = ((($279)) + 20|0);\n    $297 = HEAP32[$296>>2]|0;\n    $298 = (($297) + ($$$i175))|0;\n    HEAP32[$296>>2] = $298;\n    $299 = HEAP32[$284>>2]|0;\n    $300 = (($299) - ($$$i175))|0;\n    HEAP32[$284>>2] = $300;\n    $301 = HEAP32[$282>>2]|0;\n    $302 = (($301) - ($$$i175))|0;\n    HEAP32[$282>>2] = $302;\n    $303 = ($302|0)==(0);\n    if ($303) {\n     $304 = ((($281)) + 8|0);\n     $305 = HEAP32[$304>>2]|0;\n     HEAP32[$290>>2] = $305;\n    }\n   }\n   $306 = HEAP32[$0>>2]|0;\n   $307 = ((($306)) + 16|0);\n   $308 = HEAP32[$307>>2]|0;\n   $309 = ($308|0)==(0);\n   $$172 = $309 ? 2 : 3;\n   $$2 = $$172;\n   return ($$2|0);\n  }\n  $310 = HEAP32[$16>>2]|0;\n  $311 = ($310|0)==(0);\n  if (!($311)) {\n   $312 = HEAP32[$21>>2]|0;\n   $313 = ($312|0)>(-1);\n   if ($313) {\n    $314 = HEAP32[$7>>2]|0;\n    $315 = (($314) + ($312)|0);\n    $317 = $315;\n   } else {\n    $317 = 0;\n   }\n   $316 = (($268) - ($312))|0;\n   __tr_flush_block($0,$317,$316,0);\n   $318 = HEAP32[$6>>2]|0;\n   HEAP32[$21>>2] = $318;\n   $319 = HEAP32[$0>>2]|0;\n   $320 = ((($319)) + 28|0);\n   $321 = HEAP32[$320>>2]|0;\n   __tr_flush_bits($321);\n   $322 = ((($321)) + 20|0);\n   $323 = HEAP32[$322>>2]|0;\n   $324 = ((($319)) + 16|0);\n   $325 = HEAP32[$324>>2]|0;\n   $326 = ($323>>>0)>($325>>>0);\n   $$$i177 = $326 ? $325 : $323;\n   $327 = ($$$i177|0)==(0);\n   if (!($327)) {\n    $328 = ((($319)) + 12|0);\n    $329 = HEAP32[$328>>2]|0;\n    $330 = ((($321)) + 16|0);\n    $331 = HEAP32[$330>>2]|0;\n    _memcpy(($329|0),($331|0),($$$i177|0))|0;\n    $332 = HEAP32[$328>>2]|0;\n    $333 = (($332) + ($$$i177)|0);\n    HEAP32[$328>>2] = $333;\n    $334 = HEAP32[$330>>2]|0;\n    $335 = (($334) + ($$$i177)|0);\n    HEAP32[$330>>2] = $335;\n    $336 = ((($319)) + 20|0);\n    $337 = HEAP32[$336>>2]|0;\n    $338 = (($337) + ($$$i177))|0;\n    HEAP32[$336>>2] = $338;\n    $339 = HEAP32[$324>>2]|0;\n    $340 = (($339) - ($$$i177))|0;\n    HEAP32[$324>>2] = $340;\n    $341 = HEAP32[$322>>2]|0;\n    $342 = (($341) - ($$$i177))|0;\n    HEAP32[$322>>2] = $342;\n    $343 = ($342|0)==(0);\n    if ($343) {\n     $344 = ((($321)) + 8|0);\n     $345 = HEAP32[$344>>2]|0;\n     HEAP32[$330>>2] = $345;\n    }\n   }\n   $346 = HEAP32[$0>>2]|0;\n   $347 = ((($346)) + 16|0);\n   $348 = HEAP32[$347>>2]|0;\n   $349 = ($348|0)==(0);\n   if ($349) {\n    $$2 = 0;\n    return ($$2|0);\n   }\n  }\n  $$2 = 1;\n  return ($$2|0);\n }\n else if ((label|0) == 55) {\n  return ($$2|0);\n }\n return (0)|0;\n}\nfunction _fill_window($0) {\n $0 = $0|0;\n var $$ = 0, $$$i = 0, $$0123 = 0, $$0124 = 0, $$0125 = 0, $$0126 = 0, $$025$i = 0, $$1 = 0, $$1127 = 0, $$130 = 0, $$pre = 0, $$pre135 = 0, $$pre136 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;\n var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;\n var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;\n var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;\n var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;\n var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 44|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 60|0);\n $4 = ((($0)) + 116|0);\n $5 = ((($0)) + 108|0);\n $6 = (($2) + -262)|0;\n $7 = ((($0)) + 56|0);\n $8 = ((($0)) + 5812|0);\n $9 = ((($0)) + 72|0);\n $10 = ((($0)) + 88|0);\n $11 = ((($0)) + 84|0);\n $12 = ((($0)) + 68|0);\n $13 = ((($0)) + 52|0);\n $14 = ((($0)) + 64|0);\n $15 = ((($0)) + 112|0);\n $16 = ((($0)) + 92|0);\n $17 = ((($0)) + 76|0);\n $$pre = HEAP32[$4>>2]|0;\n $20 = $$pre;$24 = $2;\n while(1) {\n  $18 = HEAP32[$3>>2]|0;\n  $19 = (($18) - ($20))|0;\n  $21 = HEAP32[$5>>2]|0;\n  $22 = (($19) - ($21))|0;\n  $23 = (($6) + ($24))|0;\n  $25 = ($21>>>0)<($23>>>0);\n  if ($25) {\n   $$0125 = $22;$64 = $21;\n  } else {\n   $26 = HEAP32[$7>>2]|0;\n   $27 = (($26) + ($2)|0);\n   _memcpy(($26|0),($27|0),($2|0))|0;\n   $28 = HEAP32[$15>>2]|0;\n   $29 = (($28) - ($2))|0;\n   HEAP32[$15>>2] = $29;\n   $30 = HEAP32[$5>>2]|0;\n   $31 = (($30) - ($2))|0;\n   HEAP32[$5>>2] = $31;\n   $32 = HEAP32[$16>>2]|0;\n   $33 = (($32) - ($2))|0;\n   HEAP32[$16>>2] = $33;\n   $34 = HEAP32[$17>>2]|0;\n   $35 = HEAP32[$12>>2]|0;\n   $36 = (($35) + ($34<<1)|0);\n   $$0123 = $34;$$0126 = $36;\n   while(1) {\n    $37 = ((($$0126)) + -2|0);\n    $38 = HEAP16[$37>>1]|0;\n    $39 = $38&65535;\n    $40 = ($39>>>0)<($2>>>0);\n    $41 = (($39) - ($2))|0;\n    $42 = $41&65535;\n    $43 = $40 ? 0 : $42;\n    HEAP16[$37>>1] = $43;\n    $44 = (($$0123) + -1)|0;\n    $45 = ($44|0)==(0);\n    if ($45) {\n     break;\n    } else {\n     $$0123 = $44;$$0126 = $37;\n    }\n   }\n   $46 = HEAP32[$14>>2]|0;\n   $47 = (($46) + ($2<<1)|0);\n   $$1 = $2;$$1127 = $47;\n   while(1) {\n    $48 = ((($$1127)) + -2|0);\n    $49 = HEAP16[$48>>1]|0;\n    $50 = $49&65535;\n    $51 = ($50>>>0)<($2>>>0);\n    $52 = (($50) - ($2))|0;\n    $53 = $52&65535;\n    $54 = $51 ? 0 : $53;\n    HEAP16[$48>>1] = $54;\n    $55 = (($$1) + -1)|0;\n    $56 = ($55|0)==(0);\n    if ($56) {\n     break;\n    } else {\n     $$1 = $55;$$1127 = $48;\n    }\n   }\n   $57 = (($22) + ($2))|0;\n   $$0125 = $57;$64 = $31;\n  }\n  $58 = HEAP32[$0>>2]|0;\n  $59 = ((($58)) + 4|0);\n  $60 = HEAP32[$59>>2]|0;\n  $61 = ($60|0)==(0);\n  if ($61) {\n   break;\n  }\n  $62 = HEAP32[$7>>2]|0;\n  $63 = (($62) + ($64)|0);\n  $65 = HEAP32[$4>>2]|0;\n  $66 = (($63) + ($65)|0);\n  $67 = ($60>>>0)>($$0125>>>0);\n  $$$i = $67 ? $$0125 : $60;\n  $68 = ($$$i|0)==(0);\n  if ($68) {\n   $$025$i = 0;$87 = $65;\n  } else {\n   $69 = (($60) - ($$$i))|0;\n   HEAP32[$59>>2] = $69;\n   $70 = HEAP32[$58>>2]|0;\n   _memcpy(($66|0),($70|0),($$$i|0))|0;\n   $71 = ((($58)) + 28|0);\n   $72 = HEAP32[$71>>2]|0;\n   $73 = ((($72)) + 24|0);\n   $74 = HEAP32[$73>>2]|0;\n   switch ($74|0) {\n   case 1:  {\n    $75 = ((($58)) + 48|0);\n    $76 = HEAP32[$75>>2]|0;\n    $77 = (_adler32($76,$66,$$$i)|0);\n    HEAP32[$75>>2] = $77;\n    break;\n   }\n   case 2:  {\n    $78 = ((($58)) + 48|0);\n    $79 = HEAP32[$78>>2]|0;\n    $80 = (_crc32($79,$66,$$$i)|0);\n    HEAP32[$78>>2] = $80;\n    break;\n   }\n   default: {\n   }\n   }\n   $81 = HEAP32[$58>>2]|0;\n   $82 = (($81) + ($$$i)|0);\n   HEAP32[$58>>2] = $82;\n   $83 = ((($58)) + 8|0);\n   $84 = HEAP32[$83>>2]|0;\n   $85 = (($84) + ($$$i))|0;\n   HEAP32[$83>>2] = $85;\n   $$pre136 = HEAP32[$4>>2]|0;\n   $$025$i = $$$i;$87 = $$pre136;\n  }\n  $86 = (($87) + ($$025$i))|0;\n  HEAP32[$4>>2] = $86;\n  $88 = HEAP32[$8>>2]|0;\n  $89 = (($88) + ($86))|0;\n  $90 = ($89>>>0)>(2);\n  L20: do {\n   if ($90) {\n    $91 = HEAP32[$5>>2]|0;\n    $92 = (($91) - ($88))|0;\n    $93 = HEAP32[$7>>2]|0;\n    $94 = (($93) + ($92)|0);\n    $95 = HEAP8[$94>>0]|0;\n    $96 = $95&255;\n    HEAP32[$9>>2] = $96;\n    $97 = HEAP32[$10>>2]|0;\n    $98 = $96 << $97;\n    $99 = (($92) + 1)|0;\n    $100 = (($93) + ($99)|0);\n    $101 = HEAP8[$100>>0]|0;\n    $102 = $101&255;\n    $103 = $102 ^ $98;\n    $104 = HEAP32[$11>>2]|0;\n    $105 = $103 & $104;\n    HEAP32[$9>>2] = $105;\n    $$0124 = $92;$106 = $88;$109 = $105;\n    while(1) {\n     $107 = ($106|0)==(0);\n     if ($107) {\n      break L20;\n     }\n     $108 = $109 << $97;\n     $110 = (($$0124) + 2)|0;\n     $111 = (($93) + ($110)|0);\n     $112 = HEAP8[$111>>0]|0;\n     $113 = $112&255;\n     $114 = $113 ^ $108;\n     $115 = $114 & $104;\n     HEAP32[$9>>2] = $115;\n     $116 = HEAP32[$12>>2]|0;\n     $117 = (($116) + ($115<<1)|0);\n     $118 = HEAP16[$117>>1]|0;\n     $119 = HEAP32[$13>>2]|0;\n     $120 = $119 & $$0124;\n     $121 = HEAP32[$14>>2]|0;\n     $122 = (($121) + ($120<<1)|0);\n     HEAP16[$122>>1] = $118;\n     $123 = $$0124&65535;\n     HEAP16[$117>>1] = $123;\n     $124 = (($$0124) + 1)|0;\n     $125 = (($106) + -1)|0;\n     HEAP32[$8>>2] = $125;\n     $126 = (($86) + ($125))|0;\n     $127 = ($126>>>0)<(3);\n     if ($127) {\n      break;\n     } else {\n      $$0124 = $124;$106 = $125;$109 = $115;\n     }\n    }\n   }\n  } while(0);\n  $128 = ($86>>>0)<(262);\n  if (!($128)) {\n   break;\n  }\n  $129 = HEAP32[$0>>2]|0;\n  $130 = ((($129)) + 4|0);\n  $131 = HEAP32[$130>>2]|0;\n  $132 = ($131|0)==(0);\n  if ($132) {\n   break;\n  }\n  $$pre135 = HEAP32[$1>>2]|0;\n  $20 = $86;$24 = $$pre135;\n }\n $133 = ((($0)) + 5824|0);\n $134 = HEAP32[$133>>2]|0;\n $135 = HEAP32[$3>>2]|0;\n $136 = ($135>>>0)>($134>>>0);\n if (!($136)) {\n  return;\n }\n $137 = HEAP32[$5>>2]|0;\n $138 = HEAP32[$4>>2]|0;\n $139 = (($138) + ($137))|0;\n $140 = ($134>>>0)<($139>>>0);\n if ($140) {\n  $141 = (($135) - ($139))|0;\n  $142 = ($141>>>0)>(258);\n  $$ = $142 ? 258 : $141;\n  $143 = HEAP32[$7>>2]|0;\n  $144 = (($143) + ($139)|0);\n  _memset(($144|0),0,($$|0))|0;\n  $145 = (($$) + ($139))|0;\n  HEAP32[$133>>2] = $145;\n  return;\n }\n $146 = (($139) + 258)|0;\n $147 = ($146>>>0)>($134>>>0);\n if (!($147)) {\n  return;\n }\n $148 = (($146) - ($134))|0;\n $149 = (($135) - ($134))|0;\n $150 = ($148>>>0)>($149>>>0);\n $$130 = $150 ? $149 : $148;\n $151 = HEAP32[$7>>2]|0;\n $152 = (($151) + ($134)|0);\n _memset(($152|0),0,($$130|0))|0;\n $153 = HEAP32[$133>>2]|0;\n $154 = (($153) + ($$130))|0;\n HEAP32[$133>>2] = $154;\n return;\n}\nfunction _longest_match($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$2116 = 0, $$0 = 0, $$0105 = 0, $$0108 = 0, $$0109 = 0, $$0114 = 0, $$1 = 0, $$1106 = 0, $$1110 = 0, $$1112$add = 0, $$1112$idx = 0, $$1112$ptr = 0, $$1115 = 0, $$118 = 0, $$2 = 0, $$2116 = 0, $$ptr = 0, $$ptr120 = 0, $10 = 0;\n var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;\n var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;\n var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;\n var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 124|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 56|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ((($0)) + 108|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (($5) + ($7)|0);\n $9 = ((($0)) + 120|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ((($0)) + 144|0);\n $12 = HEAP32[$11>>2]|0;\n $13 = ((($0)) + 44|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (($14) + -262)|0;\n $16 = ($7>>>0)>($15>>>0);\n $17 = (($7) - ($15))|0;\n $$ = $16 ? $17 : 0;\n $18 = ((($0)) + 64|0);\n $19 = HEAP32[$18>>2]|0;\n $20 = ((($0)) + 52|0);\n $21 = HEAP32[$20>>2]|0;\n $$ptr120 = ((($8)) + 258|0);\n $22 = (($10) + -1)|0;\n $23 = (($8) + ($22)|0);\n $24 = HEAP8[$23>>0]|0;\n $25 = (($8) + ($10)|0);\n $26 = HEAP8[$25>>0]|0;\n $27 = ((($0)) + 140|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = ($10>>>0)<($28>>>0);\n $30 = $3 >>> 2;\n $$0109 = $29 ? $3 : $30;\n $31 = ((($0)) + 116|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = ($12>>>0)>($32>>>0);\n $$118 = $33 ? $32 : $12;\n $34 = ((($0)) + 112|0);\n $35 = ((($8)) + 1|0);\n $36 = $$ptr120;\n $$0 = $26;$$0105 = $24;$$0108 = $1;$$0114 = $10;$$1110 = $$0109;\n while(1) {\n  $37 = (($5) + ($$0108)|0);\n  $38 = (($37) + ($$0114)|0);\n  $39 = HEAP8[$38>>0]|0;\n  $40 = ($39<<24>>24)==($$0<<24>>24);\n  if ($40) {\n   $41 = (($$0114) + -1)|0;\n   $42 = (($37) + ($41)|0);\n   $43 = HEAP8[$42>>0]|0;\n   $44 = ($43<<24>>24)==($$0105<<24>>24);\n   if ($44) {\n    $45 = HEAP8[$37>>0]|0;\n    $46 = HEAP8[$8>>0]|0;\n    $47 = ($45<<24>>24)==($46<<24>>24);\n    if ($47) {\n     $48 = ((($37)) + 1|0);\n     $49 = HEAP8[$48>>0]|0;\n     $50 = HEAP8[$35>>0]|0;\n     $51 = ($49<<24>>24)==($50<<24>>24);\n     if ($51) {\n      $$1112$idx = 2;$55 = $48;\n      while(1) {\n       $$1112$ptr = (($8) + ($$1112$idx)|0);\n       $52 = ((($$1112$ptr)) + 1|0);\n       $53 = HEAP8[$52>>0]|0;\n       $54 = ((($55)) + 2|0);\n       $56 = HEAP8[$54>>0]|0;\n       $57 = ($53<<24>>24)==($56<<24>>24);\n       if (!($57)) {\n        $$2 = $52;\n        break;\n       }\n       $58 = ((($$1112$ptr)) + 2|0);\n       $59 = HEAP8[$58>>0]|0;\n       $60 = ((($55)) + 3|0);\n       $61 = HEAP8[$60>>0]|0;\n       $62 = ($59<<24>>24)==($61<<24>>24);\n       if (!($62)) {\n        $$2 = $58;\n        break;\n       }\n       $63 = ((($$1112$ptr)) + 3|0);\n       $64 = HEAP8[$63>>0]|0;\n       $65 = ((($55)) + 4|0);\n       $66 = HEAP8[$65>>0]|0;\n       $67 = ($64<<24>>24)==($66<<24>>24);\n       if (!($67)) {\n        $$2 = $63;\n        break;\n       }\n       $68 = ((($$1112$ptr)) + 4|0);\n       $69 = HEAP8[$68>>0]|0;\n       $70 = ((($55)) + 5|0);\n       $71 = HEAP8[$70>>0]|0;\n       $72 = ($69<<24>>24)==($71<<24>>24);\n       if (!($72)) {\n        $$2 = $68;\n        break;\n       }\n       $73 = ((($$1112$ptr)) + 5|0);\n       $74 = HEAP8[$73>>0]|0;\n       $75 = ((($55)) + 6|0);\n       $76 = HEAP8[$75>>0]|0;\n       $77 = ($74<<24>>24)==($76<<24>>24);\n       if (!($77)) {\n        $$2 = $73;\n        break;\n       }\n       $78 = ((($$1112$ptr)) + 6|0);\n       $79 = HEAP8[$78>>0]|0;\n       $80 = ((($55)) + 7|0);\n       $81 = HEAP8[$80>>0]|0;\n       $82 = ($79<<24>>24)==($81<<24>>24);\n       if (!($82)) {\n        $$2 = $78;\n        break;\n       }\n       $83 = ((($$1112$ptr)) + 7|0);\n       $84 = HEAP8[$83>>0]|0;\n       $85 = ((($55)) + 8|0);\n       $86 = HEAP8[$85>>0]|0;\n       $87 = ($84<<24>>24)==($86<<24>>24);\n       if (!($87)) {\n        $$2 = $83;\n        break;\n       }\n       $$1112$add = (($$1112$idx) + 8)|0;\n       $$ptr = (($8) + ($$1112$add)|0);\n       $88 = HEAP8[$$ptr>>0]|0;\n       $89 = ((($55)) + 9|0);\n       $90 = HEAP8[$89>>0]|0;\n       $91 = ($88<<24>>24)==($90<<24>>24);\n       $92 = ($$1112$add|0)<(258);\n       $or$cond = $92 & $91;\n       if ($or$cond) {\n        $$1112$idx = $$1112$add;$55 = $85;\n       } else {\n        $$2 = $$ptr;\n        break;\n       }\n      }\n      $93 = $$2;\n      $94 = (($93) - ($36))|0;\n      $95 = (($94) + 258)|0;\n      $96 = ($95|0)>($$0114|0);\n      if ($96) {\n       HEAP32[$34>>2] = $$0108;\n       $97 = ($95|0)<($$118|0);\n       if (!($97)) {\n        $$2116 = $95;\n        label = 19;\n        break;\n       }\n       $98 = (($94) + 257)|0;\n       $99 = (($8) + ($98)|0);\n       $100 = HEAP8[$99>>0]|0;\n       $101 = (($8) + ($95)|0);\n       $102 = HEAP8[$101>>0]|0;\n       $$1 = $102;$$1106 = $100;$$1115 = $95;\n      } else {\n       $$1 = $$0;$$1106 = $$0105;$$1115 = $$0114;\n      }\n     } else {\n      $$1 = $$0;$$1106 = $$0105;$$1115 = $$0114;\n     }\n    } else {\n     $$1 = $$0;$$1106 = $$0105;$$1115 = $$0114;\n    }\n   } else {\n    $$1 = $$0;$$1106 = $$0105;$$1115 = $$0114;\n   }\n  } else {\n   $$1 = $$0;$$1106 = $$0105;$$1115 = $$0114;\n  }\n  $103 = $$0108 & $21;\n  $104 = (($19) + ($103<<1)|0);\n  $105 = HEAP16[$104>>1]|0;\n  $106 = $105&65535;\n  $107 = ($106>>>0)>($$>>>0);\n  if (!($107)) {\n   $$2116 = $$1115;\n   label = 19;\n   break;\n  }\n  $108 = (($$1110) + -1)|0;\n  $109 = ($108|0)==(0);\n  if ($109) {\n   $$2116 = $$1115;\n   label = 19;\n   break;\n  } else {\n   $$0 = $$1;$$0105 = $$1106;$$0108 = $106;$$0114 = $$1115;$$1110 = $108;\n  }\n }\n if ((label|0) == 19) {\n  $110 = ($$2116>>>0)>($32>>>0);\n  $$$2116 = $110 ? $32 : $$2116;\n  return ($$$2116|0);\n }\n return (0)|0;\n}\nfunction _deflateEnd($0) {\n $0 = $0|0;\n var $$0 = 0, $$in = 0, $$in51 = 0, $$in52 = 0, $$pre = 0, $$pre$phi48Z2D = 0, $$pre$phiZ2D = 0, $$pre43 = 0, $$pre44 = 0, $$pre45 = 0, $$pre46 = 0, $$pre47 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $5 = ((($3)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n switch ($6|0) {\n case 42: case 69: case 73: case 91: case 103: case 113: case 666:  {\n  break;\n }\n default: {\n  $$0 = -2;\n  return ($$0|0);\n }\n }\n $7 = ((($3)) + 8|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if ($9) {\n  $$in = $3;\n } else {\n  $10 = ((($0)) + 36|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ((($0)) + 40|0);\n  $13 = HEAP32[$12>>2]|0;\n  FUNCTION_TABLE_vii[$11 & 127]($13,$8);\n  $$pre = HEAP32[$2>>2]|0;\n  $$in = $$pre;\n }\n $14 = ((($$in)) + 68|0);\n $15 = HEAP32[$14>>2]|0;\n $16 = ($15|0)==(0|0);\n if ($16) {\n  $$in51 = $$in;\n } else {\n  $17 = ((($0)) + 36|0);\n  $18 = HEAP32[$17>>2]|0;\n  $19 = ((($0)) + 40|0);\n  $20 = HEAP32[$19>>2]|0;\n  FUNCTION_TABLE_vii[$18 & 127]($20,$15);\n  $$pre43 = HEAP32[$2>>2]|0;\n  $$in51 = $$pre43;\n }\n $21 = ((($$in51)) + 64|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ($22|0)==(0|0);\n if ($23) {\n  $$in52 = $$in51;\n } else {\n  $24 = ((($0)) + 36|0);\n  $25 = HEAP32[$24>>2]|0;\n  $26 = ((($0)) + 40|0);\n  $27 = HEAP32[$26>>2]|0;\n  FUNCTION_TABLE_vii[$25 & 127]($27,$22);\n  $$pre44 = HEAP32[$2>>2]|0;\n  $$in52 = $$pre44;\n }\n $28 = ((($$in52)) + 56|0);\n $29 = HEAP32[$28>>2]|0;\n $30 = ($29|0)==(0|0);\n if ($30) {\n  $$pre46 = ((($0)) + 36|0);\n  $$pre47 = ((($0)) + 40|0);\n  $$pre$phi48Z2D = $$pre47;$$pre$phiZ2D = $$pre46;$37 = $$in52;\n } else {\n  $31 = ((($0)) + 36|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = ((($0)) + 40|0);\n  $34 = HEAP32[$33>>2]|0;\n  FUNCTION_TABLE_vii[$32 & 127]($34,$29);\n  $$pre45 = HEAP32[$2>>2]|0;\n  $$pre$phi48Z2D = $33;$$pre$phiZ2D = $31;$37 = $$pre45;\n }\n $35 = HEAP32[$$pre$phiZ2D>>2]|0;\n $36 = HEAP32[$$pre$phi48Z2D>>2]|0;\n FUNCTION_TABLE_vii[$35 & 127]($36,$37);\n HEAP32[$2>>2] = 0;\n $38 = ($6|0)==(113);\n $39 = $38 ? -3 : 0;\n $$0 = $39;\n return ($$0|0);\n}\nfunction _deflate($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$i = 0, $$$i$i = 0, $$$i$i383 = 0, $$$i138$i = 0, $$$i140$i = 0, $$$i368 = 0, $$$i370 = 0, $$$i372 = 0, $$$i374 = 0, $$$i376 = 0, $$$i378 = 0, $$$i380 = 0, $$$i382 = 0, $$$i52$i = 0, $$$i54$i = 0, $$0128$i = 0, $$0348 = 0, $$0349 = 0, $$0351 = 0;\n var $$0352 = 0, $$0355407 = 0, $$0358 = 0, $$1 = 0, $$1$i = 0, $$1350 = 0, $$1353 = 0, $$1356 = 0, $$137$i = 0, $$2 = 0, $$2354 = 0, $$2357 = 0, $$361 = 0, $$362 = 0, $$363 = 0, $$add$i = 0, $$add130$i = 0, $$idx$i = 0, $$phi$trans$insert = 0, $$pr = 0;\n var $$pr387$pr = 0, $$pr387$pr$pre = 0, $$pr389 = 0, $$pr393$pr = 0, $$pr393$pr$pre = 0, $$pre = 0, $$pre$i = 0, $$pre$phi431Z2D = 0, $$pre$phi435Z2D = 0, $$pre$phi437Z2D = 0, $$pre$phi439Z2D = 0, $$pre412 = 0, $$pre414 = 0, $$pre415 = 0, $$pre416$pre = 0, $$pre417 = 0, $$pre420 = 0, $$pre422 = 0, $$pre424 = 0, $$pre434 = 0;\n var $$pre436 = 0, $$pre438 = 0, $$pre440 = 0, $$ptr$i = 0, $$ptr131$i = 0, $$ptr132$i = 0, $$ptr133$i = 0, $$ptr135$i = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;\n var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;\n var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;\n var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0;\n var $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0;\n var $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0;\n var $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0;\n var $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0;\n var $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0;\n var $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0;\n var $1172 = 0, $1173 = 0, $1174 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;\n var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;\n var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;\n var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;\n var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;\n var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;\n var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;\n var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;\n var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;\n var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;\n var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;\n var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;\n var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;\n var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;\n var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;\n var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;\n var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;\n var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;\n var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;\n var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;\n var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;\n var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;\n var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;\n var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;\n var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;\n var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;\n var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;\n var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;\n var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;\n var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;\n var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;\n var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;\n var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;\n var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;\n var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;\n var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;\n var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;\n var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;\n var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;\n var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;\n var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;\n var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0;\n var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;\n var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;\n var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;\n var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0;\n var $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0;\n var $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0;\n var $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0;\n var $999 = 0, $brmerge = 0, $not$ = 0, $or$cond = 0, $or$cond$i = 0, $or$cond136$i = 0, $or$cond364 = 0, $or$cond365 = 0, $or$cond445 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$1 = -2;\n  return ($$1|0);\n }\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n $6 = ($1>>>0)>(5);\n $7 = $6 | $5;\n if ($7) {\n  $$1 = -2;\n  return ($$1|0);\n }\n $8 = ((($0)) + 12|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0|0);\n do {\n  if (!($10)) {\n   $11 = HEAP32[$0>>2]|0;\n   $12 = ($11|0)==(0|0);\n   if ($12) {\n    $13 = ((($0)) + 4|0);\n    $14 = HEAP32[$13>>2]|0;\n    $15 = ($14|0)==(0);\n    if (!($15)) {\n     break;\n    }\n   }\n   $16 = ((($4)) + 4|0);\n   $17 = HEAP32[$16>>2]|0;\n   $18 = ($17|0)==(666);\n   $19 = ($1|0)!=(4);\n   $or$cond5 = $19 & $18;\n   if (!($or$cond5)) {\n    $22 = ((($0)) + 16|0);\n    $23 = HEAP32[$22>>2]|0;\n    $24 = ($23|0)==(0);\n    if ($24) {\n     $25 = HEAP32[(9964)>>2]|0;\n     $26 = ((($0)) + 24|0);\n     HEAP32[$26>>2] = $25;\n     $$1 = -5;\n     return ($$1|0);\n    }\n    HEAP32[$4>>2] = $0;\n    $27 = ((($4)) + 40|0);\n    $28 = HEAP32[$27>>2]|0;\n    HEAP32[$27>>2] = $1;\n    $29 = ($17|0)==(42);\n    do {\n     if ($29) {\n      $30 = ((($4)) + 24|0);\n      $31 = HEAP32[$30>>2]|0;\n      $32 = ($31|0)==(2);\n      if (!($32)) {\n       $204 = ((($4)) + 48|0);\n       $205 = HEAP32[$204>>2]|0;\n       $206 = $205 << 12;\n       $207 = (($206) + -30720)|0;\n       $208 = ((($4)) + 136|0);\n       $209 = HEAP32[$208>>2]|0;\n       $210 = ($209|0)>(1);\n       if ($210) {\n        $$0358 = 0;\n       } else {\n        $211 = ((($4)) + 132|0);\n        $212 = HEAP32[$211>>2]|0;\n        $213 = ($212|0)<(2);\n        if ($213) {\n         $$0358 = 0;\n        } else {\n         $214 = ($212|0)<(6);\n         if ($214) {\n          $$0358 = 64;\n         } else {\n          $215 = ($212|0)==(6);\n          $$362 = $215 ? 128 : 192;\n          $$0358 = $$362;\n         }\n        }\n       }\n       $216 = $$0358 | $207;\n       $217 = ((($4)) + 108|0);\n       $218 = HEAP32[$217>>2]|0;\n       $219 = ($218|0)==(0);\n       $220 = $216 | 32;\n       $221 = $219 ? $216 : $220;\n       $222 = (($221>>>0) % 31)&-1;\n       $$363 = $222 | $221;\n       $223 = $$363 ^ 31;\n       HEAP32[$16>>2] = 113;\n       $224 = $221 >>> 8;\n       $225 = $224&255;\n       $226 = ((($4)) + 20|0);\n       $227 = HEAP32[$226>>2]|0;\n       $228 = (($227) + 1)|0;\n       HEAP32[$226>>2] = $228;\n       $229 = ((($4)) + 8|0);\n       $230 = HEAP32[$229>>2]|0;\n       $231 = (($230) + ($227)|0);\n       HEAP8[$231>>0] = $225;\n       $232 = $223&255;\n       $233 = HEAP32[$226>>2]|0;\n       $234 = (($233) + 1)|0;\n       HEAP32[$226>>2] = $234;\n       $235 = HEAP32[$229>>2]|0;\n       $236 = (($235) + ($233)|0);\n       HEAP8[$236>>0] = $232;\n       $237 = HEAP32[$217>>2]|0;\n       $238 = ($237|0)==(0);\n       $$pre440 = ((($0)) + 48|0);\n       if (!($238)) {\n        $239 = HEAP32[$$pre440>>2]|0;\n        $240 = $239 >>> 16;\n        $241 = $239 >>> 24;\n        $242 = $241&255;\n        $243 = HEAP32[$226>>2]|0;\n        $244 = (($243) + 1)|0;\n        HEAP32[$226>>2] = $244;\n        $245 = HEAP32[$229>>2]|0;\n        $246 = (($245) + ($243)|0);\n        HEAP8[$246>>0] = $242;\n        $247 = $240&255;\n        $248 = HEAP32[$226>>2]|0;\n        $249 = (($248) + 1)|0;\n        HEAP32[$226>>2] = $249;\n        $250 = HEAP32[$229>>2]|0;\n        $251 = (($250) + ($248)|0);\n        HEAP8[$251>>0] = $247;\n        $252 = HEAP32[$$pre440>>2]|0;\n        $253 = $252 >>> 8;\n        $254 = $253&255;\n        $255 = HEAP32[$226>>2]|0;\n        $256 = (($255) + 1)|0;\n        HEAP32[$226>>2] = $256;\n        $257 = HEAP32[$229>>2]|0;\n        $258 = (($257) + ($255)|0);\n        HEAP8[$258>>0] = $254;\n        $259 = $252&255;\n        $260 = HEAP32[$226>>2]|0;\n        $261 = (($260) + 1)|0;\n        HEAP32[$226>>2] = $261;\n        $262 = HEAP32[$229>>2]|0;\n        $263 = (($262) + ($260)|0);\n        HEAP8[$263>>0] = $259;\n       }\n       $264 = (_adler32(0,0,0)|0);\n       HEAP32[$$pre440>>2] = $264;\n       $$pr = HEAP32[$16>>2]|0;\n       $265 = $$pr;\n       label = 30;\n       break;\n      }\n      $33 = (_crc32(0,0,0)|0);\n      $34 = ((($0)) + 48|0);\n      HEAP32[$34>>2] = $33;\n      $35 = ((($4)) + 20|0);\n      $36 = HEAP32[$35>>2]|0;\n      $37 = (($36) + 1)|0;\n      HEAP32[$35>>2] = $37;\n      $38 = ((($4)) + 8|0);\n      $39 = HEAP32[$38>>2]|0;\n      $40 = (($39) + ($36)|0);\n      HEAP8[$40>>0] = 31;\n      $41 = HEAP32[$35>>2]|0;\n      $42 = (($41) + 1)|0;\n      HEAP32[$35>>2] = $42;\n      $43 = HEAP32[$38>>2]|0;\n      $44 = (($43) + ($41)|0);\n      HEAP8[$44>>0] = -117;\n      $45 = HEAP32[$35>>2]|0;\n      $46 = (($45) + 1)|0;\n      HEAP32[$35>>2] = $46;\n      $47 = HEAP32[$38>>2]|0;\n      $48 = (($47) + ($45)|0);\n      HEAP8[$48>>0] = 8;\n      $49 = ((($4)) + 28|0);\n      $50 = HEAP32[$49>>2]|0;\n      $51 = ($50|0)==(0|0);\n      if ($51) {\n       $52 = HEAP32[$35>>2]|0;\n       $53 = (($52) + 1)|0;\n       HEAP32[$35>>2] = $53;\n       $54 = HEAP32[$38>>2]|0;\n       $55 = (($54) + ($52)|0);\n       HEAP8[$55>>0] = 0;\n       $56 = HEAP32[$35>>2]|0;\n       $57 = (($56) + 1)|0;\n       HEAP32[$35>>2] = $57;\n       $58 = HEAP32[$38>>2]|0;\n       $59 = (($58) + ($56)|0);\n       HEAP8[$59>>0] = 0;\n       $60 = HEAP32[$35>>2]|0;\n       $61 = (($60) + 1)|0;\n       HEAP32[$35>>2] = $61;\n       $62 = HEAP32[$38>>2]|0;\n       $63 = (($62) + ($60)|0);\n       HEAP8[$63>>0] = 0;\n       $64 = HEAP32[$35>>2]|0;\n       $65 = (($64) + 1)|0;\n       HEAP32[$35>>2] = $65;\n       $66 = HEAP32[$38>>2]|0;\n       $67 = (($66) + ($64)|0);\n       HEAP8[$67>>0] = 0;\n       $68 = HEAP32[$35>>2]|0;\n       $69 = (($68) + 1)|0;\n       HEAP32[$35>>2] = $69;\n       $70 = HEAP32[$38>>2]|0;\n       $71 = (($70) + ($68)|0);\n       HEAP8[$71>>0] = 0;\n       $72 = ((($4)) + 132|0);\n       $73 = HEAP32[$72>>2]|0;\n       $74 = ($73|0)==(9);\n       if ($74) {\n        $81 = 2;\n       } else {\n        $75 = ((($4)) + 136|0);\n        $76 = HEAP32[$75>>2]|0;\n        $77 = ($76|0)>(1);\n        $78 = ($73|0)<(2);\n        $$ = $78 | $77;\n        $79 = $$ ? 4 : 0;\n        $81 = $79;\n       }\n       $80 = $81&255;\n       $82 = HEAP32[$35>>2]|0;\n       $83 = (($82) + 1)|0;\n       HEAP32[$35>>2] = $83;\n       $84 = HEAP32[$38>>2]|0;\n       $85 = (($84) + ($82)|0);\n       HEAP8[$85>>0] = $80;\n       $86 = HEAP32[$35>>2]|0;\n       $87 = (($86) + 1)|0;\n       HEAP32[$35>>2] = $87;\n       $88 = HEAP32[$38>>2]|0;\n       $89 = (($88) + ($86)|0);\n       HEAP8[$89>>0] = 3;\n       HEAP32[$16>>2] = 113;\n       break;\n      }\n      $90 = HEAP32[$50>>2]|0;\n      $91 = ($90|0)!=(0);\n      $92 = $91&1;\n      $93 = ((($50)) + 44|0);\n      $94 = HEAP32[$93>>2]|0;\n      $95 = ($94|0)!=(0);\n      $96 = $95 ? 2 : 0;\n      $97 = $96 | $92;\n      $98 = ((($50)) + 16|0);\n      $99 = HEAP32[$98>>2]|0;\n      $100 = ($99|0)==(0|0);\n      $101 = $100 ? 0 : 4;\n      $102 = $97 | $101;\n      $103 = ((($50)) + 28|0);\n      $104 = HEAP32[$103>>2]|0;\n      $105 = ($104|0)==(0|0);\n      $106 = $105 ? 0 : 8;\n      $107 = $102 | $106;\n      $108 = ((($50)) + 36|0);\n      $109 = HEAP32[$108>>2]|0;\n      $110 = ($109|0)==(0|0);\n      $111 = $110 ? 0 : 16;\n      $112 = $107 | $111;\n      $113 = $112&255;\n      $114 = HEAP32[$35>>2]|0;\n      $115 = (($114) + 1)|0;\n      HEAP32[$35>>2] = $115;\n      $116 = HEAP32[$38>>2]|0;\n      $117 = (($116) + ($114)|0);\n      HEAP8[$117>>0] = $113;\n      $118 = HEAP32[$49>>2]|0;\n      $119 = ((($118)) + 4|0);\n      $120 = HEAP32[$119>>2]|0;\n      $121 = $120&255;\n      $122 = HEAP32[$35>>2]|0;\n      $123 = (($122) + 1)|0;\n      HEAP32[$35>>2] = $123;\n      $124 = HEAP32[$38>>2]|0;\n      $125 = (($124) + ($122)|0);\n      HEAP8[$125>>0] = $121;\n      $126 = HEAP32[$49>>2]|0;\n      $127 = ((($126)) + 4|0);\n      $128 = HEAP32[$127>>2]|0;\n      $129 = $128 >>> 8;\n      $130 = $129&255;\n      $131 = HEAP32[$35>>2]|0;\n      $132 = (($131) + 1)|0;\n      HEAP32[$35>>2] = $132;\n      $133 = HEAP32[$38>>2]|0;\n      $134 = (($133) + ($131)|0);\n      HEAP8[$134>>0] = $130;\n      $135 = HEAP32[$49>>2]|0;\n      $136 = ((($135)) + 4|0);\n      $137 = HEAP32[$136>>2]|0;\n      $138 = $137 >>> 16;\n      $139 = $138&255;\n      $140 = HEAP32[$35>>2]|0;\n      $141 = (($140) + 1)|0;\n      HEAP32[$35>>2] = $141;\n      $142 = HEAP32[$38>>2]|0;\n      $143 = (($142) + ($140)|0);\n      HEAP8[$143>>0] = $139;\n      $144 = HEAP32[$49>>2]|0;\n      $145 = ((($144)) + 4|0);\n      $146 = HEAP32[$145>>2]|0;\n      $147 = $146 >>> 24;\n      $148 = $147&255;\n      $149 = HEAP32[$35>>2]|0;\n      $150 = (($149) + 1)|0;\n      HEAP32[$35>>2] = $150;\n      $151 = HEAP32[$38>>2]|0;\n      $152 = (($151) + ($149)|0);\n      HEAP8[$152>>0] = $148;\n      $153 = ((($4)) + 132|0);\n      $154 = HEAP32[$153>>2]|0;\n      $155 = ($154|0)==(9);\n      if ($155) {\n       $162 = 2;\n      } else {\n       $156 = ((($4)) + 136|0);\n       $157 = HEAP32[$156>>2]|0;\n       $158 = ($157|0)>(1);\n       $159 = ($154|0)<(2);\n       $$361 = $159 | $158;\n       $160 = $$361 ? 4 : 0;\n       $162 = $160;\n      }\n      $161 = $162&255;\n      $163 = HEAP32[$35>>2]|0;\n      $164 = (($163) + 1)|0;\n      HEAP32[$35>>2] = $164;\n      $165 = HEAP32[$38>>2]|0;\n      $166 = (($165) + ($163)|0);\n      HEAP8[$166>>0] = $161;\n      $167 = HEAP32[$49>>2]|0;\n      $168 = ((($167)) + 12|0);\n      $169 = HEAP32[$168>>2]|0;\n      $170 = $169&255;\n      $171 = HEAP32[$35>>2]|0;\n      $172 = (($171) + 1)|0;\n      HEAP32[$35>>2] = $172;\n      $173 = HEAP32[$38>>2]|0;\n      $174 = (($173) + ($171)|0);\n      HEAP8[$174>>0] = $170;\n      $175 = HEAP32[$49>>2]|0;\n      $176 = ((($175)) + 16|0);\n      $177 = HEAP32[$176>>2]|0;\n      $178 = ($177|0)==(0|0);\n      if ($178) {\n       $196 = $175;\n      } else {\n       $179 = ((($175)) + 20|0);\n       $180 = HEAP32[$179>>2]|0;\n       $181 = $180&255;\n       $182 = HEAP32[$35>>2]|0;\n       $183 = (($182) + 1)|0;\n       HEAP32[$35>>2] = $183;\n       $184 = HEAP32[$38>>2]|0;\n       $185 = (($184) + ($182)|0);\n       HEAP8[$185>>0] = $181;\n       $186 = HEAP32[$49>>2]|0;\n       $187 = ((($186)) + 20|0);\n       $188 = HEAP32[$187>>2]|0;\n       $189 = $188 >>> 8;\n       $190 = $189&255;\n       $191 = HEAP32[$35>>2]|0;\n       $192 = (($191) + 1)|0;\n       HEAP32[$35>>2] = $192;\n       $193 = HEAP32[$38>>2]|0;\n       $194 = (($193) + ($191)|0);\n       HEAP8[$194>>0] = $190;\n       $$pre = HEAP32[$49>>2]|0;\n       $196 = $$pre;\n      }\n      $195 = ((($196)) + 44|0);\n      $197 = HEAP32[$195>>2]|0;\n      $198 = ($197|0)==(0);\n      if (!($198)) {\n       $199 = HEAP32[$34>>2]|0;\n       $200 = HEAP32[$38>>2]|0;\n       $201 = HEAP32[$35>>2]|0;\n       $202 = (_crc32($199,$200,$201)|0);\n       HEAP32[$34>>2] = $202;\n      }\n      $203 = ((($4)) + 32|0);\n      HEAP32[$203>>2] = 0;\n      HEAP32[$16>>2] = 69;\n      $$pre$phi435Z2D = $49;\n      label = 32;\n     } else {\n      $265 = $17;\n      label = 30;\n     }\n    } while(0);\n    if ((label|0) == 30) {\n     $266 = ($265|0)==(69);\n     if ($266) {\n      $$pre434 = ((($4)) + 28|0);\n      $$pre$phi435Z2D = $$pre434;\n      label = 32;\n     } else {\n      $$pr387$pr = $265;\n      label = 53;\n     }\n    }\n    do {\n     if ((label|0) == 32) {\n      $267 = HEAP32[$$pre$phi435Z2D>>2]|0;\n      $268 = ((($267)) + 16|0);\n      $269 = HEAP32[$268>>2]|0;\n      $270 = ($269|0)==(0|0);\n      if ($270) {\n       HEAP32[$16>>2] = 73;\n       $$pre$phi431Z2D = $$pre$phi435Z2D;$358 = $267;\n       label = 55;\n       break;\n      }\n      $271 = ((($4)) + 20|0);\n      $272 = HEAP32[$271>>2]|0;\n      $273 = ((($4)) + 32|0);\n      $274 = HEAP32[$273>>2]|0;\n      $275 = ((($267)) + 20|0);\n      $276 = HEAP32[$275>>2]|0;\n      $277 = $276 & 65535;\n      $278 = ($274>>>0)<($277>>>0);\n      L53: do {\n       if ($278) {\n        $279 = ((($4)) + 12|0);\n        $280 = ((($0)) + 48|0);\n        $281 = ((($4)) + 8|0);\n        $282 = ((($0)) + 20|0);\n        $$0355407 = $272;$1174 = $274;$284 = $272;$287 = $267;\n        while(1) {\n         $283 = HEAP32[$279>>2]|0;\n         $285 = ($284|0)==($283|0);\n         if ($285) {\n          $286 = ((($287)) + 44|0);\n          $288 = HEAP32[$286>>2]|0;\n          $289 = ($288|0)!=(0);\n          $290 = ($284>>>0)>($$0355407>>>0);\n          $or$cond = $290 & $289;\n          if ($or$cond) {\n           $291 = HEAP32[$280>>2]|0;\n           $292 = HEAP32[$281>>2]|0;\n           $293 = (($292) + ($$0355407)|0);\n           $294 = (($284) - ($$0355407))|0;\n           $295 = (_crc32($291,$293,$294)|0);\n           HEAP32[$280>>2] = $295;\n          }\n          $296 = HEAP32[$3>>2]|0;\n          __tr_flush_bits($296);\n          $297 = ((($296)) + 20|0);\n          $298 = HEAP32[$297>>2]|0;\n          $299 = HEAP32[$22>>2]|0;\n          $300 = ($298>>>0)>($299>>>0);\n          $$$i370 = $300 ? $299 : $298;\n          $301 = ($$$i370|0)==(0);\n          if (!($301)) {\n           $302 = HEAP32[$8>>2]|0;\n           $303 = ((($296)) + 16|0);\n           $304 = HEAP32[$303>>2]|0;\n           _memcpy(($302|0),($304|0),($$$i370|0))|0;\n           $305 = HEAP32[$8>>2]|0;\n           $306 = (($305) + ($$$i370)|0);\n           HEAP32[$8>>2] = $306;\n           $307 = HEAP32[$303>>2]|0;\n           $308 = (($307) + ($$$i370)|0);\n           HEAP32[$303>>2] = $308;\n           $309 = HEAP32[$282>>2]|0;\n           $310 = (($309) + ($$$i370))|0;\n           HEAP32[$282>>2] = $310;\n           $311 = HEAP32[$22>>2]|0;\n           $312 = (($311) - ($$$i370))|0;\n           HEAP32[$22>>2] = $312;\n           $313 = HEAP32[$297>>2]|0;\n           $314 = (($313) - ($$$i370))|0;\n           HEAP32[$297>>2] = $314;\n           $315 = ($314|0)==(0);\n           if ($315) {\n            $316 = ((($296)) + 8|0);\n            $317 = HEAP32[$316>>2]|0;\n            HEAP32[$303>>2] = $317;\n           }\n          }\n          $318 = HEAP32[$271>>2]|0;\n          $319 = HEAP32[$279>>2]|0;\n          $320 = ($318|0)==($319|0);\n          if ($320) {\n           break;\n          }\n          $$pre414 = HEAP32[$273>>2]|0;\n          $$pre415 = HEAP32[$$pre$phi435Z2D>>2]|0;\n          $$1356 = $318;$322 = $$pre415;$325 = $$pre414;$328 = $318;\n         } else {\n          $$1356 = $$0355407;$322 = $287;$325 = $1174;$328 = $284;\n         }\n         $321 = ((($322)) + 16|0);\n         $323 = HEAP32[$321>>2]|0;\n         $324 = (($323) + ($325)|0);\n         $326 = HEAP8[$324>>0]|0;\n         $327 = (($328) + 1)|0;\n         HEAP32[$271>>2] = $327;\n         $329 = HEAP32[$281>>2]|0;\n         $330 = (($329) + ($328)|0);\n         HEAP8[$330>>0] = $326;\n         $331 = HEAP32[$273>>2]|0;\n         $332 = (($331) + 1)|0;\n         HEAP32[$273>>2] = $332;\n         $333 = HEAP32[$$pre$phi435Z2D>>2]|0;\n         $334 = ((($333)) + 20|0);\n         $335 = HEAP32[$334>>2]|0;\n         $336 = $335 & 65535;\n         $337 = ($332>>>0)<($336>>>0);\n         if (!($337)) {\n          $$2357 = $$1356;$339 = $333;\n          break L53;\n         }\n         $$pre412 = HEAP32[$271>>2]|0;\n         $$0355407 = $$1356;$1174 = $332;$284 = $$pre412;$287 = $333;\n        }\n        $$pre416$pre = HEAP32[$$pre$phi435Z2D>>2]|0;\n        $$2357 = $318;$339 = $$pre416$pre;\n       } else {\n        $$2357 = $272;$339 = $267;\n       }\n      } while(0);\n      $338 = ((($339)) + 44|0);\n      $340 = HEAP32[$338>>2]|0;\n      $341 = ($340|0)==(0);\n      if ($341) {\n       $353 = $339;\n      } else {\n       $342 = HEAP32[$271>>2]|0;\n       $343 = ($342>>>0)>($$2357>>>0);\n       if ($343) {\n        $344 = ((($0)) + 48|0);\n        $345 = HEAP32[$344>>2]|0;\n        $346 = ((($4)) + 8|0);\n        $347 = HEAP32[$346>>2]|0;\n        $348 = (($347) + ($$2357)|0);\n        $349 = (($342) - ($$2357))|0;\n        $350 = (_crc32($345,$348,$349)|0);\n        HEAP32[$344>>2] = $350;\n        $$pre417 = HEAP32[$$pre$phi435Z2D>>2]|0;\n        $353 = $$pre417;\n       } else {\n        $353 = $339;\n       }\n      }\n      $351 = HEAP32[$273>>2]|0;\n      $352 = ((($353)) + 20|0);\n      $354 = HEAP32[$352>>2]|0;\n      $355 = ($351|0)==($354|0);\n      if ($355) {\n       HEAP32[$273>>2] = 0;\n       HEAP32[$16>>2] = 73;\n       $$pre$phi431Z2D = $$pre$phi435Z2D;$358 = $353;\n       label = 55;\n       break;\n      } else {\n       $$pr387$pr$pre = HEAP32[$16>>2]|0;\n       $$pr387$pr = $$pr387$pr$pre;\n       label = 53;\n       break;\n      }\n     }\n    } while(0);\n    if ((label|0) == 53) {\n     $356 = ($$pr387$pr|0)==(73);\n     if ($356) {\n      $$phi$trans$insert = ((($4)) + 28|0);\n      $$pre420 = HEAP32[$$phi$trans$insert>>2]|0;\n      $$pre$phi431Z2D = $$phi$trans$insert;$358 = $$pre420;\n      label = 55;\n     } else {\n      $431 = $$pr387$pr;\n      label = 73;\n     }\n    }\n    do {\n     if ((label|0) == 55) {\n      $357 = ((($358)) + 28|0);\n      $359 = HEAP32[$357>>2]|0;\n      $360 = ($359|0)==(0|0);\n      if ($360) {\n       HEAP32[$16>>2] = 91;\n       $$pre$phi437Z2D = $$pre$phi431Z2D;\n       label = 75;\n       break;\n      }\n      $361 = ((($4)) + 20|0);\n      $362 = HEAP32[$361>>2]|0;\n      $363 = ((($4)) + 12|0);\n      $364 = ((($0)) + 48|0);\n      $365 = ((($4)) + 8|0);\n      $366 = ((($0)) + 20|0);\n      $367 = ((($4)) + 32|0);\n      $$0352 = $362;$369 = $362;\n      while(1) {\n       $368 = HEAP32[$363>>2]|0;\n       $370 = ($369|0)==($368|0);\n       if ($370) {\n        $371 = HEAP32[$$pre$phi431Z2D>>2]|0;\n        $372 = ((($371)) + 44|0);\n        $373 = HEAP32[$372>>2]|0;\n        $374 = ($373|0)!=(0);\n        $375 = ($369>>>0)>($$0352>>>0);\n        $or$cond364 = $375 & $374;\n        if ($or$cond364) {\n         $376 = HEAP32[$364>>2]|0;\n         $377 = HEAP32[$365>>2]|0;\n         $378 = (($377) + ($$0352)|0);\n         $379 = (($369) - ($$0352))|0;\n         $380 = (_crc32($376,$378,$379)|0);\n         HEAP32[$364>>2] = $380;\n        }\n        $381 = HEAP32[$3>>2]|0;\n        __tr_flush_bits($381);\n        $382 = ((($381)) + 20|0);\n        $383 = HEAP32[$382>>2]|0;\n        $384 = HEAP32[$22>>2]|0;\n        $385 = ($383>>>0)>($384>>>0);\n        $$$i372 = $385 ? $384 : $383;\n        $386 = ($$$i372|0)==(0);\n        if (!($386)) {\n         $387 = HEAP32[$8>>2]|0;\n         $388 = ((($381)) + 16|0);\n         $389 = HEAP32[$388>>2]|0;\n         _memcpy(($387|0),($389|0),($$$i372|0))|0;\n         $390 = HEAP32[$8>>2]|0;\n         $391 = (($390) + ($$$i372)|0);\n         HEAP32[$8>>2] = $391;\n         $392 = HEAP32[$388>>2]|0;\n         $393 = (($392) + ($$$i372)|0);\n         HEAP32[$388>>2] = $393;\n         $394 = HEAP32[$366>>2]|0;\n         $395 = (($394) + ($$$i372))|0;\n         HEAP32[$366>>2] = $395;\n         $396 = HEAP32[$22>>2]|0;\n         $397 = (($396) - ($$$i372))|0;\n         HEAP32[$22>>2] = $397;\n         $398 = HEAP32[$382>>2]|0;\n         $399 = (($398) - ($$$i372))|0;\n         HEAP32[$382>>2] = $399;\n         $400 = ($399|0)==(0);\n         if ($400) {\n          $401 = ((($381)) + 8|0);\n          $402 = HEAP32[$401>>2]|0;\n          HEAP32[$388>>2] = $402;\n         }\n        }\n        $403 = HEAP32[$361>>2]|0;\n        $404 = HEAP32[$363>>2]|0;\n        $405 = ($403|0)==($404|0);\n        if ($405) {\n         $$0351 = 1;$$2354 = $403;\n         break;\n        } else {\n         $$1353 = $403;$415 = $403;\n        }\n       } else {\n        $$1353 = $$0352;$415 = $369;\n       }\n       $406 = HEAP32[$367>>2]|0;\n       $407 = (($406) + 1)|0;\n       HEAP32[$367>>2] = $407;\n       $408 = HEAP32[$$pre$phi431Z2D>>2]|0;\n       $409 = ((($408)) + 28|0);\n       $410 = HEAP32[$409>>2]|0;\n       $411 = (($410) + ($406)|0);\n       $412 = HEAP8[$411>>0]|0;\n       $413 = $412&255;\n       $414 = (($415) + 1)|0;\n       HEAP32[$361>>2] = $414;\n       $416 = HEAP32[$365>>2]|0;\n       $417 = (($416) + ($415)|0);\n       HEAP8[$417>>0] = $412;\n       $418 = ($412<<24>>24)==(0);\n       if ($418) {\n        $$0351 = $413;$$2354 = $$1353;\n        break;\n       }\n       $$pre422 = HEAP32[$361>>2]|0;\n       $$0352 = $$1353;$369 = $$pre422;\n      }\n      $419 = HEAP32[$$pre$phi431Z2D>>2]|0;\n      $420 = ((($419)) + 44|0);\n      $421 = HEAP32[$420>>2]|0;\n      $422 = ($421|0)==(0);\n      if (!($422)) {\n       $423 = HEAP32[$361>>2]|0;\n       $424 = ($423>>>0)>($$2354>>>0);\n       if ($424) {\n        $425 = HEAP32[$364>>2]|0;\n        $426 = HEAP32[$365>>2]|0;\n        $427 = (($426) + ($$2354)|0);\n        $428 = (($423) - ($$2354))|0;\n        $429 = (_crc32($425,$427,$428)|0);\n        HEAP32[$364>>2] = $429;\n       }\n      }\n      $430 = ($$0351|0)==(0);\n      if ($430) {\n       HEAP32[$367>>2] = 0;\n       HEAP32[$16>>2] = 91;\n       $$pre$phi437Z2D = $$pre$phi431Z2D;\n       label = 75;\n       break;\n      } else {\n       $$pr389 = HEAP32[$16>>2]|0;\n       $431 = $$pr389;\n       label = 73;\n       break;\n      }\n     }\n    } while(0);\n    if ((label|0) == 73) {\n     $432 = ($431|0)==(91);\n     if ($432) {\n      $$pre436 = ((($4)) + 28|0);\n      $$pre$phi437Z2D = $$pre436;\n      label = 75;\n     } else {\n      $$pr393$pr = $431;\n      label = 93;\n     }\n    }\n    do {\n     if ((label|0) == 75) {\n      $433 = HEAP32[$$pre$phi437Z2D>>2]|0;\n      $434 = ((($433)) + 36|0);\n      $435 = HEAP32[$434>>2]|0;\n      $436 = ($435|0)==(0|0);\n      if ($436) {\n       HEAP32[$16>>2] = 103;\n       $$pre$phi439Z2D = $$pre$phi437Z2D;\n       label = 95;\n       break;\n      }\n      $437 = ((($4)) + 20|0);\n      $438 = HEAP32[$437>>2]|0;\n      $439 = ((($4)) + 12|0);\n      $440 = ((($0)) + 48|0);\n      $441 = ((($4)) + 8|0);\n      $442 = ((($0)) + 20|0);\n      $443 = ((($4)) + 32|0);\n      $$0349 = $438;$445 = $438;\n      while(1) {\n       $444 = HEAP32[$439>>2]|0;\n       $446 = ($445|0)==($444|0);\n       if ($446) {\n        $447 = HEAP32[$$pre$phi437Z2D>>2]|0;\n        $448 = ((($447)) + 44|0);\n        $449 = HEAP32[$448>>2]|0;\n        $450 = ($449|0)!=(0);\n        $451 = ($445>>>0)>($$0349>>>0);\n        $or$cond365 = $451 & $450;\n        if ($or$cond365) {\n         $452 = HEAP32[$440>>2]|0;\n         $453 = HEAP32[$441>>2]|0;\n         $454 = (($453) + ($$0349)|0);\n         $455 = (($445) - ($$0349))|0;\n         $456 = (_crc32($452,$454,$455)|0);\n         HEAP32[$440>>2] = $456;\n        }\n        $457 = HEAP32[$3>>2]|0;\n        __tr_flush_bits($457);\n        $458 = ((($457)) + 20|0);\n        $459 = HEAP32[$458>>2]|0;\n        $460 = HEAP32[$22>>2]|0;\n        $461 = ($459>>>0)>($460>>>0);\n        $$$i374 = $461 ? $460 : $459;\n        $462 = ($$$i374|0)==(0);\n        if (!($462)) {\n         $463 = HEAP32[$8>>2]|0;\n         $464 = ((($457)) + 16|0);\n         $465 = HEAP32[$464>>2]|0;\n         _memcpy(($463|0),($465|0),($$$i374|0))|0;\n         $466 = HEAP32[$8>>2]|0;\n         $467 = (($466) + ($$$i374)|0);\n         HEAP32[$8>>2] = $467;\n         $468 = HEAP32[$464>>2]|0;\n         $469 = (($468) + ($$$i374)|0);\n         HEAP32[$464>>2] = $469;\n         $470 = HEAP32[$442>>2]|0;\n         $471 = (($470) + ($$$i374))|0;\n         HEAP32[$442>>2] = $471;\n         $472 = HEAP32[$22>>2]|0;\n         $473 = (($472) - ($$$i374))|0;\n         HEAP32[$22>>2] = $473;\n         $474 = HEAP32[$458>>2]|0;\n         $475 = (($474) - ($$$i374))|0;\n         HEAP32[$458>>2] = $475;\n         $476 = ($475|0)==(0);\n         if ($476) {\n          $477 = ((($457)) + 8|0);\n          $478 = HEAP32[$477>>2]|0;\n          HEAP32[$464>>2] = $478;\n         }\n        }\n        $479 = HEAP32[$437>>2]|0;\n        $480 = HEAP32[$439>>2]|0;\n        $481 = ($479|0)==($480|0);\n        if ($481) {\n         $$0348 = 1;$$2 = $479;\n         break;\n        } else {\n         $$1350 = $479;$491 = $479;\n        }\n       } else {\n        $$1350 = $$0349;$491 = $445;\n       }\n       $482 = HEAP32[$443>>2]|0;\n       $483 = (($482) + 1)|0;\n       HEAP32[$443>>2] = $483;\n       $484 = HEAP32[$$pre$phi437Z2D>>2]|0;\n       $485 = ((($484)) + 36|0);\n       $486 = HEAP32[$485>>2]|0;\n       $487 = (($486) + ($482)|0);\n       $488 = HEAP8[$487>>0]|0;\n       $489 = $488&255;\n       $490 = (($491) + 1)|0;\n       HEAP32[$437>>2] = $490;\n       $492 = HEAP32[$441>>2]|0;\n       $493 = (($492) + ($491)|0);\n       HEAP8[$493>>0] = $488;\n       $494 = ($488<<24>>24)==(0);\n       if ($494) {\n        $$0348 = $489;$$2 = $$1350;\n        break;\n       }\n       $$pre424 = HEAP32[$437>>2]|0;\n       $$0349 = $$1350;$445 = $$pre424;\n      }\n      $495 = HEAP32[$$pre$phi437Z2D>>2]|0;\n      $496 = ((($495)) + 44|0);\n      $497 = HEAP32[$496>>2]|0;\n      $498 = ($497|0)==(0);\n      if (!($498)) {\n       $499 = HEAP32[$437>>2]|0;\n       $500 = ($499>>>0)>($$2>>>0);\n       if ($500) {\n        $501 = HEAP32[$440>>2]|0;\n        $502 = HEAP32[$441>>2]|0;\n        $503 = (($502) + ($$2)|0);\n        $504 = (($499) - ($$2))|0;\n        $505 = (_crc32($501,$503,$504)|0);\n        HEAP32[$440>>2] = $505;\n       }\n      }\n      $506 = ($$0348|0)==(0);\n      if ($506) {\n       HEAP32[$16>>2] = 103;\n       $$pre$phi439Z2D = $$pre$phi437Z2D;\n       label = 95;\n       break;\n      } else {\n       $$pr393$pr$pre = HEAP32[$16>>2]|0;\n       $$pr393$pr = $$pr393$pr$pre;\n       label = 93;\n       break;\n      }\n     }\n    } while(0);\n    if ((label|0) == 93) {\n     $507 = ($$pr393$pr|0)==(103);\n     if ($507) {\n      $$pre438 = ((($4)) + 28|0);\n      $$pre$phi439Z2D = $$pre438;\n      label = 95;\n     }\n    }\n    do {\n     if ((label|0) == 95) {\n      $508 = HEAP32[$$pre$phi439Z2D>>2]|0;\n      $509 = ((($508)) + 44|0);\n      $510 = HEAP32[$509>>2]|0;\n      $511 = ($510|0)==(0);\n      if ($511) {\n       HEAP32[$16>>2] = 113;\n       break;\n      }\n      $512 = ((($4)) + 20|0);\n      $513 = HEAP32[$512>>2]|0;\n      $514 = (($513) + 2)|0;\n      $515 = ((($4)) + 12|0);\n      $516 = HEAP32[$515>>2]|0;\n      $517 = ($514>>>0)>($516>>>0);\n      if ($517) {\n       $518 = HEAP32[$3>>2]|0;\n       __tr_flush_bits($518);\n       $519 = ((($518)) + 20|0);\n       $520 = HEAP32[$519>>2]|0;\n       $521 = HEAP32[$22>>2]|0;\n       $522 = ($520>>>0)>($521>>>0);\n       $$$i376 = $522 ? $521 : $520;\n       $523 = ($$$i376|0)==(0);\n       if (!($523)) {\n        $524 = HEAP32[$8>>2]|0;\n        $525 = ((($518)) + 16|0);\n        $526 = HEAP32[$525>>2]|0;\n        _memcpy(($524|0),($526|0),($$$i376|0))|0;\n        $527 = HEAP32[$8>>2]|0;\n        $528 = (($527) + ($$$i376)|0);\n        HEAP32[$8>>2] = $528;\n        $529 = HEAP32[$525>>2]|0;\n        $530 = (($529) + ($$$i376)|0);\n        HEAP32[$525>>2] = $530;\n        $531 = ((($0)) + 20|0);\n        $532 = HEAP32[$531>>2]|0;\n        $533 = (($532) + ($$$i376))|0;\n        HEAP32[$531>>2] = $533;\n        $534 = HEAP32[$22>>2]|0;\n        $535 = (($534) - ($$$i376))|0;\n        HEAP32[$22>>2] = $535;\n        $536 = HEAP32[$519>>2]|0;\n        $537 = (($536) - ($$$i376))|0;\n        HEAP32[$519>>2] = $537;\n        $538 = ($537|0)==(0);\n        if ($538) {\n         $539 = ((($518)) + 8|0);\n         $540 = HEAP32[$539>>2]|0;\n         HEAP32[$525>>2] = $540;\n        }\n       }\n      }\n      $541 = HEAP32[$512>>2]|0;\n      $542 = (($541) + 2)|0;\n      $543 = HEAP32[$515>>2]|0;\n      $544 = ($542>>>0)>($543>>>0);\n      if (!($544)) {\n       $545 = ((($0)) + 48|0);\n       $546 = HEAP32[$545>>2]|0;\n       $547 = $546&255;\n       $548 = (($541) + 1)|0;\n       HEAP32[$512>>2] = $548;\n       $549 = ((($4)) + 8|0);\n       $550 = HEAP32[$549>>2]|0;\n       $551 = (($550) + ($541)|0);\n       HEAP8[$551>>0] = $547;\n       $552 = HEAP32[$545>>2]|0;\n       $553 = $552 >>> 8;\n       $554 = $553&255;\n       $555 = HEAP32[$512>>2]|0;\n       $556 = (($555) + 1)|0;\n       HEAP32[$512>>2] = $556;\n       $557 = HEAP32[$549>>2]|0;\n       $558 = (($557) + ($555)|0);\n       HEAP8[$558>>0] = $554;\n       $559 = (_crc32(0,0,0)|0);\n       HEAP32[$545>>2] = $559;\n       HEAP32[$16>>2] = 113;\n      }\n     }\n    } while(0);\n    $560 = ((($4)) + 20|0);\n    $561 = HEAP32[$560>>2]|0;\n    $562 = ($561|0)==(0);\n    if ($562) {\n     $588 = ((($0)) + 4|0);\n     $589 = HEAP32[$588>>2]|0;\n     $590 = ($589|0)==(0);\n     if ($590) {\n      $591 = $1 << 1;\n      $592 = ($1|0)>(4);\n      $593 = $592 ? 9 : 0;\n      $594 = (($591) - ($593))|0;\n      $595 = $28 << 1;\n      $596 = ($28|0)>(4);\n      $597 = $596 ? 9 : 0;\n      $598 = (($595) - ($597))|0;\n      $599 = ($594|0)<=($598|0);\n      $or$cond7 = $19 & $599;\n      if ($or$cond7) {\n       $600 = HEAP32[(9964)>>2]|0;\n       $601 = ((($0)) + 24|0);\n       HEAP32[$601>>2] = $600;\n       $$1 = -5;\n       return ($$1|0);\n      }\n     }\n    } else {\n     $563 = HEAP32[$3>>2]|0;\n     __tr_flush_bits($563);\n     $564 = ((($563)) + 20|0);\n     $565 = HEAP32[$564>>2]|0;\n     $566 = HEAP32[$22>>2]|0;\n     $567 = ($565>>>0)>($566>>>0);\n     $$$i378 = $567 ? $566 : $565;\n     $568 = ($$$i378|0)==(0);\n     if ($568) {\n      $586 = $566;\n     } else {\n      $569 = HEAP32[$8>>2]|0;\n      $570 = ((($563)) + 16|0);\n      $571 = HEAP32[$570>>2]|0;\n      _memcpy(($569|0),($571|0),($$$i378|0))|0;\n      $572 = HEAP32[$8>>2]|0;\n      $573 = (($572) + ($$$i378)|0);\n      HEAP32[$8>>2] = $573;\n      $574 = HEAP32[$570>>2]|0;\n      $575 = (($574) + ($$$i378)|0);\n      HEAP32[$570>>2] = $575;\n      $576 = ((($0)) + 20|0);\n      $577 = HEAP32[$576>>2]|0;\n      $578 = (($577) + ($$$i378))|0;\n      HEAP32[$576>>2] = $578;\n      $579 = HEAP32[$22>>2]|0;\n      $580 = (($579) - ($$$i378))|0;\n      HEAP32[$22>>2] = $580;\n      $581 = HEAP32[$564>>2]|0;\n      $582 = (($581) - ($$$i378))|0;\n      HEAP32[$564>>2] = $582;\n      $583 = ($582|0)==(0);\n      if ($583) {\n       $584 = ((($563)) + 8|0);\n       $585 = HEAP32[$584>>2]|0;\n       HEAP32[$570>>2] = $585;\n       $586 = $580;\n      } else {\n       $586 = $580;\n      }\n     }\n     $587 = ($586|0)==(0);\n     if ($587) {\n      HEAP32[$27>>2] = -1;\n      $$1 = 0;\n      return ($$1|0);\n     }\n    }\n    $602 = HEAP32[$16>>2]|0;\n    $603 = ($602|0)==(666);\n    $604 = ((($0)) + 4|0);\n    $605 = HEAP32[$604>>2]|0;\n    $606 = ($605|0)==(0);\n    if ($603) {\n     if ($606) {\n      label = 116;\n     } else {\n      $607 = HEAP32[(9964)>>2]|0;\n      $608 = ((($0)) + 24|0);\n      HEAP32[$608>>2] = $607;\n      $$1 = -5;\n      return ($$1|0);\n     }\n    } else {\n     if ($606) {\n      label = 116;\n     } else {\n      label = 117;\n     }\n    }\n    if ((label|0) == 116) {\n     $609 = ((($4)) + 116|0);\n     $610 = HEAP32[$609>>2]|0;\n     $611 = ($610|0)==(0);\n     $612 = ($1|0)==(0);\n     $brmerge = $612 | $603;\n     $or$cond445 = $611 & $brmerge;\n     if (!($or$cond445)) {\n      label = 117;\n     }\n    }\n    do {\n     if ((label|0) == 117) {\n      $613 = ((($4)) + 136|0);\n      $614 = HEAP32[$613>>2]|0;\n      L173: do {\n       switch ($614|0) {\n       case 2:  {\n        $615 = ((($4)) + 116|0);\n        $616 = ((($4)) + 96|0);\n        $617 = ((($4)) + 108|0);\n        $618 = ((($4)) + 56|0);\n        $619 = ((($4)) + 5792|0);\n        $620 = ((($4)) + 5796|0);\n        $621 = ((($4)) + 5784|0);\n        $622 = ((($4)) + 5788|0);\n        $623 = ((($4)) + 92|0);\n        while(1) {\n         $624 = HEAP32[$615>>2]|0;\n         $625 = ($624|0)==(0);\n         if ($625) {\n          _fill_window($4);\n          $626 = HEAP32[$615>>2]|0;\n          $627 = ($626|0)==(0);\n          if ($627) {\n           break;\n          }\n         }\n         HEAP32[$616>>2] = 0;\n         $629 = HEAP32[$617>>2]|0;\n         $630 = HEAP32[$618>>2]|0;\n         $631 = (($630) + ($629)|0);\n         $632 = HEAP8[$631>>0]|0;\n         $633 = HEAP32[$619>>2]|0;\n         $634 = HEAP32[$620>>2]|0;\n         $635 = (($634) + ($633<<1)|0);\n         HEAP16[$635>>1] = 0;\n         $636 = (($633) + 1)|0;\n         HEAP32[$619>>2] = $636;\n         $637 = HEAP32[$621>>2]|0;\n         $638 = (($637) + ($633)|0);\n         HEAP8[$638>>0] = $632;\n         $639 = $632&255;\n         $640 = (((($4)) + 148|0) + ($639<<2)|0);\n         $641 = HEAP16[$640>>1]|0;\n         $642 = (($641) + 1)<<16>>16;\n         HEAP16[$640>>1] = $642;\n         $643 = HEAP32[$619>>2]|0;\n         $644 = HEAP32[$622>>2]|0;\n         $645 = (($644) + -1)|0;\n         $646 = ($643|0)==($645|0);\n         $647 = HEAP32[$615>>2]|0;\n         $648 = (($647) + -1)|0;\n         HEAP32[$615>>2] = $648;\n         $649 = HEAP32[$617>>2]|0;\n         $650 = (($649) + 1)|0;\n         HEAP32[$617>>2] = $650;\n         if (!($646)) {\n          continue;\n         }\n         $651 = HEAP32[$623>>2]|0;\n         $652 = ($651|0)>(-1);\n         if ($652) {\n          $653 = HEAP32[$618>>2]|0;\n          $654 = (($653) + ($651)|0);\n          $656 = $654;\n         } else {\n          $656 = 0;\n         }\n         $655 = (($650) - ($651))|0;\n         __tr_flush_block($4,$656,$655,0);\n         $657 = HEAP32[$617>>2]|0;\n         HEAP32[$623>>2] = $657;\n         $658 = HEAP32[$4>>2]|0;\n         $659 = ((($658)) + 28|0);\n         $660 = HEAP32[$659>>2]|0;\n         __tr_flush_bits($660);\n         $661 = ((($660)) + 20|0);\n         $662 = HEAP32[$661>>2]|0;\n         $663 = ((($658)) + 16|0);\n         $664 = HEAP32[$663>>2]|0;\n         $665 = ($662>>>0)>($664>>>0);\n         $$$i$i = $665 ? $664 : $662;\n         $666 = ($$$i$i|0)==(0);\n         if (!($666)) {\n          $667 = ((($658)) + 12|0);\n          $668 = HEAP32[$667>>2]|0;\n          $669 = ((($660)) + 16|0);\n          $670 = HEAP32[$669>>2]|0;\n          _memcpy(($668|0),($670|0),($$$i$i|0))|0;\n          $671 = HEAP32[$667>>2]|0;\n          $672 = (($671) + ($$$i$i)|0);\n          HEAP32[$667>>2] = $672;\n          $673 = HEAP32[$669>>2]|0;\n          $674 = (($673) + ($$$i$i)|0);\n          HEAP32[$669>>2] = $674;\n          $675 = ((($658)) + 20|0);\n          $676 = HEAP32[$675>>2]|0;\n          $677 = (($676) + ($$$i$i))|0;\n          HEAP32[$675>>2] = $677;\n          $678 = HEAP32[$663>>2]|0;\n          $679 = (($678) - ($$$i$i))|0;\n          HEAP32[$663>>2] = $679;\n          $680 = HEAP32[$661>>2]|0;\n          $681 = (($680) - ($$$i$i))|0;\n          HEAP32[$661>>2] = $681;\n          $682 = ($681|0)==(0);\n          if ($682) {\n           $683 = ((($660)) + 8|0);\n           $684 = HEAP32[$683>>2]|0;\n           HEAP32[$669>>2] = $684;\n          }\n         }\n         $685 = HEAP32[$4>>2]|0;\n         $686 = ((($685)) + 16|0);\n         $687 = HEAP32[$686>>2]|0;\n         $688 = ($687|0)==(0);\n         if ($688) {\n          label = 191;\n          break L173;\n         }\n        }\n        $628 = ($1|0)==(0);\n        if ($628) {\n         label = 191;\n        } else {\n         $689 = ((($4)) + 5812|0);\n         HEAP32[$689>>2] = 0;\n         $690 = ($1|0)==(4);\n         if ($690) {\n          $691 = HEAP32[$623>>2]|0;\n          $692 = ($691|0)>(-1);\n          if ($692) {\n           $693 = HEAP32[$618>>2]|0;\n           $694 = (($693) + ($691)|0);\n           $697 = $694;\n          } else {\n           $697 = 0;\n          }\n          $695 = HEAP32[$617>>2]|0;\n          $696 = (($695) - ($691))|0;\n          __tr_flush_block($4,$697,$696,1);\n          $698 = HEAP32[$617>>2]|0;\n          HEAP32[$623>>2] = $698;\n          $699 = HEAP32[$4>>2]|0;\n          $700 = ((($699)) + 28|0);\n          $701 = HEAP32[$700>>2]|0;\n          __tr_flush_bits($701);\n          $702 = ((($701)) + 20|0);\n          $703 = HEAP32[$702>>2]|0;\n          $704 = ((($699)) + 16|0);\n          $705 = HEAP32[$704>>2]|0;\n          $706 = ($703>>>0)>($705>>>0);\n          $$$i52$i = $706 ? $705 : $703;\n          $707 = ($$$i52$i|0)==(0);\n          if (!($707)) {\n           $708 = ((($699)) + 12|0);\n           $709 = HEAP32[$708>>2]|0;\n           $710 = ((($701)) + 16|0);\n           $711 = HEAP32[$710>>2]|0;\n           _memcpy(($709|0),($711|0),($$$i52$i|0))|0;\n           $712 = HEAP32[$708>>2]|0;\n           $713 = (($712) + ($$$i52$i)|0);\n           HEAP32[$708>>2] = $713;\n           $714 = HEAP32[$710>>2]|0;\n           $715 = (($714) + ($$$i52$i)|0);\n           HEAP32[$710>>2] = $715;\n           $716 = ((($699)) + 20|0);\n           $717 = HEAP32[$716>>2]|0;\n           $718 = (($717) + ($$$i52$i))|0;\n           HEAP32[$716>>2] = $718;\n           $719 = HEAP32[$704>>2]|0;\n           $720 = (($719) - ($$$i52$i))|0;\n           HEAP32[$704>>2] = $720;\n           $721 = HEAP32[$702>>2]|0;\n           $722 = (($721) - ($$$i52$i))|0;\n           HEAP32[$702>>2] = $722;\n           $723 = ($722|0)==(0);\n           if ($723) {\n            $724 = ((($701)) + 8|0);\n            $725 = HEAP32[$724>>2]|0;\n            HEAP32[$710>>2] = $725;\n           }\n          }\n          $726 = HEAP32[$4>>2]|0;\n          $727 = ((($726)) + 16|0);\n          $728 = HEAP32[$727>>2]|0;\n          $729 = ($728|0)==(0);\n          $$$i380 = $729 ? 2 : 3;\n          $1013 = $$$i380;\n          label = 188;\n          break L173;\n         }\n         $730 = HEAP32[$619>>2]|0;\n         $731 = ($730|0)==(0);\n         if (!($731)) {\n          $732 = HEAP32[$623>>2]|0;\n          $733 = ($732|0)>(-1);\n          if ($733) {\n           $734 = HEAP32[$618>>2]|0;\n           $735 = (($734) + ($732)|0);\n           $738 = $735;\n          } else {\n           $738 = 0;\n          }\n          $736 = HEAP32[$617>>2]|0;\n          $737 = (($736) - ($732))|0;\n          __tr_flush_block($4,$738,$737,0);\n          $739 = HEAP32[$617>>2]|0;\n          HEAP32[$623>>2] = $739;\n          $740 = HEAP32[$4>>2]|0;\n          $741 = ((($740)) + 28|0);\n          $742 = HEAP32[$741>>2]|0;\n          __tr_flush_bits($742);\n          $743 = ((($742)) + 20|0);\n          $744 = HEAP32[$743>>2]|0;\n          $745 = ((($740)) + 16|0);\n          $746 = HEAP32[$745>>2]|0;\n          $747 = ($744>>>0)>($746>>>0);\n          $$$i54$i = $747 ? $746 : $744;\n          $748 = ($$$i54$i|0)==(0);\n          if (!($748)) {\n           $749 = ((($740)) + 12|0);\n           $750 = HEAP32[$749>>2]|0;\n           $751 = ((($742)) + 16|0);\n           $752 = HEAP32[$751>>2]|0;\n           _memcpy(($750|0),($752|0),($$$i54$i|0))|0;\n           $753 = HEAP32[$749>>2]|0;\n           $754 = (($753) + ($$$i54$i)|0);\n           HEAP32[$749>>2] = $754;\n           $755 = HEAP32[$751>>2]|0;\n           $756 = (($755) + ($$$i54$i)|0);\n           HEAP32[$751>>2] = $756;\n           $757 = ((($740)) + 20|0);\n           $758 = HEAP32[$757>>2]|0;\n           $759 = (($758) + ($$$i54$i))|0;\n           HEAP32[$757>>2] = $759;\n           $760 = HEAP32[$745>>2]|0;\n           $761 = (($760) - ($$$i54$i))|0;\n           HEAP32[$745>>2] = $761;\n           $762 = HEAP32[$743>>2]|0;\n           $763 = (($762) - ($$$i54$i))|0;\n           HEAP32[$743>>2] = $763;\n           $764 = ($763|0)==(0);\n           if ($764) {\n            $765 = ((($742)) + 8|0);\n            $766 = HEAP32[$765>>2]|0;\n            HEAP32[$751>>2] = $766;\n           }\n          }\n          $767 = HEAP32[$4>>2]|0;\n          $768 = ((($767)) + 16|0);\n          $769 = HEAP32[$768>>2]|0;\n          $770 = ($769|0)==(0);\n          if ($770) {\n           label = 191;\n          }\n         }\n        }\n        break;\n       }\n       case 3:  {\n        $771 = ((($4)) + 116|0);\n        $772 = ($1|0)==(0);\n        $773 = ((($4)) + 96|0);\n        $774 = ((($4)) + 108|0);\n        $775 = ((($4)) + 5792|0);\n        $776 = ((($4)) + 5796|0);\n        $777 = ((($4)) + 5784|0);\n        $778 = ((($4)) + 5788|0);\n        $779 = ((($4)) + 56|0);\n        $780 = ((($4)) + 92|0);\n        while(1) {\n         $781 = HEAP32[$771>>2]|0;\n         $782 = ($781>>>0)<(259);\n         if ($782) {\n          _fill_window($4);\n          $783 = HEAP32[$771>>2]|0;\n          $784 = ($783>>>0)<(259);\n          $or$cond$i = $772 & $784;\n          if ($or$cond$i) {\n           label = 191;\n           break L173;\n          }\n          $785 = ($783|0)==(0);\n          if ($785) {\n           break;\n          }\n          HEAP32[$773>>2] = 0;\n          $786 = ($783>>>0)>(2);\n          if ($786) {\n           $828 = $783;\n           label = 150;\n          } else {\n           $$pre$i = HEAP32[$774>>2]|0;\n           $864 = $$pre$i;\n           label = 165;\n          }\n         } else {\n          HEAP32[$773>>2] = 0;\n          $828 = $781;\n          label = 150;\n         }\n         if ((label|0) == 150) {\n          label = 0;\n          $787 = HEAP32[$774>>2]|0;\n          $788 = ($787|0)==(0);\n          if ($788) {\n           $864 = 0;\n           label = 165;\n          } else {\n           $789 = HEAP32[$779>>2]|0;\n           $790 = (($789) + ($787)|0);\n           $$ptr133$i = ((($790)) + -1|0);\n           $791 = HEAP8[$$ptr133$i>>0]|0;\n           $792 = HEAP8[$790>>0]|0;\n           $793 = ($791<<24>>24)==($792<<24>>24);\n           if ($793) {\n            $$ptr135$i = ((($790)) + 1|0);\n            $794 = HEAP8[$$ptr135$i>>0]|0;\n            $795 = ($791<<24>>24)==($794<<24>>24);\n            if ($795) {\n             $796 = ((($$ptr135$i)) + 1|0);\n             $797 = HEAP8[$796>>0]|0;\n             $798 = ($791<<24>>24)==($797<<24>>24);\n             if ($798) {\n              $799 = ((($790)) + 258|0);\n              $$idx$i = 1;\n              while(1) {\n               $$ptr$i = (($790) + ($$idx$i)|0);\n               $800 = ((($$ptr$i)) + 2|0);\n               $801 = HEAP8[$800>>0]|0;\n               $802 = ($791<<24>>24)==($801<<24>>24);\n               if (!($802)) {\n                $$1$i = $800;\n                break;\n               }\n               $803 = ((($$ptr$i)) + 3|0);\n               $804 = HEAP8[$803>>0]|0;\n               $805 = ($791<<24>>24)==($804<<24>>24);\n               if (!($805)) {\n                $$1$i = $803;\n                break;\n               }\n               $806 = ((($$ptr$i)) + 4|0);\n               $807 = HEAP8[$806>>0]|0;\n               $808 = ($791<<24>>24)==($807<<24>>24);\n               if (!($808)) {\n                $$1$i = $806;\n                break;\n               }\n               $809 = ((($$ptr$i)) + 5|0);\n               $810 = HEAP8[$809>>0]|0;\n               $811 = ($791<<24>>24)==($810<<24>>24);\n               if (!($811)) {\n                $$1$i = $809;\n                break;\n               }\n               $812 = ((($$ptr$i)) + 6|0);\n               $813 = HEAP8[$812>>0]|0;\n               $814 = ($791<<24>>24)==($813<<24>>24);\n               if (!($814)) {\n                $$1$i = $812;\n                break;\n               }\n               $815 = ((($$ptr$i)) + 7|0);\n               $816 = HEAP8[$815>>0]|0;\n               $817 = ($791<<24>>24)==($816<<24>>24);\n               if (!($817)) {\n                $$1$i = $815;\n                break;\n               }\n               $$add130$i = (($$idx$i) + 8)|0;\n               $$ptr132$i = (($790) + ($$add130$i)|0);\n               $818 = HEAP8[$$ptr132$i>>0]|0;\n               $819 = ($791<<24>>24)==($818<<24>>24);\n               if (!($819)) {\n                $$1$i = $$ptr132$i;\n                break;\n               }\n               $$add$i = (($$idx$i) + 9)|0;\n               $$ptr131$i = (($790) + ($$add$i)|0);\n               $820 = HEAP8[$$ptr131$i>>0]|0;\n               $821 = ($791<<24>>24)==($820<<24>>24);\n               $822 = ($$add$i|0)<(258);\n               $or$cond136$i = $822 & $821;\n               if ($or$cond136$i) {\n                $$idx$i = $$add130$i;\n               } else {\n                $$1$i = $$ptr131$i;\n                break;\n               }\n              }\n              $823 = $799;\n              $824 = $$1$i;\n              $825 = (($824) - ($823))|0;\n              $826 = (($825) + 258)|0;\n              $827 = ($826>>>0)>($828>>>0);\n              $$$i382 = $827 ? $828 : $826;\n              HEAP32[$773>>2] = $$$i382;\n              $829 = ($$$i382>>>0)>(2);\n              if ($829) {\n               $830 = (($$$i382) + 253)|0;\n               $831 = $830&255;\n               $832 = HEAP32[$775>>2]|0;\n               $833 = HEAP32[$776>>2]|0;\n               $834 = (($833) + ($832<<1)|0);\n               HEAP16[$834>>1] = 1;\n               $835 = (($832) + 1)|0;\n               HEAP32[$775>>2] = $835;\n               $836 = HEAP32[$777>>2]|0;\n               $837 = (($836) + ($832)|0);\n               HEAP8[$837>>0] = $831;\n               $838 = $830 & 255;\n               $839 = (28079 + ($838)|0);\n               $840 = HEAP8[$839>>0]|0;\n               $841 = $840&255;\n               $842 = $841 | 256;\n               $843 = (($842) + 1)|0;\n               $844 = (((($4)) + 148|0) + ($843<<2)|0);\n               $845 = HEAP16[$844>>1]|0;\n               $846 = (($845) + 1)<<16>>16;\n               HEAP16[$844>>1] = $846;\n               $847 = HEAP8[27567]|0;\n               $848 = $847&255;\n               $849 = (((($4)) + 2440|0) + ($848<<2)|0);\n               $850 = HEAP16[$849>>1]|0;\n               $851 = (($850) + 1)<<16>>16;\n               HEAP16[$849>>1] = $851;\n               $852 = HEAP32[$775>>2]|0;\n               $853 = HEAP32[$778>>2]|0;\n               $854 = (($853) + -1)|0;\n               $855 = ($852|0)==($854|0);\n               $856 = $855&1;\n               $857 = HEAP32[$773>>2]|0;\n               $858 = HEAP32[$771>>2]|0;\n               $859 = (($858) - ($857))|0;\n               HEAP32[$771>>2] = $859;\n               $860 = HEAP32[$774>>2]|0;\n               $861 = (($860) + ($857))|0;\n               HEAP32[$774>>2] = $861;\n               HEAP32[$773>>2] = 0;\n               $$0128$i = $856;$891 = $861;\n              } else {\n               $864 = $787;\n               label = 165;\n              }\n             } else {\n              $864 = $787;\n              label = 165;\n             }\n            } else {\n             $864 = $787;\n             label = 165;\n            }\n           } else {\n            $864 = $787;\n            label = 165;\n           }\n          }\n         }\n         if ((label|0) == 165) {\n          label = 0;\n          $862 = HEAP32[$779>>2]|0;\n          $863 = (($862) + ($864)|0);\n          $865 = HEAP8[$863>>0]|0;\n          $866 = HEAP32[$775>>2]|0;\n          $867 = HEAP32[$776>>2]|0;\n          $868 = (($867) + ($866<<1)|0);\n          HEAP16[$868>>1] = 0;\n          $869 = (($866) + 1)|0;\n          HEAP32[$775>>2] = $869;\n          $870 = HEAP32[$777>>2]|0;\n          $871 = (($870) + ($866)|0);\n          HEAP8[$871>>0] = $865;\n          $872 = $865&255;\n          $873 = (((($4)) + 148|0) + ($872<<2)|0);\n          $874 = HEAP16[$873>>1]|0;\n          $875 = (($874) + 1)<<16>>16;\n          HEAP16[$873>>1] = $875;\n          $876 = HEAP32[$775>>2]|0;\n          $877 = HEAP32[$778>>2]|0;\n          $878 = (($877) + -1)|0;\n          $879 = ($876|0)==($878|0);\n          $880 = $879&1;\n          $881 = HEAP32[$771>>2]|0;\n          $882 = (($881) + -1)|0;\n          HEAP32[$771>>2] = $882;\n          $883 = HEAP32[$774>>2]|0;\n          $884 = (($883) + 1)|0;\n          HEAP32[$774>>2] = $884;\n          $$0128$i = $880;$891 = $884;\n         }\n         $885 = ($$0128$i|0)==(0);\n         if ($885) {\n          continue;\n         }\n         $886 = HEAP32[$780>>2]|0;\n         $887 = ($886|0)>(-1);\n         if ($887) {\n          $888 = HEAP32[$779>>2]|0;\n          $889 = (($888) + ($886)|0);\n          $892 = $889;\n         } else {\n          $892 = 0;\n         }\n         $890 = (($891) - ($886))|0;\n         __tr_flush_block($4,$892,$890,0);\n         $893 = HEAP32[$774>>2]|0;\n         HEAP32[$780>>2] = $893;\n         $894 = HEAP32[$4>>2]|0;\n         $895 = ((($894)) + 28|0);\n         $896 = HEAP32[$895>>2]|0;\n         __tr_flush_bits($896);\n         $897 = ((($896)) + 20|0);\n         $898 = HEAP32[$897>>2]|0;\n         $899 = ((($894)) + 16|0);\n         $900 = HEAP32[$899>>2]|0;\n         $901 = ($898>>>0)>($900>>>0);\n         $$$i$i383 = $901 ? $900 : $898;\n         $902 = ($$$i$i383|0)==(0);\n         if (!($902)) {\n          $903 = ((($894)) + 12|0);\n          $904 = HEAP32[$903>>2]|0;\n          $905 = ((($896)) + 16|0);\n          $906 = HEAP32[$905>>2]|0;\n          _memcpy(($904|0),($906|0),($$$i$i383|0))|0;\n          $907 = HEAP32[$903>>2]|0;\n          $908 = (($907) + ($$$i$i383)|0);\n          HEAP32[$903>>2] = $908;\n          $909 = HEAP32[$905>>2]|0;\n          $910 = (($909) + ($$$i$i383)|0);\n          HEAP32[$905>>2] = $910;\n          $911 = ((($894)) + 20|0);\n          $912 = HEAP32[$911>>2]|0;\n          $913 = (($912) + ($$$i$i383))|0;\n          HEAP32[$911>>2] = $913;\n          $914 = HEAP32[$899>>2]|0;\n          $915 = (($914) - ($$$i$i383))|0;\n          HEAP32[$899>>2] = $915;\n          $916 = HEAP32[$897>>2]|0;\n          $917 = (($916) - ($$$i$i383))|0;\n          HEAP32[$897>>2] = $917;\n          $918 = ($917|0)==(0);\n          if ($918) {\n           $919 = ((($896)) + 8|0);\n           $920 = HEAP32[$919>>2]|0;\n           HEAP32[$905>>2] = $920;\n          }\n         }\n         $921 = HEAP32[$4>>2]|0;\n         $922 = ((($921)) + 16|0);\n         $923 = HEAP32[$922>>2]|0;\n         $924 = ($923|0)==(0);\n         if ($924) {\n          label = 191;\n          break L173;\n         }\n        }\n        $925 = ((($4)) + 5812|0);\n        HEAP32[$925>>2] = 0;\n        $926 = ($1|0)==(4);\n        if ($926) {\n         $927 = HEAP32[$780>>2]|0;\n         $928 = ($927|0)>(-1);\n         if ($928) {\n          $929 = HEAP32[$779>>2]|0;\n          $930 = (($929) + ($927)|0);\n          $933 = $930;\n         } else {\n          $933 = 0;\n         }\n         $931 = HEAP32[$774>>2]|0;\n         $932 = (($931) - ($927))|0;\n         __tr_flush_block($4,$933,$932,1);\n         $934 = HEAP32[$774>>2]|0;\n         HEAP32[$780>>2] = $934;\n         $935 = HEAP32[$4>>2]|0;\n         $936 = ((($935)) + 28|0);\n         $937 = HEAP32[$936>>2]|0;\n         __tr_flush_bits($937);\n         $938 = ((($937)) + 20|0);\n         $939 = HEAP32[$938>>2]|0;\n         $940 = ((($935)) + 16|0);\n         $941 = HEAP32[$940>>2]|0;\n         $942 = ($939>>>0)>($941>>>0);\n         $$$i138$i = $942 ? $941 : $939;\n         $943 = ($$$i138$i|0)==(0);\n         if (!($943)) {\n          $944 = ((($935)) + 12|0);\n          $945 = HEAP32[$944>>2]|0;\n          $946 = ((($937)) + 16|0);\n          $947 = HEAP32[$946>>2]|0;\n          _memcpy(($945|0),($947|0),($$$i138$i|0))|0;\n          $948 = HEAP32[$944>>2]|0;\n          $949 = (($948) + ($$$i138$i)|0);\n          HEAP32[$944>>2] = $949;\n          $950 = HEAP32[$946>>2]|0;\n          $951 = (($950) + ($$$i138$i)|0);\n          HEAP32[$946>>2] = $951;\n          $952 = ((($935)) + 20|0);\n          $953 = HEAP32[$952>>2]|0;\n          $954 = (($953) + ($$$i138$i))|0;\n          HEAP32[$952>>2] = $954;\n          $955 = HEAP32[$940>>2]|0;\n          $956 = (($955) - ($$$i138$i))|0;\n          HEAP32[$940>>2] = $956;\n          $957 = HEAP32[$938>>2]|0;\n          $958 = (($957) - ($$$i138$i))|0;\n          HEAP32[$938>>2] = $958;\n          $959 = ($958|0)==(0);\n          if ($959) {\n           $960 = ((($937)) + 8|0);\n           $961 = HEAP32[$960>>2]|0;\n           HEAP32[$946>>2] = $961;\n          }\n         }\n         $962 = HEAP32[$4>>2]|0;\n         $963 = ((($962)) + 16|0);\n         $964 = HEAP32[$963>>2]|0;\n         $965 = ($964|0)==(0);\n         $$137$i = $965 ? 2 : 3;\n         $1013 = $$137$i;\n         label = 188;\n         break L173;\n        }\n        $966 = HEAP32[$775>>2]|0;\n        $967 = ($966|0)==(0);\n        if (!($967)) {\n         $968 = HEAP32[$780>>2]|0;\n         $969 = ($968|0)>(-1);\n         if ($969) {\n          $970 = HEAP32[$779>>2]|0;\n          $971 = (($970) + ($968)|0);\n          $974 = $971;\n         } else {\n          $974 = 0;\n         }\n         $972 = HEAP32[$774>>2]|0;\n         $973 = (($972) - ($968))|0;\n         __tr_flush_block($4,$974,$973,0);\n         $975 = HEAP32[$774>>2]|0;\n         HEAP32[$780>>2] = $975;\n         $976 = HEAP32[$4>>2]|0;\n         $977 = ((($976)) + 28|0);\n         $978 = HEAP32[$977>>2]|0;\n         __tr_flush_bits($978);\n         $979 = ((($978)) + 20|0);\n         $980 = HEAP32[$979>>2]|0;\n         $981 = ((($976)) + 16|0);\n         $982 = HEAP32[$981>>2]|0;\n         $983 = ($980>>>0)>($982>>>0);\n         $$$i140$i = $983 ? $982 : $980;\n         $984 = ($$$i140$i|0)==(0);\n         if (!($984)) {\n          $985 = ((($976)) + 12|0);\n          $986 = HEAP32[$985>>2]|0;\n          $987 = ((($978)) + 16|0);\n          $988 = HEAP32[$987>>2]|0;\n          _memcpy(($986|0),($988|0),($$$i140$i|0))|0;\n          $989 = HEAP32[$985>>2]|0;\n          $990 = (($989) + ($$$i140$i)|0);\n          HEAP32[$985>>2] = $990;\n          $991 = HEAP32[$987>>2]|0;\n          $992 = (($991) + ($$$i140$i)|0);\n          HEAP32[$987>>2] = $992;\n          $993 = ((($976)) + 20|0);\n          $994 = HEAP32[$993>>2]|0;\n          $995 = (($994) + ($$$i140$i))|0;\n          HEAP32[$993>>2] = $995;\n          $996 = HEAP32[$981>>2]|0;\n          $997 = (($996) - ($$$i140$i))|0;\n          HEAP32[$981>>2] = $997;\n          $998 = HEAP32[$979>>2]|0;\n          $999 = (($998) - ($$$i140$i))|0;\n          HEAP32[$979>>2] = $999;\n          $1000 = ($999|0)==(0);\n          if ($1000) {\n           $1001 = ((($978)) + 8|0);\n           $1002 = HEAP32[$1001>>2]|0;\n           HEAP32[$987>>2] = $1002;\n          }\n         }\n         $1003 = HEAP32[$4>>2]|0;\n         $1004 = ((($1003)) + 16|0);\n         $1005 = HEAP32[$1004>>2]|0;\n         $1006 = ($1005|0)==(0);\n         if ($1006) {\n          label = 191;\n         }\n        }\n        break;\n       }\n       default: {\n        $1007 = ((($4)) + 132|0);\n        $1008 = HEAP32[$1007>>2]|0;\n        $1009 = (((9208 + (($1008*12)|0)|0)) + 8|0);\n        $1010 = HEAP32[$1009>>2]|0;\n        $1011 = (FUNCTION_TABLE_iii[$1010 & 63]($4,$1)|0);\n        $1013 = $1011;\n        label = 188;\n       }\n       }\n      } while(0);\n      if ((label|0) == 188) {\n       $1012 = $1013 | 1;\n       $1014 = ($1012|0)==(3);\n       if ($1014) {\n        HEAP32[$16>>2] = 666;\n       }\n       $1015 = $1013 | 2;\n       $1016 = ($1015|0)==(2);\n       if ($1016) {\n        label = 191;\n       } else {\n        $1019 = ($1013|0)==(1);\n        if (!($1019)) {\n         break;\n        }\n       }\n      }\n      if ((label|0) == 191) {\n       $1017 = HEAP32[$22>>2]|0;\n       $1018 = ($1017|0)==(0);\n       if (!($1018)) {\n        $$1 = 0;\n        return ($$1|0);\n       }\n       HEAP32[$27>>2] = -1;\n       $$1 = 0;\n       return ($$1|0);\n      }\n      switch ($1|0) {\n      case 1:  {\n       __tr_align($4);\n       break;\n      }\n      case 5:  {\n       break;\n      }\n      default: {\n       __tr_stored_block($4,0,0,0);\n       $1020 = ($1|0)==(3);\n       if ($1020) {\n        $1021 = ((($4)) + 76|0);\n        $1022 = HEAP32[$1021>>2]|0;\n        $1023 = (($1022) + -1)|0;\n        $1024 = ((($4)) + 68|0);\n        $1025 = HEAP32[$1024>>2]|0;\n        $1026 = (($1025) + ($1023<<1)|0);\n        HEAP16[$1026>>1] = 0;\n        $1027 = $1022 << 1;\n        $1028 = (($1027) + -2)|0;\n        _memset(($1025|0),0,($1028|0))|0;\n        $1029 = ((($4)) + 116|0);\n        $1030 = HEAP32[$1029>>2]|0;\n        $1031 = ($1030|0)==(0);\n        if ($1031) {\n         $1032 = ((($4)) + 108|0);\n         HEAP32[$1032>>2] = 0;\n         $1033 = ((($4)) + 92|0);\n         HEAP32[$1033>>2] = 0;\n         $1034 = ((($4)) + 5812|0);\n         HEAP32[$1034>>2] = 0;\n        }\n       }\n      }\n      }\n      $1035 = HEAP32[$3>>2]|0;\n      __tr_flush_bits($1035);\n      $1036 = ((($1035)) + 20|0);\n      $1037 = HEAP32[$1036>>2]|0;\n      $1038 = HEAP32[$22>>2]|0;\n      $1039 = ($1037>>>0)>($1038>>>0);\n      $$$i368 = $1039 ? $1038 : $1037;\n      $1040 = ($$$i368|0)==(0);\n      if ($1040) {\n       $1058 = $1038;\n      } else {\n       $1041 = HEAP32[$8>>2]|0;\n       $1042 = ((($1035)) + 16|0);\n       $1043 = HEAP32[$1042>>2]|0;\n       _memcpy(($1041|0),($1043|0),($$$i368|0))|0;\n       $1044 = HEAP32[$8>>2]|0;\n       $1045 = (($1044) + ($$$i368)|0);\n       HEAP32[$8>>2] = $1045;\n       $1046 = HEAP32[$1042>>2]|0;\n       $1047 = (($1046) + ($$$i368)|0);\n       HEAP32[$1042>>2] = $1047;\n       $1048 = ((($0)) + 20|0);\n       $1049 = HEAP32[$1048>>2]|0;\n       $1050 = (($1049) + ($$$i368))|0;\n       HEAP32[$1048>>2] = $1050;\n       $1051 = HEAP32[$22>>2]|0;\n       $1052 = (($1051) - ($$$i368))|0;\n       HEAP32[$22>>2] = $1052;\n       $1053 = HEAP32[$1036>>2]|0;\n       $1054 = (($1053) - ($$$i368))|0;\n       HEAP32[$1036>>2] = $1054;\n       $1055 = ($1054|0)==(0);\n       if ($1055) {\n        $1056 = ((($1035)) + 8|0);\n        $1057 = HEAP32[$1056>>2]|0;\n        HEAP32[$1042>>2] = $1057;\n        $1058 = $1052;\n       } else {\n        $1058 = $1052;\n       }\n      }\n      $1059 = ($1058|0)==(0);\n      if ($1059) {\n       HEAP32[$27>>2] = -1;\n       $$1 = 0;\n       return ($$1|0);\n      }\n     }\n    } while(0);\n    if ($19) {\n     $$1 = 0;\n     return ($$1|0);\n    }\n    $1060 = ((($4)) + 24|0);\n    $1061 = HEAP32[$1060>>2]|0;\n    $1062 = ($1061|0)<(1);\n    if ($1062) {\n     $$1 = 1;\n     return ($$1|0);\n    }\n    $1063 = ($1061|0)==(2);\n    $1064 = ((($0)) + 48|0);\n    $1065 = HEAP32[$1064>>2]|0;\n    if ($1063) {\n     $1066 = $1065&255;\n     $1067 = HEAP32[$560>>2]|0;\n     $1068 = (($1067) + 1)|0;\n     HEAP32[$560>>2] = $1068;\n     $1069 = ((($4)) + 8|0);\n     $1070 = HEAP32[$1069>>2]|0;\n     $1071 = (($1070) + ($1067)|0);\n     HEAP8[$1071>>0] = $1066;\n     $1072 = HEAP32[$1064>>2]|0;\n     $1073 = $1072 >>> 8;\n     $1074 = $1073&255;\n     $1075 = HEAP32[$560>>2]|0;\n     $1076 = (($1075) + 1)|0;\n     HEAP32[$560>>2] = $1076;\n     $1077 = HEAP32[$1069>>2]|0;\n     $1078 = (($1077) + ($1075)|0);\n     HEAP8[$1078>>0] = $1074;\n     $1079 = HEAP32[$1064>>2]|0;\n     $1080 = $1079 >>> 16;\n     $1081 = $1080&255;\n     $1082 = HEAP32[$560>>2]|0;\n     $1083 = (($1082) + 1)|0;\n     HEAP32[$560>>2] = $1083;\n     $1084 = HEAP32[$1069>>2]|0;\n     $1085 = (($1084) + ($1082)|0);\n     HEAP8[$1085>>0] = $1081;\n     $1086 = HEAP32[$1064>>2]|0;\n     $1087 = $1086 >>> 24;\n     $1088 = $1087&255;\n     $1089 = HEAP32[$560>>2]|0;\n     $1090 = (($1089) + 1)|0;\n     HEAP32[$560>>2] = $1090;\n     $1091 = HEAP32[$1069>>2]|0;\n     $1092 = (($1091) + ($1089)|0);\n     HEAP8[$1092>>0] = $1088;\n     $1093 = ((($0)) + 8|0);\n     $1094 = HEAP32[$1093>>2]|0;\n     $1095 = $1094&255;\n     $1096 = HEAP32[$560>>2]|0;\n     $1097 = (($1096) + 1)|0;\n     HEAP32[$560>>2] = $1097;\n     $1098 = HEAP32[$1069>>2]|0;\n     $1099 = (($1098) + ($1096)|0);\n     HEAP8[$1099>>0] = $1095;\n     $1100 = HEAP32[$1093>>2]|0;\n     $1101 = $1100 >>> 8;\n     $1102 = $1101&255;\n     $1103 = HEAP32[$560>>2]|0;\n     $1104 = (($1103) + 1)|0;\n     HEAP32[$560>>2] = $1104;\n     $1105 = HEAP32[$1069>>2]|0;\n     $1106 = (($1105) + ($1103)|0);\n     HEAP8[$1106>>0] = $1102;\n     $1107 = HEAP32[$1093>>2]|0;\n     $1108 = $1107 >>> 16;\n     $1109 = $1108&255;\n     $1110 = HEAP32[$560>>2]|0;\n     $1111 = (($1110) + 1)|0;\n     HEAP32[$560>>2] = $1111;\n     $1112 = HEAP32[$1069>>2]|0;\n     $1113 = (($1112) + ($1110)|0);\n     HEAP8[$1113>>0] = $1109;\n     $1114 = HEAP32[$1093>>2]|0;\n     $1115 = $1114 >>> 24;\n     $1116 = $1115&255;\n     $1117 = HEAP32[$560>>2]|0;\n     $1118 = (($1117) + 1)|0;\n     HEAP32[$560>>2] = $1118;\n     $1119 = HEAP32[$1069>>2]|0;\n     $1120 = (($1119) + ($1117)|0);\n     HEAP8[$1120>>0] = $1116;\n    } else {\n     $1121 = $1065 >>> 16;\n     $1122 = $1065 >>> 24;\n     $1123 = $1122&255;\n     $1124 = HEAP32[$560>>2]|0;\n     $1125 = (($1124) + 1)|0;\n     HEAP32[$560>>2] = $1125;\n     $1126 = ((($4)) + 8|0);\n     $1127 = HEAP32[$1126>>2]|0;\n     $1128 = (($1127) + ($1124)|0);\n     HEAP8[$1128>>0] = $1123;\n     $1129 = $1121&255;\n     $1130 = HEAP32[$560>>2]|0;\n     $1131 = (($1130) + 1)|0;\n     HEAP32[$560>>2] = $1131;\n     $1132 = HEAP32[$1126>>2]|0;\n     $1133 = (($1132) + ($1130)|0);\n     HEAP8[$1133>>0] = $1129;\n     $1134 = HEAP32[$1064>>2]|0;\n     $1135 = $1134 >>> 8;\n     $1136 = $1135&255;\n     $1137 = HEAP32[$560>>2]|0;\n     $1138 = (($1137) + 1)|0;\n     HEAP32[$560>>2] = $1138;\n     $1139 = HEAP32[$1126>>2]|0;\n     $1140 = (($1139) + ($1137)|0);\n     HEAP8[$1140>>0] = $1136;\n     $1141 = $1134&255;\n     $1142 = HEAP32[$560>>2]|0;\n     $1143 = (($1142) + 1)|0;\n     HEAP32[$560>>2] = $1143;\n     $1144 = HEAP32[$1126>>2]|0;\n     $1145 = (($1144) + ($1142)|0);\n     HEAP8[$1145>>0] = $1141;\n    }\n    $1146 = HEAP32[$3>>2]|0;\n    __tr_flush_bits($1146);\n    $1147 = ((($1146)) + 20|0);\n    $1148 = HEAP32[$1147>>2]|0;\n    $1149 = HEAP32[$22>>2]|0;\n    $1150 = ($1148>>>0)>($1149>>>0);\n    $$$i = $1150 ? $1149 : $1148;\n    $1151 = ($$$i|0)==(0);\n    if (!($1151)) {\n     $1152 = HEAP32[$8>>2]|0;\n     $1153 = ((($1146)) + 16|0);\n     $1154 = HEAP32[$1153>>2]|0;\n     _memcpy(($1152|0),($1154|0),($$$i|0))|0;\n     $1155 = HEAP32[$8>>2]|0;\n     $1156 = (($1155) + ($$$i)|0);\n     HEAP32[$8>>2] = $1156;\n     $1157 = HEAP32[$1153>>2]|0;\n     $1158 = (($1157) + ($$$i)|0);\n     HEAP32[$1153>>2] = $1158;\n     $1159 = ((($0)) + 20|0);\n     $1160 = HEAP32[$1159>>2]|0;\n     $1161 = (($1160) + ($$$i))|0;\n     HEAP32[$1159>>2] = $1161;\n     $1162 = HEAP32[$22>>2]|0;\n     $1163 = (($1162) - ($$$i))|0;\n     HEAP32[$22>>2] = $1163;\n     $1164 = HEAP32[$1147>>2]|0;\n     $1165 = (($1164) - ($$$i))|0;\n     HEAP32[$1147>>2] = $1165;\n     $1166 = ($1165|0)==(0);\n     if ($1166) {\n      $1167 = ((($1146)) + 8|0);\n      $1168 = HEAP32[$1167>>2]|0;\n      HEAP32[$1153>>2] = $1168;\n     }\n    }\n    $1169 = HEAP32[$1060>>2]|0;\n    $1170 = ($1169|0)>(0);\n    if ($1170) {\n     $1171 = (0 - ($1169))|0;\n     HEAP32[$1060>>2] = $1171;\n    }\n    $1172 = HEAP32[$560>>2]|0;\n    $not$ = ($1172|0)==(0);\n    $1173 = $not$&1;\n    $$1 = $1173;\n    return ($$1|0);\n   }\n  }\n } while(0);\n $20 = HEAP32[(9952)>>2]|0;\n $21 = ((($0)) + 24|0);\n HEAP32[$21>>2] = $20;\n $$1 = -2;\n return ($$1|0);\n}\nfunction _inflateReset($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $5 = ((($3)) + 40|0);\n HEAP32[$5>>2] = 0;\n $6 = ((($3)) + 44|0);\n HEAP32[$6>>2] = 0;\n $7 = ((($3)) + 48|0);\n HEAP32[$7>>2] = 0;\n $8 = ((($3)) + 28|0);\n HEAP32[$8>>2] = 0;\n $9 = ((($0)) + 20|0);\n HEAP32[$9>>2] = 0;\n $10 = ((($0)) + 8|0);\n HEAP32[$10>>2] = 0;\n $11 = ((($0)) + 24|0);\n HEAP32[$11>>2] = 0;\n $12 = ((($3)) + 8|0);\n $13 = HEAP32[$12>>2]|0;\n $14 = ($13|0)==(0);\n if (!($14)) {\n  $15 = $13 & 1;\n  $16 = ((($0)) + 48|0);\n  HEAP32[$16>>2] = $15;\n }\n HEAP32[$3>>2] = 0;\n $17 = ((($3)) + 4|0);\n HEAP32[$17>>2] = 0;\n $18 = ((($3)) + 12|0);\n HEAP32[$18>>2] = 0;\n $19 = ((($3)) + 20|0);\n HEAP32[$19>>2] = 32768;\n $20 = ((($3)) + 32|0);\n HEAP32[$20>>2] = 0;\n $21 = ((($3)) + 56|0);\n HEAP32[$21>>2] = 0;\n $22 = ((($3)) + 60|0);\n HEAP32[$22>>2] = 0;\n $23 = ((($3)) + 1328|0);\n $24 = ((($3)) + 108|0);\n HEAP32[$24>>2] = $23;\n $25 = ((($3)) + 80|0);\n HEAP32[$25>>2] = $23;\n $26 = ((($3)) + 76|0);\n HEAP32[$26>>2] = $23;\n $27 = ((($3)) + 7104|0);\n HEAP32[$27>>2] = 1;\n $28 = ((($3)) + 7108|0);\n HEAP32[$28>>2] = -1;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _inflateInit_($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$i = 0, $$phi$trans$insert5 = 0, $$pre = 0, $$pre$i = 0, $$pre30$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $or$cond$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1|0)==(0|0);\n if ($3) {\n  $$0$i = -6;\n  return ($$0$i|0);\n }\n $4 = HEAP8[$1>>0]|0;\n $5 = ($4<<24>>24)!=(49);\n $6 = ($2|0)!=(56);\n $or$cond$i = $6 | $5;\n if ($or$cond$i) {\n  $$0$i = -6;\n  return ($$0$i|0);\n }\n $7 = ($0|0)==(0|0);\n if ($7) {\n  $$0$i = -2;\n  return ($$0$i|0);\n }\n $8 = ((($0)) + 24|0);\n HEAP32[$8>>2] = 0;\n $9 = ((($0)) + 32|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ($10|0)==(0|0);\n if ($11) {\n  HEAP32[$9>>2] = 68;\n  $12 = ((($0)) + 40|0);\n  HEAP32[$12>>2] = 0;\n  $18 = 68;\n } else {\n  $18 = $10;\n }\n $13 = ((($0)) + 36|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = ($14|0)==(0|0);\n if ($15) {\n  HEAP32[$13>>2] = 69;\n }\n $16 = ((($0)) + 40|0);\n $17 = HEAP32[$16>>2]|0;\n $19 = (FUNCTION_TABLE_iiii[$18 & 127]($17,1,7116)|0);\n $20 = ($19|0)==(0|0);\n if ($20) {\n  $$0$i = -4;\n  return ($$0$i|0);\n }\n $21 = ((($0)) + 28|0);\n HEAP32[$21>>2] = $19;\n $22 = ((($19)) + 52|0);\n HEAP32[$22>>2] = 0;\n $23 = ((($19)) + 52|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ($24|0)==(0|0);\n $$pre30$i = ((($19)) + 36|0);\n do {\n  if ($25) {\n   label = 11;\n  } else {\n   $26 = HEAP32[$$pre30$i>>2]|0;\n   $27 = ($26|0)==(15);\n   if ($27) {\n    label = 11;\n   } else {\n    $29 = HEAP32[$13>>2]|0;\n    $30 = HEAP32[$16>>2]|0;\n    FUNCTION_TABLE_vii[$29 & 127]($30,$24);\n    HEAP32[$23>>2] = 0;\n    $$pre$i = HEAP32[$21>>2]|0;\n    $31 = ((($19)) + 8|0);\n    HEAP32[$31>>2] = 1;\n    HEAP32[$$pre30$i>>2] = 15;\n    $32 = ($$pre$i|0)==(0|0);\n    if (!($32)) {\n     $$phi$trans$insert5 = ((($$pre$i)) + 8|0);\n     $$pre = HEAP32[$$phi$trans$insert5>>2]|0;\n     $34 = $$pre$i;$40 = $$pre;\n     break;\n    }\n    $56 = HEAP32[$13>>2]|0;\n    $57 = HEAP32[$16>>2]|0;\n    FUNCTION_TABLE_vii[$56 & 127]($57,$19);\n    HEAP32[$21>>2] = 0;\n    $$0$i = -2;\n    return ($$0$i|0);\n   }\n  }\n } while(0);\n if ((label|0) == 11) {\n  $28 = ((($19)) + 8|0);\n  HEAP32[$28>>2] = 1;\n  HEAP32[$$pre30$i>>2] = 15;\n  $34 = $19;$40 = 1;\n }\n $33 = ((($34)) + 40|0);\n HEAP32[$33>>2] = 0;\n $35 = ((($34)) + 44|0);\n HEAP32[$35>>2] = 0;\n $36 = ((($34)) + 48|0);\n HEAP32[$36>>2] = 0;\n $37 = ((($34)) + 28|0);\n HEAP32[$37>>2] = 0;\n $38 = ((($0)) + 20|0);\n HEAP32[$38>>2] = 0;\n $39 = ((($0)) + 8|0);\n HEAP32[$39>>2] = 0;\n HEAP32[$8>>2] = 0;\n $41 = ($40|0)==(0);\n if (!($41)) {\n  $42 = $40 & 1;\n  $43 = ((($0)) + 48|0);\n  HEAP32[$43>>2] = $42;\n }\n HEAP32[$34>>2] = 0;\n $44 = ((($34)) + 4|0);\n HEAP32[$44>>2] = 0;\n $45 = ((($34)) + 12|0);\n HEAP32[$45>>2] = 0;\n $46 = ((($34)) + 20|0);\n HEAP32[$46>>2] = 32768;\n $47 = ((($34)) + 32|0);\n HEAP32[$47>>2] = 0;\n $48 = ((($34)) + 56|0);\n HEAP32[$48>>2] = 0;\n $49 = ((($34)) + 60|0);\n HEAP32[$49>>2] = 0;\n $50 = ((($34)) + 1328|0);\n $51 = ((($34)) + 108|0);\n HEAP32[$51>>2] = $50;\n $52 = ((($34)) + 80|0);\n HEAP32[$52>>2] = $50;\n $53 = ((($34)) + 76|0);\n HEAP32[$53>>2] = $50;\n $54 = ((($34)) + 7104|0);\n HEAP32[$54>>2] = 1;\n $55 = ((($34)) + 7108|0);\n HEAP32[$55>>2] = -1;\n $$0$i = 0;\n return ($$0$i|0);\n}\nfunction _inflate($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$$47980 = 0, $$$7914 = 0, $$$8 = 0, $$0 = 0, $$0$be = 0, $$01042$be = 0, $$01044 = 0, $$01044$be = 0, $$01102 = 0, $$0903 = 0, $$0904 = 0, $$0917 = 0, $$0917$be = 0, $$0922 = 0, $$0922$be = 0, $$0933 = 0, $$0933$be = 0, $$0987 = 0, $$0987$$8915 = 0, $$0987$be = 0;\n var $$0988 = 0, $$0988$be = 0, $$1$ph = 0, $$10 = 0, $$101054 = 0, $$10932 = 0, $$10943 = 0, $$10998 = 0, $$11 = 0, $$11043 = 0, $$11045$lcssa = 0, $$110451880 = 0, $$111055 = 0, $$11944 = 0, $$11999 = 0, $$12$lcssa = 0, $$121000 = 0, $$121056 = 0, $$121873 = 0, $$12945$lcssa = 0;\n var $$129451872 = 0, $$13 = 0, $$131001 = 0, $$131057 = 0, $$13946 = 0, $$141002 = 0, $$141058 = 0, $$141817 = 0, $$14947$lcssa = 0, $$149471816 = 0, $$15 = 0, $$151003 = 0, $$151059 = 0, $$15948 = 0, $$16 = 0, $$161004$lcssa = 0, $$1610041871 = 0, $$161060$lcssa = 0, $$1610601870 = 0, $$16949 = 0;\n var $$17 = 0, $$171005 = 0, $$171061 = 0, $$17950 = 0, $$18$lcssa = 0, $$181006$lcssa = 0, $$1810061815 = 0, $$181062$lcssa = 0, $$1810621814 = 0, $$18951$lcssa = 0, $$19$lcssa = 0, $$1905 = 0, $$1908 = 0, $$191007 = 0, $$191063 = 0, $$1918 = 0, $$191806 = 0, $$1923$lcssa = 0, $$19231883 = 0, $$1934$lcssa = 0;\n var $$19341882 = 0, $$1989$lcssa = 0, $$19891881 = 0, $$19952$lcssa = 0, $$199521805 = 0, $$2 = 0, $$20 = 0, $$201008 = 0, $$201064 = 0, $$20953 = 0, $$21 = 0, $$21046$lcssa = 0, $$210461833 = 0, $$211009 = 0, $$211065 = 0, $$21954 = 0, $$22$lcssa = 0, $$221010$lcssa = 0, $$221066$lcssa = 0, $$221607 = 0;\n var $$22955$lcssa = 0, $$229551606 = 0, $$23$lcssa = 0, $$23$ph2387 = 0, $$231011$lcssa = 0, $$2310111804 = 0, $$231067$lcssa = 0, $$2310671803 = 0, $$231627 = 0, $$23956$lcssa = 0, $$23956$ph2386 = 0, $$239561626 = 0, $$24$lcssa = 0, $$241012 = 0, $$241068 = 0, $$24957$lcssa = 0, $$25$be = 0, $$25$lcssa2391 = 0, $$25$ph = 0, $$251013 = 0;\n var $$251013$ = 0, $$251069 = 0, $$251692 = 0, $$25958$be = 0, $$25958$lcssa2390 = 0, $$25958$ph = 0, $$259581691 = 0, $$26$lcssa = 0, $$261014$lcssa = 0, $$2610141605 = 0, $$261070$lcssa = 0, $$2610701604 = 0, $$261645 = 0, $$26959$lcssa = 0, $$269591644 = 0, $$27$lcssa = 0, $$271015$lcssa = 0, $$271015$ph2385 = 0, $$2710151625 = 0, $$271071$lcssa = 0;\n var $$271071$ph2384 = 0, $$2710711624 = 0, $$271671 = 0, $$27960$lcssa = 0, $$279601670 = 0, $$28$lcssa = 0, $$281016$lcssa = 0, $$281072$lcssa = 0, $$281661 = 0, $$28961$lcssa = 0, $$289611660 = 0, $$29$lcssa = 0, $$2906 = 0, $$2909 = 0, $$291017$be = 0, $$291017$lcssa2389 = 0, $$291017$ph = 0, $$2910171690 = 0, $$291073$be = 0, $$291073$lcssa2388 = 0;\n var $$291073$ph = 0, $$2910731689 = 0, $$291681 = 0, $$2919 = 0, $$2924$lcssa = 0, $$29241836 = 0, $$29351835 = 0, $$2990$lcssa = 0, $$29901834 = 0, $$29962$lcssa = 0, $$299621680 = 0, $$3 = 0, $$30 = 0, $$301018$lcssa = 0, $$3010181643 = 0, $$301074$lcssa = 0, $$3010741642 = 0, $$30963 = 0, $$31047$lcssa = 0, $$310471843 = 0;\n var $$311019$lcssa = 0, $$3110191669 = 0, $$311075$lcssa = 0, $$3110751668 = 0, $$32 = 0, $$321020$lcssa = 0, $$3210201659 = 0, $$321076$lcssa = 0, $$3210761658 = 0, $$32965 = 0, $$33 = 0, $$331021$lcssa = 0, $$3310211679 = 0, $$331077$lcssa = 0, $$3310771678 = 0, $$33966 = 0, $$34$lcssa = 0, $$341022 = 0, $$341078 = 0, $$341709 = 0;\n var $$34967$lcssa = 0, $$349671708 = 0, $$35$lcssa = 0, $$351731 = 0, $$35968$lcssa = 0, $$359681730 = 0, $$36 = 0, $$361024 = 0, $$361080 = 0, $$36969 = 0, $$37 = 0, $$371025 = 0, $$371081 = 0, $$37970 = 0, $$38$lcssa = 0, $$381026$lcssa = 0, $$3810261707 = 0, $$381082$lcssa = 0, $$3810821706 = 0, $$381744 = 0;\n var $$38971$lcssa = 0, $$389711743 = 0, $$39 = 0, $$391027$lcssa = 0, $$3910271729 = 0, $$391083$lcssa = 0, $$3910831728 = 0, $$39251846 = 0, $$3936$lcssa = 0, $$39361845 = 0, $$3991$lcssa = 0, $$39911844 = 0, $$39972 = 0, $$4 = 0, $$40$lcssa = 0, $$40$ph = 0, $$401028 = 0, $$401084 = 0, $$401761 = 0, $$40973$lcssa = 0;\n var $$40973$ph = 0, $$409731760 = 0, $$41$lcssa = 0, $$41048$lcssa = 0, $$410481852 = 0, $$411029 = 0, $$411085 = 0, $$411782 = 0, $$41974$lcssa = 0, $$419741781 = 0, $$42 = 0, $$421030$lcssa = 0, $$4210301742 = 0, $$421086$lcssa = 0, $$4210861741 = 0, $$42975 = 0, $$43 = 0, $$431031 = 0, $$431087 = 0, $$43976 = 0;\n var $$44$lcssa = 0, $$441032$lcssa = 0, $$441032$ph = 0, $$4410321759 = 0, $$441088$lcssa = 0, $$441088$ph = 0, $$4410881758 = 0, $$441795 = 0, $$44977$lcssa = 0, $$449771794 = 0, $$45 = 0, $$451033$lcssa = 0, $$4510331780 = 0, $$451089$lcssa = 0, $$4510891779 = 0, $$45978 = 0, $$46 = 0, $$461034 = 0, $$461090 = 0, $$46979 = 0;\n var $$47$lcssa = 0, $$471035 = 0, $$471091 = 0, $$471590 = 0, $$47980$lcssa = 0, $$479801589 = 0, $$48 = 0, $$481036$lcssa = 0, $$4810361793 = 0, $$481092$lcssa = 0, $$4810921792 = 0, $$48981 = 0, $$49 = 0, $$491037 = 0, $$491093 = 0, $$4911 = 0, $$4921 = 0, $$49261855 = 0, $$4937$lcssa = 0, $$49371854 = 0;\n var $$4992$lcssa = 0, $$49921853 = 0, $$49982 = 0, $$5$ph = 0, $$50$lcssa = 0, $$501038 = 0, $$501094 = 0, $$501597 = 0, $$50983$lcssa = 0, $$509831596 = 0, $$51 = 0, $$51049 = 0, $$511039$lcssa = 0, $$5110391588 = 0, $$511095$lcssa = 0, $$5110951587 = 0, $$51984 = 0, $$521040 = 0, $$521096 = 0, $$53 = 0;\n var $$53$ph = 0, $$531041 = 0, $$531097 = 0, $$53986 = 0, $$53986$ph = 0, $$54$lcssa = 0, $$541098$lcssa = 0, $$5410981594 = 0, $$541595 = 0, $$55 = 0, $$551099 = 0, $$57 = 0, $$57$ph = 0, $$571101 = 0, $$571101$ph = 0, $$5912 = 0, $$5927 = 0, $$5938 = 0, $$5993 = 0, $$6 = 0;\n var $$61050$lcssa = 0, $$610501861 = 0, $$69281864 = 0, $$6939$lcssa = 0, $$69391863 = 0, $$6994$lcssa = 0, $$69941862 = 0, $$7 = 0, $$71051 = 0, $$7914 = 0, $$7929 = 0, $$7940 = 0, $$7995 = 0, $$8 = 0, $$8$ph = 0, $$81052 = 0, $$8915 = 0, $$8930 = 0, $$8941 = 0, $$8996 = 0;\n var $$8996$ = 0, $$91053 = 0, $$9931 = 0, $$9942 = 0, $$9997 = 0, $$lcssa = 0, $$lcssa1183 = 0, $$lcssa1242 = 0, $$lcssa1256 = 0, $$lcssa1268 = 0, $$lcssa1282 = 0, $$off = 0, $$ph = 0, $$pn = 0, $$pn2373 = 0, $$pn2375 = 0, $$pr1107$pre = 0, $$pre = 0, $$pre2353 = 0, $$pre2354 = 0;\n var $$pre2355 = 0, $$pre2356 = 0, $$pre2358 = 0, $$pre2361 = 0, $$pre2363 = 0, $$pre2365 = 0, $$pre2367 = 0, $$pre2368 = 0, $$pre2370 = 0, $$pre2371 = 0, $$sroa$057$0 = 0, $$sroa$057$0$$sroa_idx = 0, $$sroa$057$0$$sroa_idx70 = 0, $$sroa$057$0$copyload = 0, $$sroa$057$0$copyload67$lcssa = 0, $$sroa$057$0$copyload67$lcssa$in = 0, $$sroa$057$0$copyload69$lcssa = 0, $$sroa$057$0$copyload69$lcssa$in = 0, $$sroa$057$0$copyload71 = 0, $$sroa$057$1 = 0;\n var $$sroa$1874$0 = 0, $$sroa$1874$0$$sroa_idx = 0, $$sroa$1874$0$$sroa_idx1777 = 0, $$sroa$1874$0$$sroa_idx75 = 0, $$sroa$1874$0$$sroa_idx751754 = 0, $$sroa$1874$0$$sroa_idx77 = 0, $$sroa$1874$0$$sroa_idx771702 = 0, $$sroa$1874$0$$sroa_idx79 = 0, $$sroa$1874$0$$sroa_idx791726 = 0, $$sroa$1874$0$$sroa_idx81 = 0, $$sroa$1874$0$$sroa_idx811637 = 0, $$sroa$1874$0$copyload = 0, $$sroa$1874$0$copyload$lcssa = 0, $$sroa$1874$0$copyload1778 = 0, $$sroa$1874$0$copyload76 = 0, $$sroa$1874$0$copyload76$lcssa = 0, $$sroa$1874$0$copyload761755 = 0, $$sroa$1874$0$copyload78 = 0, $$sroa$1874$0$copyload78$lcssa = 0, $$sroa$1874$0$copyload781703 = 0;\n var $$sroa$1874$0$copyload80 = 0, $$sroa$1874$0$copyload80$lcssa = 0, $$sroa$1874$0$copyload801727 = 0, $$sroa$1874$0$copyload82 = 0, $$sroa$1874$0$copyload821638 = 0, $$sroa$1874$1 = 0, $$sroa$42$0 = 0, $$sroa$42$0$$sroa_idx104 = 0, $$sroa$42$0$$sroa_idx110 = 0, $$sroa$42$0$copyload = 0, $$sroa$42$0$copyload107$lcssa = 0, $$sroa$42$0$copyload107$lcssa$in = 0, $$sroa$42$0$copyload109$lcssa = 0, $$sroa$42$0$copyload109$lcssa$in = 0, $$sroa$42$0$copyload111 = 0, $$sroa$42$0$copyload113$lcssa = 0, $$sroa$42$0$copyload113$lcssa$in = 0, $$sroa$42$1 = 0, $10 = 0, $100 = 0;\n var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;\n var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;\n var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;\n var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;\n var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;\n var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;\n var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;\n var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;\n var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;\n var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;\n var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;\n var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;\n var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;\n var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;\n var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;\n var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;\n var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;\n var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;\n var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;\n var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;\n var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;\n var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;\n var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;\n var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;\n var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;\n var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;\n var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;\n var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;\n var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;\n var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;\n var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;\n var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;\n var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;\n var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;\n var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;\n var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;\n var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;\n var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;\n var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;\n var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;\n var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;\n var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;\n var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;\n var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $or$cond = 0, $or$cond10 = 0, $or$cond1103 = 0, $or$cond1104 = 0, $or$cond1106 = 0, $or$cond14 = 0, $or$cond16 = 0, $or$cond2826 = 0, $or$cond6 = 0, $or$cond8 = 0, $trunc = 0;\n var $trunc$clear = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = ($0|0)==(0|0);\n if ($3) {\n  $$01102 = -2;\n  STACKTOP = sp;return ($$01102|0);\n }\n $4 = ((($0)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $$01102 = -2;\n  STACKTOP = sp;return ($$01102|0);\n }\n $7 = ((($0)) + 12|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ($8|0)==(0|0);\n if ($9) {\n  $$01102 = -2;\n  STACKTOP = sp;return ($$01102|0);\n }\n $10 = HEAP32[$0>>2]|0;\n $11 = ($10|0)==(0|0);\n if ($11) {\n  $12 = ((($0)) + 4|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = ($13|0)==(0);\n  if (!($14)) {\n   $$01102 = -2;\n   STACKTOP = sp;return ($$01102|0);\n  }\n }\n $15 = HEAP32[$5>>2]|0;\n $16 = ($15|0)==(11);\n if ($16) {\n  HEAP32[$5>>2] = 12;\n  $870 = 12;\n } else {\n  $870 = $15;\n }\n $17 = ((($0)) + 16|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ((($0)) + 4|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = ((($5)) + 56|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ((($5)) + 60|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ((($5)) + 8|0);\n $26 = ((($5)) + 24|0);\n $27 = ((($2)) + 1|0);\n $28 = ((($5)) + 16|0);\n $29 = ((($5)) + 32|0);\n $30 = ((($0)) + 24|0);\n $31 = ((($5)) + 36|0);\n $32 = ((($5)) + 20|0);\n $33 = ((($0)) + 48|0);\n $34 = ((($5)) + 64|0);\n $35 = ((($5)) + 12|0);\n $$off = (($1) + -5)|0;\n $36 = ($$off>>>0)<(2);\n $37 = ((($5)) + 4|0);\n $38 = ((($5)) + 76|0);\n $39 = ((($5)) + 84|0);\n $40 = ((($5)) + 80|0);\n $41 = ((($5)) + 88|0);\n $42 = ($1|0)==(6);\n $43 = ((($5)) + 7108|0);\n $44 = ((($5)) + 72|0);\n $45 = ((($5)) + 7112|0);\n $46 = ((($5)) + 68|0);\n $47 = ((($5)) + 44|0);\n $48 = ((($5)) + 7104|0);\n $49 = ((($5)) + 48|0);\n $50 = ((($5)) + 52|0);\n $51 = ((($5)) + 40|0);\n $52 = ((($0)) + 20|0);\n $53 = ((($5)) + 28|0);\n $54 = ((($2)) + 2|0);\n $55 = ((($2)) + 3|0);\n $56 = ((($5)) + 104|0);\n $57 = ((($5)) + 96|0);\n $58 = ((($5)) + 100|0);\n $59 = ((($5)) + 624|0);\n $60 = ((($5)) + 1328|0);\n $61 = ((($5)) + 108|0);\n $62 = ((($5)) + 112|0);\n $63 = ((($5)) + 752|0);\n $64 = ((($5)) + 92|0);\n $$0 = 0;$$01044 = $10;$$0917 = $18;$$0922 = $24;$$0933 = $22;$$0987 = $18;$$0988 = $20;$338 = $8;$65 = $870;\n L17: while(1) {\n  L19: do {\n   switch ($65|0) {\n   case 28:  {\n    $$53$ph = $$0922;$$53986$ph = $$0933;$$57$ph = $$0988;$$571101$ph = $$01044;$$8$ph = 1;$$ph = $$0987;\n    label = 282;\n    break L17;\n    break;\n   }\n   case 29:  {\n    $$4921 = $$0917;$$53 = $$0922;$$53986 = $$0933;$$57 = $$0988;$$571101 = $$01044;$$8 = -3;$817 = $$0987;\n    break L17;\n    break;\n   }\n   case 30:  {\n    label = 296;\n    break L17;\n    break;\n   }\n   case 0:  {\n    $69 = HEAP32[$25>>2]|0;\n    $70 = ($69|0)==(0);\n    if ($70) {\n     HEAP32[$5>>2] = 12;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$01044;$$0917$be = $$0917;$$0922$be = $$0922;$$0933$be = $$0933;$$0987$be = $$0987;$$0988$be = $$0988;\n     break L19;\n    }\n    $71 = ($$0922>>>0)<(16);\n    if ($71) {\n     $$110451880 = $$01044;$$19231883 = $$0922;$$19341882 = $$0933;$$19891881 = $$0988;\n     while(1) {\n      $72 = ($$19891881|0)==(0);\n      if ($72) {\n       $$4921 = $$0917;$$53 = $$19231883;$$53986 = $$19341882;$$57 = 0;$$571101 = $$110451880;$$8 = $$0;$817 = $$0987;\n       break L17;\n      }\n      $73 = (($$19891881) + -1)|0;\n      $74 = ((($$110451880)) + 1|0);\n      $75 = HEAP8[$$110451880>>0]|0;\n      $76 = $75&255;\n      $77 = $76 << $$19231883;\n      $78 = (($77) + ($$19341882))|0;\n      $79 = (($$19231883) + 8)|0;\n      $80 = ($79>>>0)<(16);\n      if ($80) {\n       $$110451880 = $74;$$19231883 = $79;$$19341882 = $78;$$19891881 = $73;\n      } else {\n       $$11045$lcssa = $74;$$1923$lcssa = $79;$$1934$lcssa = $78;$$1989$lcssa = $73;\n       break;\n      }\n     }\n    } else {\n     $$11045$lcssa = $$01044;$$1923$lcssa = $$0922;$$1934$lcssa = $$0933;$$1989$lcssa = $$0988;\n    }\n    $81 = $69 & 2;\n    $82 = ($81|0)!=(0);\n    $83 = ($$1934$lcssa|0)==(35615);\n    $or$cond = $83 & $82;\n    if ($or$cond) {\n     $84 = (_crc32(0,0,0)|0);\n     HEAP32[$26>>2] = $84;\n     HEAP8[$2>>0] = 31;\n     HEAP8[$27>>0] = -117;\n     $85 = (_crc32($84,$2,2)|0);\n     HEAP32[$26>>2] = $85;\n     HEAP32[$5>>2] = 1;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$11045$lcssa;$$0917$be = $$0917;$$0922$be = 0;$$0933$be = 0;$$0987$be = $$0987;$$0988$be = $$1989$lcssa;\n     break L19;\n    }\n    HEAP32[$28>>2] = 0;\n    $86 = HEAP32[$29>>2]|0;\n    $87 = ($86|0)==(0|0);\n    if (!($87)) {\n     $88 = ((($86)) + 48|0);\n     HEAP32[$88>>2] = -1;\n    }\n    $89 = $69 & 1;\n    $90 = ($89|0)==(0);\n    if (!($90)) {\n     $91 = $$1934$lcssa << 8;\n     $92 = $91 & 65280;\n     $93 = $$1934$lcssa >>> 8;\n     $94 = (($92) + ($93))|0;\n     $95 = (($94>>>0) % 31)&-1;\n     $96 = ($95|0)==(0);\n     if ($96) {\n      $97 = $$1934$lcssa & 15;\n      $98 = ($97|0)==(8);\n      if (!($98)) {\n       HEAP32[$30>>2] = 27209;\n       HEAP32[$5>>2] = 29;\n       $$0$be = $$0;$$01042$be = $338;$$01044$be = $$11045$lcssa;$$0917$be = $$0917;$$0922$be = $$1923$lcssa;$$0933$be = $$1934$lcssa;$$0987$be = $$0987;$$0988$be = $$1989$lcssa;\n       break L19;\n      }\n      $99 = $$1934$lcssa >>> 4;\n      $100 = (($$1923$lcssa) + -4)|0;\n      $101 = $99 & 15;\n      $102 = (($101) + 8)|0;\n      $103 = HEAP32[$31>>2]|0;\n      $104 = ($103|0)==(0);\n      if ($104) {\n       HEAP32[$31>>2] = $102;\n      } else {\n       $105 = ($102>>>0)>($103>>>0);\n       if ($105) {\n        HEAP32[$30>>2] = 27236;\n        HEAP32[$5>>2] = 29;\n        $$0$be = $$0;$$01042$be = $338;$$01044$be = $$11045$lcssa;$$0917$be = $$0917;$$0922$be = $100;$$0933$be = $99;$$0987$be = $$0987;$$0988$be = $$1989$lcssa;\n        break L19;\n       }\n      }\n      $106 = 1 << $102;\n      HEAP32[$32>>2] = $106;\n      $107 = (_adler32(0,0,0)|0);\n      HEAP32[$26>>2] = $107;\n      HEAP32[$33>>2] = $107;\n      $108 = $$1934$lcssa >>> 12;\n      $109 = $108 & 2;\n      $110 = $109 ^ 11;\n      HEAP32[$5>>2] = $110;\n      $$0$be = $$0;$$01042$be = $338;$$01044$be = $$11045$lcssa;$$0917$be = $$0917;$$0922$be = 0;$$0933$be = 0;$$0987$be = $$0987;$$0988$be = $$1989$lcssa;\n      break L19;\n     }\n    }\n    HEAP32[$30>>2] = 27186;\n    HEAP32[$5>>2] = 29;\n    $$0$be = $$0;$$01042$be = $338;$$01044$be = $$11045$lcssa;$$0917$be = $$0917;$$0922$be = $$1923$lcssa;$$0933$be = $$1934$lcssa;$$0987$be = $$0987;$$0988$be = $$1989$lcssa;\n    break;\n   }\n   case 1:  {\n    $68 = ($$0922>>>0)<(16);\n    if ($68) {\n     $$210461833 = $$01044;$$29241836 = $$0922;$$29351835 = $$0933;$$29901834 = $$0988;\n     while(1) {\n      $111 = ($$29901834|0)==(0);\n      if ($111) {\n       $$4921 = $$0917;$$53 = $$29241836;$$53986 = $$29351835;$$57 = 0;$$571101 = $$210461833;$$8 = $$0;$817 = $$0987;\n       break L17;\n      }\n      $112 = (($$29901834) + -1)|0;\n      $113 = ((($$210461833)) + 1|0);\n      $114 = HEAP8[$$210461833>>0]|0;\n      $115 = $114&255;\n      $116 = $115 << $$29241836;\n      $117 = (($116) + ($$29351835))|0;\n      $118 = (($$29241836) + 8)|0;\n      $119 = ($118>>>0)<(16);\n      if ($119) {\n       $$210461833 = $113;$$29241836 = $118;$$29351835 = $117;$$29901834 = $112;\n      } else {\n       $$21046$lcssa = $113;$$2924$lcssa = $118;$$2990$lcssa = $112;$120 = $117;\n       break;\n      }\n     }\n    } else {\n     $$21046$lcssa = $$01044;$$2924$lcssa = $$0922;$$2990$lcssa = $$0988;$120 = $$0933;\n    }\n    HEAP32[$28>>2] = $120;\n    $121 = $120 & 255;\n    $122 = ($121|0)==(8);\n    if (!($122)) {\n     HEAP32[$30>>2] = 27209;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$21046$lcssa;$$0917$be = $$0917;$$0922$be = $$2924$lcssa;$$0933$be = $120;$$0987$be = $$0987;$$0988$be = $$2990$lcssa;\n     break L19;\n    }\n    $123 = $120 & 57344;\n    $124 = ($123|0)==(0);\n    if (!($124)) {\n     HEAP32[$30>>2] = 27256;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$21046$lcssa;$$0917$be = $$0917;$$0922$be = $$2924$lcssa;$$0933$be = $120;$$0987$be = $$0987;$$0988$be = $$2990$lcssa;\n     break L19;\n    }\n    $125 = HEAP32[$29>>2]|0;\n    $126 = ($125|0)==(0|0);\n    if (!($126)) {\n     $127 = $120 >>> 8;\n     $128 = $127 & 1;\n     HEAP32[$125>>2] = $128;\n    }\n    $129 = $120 & 512;\n    $130 = ($129|0)==(0);\n    if (!($130)) {\n     $131 = $120&255;\n     HEAP8[$2>>0] = $131;\n     $132 = $120 >>> 8;\n     $133 = $132&255;\n     HEAP8[$27>>0] = $133;\n     $134 = HEAP32[$26>>2]|0;\n     $135 = (_crc32($134,$2,2)|0);\n     HEAP32[$26>>2] = $135;\n    }\n    HEAP32[$5>>2] = 2;\n    $$310471843 = $$21046$lcssa;$$39251846 = 0;$$39361845 = 0;$$39911844 = $$2990$lcssa;\n    label = 47;\n    break;\n   }\n   case 2:  {\n    $136 = ($$0922>>>0)<(32);\n    if ($136) {\n     $$310471843 = $$01044;$$39251846 = $$0922;$$39361845 = $$0933;$$39911844 = $$0988;\n     label = 47;\n    } else {\n     $$31047$lcssa = $$01044;$$3936$lcssa = $$0933;$$3991$lcssa = $$0988;\n     label = 49;\n    }\n    break;\n   }\n   case 3:  {\n    $161 = ($$0922>>>0)<(16);\n    if ($161) {\n     $$410481852 = $$01044;$$49261855 = $$0922;$$49371854 = $$0933;$$49921853 = $$0988;\n     label = 55;\n    } else {\n     $$41048$lcssa = $$01044;$$4937$lcssa = $$0933;$$4992$lcssa = $$0988;\n     label = 57;\n    }\n    break;\n   }\n   case 4:  {\n    $$51049 = $$01044;$$5927 = $$0922;$$5938 = $$0933;$$5993 = $$0988;\n    label = 62;\n    break;\n   }\n   case 5:  {\n    $$81052 = $$01044;$$8930 = $$0922;$$8941 = $$0933;$$8996 = $$0988;\n    label = 73;\n    break;\n   }\n   case 6:  {\n    $$111055 = $$01044;$$11999 = $$0988;$$9931 = $$0922;$$9942 = $$0933;\n    label = 83;\n    break;\n   }\n   case 7:  {\n    $$10932 = $$0922;$$10943 = $$0933;$$131001 = $$0988;$$131057 = $$01044;\n    label = 96;\n    break;\n   }\n   case 8:  {\n    $$11 = $$0922;$$11944 = $$0933;$$151003 = $$0988;$$151059 = $$01044;\n    label = 109;\n    break;\n   }\n   case 9:  {\n    $67 = ($$0922>>>0)<(32);\n    if ($67) {\n     $$141817 = $$0922;$$149471816 = $$0933;$$1810061815 = $$0988;$$1810621814 = $$01044;\n     while(1) {\n      $326 = ($$1810061815|0)==(0);\n      if ($326) {\n       $$4921 = $$0917;$$53 = $$141817;$$53986 = $$149471816;$$57 = 0;$$571101 = $$1810621814;$$8 = $$0;$817 = $$0987;\n       break L17;\n      }\n      $327 = (($$1810061815) + -1)|0;\n      $328 = ((($$1810621814)) + 1|0);\n      $329 = HEAP8[$$1810621814>>0]|0;\n      $330 = $329&255;\n      $331 = $330 << $$141817;\n      $332 = (($331) + ($$149471816))|0;\n      $333 = (($$141817) + 8)|0;\n      $334 = ($333>>>0)<(32);\n      if ($334) {\n       $$141817 = $333;$$149471816 = $332;$$1810061815 = $327;$$1810621814 = $328;\n      } else {\n       $$14947$lcssa = $332;$$181006$lcssa = $327;$$181062$lcssa = $328;\n       break;\n      }\n     }\n    } else {\n     $$14947$lcssa = $$0933;$$181006$lcssa = $$0988;$$181062$lcssa = $$01044;\n    }\n    $335 = (_llvm_bswap_i32(($$14947$lcssa|0))|0);\n    HEAP32[$26>>2] = $335;\n    HEAP32[$33>>2] = $335;\n    HEAP32[$5>>2] = 10;\n    $$15 = 0;$$15948 = 0;$$191007 = $$181006$lcssa;$$191063 = $$181062$lcssa;\n    label = 121;\n    break;\n   }\n   case 10:  {\n    $$15 = $$0922;$$15948 = $$0933;$$191007 = $$0988;$$191063 = $$01044;\n    label = 121;\n    break;\n   }\n   case 11:  {\n    $$16 = $$0922;$$16949 = $$0933;$$201008 = $$0988;$$201064 = $$01044;\n    label = 124;\n    break;\n   }\n   case 12:  {\n    $$17 = $$0922;$$17950 = $$0933;$$211009 = $$0988;$$211065 = $$01044;\n    label = 125;\n    break;\n   }\n   case 13:  {\n    $360 = $$0922 & 7;\n    $361 = $$0933 >>> $360;\n    $362 = (($$0922) - ($360))|0;\n    $363 = ($362>>>0)<(32);\n    if ($363) {\n     $$191806 = $362;$$199521805 = $361;$$2310111804 = $$0988;$$2310671803 = $$01044;\n     while(1) {\n      $364 = ($$2310111804|0)==(0);\n      if ($364) {\n       $$4921 = $$0917;$$53 = $$191806;$$53986 = $$199521805;$$57 = 0;$$571101 = $$2310671803;$$8 = $$0;$817 = $$0987;\n       break L17;\n      }\n      $365 = (($$2310111804) + -1)|0;\n      $366 = ((($$2310671803)) + 1|0);\n      $367 = HEAP8[$$2310671803>>0]|0;\n      $368 = $367&255;\n      $369 = $368 << $$191806;\n      $370 = (($369) + ($$199521805))|0;\n      $371 = (($$191806) + 8)|0;\n      $372 = ($371>>>0)<(32);\n      if ($372) {\n       $$191806 = $371;$$199521805 = $370;$$2310111804 = $365;$$2310671803 = $366;\n      } else {\n       $$19$lcssa = $371;$$19952$lcssa = $370;$$231011$lcssa = $365;$$231067$lcssa = $366;\n       break;\n      }\n     }\n    } else {\n     $$19$lcssa = $362;$$19952$lcssa = $361;$$231011$lcssa = $$0988;$$231067$lcssa = $$01044;\n    }\n    $373 = $$19952$lcssa & 65535;\n    $374 = $$19952$lcssa >>> 16;\n    $375 = $374 ^ 65535;\n    $376 = ($373|0)==($375|0);\n    if ($376) {\n     HEAP32[$34>>2] = $373;\n     HEAP32[$5>>2] = 14;\n     if ($42) {\n      $$53$ph = 0;$$53986$ph = 0;$$57$ph = $$231011$lcssa;$$571101$ph = $$231067$lcssa;$$8$ph = $$0;$$ph = $$0987;\n      label = 282;\n      break L17;\n     } else {\n      $$20 = 0;$$20953 = 0;$$241012 = $$231011$lcssa;$$241068 = $$231067$lcssa;\n      label = 144;\n      break L19;\n     }\n    } else {\n     HEAP32[$30>>2] = 27320;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$231067$lcssa;$$0917$be = $$0917;$$0922$be = $$19$lcssa;$$0933$be = $$19952$lcssa;$$0987$be = $$0987;$$0988$be = $$231011$lcssa;\n     break L19;\n    }\n    break;\n   }\n   case 14:  {\n    $$20 = $$0922;$$20953 = $$0933;$$241012 = $$0988;$$241068 = $$01044;\n    label = 144;\n    break;\n   }\n   case 15:  {\n    $$21 = $$0922;$$21954 = $$0933;$$251013 = $$0988;$$251069 = $$01044;\n    label = 145;\n    break;\n   }\n   case 16:  {\n    $66 = ($$0922>>>0)<(14);\n    if ($66) {\n     $$221607 = $$0922;$$229551606 = $$0933;$$2610141605 = $$0988;$$2610701604 = $$01044;\n     while(1) {\n      $388 = ($$2610141605|0)==(0);\n      if ($388) {\n       $$4921 = $$0917;$$53 = $$221607;$$53986 = $$229551606;$$57 = 0;$$571101 = $$2610701604;$$8 = $$0;$817 = $$0987;\n       break L17;\n      }\n      $389 = (($$2610141605) + -1)|0;\n      $390 = ((($$2610701604)) + 1|0);\n      $391 = HEAP8[$$2610701604>>0]|0;\n      $392 = $391&255;\n      $393 = $392 << $$221607;\n      $394 = (($393) + ($$229551606))|0;\n      $395 = (($$221607) + 8)|0;\n      $396 = ($395>>>0)<(14);\n      if ($396) {\n       $$221607 = $395;$$229551606 = $394;$$2610141605 = $389;$$2610701604 = $390;\n      } else {\n       $$22$lcssa = $395;$$22955$lcssa = $394;$$261014$lcssa = $389;$$261070$lcssa = $390;\n       break;\n      }\n     }\n    } else {\n     $$22$lcssa = $$0922;$$22955$lcssa = $$0933;$$261014$lcssa = $$0988;$$261070$lcssa = $$01044;\n    }\n    $397 = $$22955$lcssa & 31;\n    $398 = (($397) + 257)|0;\n    HEAP32[$57>>2] = $398;\n    $399 = $$22955$lcssa >>> 5;\n    $400 = $399 & 31;\n    $401 = (($400) + 1)|0;\n    HEAP32[$58>>2] = $401;\n    $402 = $$22955$lcssa >>> 10;\n    $403 = $402 & 15;\n    $404 = (($403) + 4)|0;\n    HEAP32[$64>>2] = $404;\n    $405 = $$22955$lcssa >>> 14;\n    $406 = (($$22$lcssa) + -14)|0;\n    $407 = ($398>>>0)>(286);\n    $408 = ($401>>>0)>(30);\n    $or$cond2826 = $407 | $408;\n    if ($or$cond2826) {\n     HEAP32[$30>>2] = 27349;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$261070$lcssa;$$0917$be = $$0917;$$0922$be = $406;$$0933$be = $405;$$0987$be = $$0987;$$0988$be = $$261014$lcssa;\n     break L19;\n    } else {\n     HEAP32[$56>>2] = 0;\n     HEAP32[$5>>2] = 17;\n     $$23$ph2387 = $406;$$23956$ph2386 = $405;$$271015$ph2385 = $$261014$lcssa;$$271071$ph2384 = $$261070$lcssa;$431 = $404;$871 = 0;\n     label = 155;\n     break L19;\n    }\n    break;\n   }\n   case 17:  {\n    $$pre2354 = HEAP32[$56>>2]|0;\n    $$pre2355 = HEAP32[$64>>2]|0;\n    $409 = ($$pre2354>>>0)<($$pre2355>>>0);\n    if ($409) {\n     $$23$ph2387 = $$0922;$$23956$ph2386 = $$0933;$$271015$ph2385 = $$0988;$$271071$ph2384 = $$01044;$431 = $$pre2355;$871 = $$pre2354;\n     label = 155;\n    } else {\n     $$23$lcssa = $$0922;$$23956$lcssa = $$0933;$$271015$lcssa = $$0988;$$271071$lcssa = $$01044;$$lcssa = $$pre2354;\n     label = 156;\n    }\n    break;\n   }\n   case 18:  {\n    $$pre2356 = HEAP32[$56>>2]|0;\n    $$1$ph = $$0;$$25$ph = $$0922;$$25958$ph = $$0933;$$291017$ph = $$0988;$$291073$ph = $$01044;$443 = $$pre2356;\n    label = 166;\n    break;\n   }\n   case 19:  {\n    $$2 = $$0;$$32 = $$0922;$$32965 = $$0933;$$361024 = $$0988;$$361080 = $$01044;\n    label = 200;\n    break;\n   }\n   case 20:  {\n    $$3 = $$0;$$33 = $$0922;$$33966 = $$0933;$$371025 = $$0988;$$371081 = $$01044;\n    label = 201;\n    break;\n   }\n   case 21:  {\n    $$pre2361 = HEAP32[$44>>2]|0;\n    $$37 = $$0922;$$37970 = $$0933;$$4 = $$0;$$411029 = $$0988;$$411085 = $$01044;$628 = $$pre2361;\n    label = 219;\n    break;\n   }\n   case 22:  {\n    $$40$ph = $$0922;$$40973$ph = $$0933;$$441032$ph = $$0988;$$441088$ph = $$01044;$$5$ph = $$0;\n    label = 226;\n    break;\n   }\n   case 23:  {\n    $$pre2367 = HEAP32[$44>>2]|0;\n    $$43 = $$0922;$$43976 = $$0933;$$471035 = $$0988;$$471091 = $$01044;$$6 = $$0;$709 = $$pre2367;\n    label = 238;\n    break;\n   }\n   case 24:  {\n    $$46 = $$0922;$$46979 = $$0933;$$501038 = $$0988;$$501094 = $$01044;$$7 = $$0;\n    label = 244;\n    break;\n   }\n   case 25:  {\n    $765 = ($$0987|0)==(0);\n    if ($765) {\n     $$53$ph = $$0922;$$53986$ph = $$0933;$$57$ph = $$0988;$$571101$ph = $$01044;$$8$ph = $$0;$$ph = 0;\n     label = 282;\n     break L17;\n    }\n    $766 = HEAP32[$34>>2]|0;\n    $767 = $766&255;\n    $768 = ((($338)) + 1|0);\n    HEAP8[$338>>0] = $767;\n    $769 = (($$0987) + -1)|0;\n    HEAP32[$5>>2] = 20;\n    $$0$be = $$0;$$01042$be = $768;$$01044$be = $$01044;$$0917$be = $$0917;$$0922$be = $$0922;$$0933$be = $$0933;$$0987$be = $769;$$0988$be = $$0988;\n    break;\n   }\n   case 26:  {\n    $770 = HEAP32[$25>>2]|0;\n    $771 = ($770|0)==(0);\n    if ($771) {\n     $$1918 = $$0917;$$48 = $$0922;$$48981 = $$0933;$$521040 = $$0988;$$521096 = $$01044;\n    } else {\n     $772 = ($$0922>>>0)<(32);\n     if ($772) {\n      $$471590 = $$0922;$$479801589 = $$0933;$$5110391588 = $$0988;$$5110951587 = $$01044;\n      while(1) {\n       $773 = ($$5110391588|0)==(0);\n       if ($773) {\n        $$4921 = $$0917;$$53 = $$471590;$$53986 = $$479801589;$$57 = 0;$$571101 = $$5110951587;$$8 = $$0;$817 = $$0987;\n        break L17;\n       }\n       $774 = (($$5110391588) + -1)|0;\n       $775 = ((($$5110951587)) + 1|0);\n       $776 = HEAP8[$$5110951587>>0]|0;\n       $777 = $776&255;\n       $778 = $777 << $$471590;\n       $779 = (($778) + ($$479801589))|0;\n       $780 = (($$471590) + 8)|0;\n       $781 = ($780>>>0)<(32);\n       if ($781) {\n        $$471590 = $780;$$479801589 = $779;$$5110391588 = $774;$$5110951587 = $775;\n       } else {\n        $$47$lcssa = $780;$$47980$lcssa = $779;$$511039$lcssa = $774;$$511095$lcssa = $775;\n        break;\n       }\n      }\n     } else {\n      $$47$lcssa = $$0922;$$47980$lcssa = $$0933;$$511039$lcssa = $$0988;$$511095$lcssa = $$01044;\n     }\n     $782 = (($$0917) - ($$0987))|0;\n     $783 = HEAP32[$52>>2]|0;\n     $784 = (($783) + ($782))|0;\n     HEAP32[$52>>2] = $784;\n     $785 = HEAP32[$53>>2]|0;\n     $786 = (($785) + ($782))|0;\n     HEAP32[$53>>2] = $786;\n     $787 = ($782|0)==(0);\n     if ($787) {\n      $$pre2353 = HEAP32[$26>>2]|0;\n      $800 = $$pre2353;\n     } else {\n      $788 = HEAP32[$28>>2]|0;\n      $789 = ($788|0)==(0);\n      $790 = HEAP32[$26>>2]|0;\n      $791 = (0 - ($782))|0;\n      $792 = (($338) + ($791)|0);\n      if ($789) {\n       $794 = (_adler32($790,$792,$782)|0);\n       $795 = $794;\n      } else {\n       $793 = (_crc32($790,$792,$782)|0);\n       $795 = $793;\n      }\n      HEAP32[$26>>2] = $795;\n      HEAP32[$33>>2] = $795;\n      $800 = $795;\n     }\n     $796 = HEAP32[$28>>2]|0;\n     $797 = ($796|0)==(0);\n     $798 = (_llvm_bswap_i32(($$47980$lcssa|0))|0);\n     $$$47980 = $797 ? $798 : $$47980$lcssa;\n     $799 = ($$$47980|0)==($800|0);\n     if ($799) {\n      $$1918 = $$0987;$$48 = 0;$$48981 = 0;$$521040 = $$511039$lcssa;$$521096 = $$511095$lcssa;\n     } else {\n      HEAP32[$30>>2] = 27523;\n      HEAP32[$5>>2] = 29;\n      $$0$be = $$0;$$01042$be = $338;$$01044$be = $$511095$lcssa;$$0917$be = $$0987;$$0922$be = $$47$lcssa;$$0933$be = $$47980$lcssa;$$0987$be = $$0987;$$0988$be = $$511039$lcssa;\n      break L19;\n     }\n    }\n    HEAP32[$5>>2] = 27;\n    $$2919 = $$1918;$$49 = $$48;$$49982 = $$48981;$$531041 = $$521040;$$531097 = $$521096;\n    label = 274;\n    break;\n   }\n   case 27:  {\n    $$2919 = $$0917;$$49 = $$0922;$$49982 = $$0933;$$531041 = $$0988;$$531097 = $$01044;\n    label = 274;\n    break;\n   }\n   default: {\n    $$01102 = -2;\n    label = 297;\n    break L17;\n   }\n   }\n  } while(0);\n  if ((label|0) == 47) {\n   while(1) {\n    label = 0;\n    $137 = ($$39911844|0)==(0);\n    if ($137) {\n     $$4921 = $$0917;$$53 = $$39251846;$$53986 = $$39361845;$$57 = 0;$$571101 = $$310471843;$$8 = $$0;$817 = $$0987;\n     break L17;\n    }\n    $138 = (($$39911844) + -1)|0;\n    $139 = ((($$310471843)) + 1|0);\n    $140 = HEAP8[$$310471843>>0]|0;\n    $141 = $140&255;\n    $142 = $141 << $$39251846;\n    $143 = (($142) + ($$39361845))|0;\n    $144 = (($$39251846) + 8)|0;\n    $145 = ($144>>>0)<(32);\n    if ($145) {\n     $$310471843 = $139;$$39251846 = $144;$$39361845 = $143;$$39911844 = $138;\n     label = 47;\n    } else {\n     $$31047$lcssa = $139;$$3936$lcssa = $143;$$3991$lcssa = $138;\n     label = 49;\n     break;\n    }\n   }\n  }\n  else if ((label|0) == 121) {\n   label = 0;\n   $336 = HEAP32[$35>>2]|0;\n   $337 = ($336|0)==(0);\n   if ($337) {\n    label = 122;\n    break;\n   }\n   $339 = (_adler32(0,0,0)|0);\n   HEAP32[$26>>2] = $339;\n   HEAP32[$33>>2] = $339;\n   HEAP32[$5>>2] = 11;\n   $$16 = $$15;$$16949 = $$15948;$$201008 = $$191007;$$201064 = $$191063;\n   label = 124;\n  }\n  else if ((label|0) == 144) {\n   label = 0;\n   HEAP32[$5>>2] = 15;\n   $$21 = $$20;$$21954 = $$20953;$$251013 = $$241012;$$251069 = $$241068;\n   label = 145;\n  }\n  else if ((label|0) == 155) {\n   label = 0;\n   $$231627 = $$23$ph2387;$$239561626 = $$23956$ph2386;$$2710151625 = $$271015$ph2385;$$2710711624 = $$271071$ph2384;$423 = $871;\n   while(1) {\n    $411 = ($$231627>>>0)<(3);\n    if ($411) {\n     $412 = ($$2710151625|0)==(0);\n     if ($412) {\n      $$4921 = $$0917;$$53 = $$231627;$$53986 = $$239561626;$$57 = 0;$$571101 = $$2710711624;$$8 = $$0;$817 = $$0987;\n      break L17;\n     }\n     $413 = (($$231627) + 8)|0;\n     $414 = HEAP8[$$2710711624>>0]|0;\n     $415 = $414&255;\n     $416 = $415 << $$231627;\n     $417 = (($416) + ($$239561626))|0;\n     $418 = ((($$2710711624)) + 1|0);\n     $419 = (($$2710151625) + -1)|0;\n     $$24$lcssa = $413;$$24957$lcssa = $417;$$281016$lcssa = $419;$$281072$lcssa = $418;\n    } else {\n     $$24$lcssa = $$231627;$$24957$lcssa = $$239561626;$$281016$lcssa = $$2710151625;$$281072$lcssa = $$2710711624;\n    }\n    $420 = $$24957$lcssa & 7;\n    $421 = $420&65535;\n    $422 = (($423) + 1)|0;\n    HEAP32[$56>>2] = $422;\n    $424 = (12868 + ($423<<1)|0);\n    $425 = HEAP16[$424>>1]|0;\n    $426 = $425&65535;\n    $427 = (((($5)) + 112|0) + ($426<<1)|0);\n    HEAP16[$427>>1] = $421;\n    $428 = $$24957$lcssa >>> 3;\n    $429 = (($$24$lcssa) + -3)|0;\n    $430 = ($422>>>0)<($431>>>0);\n    if ($430) {\n     $$231627 = $429;$$239561626 = $428;$$2710151625 = $$281016$lcssa;$$2710711624 = $$281072$lcssa;$423 = $422;\n    } else {\n     $$23$lcssa = $429;$$23956$lcssa = $428;$$271015$lcssa = $$281016$lcssa;$$271071$lcssa = $$281072$lcssa;$$lcssa = $422;\n     label = 156;\n     break;\n    }\n   }\n  }\n  else if ((label|0) == 274) {\n   label = 0;\n   $801 = HEAP32[$25>>2]|0;\n   $802 = ($801|0)==(0);\n   if ($802) {\n    $$51 = $$49;$$51984 = $$49982;$$55 = $$531041;$$551099 = $$531097;\n    label = 281;\n    break;\n   }\n   $803 = HEAP32[$28>>2]|0;\n   $804 = ($803|0)==(0);\n   if ($804) {\n    $$51 = $$49;$$51984 = $$49982;$$55 = $$531041;$$551099 = $$531097;\n    label = 281;\n    break;\n   }\n   $805 = ($$49>>>0)<(32);\n   if ($805) {\n    $$501597 = $$49;$$509831596 = $$49982;$$5410981594 = $$531097;$$541595 = $$531041;\n    while(1) {\n     $806 = ($$541595|0)==(0);\n     if ($806) {\n      $$4921 = $$2919;$$53 = $$501597;$$53986 = $$509831596;$$57 = 0;$$571101 = $$5410981594;$$8 = $$0;$817 = $$0987;\n      break L17;\n     }\n     $807 = (($$541595) + -1)|0;\n     $808 = ((($$5410981594)) + 1|0);\n     $809 = HEAP8[$$5410981594>>0]|0;\n     $810 = $809&255;\n     $811 = $810 << $$501597;\n     $812 = (($811) + ($$509831596))|0;\n     $813 = (($$501597) + 8)|0;\n     $814 = ($813>>>0)<(32);\n     if ($814) {\n      $$501597 = $813;$$509831596 = $812;$$5410981594 = $808;$$541595 = $807;\n     } else {\n      $$50$lcssa = $813;$$50983$lcssa = $812;$$54$lcssa = $807;$$541098$lcssa = $808;\n      break;\n     }\n    }\n   } else {\n    $$50$lcssa = $$49;$$50983$lcssa = $$49982;$$54$lcssa = $$531041;$$541098$lcssa = $$531097;\n   }\n   $815 = HEAP32[$53>>2]|0;\n   $816 = ($$50983$lcssa|0)==($815|0);\n   if ($816) {\n    $$51 = 0;$$51984 = 0;$$55 = $$54$lcssa;$$551099 = $$541098$lcssa;\n    label = 281;\n    break;\n   }\n   HEAP32[$30>>2] = 27544;\n   HEAP32[$5>>2] = 29;\n   $$0$be = $$0;$$01042$be = $338;$$01044$be = $$541098$lcssa;$$0917$be = $$2919;$$0922$be = $$50$lcssa;$$0933$be = $$50983$lcssa;$$0987$be = $$0987;$$0988$be = $$54$lcssa;\n  }\n  do {\n   if ((label|0) == 49) {\n    label = 0;\n    $146 = HEAP32[$29>>2]|0;\n    $147 = ($146|0)==(0|0);\n    if (!($147)) {\n     $148 = ((($146)) + 4|0);\n     HEAP32[$148>>2] = $$3936$lcssa;\n    }\n    $149 = HEAP32[$28>>2]|0;\n    $150 = $149 & 512;\n    $151 = ($150|0)==(0);\n    if (!($151)) {\n     $152 = $$3936$lcssa&255;\n     HEAP8[$2>>0] = $152;\n     $153 = $$3936$lcssa >>> 8;\n     $154 = $153&255;\n     HEAP8[$27>>0] = $154;\n     $155 = $$3936$lcssa >>> 16;\n     $156 = $155&255;\n     HEAP8[$54>>0] = $156;\n     $157 = $$3936$lcssa >>> 24;\n     $158 = $157&255;\n     HEAP8[$55>>0] = $158;\n     $159 = HEAP32[$26>>2]|0;\n     $160 = (_crc32($159,$2,4)|0);\n     HEAP32[$26>>2] = $160;\n    }\n    HEAP32[$5>>2] = 3;\n    $$410481852 = $$31047$lcssa;$$49261855 = 0;$$49371854 = 0;$$49921853 = $$3991$lcssa;\n    label = 55;\n   }\n   else if ((label|0) == 124) {\n    label = 0;\n    if ($36) {\n     $$53$ph = $$16;$$53986$ph = $$16949;$$57$ph = $$201008;$$571101$ph = $$201064;$$8$ph = $$0;$$ph = $$0987;\n     label = 282;\n     break L17;\n    } else {\n     $$17 = $$16;$$17950 = $$16949;$$211009 = $$201008;$$211065 = $$201064;\n     label = 125;\n    }\n   }\n   else if ((label|0) == 145) {\n    label = 0;\n    $377 = HEAP32[$34>>2]|0;\n    $378 = ($377|0)==(0);\n    if ($378) {\n     HEAP32[$5>>2] = 11;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$251069;$$0917$be = $$0917;$$0922$be = $$21;$$0933$be = $$21954;$$0987$be = $$0987;$$0988$be = $$251013;\n     break;\n    }\n    $379 = ($377>>>0)>($$251013>>>0);\n    $$251013$ = $379 ? $$251013 : $377;\n    $380 = ($$251013$>>>0)>($$0987>>>0);\n    $$4911 = $380 ? $$0987 : $$251013$;\n    $381 = ($$4911|0)==(0);\n    if ($381) {\n     $$53$ph = $$21;$$53986$ph = $$21954;$$57$ph = $$251013;$$571101$ph = $$251069;$$8$ph = $$0;$$ph = $$0987;\n     label = 282;\n     break L17;\n    }\n    _memcpy(($338|0),($$251069|0),($$4911|0))|0;\n    $382 = (($$251013) - ($$4911))|0;\n    $383 = (($$251069) + ($$4911)|0);\n    $384 = (($$0987) - ($$4911))|0;\n    $385 = (($338) + ($$4911)|0);\n    $386 = HEAP32[$34>>2]|0;\n    $387 = (($386) - ($$4911))|0;\n    HEAP32[$34>>2] = $387;\n    $$0$be = $$0;$$01042$be = $385;$$01044$be = $383;$$0917$be = $$0917;$$0922$be = $$21;$$0933$be = $$21954;$$0987$be = $384;$$0988$be = $382;\n   }\n   else if ((label|0) == 156) {\n    label = 0;\n    $410 = ($$lcssa>>>0)<(19);\n    if ($410) {\n     $433 = $$lcssa;\n     while(1) {\n      $432 = (($433) + 1)|0;\n      $434 = (12868 + ($433<<1)|0);\n      $435 = HEAP16[$434>>1]|0;\n      $436 = $435&65535;\n      $437 = (((($5)) + 112|0) + ($436<<1)|0);\n      HEAP16[$437>>1] = 0;\n      $exitcond = ($432|0)==(19);\n      if ($exitcond) {\n       break;\n      } else {\n       $433 = $432;\n      }\n     }\n     HEAP32[$56>>2] = 19;\n    }\n    HEAP32[$61>>2] = $60;\n    HEAP32[$38>>2] = $60;\n    HEAP32[$39>>2] = 7;\n    $438 = (_inflate_table(0,$62,19,$61,$39,$63)|0);\n    $439 = ($438|0)==(0);\n    if ($439) {\n     HEAP32[$56>>2] = 0;\n     HEAP32[$5>>2] = 18;\n     $$1$ph = 0;$$25$ph = $$23$lcssa;$$25958$ph = $$23956$lcssa;$$291017$ph = $$271015$lcssa;$$291073$ph = $$271071$lcssa;$443 = 0;\n     label = 166;\n     break;\n    } else {\n     HEAP32[$30>>2] = 27385;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $438;$$01042$be = $338;$$01044$be = $$271071$lcssa;$$0917$be = $$0917;$$0922$be = $$23$lcssa;$$0933$be = $$23956$lcssa;$$0987$be = $$0987;$$0988$be = $$271015$lcssa;\n     break;\n    }\n   }\n  } while(0);\n  L161: do {\n   if ((label|0) == 55) {\n    while(1) {\n     label = 0;\n     $162 = ($$49921853|0)==(0);\n     if ($162) {\n      $$4921 = $$0917;$$53 = $$49261855;$$53986 = $$49371854;$$57 = 0;$$571101 = $$410481852;$$8 = $$0;$817 = $$0987;\n      break L17;\n     }\n     $163 = (($$49921853) + -1)|0;\n     $164 = ((($$410481852)) + 1|0);\n     $165 = HEAP8[$$410481852>>0]|0;\n     $166 = $165&255;\n     $167 = $166 << $$49261855;\n     $168 = (($167) + ($$49371854))|0;\n     $169 = (($$49261855) + 8)|0;\n     $170 = ($169>>>0)<(16);\n     if ($170) {\n      $$410481852 = $164;$$49261855 = $169;$$49371854 = $168;$$49921853 = $163;\n      label = 55;\n     } else {\n      $$41048$lcssa = $164;$$4937$lcssa = $168;$$4992$lcssa = $163;\n      label = 57;\n      break;\n     }\n    }\n   }\n   else if ((label|0) == 125) {\n    label = 0;\n    $340 = HEAP32[$37>>2]|0;\n    $341 = ($340|0)==(0);\n    if (!($341)) {\n     $343 = $$17 & 7;\n     $344 = $$17950 >>> $343;\n     $345 = (($$17) - ($343))|0;\n     HEAP32[$5>>2] = 26;\n     $$0$be = $$0;$$01042$be = $338;$$01044$be = $$211065;$$0917$be = $$0917;$$0922$be = $345;$$0933$be = $344;$$0987$be = $$0987;$$0988$be = $$211009;\n     break;\n    }\n    $342 = ($$17>>>0)<(3);\n    if ($342) {\n     $346 = ($$211009|0)==(0);\n     if ($346) {\n      $$53$ph = $$17;$$53986$ph = $$17950;$$57$ph = 0;$$571101$ph = $$211065;$$8$ph = $$0;$$ph = $$0987;\n      label = 282;\n      break L17;\n     }\n     $347 = (($$17) + 8)|0;\n     $348 = HEAP8[$$211065>>0]|0;\n     $349 = $348&255;\n     $350 = $349 << $$17;\n     $351 = (($350) + ($$17950))|0;\n     $352 = ((($$211065)) + 1|0);\n     $353 = (($$211009) + -1)|0;\n     $$18$lcssa = $347;$$18951$lcssa = $351;$$221010$lcssa = $353;$$221066$lcssa = $352;\n    } else {\n     $$18$lcssa = $$17;$$18951$lcssa = $$17950;$$221010$lcssa = $$211009;$$221066$lcssa = $$211065;\n    }\n    $354 = $$18951$lcssa & 1;\n    HEAP32[$37>>2] = $354;\n    $355 = $$18951$lcssa >>> 1;\n    $trunc = $355&255;\n    $trunc$clear = $trunc & 3;\n    switch ($trunc$clear<<24>>24) {\n    case 0:  {\n     HEAP32[$5>>2] = 13;\n     break;\n    }\n    case 1:  {\n     HEAP32[$38>>2] = 10692;\n     HEAP32[$39>>2] = 9;\n     HEAP32[$40>>2] = 12740;\n     HEAP32[$41>>2] = 5;\n     HEAP32[$5>>2] = 19;\n     if ($42) {\n      label = 133;\n      break L17;\n     }\n     break;\n    }\n    case 2:  {\n     HEAP32[$5>>2] = 16;\n     break;\n    }\n    case 3:  {\n     HEAP32[$30>>2] = 27301;\n     HEAP32[$5>>2] = 29;\n     break;\n    }\n    default: {\n     label = 136;\n     break L17;\n    }\n    }\n    $358 = $$18951$lcssa >>> 3;\n    $359 = (($$18$lcssa) + -3)|0;\n    $$0$be = $$0;$$01042$be = $338;$$01044$be = $$221066$lcssa;$$0917$be = $$0917;$$0922$be = $359;$$0933$be = $358;$$0987$be = $$0987;$$0988$be = $$221010$lcssa;\n   }\n   else if ((label|0) == 166) {\n    label = 0;\n    $440 = HEAP32[$57>>2]|0;\n    $441 = HEAP32[$58>>2]|0;\n    $442 = (($441) + ($440))|0;\n    $444 = ($443>>>0)<($442>>>0);\n    do {\n     if ($444) {\n      $$251692 = $$25$ph;$$259581691 = $$25958$ph;$$2910171690 = $$291017$ph;$$2910731689 = $$291073$ph;$467 = $443;$532 = $440;$533 = $441;\n      L181: while(1) {\n       $445 = HEAP32[$39>>2]|0;\n       $446 = 1 << $445;\n       $447 = (($446) + -1)|0;\n       $448 = $447 & $$259581691;\n       $449 = HEAP32[$38>>2]|0;\n       $$sroa$1874$0$$sroa_idx811637 = (((($449) + ($448<<2)|0)) + 1|0);\n       $$sroa$1874$0$copyload821638 = HEAP8[$$sroa$1874$0$$sroa_idx811637>>0]|0;\n       $450 = $$sroa$1874$0$copyload821638&255;\n       $451 = ($$251692>>>0)<($450>>>0);\n       if ($451) {\n        $$261645 = $$251692;$$269591644 = $$259581691;$$3010181643 = $$2910171690;$$3010741642 = $$2910731689;\n        while(1) {\n         $452 = ($$3010181643|0)==(0);\n         if ($452) {\n          $$4921 = $$0917;$$53 = $$261645;$$53986 = $$269591644;$$57 = 0;$$571101 = $$3010741642;$$8 = $$1$ph;$817 = $$0987;\n          break L17;\n         }\n         $453 = (($$3010181643) + -1)|0;\n         $454 = ((($$3010741642)) + 1|0);\n         $455 = HEAP8[$$3010741642>>0]|0;\n         $456 = $455&255;\n         $457 = $456 << $$261645;\n         $458 = (($457) + ($$269591644))|0;\n         $459 = (($$261645) + 8)|0;\n         $460 = $447 & $458;\n         $$sroa$1874$0$$sroa_idx81 = (((($449) + ($460<<2)|0)) + 1|0);\n         $$sroa$1874$0$copyload82 = HEAP8[$$sroa$1874$0$$sroa_idx81>>0]|0;\n         $461 = $$sroa$1874$0$copyload82&255;\n         $462 = ($459>>>0)<($461>>>0);\n         if ($462) {\n          $$261645 = $459;$$269591644 = $458;$$3010181643 = $453;$$3010741642 = $454;\n         } else {\n          $$26$lcssa = $459;$$26959$lcssa = $458;$$301018$lcssa = $453;$$301074$lcssa = $454;$$lcssa1183 = $461;$$pn2375 = $460;\n          break;\n         }\n        }\n       } else {\n        $$26$lcssa = $$251692;$$26959$lcssa = $$259581691;$$301018$lcssa = $$2910171690;$$301074$lcssa = $$2910731689;$$lcssa1183 = $450;$$pn2375 = $448;\n       }\n       $$sroa$42$0$copyload113$lcssa$in = (((($449) + ($$pn2375<<2)|0)) + 2|0);\n       $$sroa$42$0$copyload113$lcssa = HEAP16[$$sroa$42$0$copyload113$lcssa$in>>1]|0;\n       $463 = ($$sroa$42$0$copyload113$lcssa&65535)<(16);\n       if ($463) {\n        $464 = $$26959$lcssa >>> $$lcssa1183;\n        $465 = (($$26$lcssa) - ($$lcssa1183))|0;\n        $466 = (($467) + 1)|0;\n        HEAP32[$56>>2] = $466;\n        $468 = (((($5)) + 112|0) + ($467<<1)|0);\n        HEAP16[$468>>1] = $$sroa$42$0$copyload113$lcssa;\n        $$25$be = $465;$$25958$be = $464;$$291017$be = $$301018$lcssa;$$291073$be = $$301074$lcssa;\n       } else {\n        switch ($$sroa$42$0$copyload113$lcssa<<16>>16) {\n        case 16:  {\n         $476 = (($$lcssa1183) + 2)|0;\n         $477 = ($$26$lcssa>>>0)<($476>>>0);\n         if ($477) {\n          $$271671 = $$26$lcssa;$$279601670 = $$26959$lcssa;$$3110191669 = $$301018$lcssa;$$3110751668 = $$301074$lcssa;\n          while(1) {\n           $480 = ($$3110191669|0)==(0);\n           if ($480) {\n            $$4921 = $$0917;$$53 = $$271671;$$53986 = $$279601670;$$57 = 0;$$571101 = $$3110751668;$$8 = $$1$ph;$817 = $$0987;\n            break L17;\n           }\n           $481 = (($$3110191669) + -1)|0;\n           $482 = ((($$3110751668)) + 1|0);\n           $483 = HEAP8[$$3110751668>>0]|0;\n           $484 = $483&255;\n           $485 = $484 << $$271671;\n           $486 = (($485) + ($$279601670))|0;\n           $487 = (($$271671) + 8)|0;\n           $488 = ($487>>>0)<($476>>>0);\n           if ($488) {\n            $$271671 = $487;$$279601670 = $486;$$3110191669 = $481;$$3110751668 = $482;\n           } else {\n            $$27$lcssa = $487;$$27960$lcssa = $486;$$311019$lcssa = $481;$$311075$lcssa = $482;\n            break;\n           }\n          }\n         } else {\n          $$27$lcssa = $$26$lcssa;$$27960$lcssa = $$26959$lcssa;$$311019$lcssa = $$301018$lcssa;$$311075$lcssa = $$301074$lcssa;\n         }\n         $489 = $$27960$lcssa >>> $$lcssa1183;\n         $490 = (($$27$lcssa) - ($$lcssa1183))|0;\n         $491 = ($467|0)==(0);\n         if ($491) {\n          label = 180;\n          break L181;\n         }\n         $492 = (($467) + -1)|0;\n         $493 = (((($5)) + 112|0) + ($492<<1)|0);\n         $494 = HEAP16[$493>>1]|0;\n         $495 = $494&65535;\n         $496 = $489 & 3;\n         $497 = (($496) + 3)|0;\n         $498 = $489 >>> 2;\n         $499 = (($490) + -2)|0;\n         $$0903 = $495;$$30 = $499;$$30963 = $498;$$341022 = $$311019$lcssa;$$341078 = $$311075$lcssa;$$5912 = $497;\n         break;\n        }\n        case 17:  {\n         $474 = (($$lcssa1183) + 3)|0;\n         $475 = ($$26$lcssa>>>0)<($474>>>0);\n         if ($475) {\n          $$281661 = $$26$lcssa;$$289611660 = $$26959$lcssa;$$3210201659 = $$301018$lcssa;$$3210761658 = $$301074$lcssa;\n          while(1) {\n           $500 = ($$3210201659|0)==(0);\n           if ($500) {\n            $$4921 = $$0917;$$53 = $$281661;$$53986 = $$289611660;$$57 = 0;$$571101 = $$3210761658;$$8 = $$1$ph;$817 = $$0987;\n            break L17;\n           }\n           $501 = (($$3210201659) + -1)|0;\n           $502 = ((($$3210761658)) + 1|0);\n           $503 = HEAP8[$$3210761658>>0]|0;\n           $504 = $503&255;\n           $505 = $504 << $$281661;\n           $506 = (($505) + ($$289611660))|0;\n           $507 = (($$281661) + 8)|0;\n           $508 = ($507>>>0)<($474>>>0);\n           if ($508) {\n            $$281661 = $507;$$289611660 = $506;$$3210201659 = $501;$$3210761658 = $502;\n           } else {\n            $$28$lcssa = $507;$$28961$lcssa = $506;$$321020$lcssa = $501;$$321076$lcssa = $502;\n            break;\n           }\n          }\n         } else {\n          $$28$lcssa = $$26$lcssa;$$28961$lcssa = $$26959$lcssa;$$321020$lcssa = $$301018$lcssa;$$321076$lcssa = $$301074$lcssa;\n         }\n         $509 = $$28961$lcssa >>> $$lcssa1183;\n         $510 = $509 & 7;\n         $511 = (($510) + 3)|0;\n         $512 = $509 >>> 3;\n         $513 = (-3 - ($$lcssa1183))|0;\n         $514 = (($513) + ($$28$lcssa))|0;\n         $$0903 = 0;$$30 = $514;$$30963 = $512;$$341022 = $$321020$lcssa;$$341078 = $$321076$lcssa;$$5912 = $511;\n         break;\n        }\n        default: {\n         $478 = (($$lcssa1183) + 7)|0;\n         $479 = ($$26$lcssa>>>0)<($478>>>0);\n         if ($479) {\n          $$291681 = $$26$lcssa;$$299621680 = $$26959$lcssa;$$3310211679 = $$301018$lcssa;$$3310771678 = $$301074$lcssa;\n          while(1) {\n           $515 = ($$3310211679|0)==(0);\n           if ($515) {\n            $$4921 = $$0917;$$53 = $$291681;$$53986 = $$299621680;$$57 = 0;$$571101 = $$3310771678;$$8 = $$1$ph;$817 = $$0987;\n            break L17;\n           }\n           $516 = (($$3310211679) + -1)|0;\n           $517 = ((($$3310771678)) + 1|0);\n           $518 = HEAP8[$$3310771678>>0]|0;\n           $519 = $518&255;\n           $520 = $519 << $$291681;\n           $521 = (($520) + ($$299621680))|0;\n           $522 = (($$291681) + 8)|0;\n           $523 = ($522>>>0)<($478>>>0);\n           if ($523) {\n            $$291681 = $522;$$299621680 = $521;$$3310211679 = $516;$$3310771678 = $517;\n           } else {\n            $$29$lcssa = $522;$$29962$lcssa = $521;$$331021$lcssa = $516;$$331077$lcssa = $517;\n            break;\n           }\n          }\n         } else {\n          $$29$lcssa = $$26$lcssa;$$29962$lcssa = $$26959$lcssa;$$331021$lcssa = $$301018$lcssa;$$331077$lcssa = $$301074$lcssa;\n         }\n         $524 = $$29962$lcssa >>> $$lcssa1183;\n         $525 = $524 & 127;\n         $526 = (($525) + 11)|0;\n         $527 = $524 >>> 7;\n         $528 = (-7 - ($$lcssa1183))|0;\n         $529 = (($528) + ($$29$lcssa))|0;\n         $$0903 = 0;$$30 = $529;$$30963 = $527;$$341022 = $$331021$lcssa;$$341078 = $$331077$lcssa;$$5912 = $526;\n        }\n        }\n        $530 = (($467) + ($$5912))|0;\n        $531 = (($533) + ($532))|0;\n        $534 = ($530>>>0)>($531>>>0);\n        if ($534) {\n         label = 190;\n         break;\n        }\n        $535 = $$0903&65535;\n        $536 = (($$5912) + -1)|0;\n        $537 = (($467) + 1)|0;\n        HEAP32[$56>>2] = $537;\n        $538 = (((($5)) + 112|0) + ($467<<1)|0);\n        HEAP16[$538>>1] = $535;\n        $539 = ($536|0)==(0);\n        if ($539) {\n         $$25$be = $$30;$$25958$be = $$30963;$$291017$be = $$341022;$$291073$be = $$341078;\n        } else {\n         $541 = $536;\n         while(1) {\n          $$pre2358 = HEAP32[$56>>2]|0;\n          $540 = (($541) + -1)|0;\n          $542 = (($$pre2358) + 1)|0;\n          HEAP32[$56>>2] = $542;\n          $543 = (((($5)) + 112|0) + ($$pre2358<<1)|0);\n          HEAP16[$543>>1] = $535;\n          $544 = ($540|0)==(0);\n          if ($544) {\n           $$25$be = $$30;$$25958$be = $$30963;$$291017$be = $$341022;$$291073$be = $$341078;\n           break;\n          } else {\n           $541 = $540;\n          }\n         }\n        }\n       }\n       $469 = HEAP32[$56>>2]|0;\n       $470 = HEAP32[$57>>2]|0;\n       $471 = HEAP32[$58>>2]|0;\n       $472 = (($471) + ($470))|0;\n       $473 = ($469>>>0)<($472>>>0);\n       if ($473) {\n        $$251692 = $$25$be;$$259581691 = $$25958$be;$$2910171690 = $$291017$be;$$2910731689 = $$291073$be;$467 = $469;$532 = $470;$533 = $471;\n       } else {\n        label = 192;\n        break;\n       }\n      }\n      if ((label|0) == 180) {\n       label = 0;\n       HEAP32[$30>>2] = 27410;\n       HEAP32[$5>>2] = 29;\n       $$0$be = $$1$ph;$$01042$be = $338;$$01044$be = $$311075$lcssa;$$0917$be = $$0917;$$0922$be = $490;$$0933$be = $489;$$0987$be = $$0987;$$0988$be = $$311019$lcssa;\n       break L161;\n      }\n      else if ((label|0) == 190) {\n       label = 0;\n       HEAP32[$30>>2] = 27410;\n       HEAP32[$5>>2] = 29;\n       $$0$be = $$1$ph;$$01042$be = $338;$$01044$be = $$341078;$$0917$be = $$0917;$$0922$be = $$30;$$0933$be = $$30963;$$0987$be = $$0987;$$0988$be = $$341022;\n       break L161;\n      }\n      else if ((label|0) == 192) {\n       label = 0;\n       $$pr1107$pre = HEAP32[$5>>2]|0;\n       $545 = ($$pr1107$pre|0)==(29);\n       if ($545) {\n        $$0$be = $$1$ph;$$01042$be = $338;$$01044$be = $$291073$be;$$0917$be = $$0917;$$0922$be = $$25$be;$$0933$be = $$25958$be;$$0987$be = $$0987;$$0988$be = $$291017$be;\n        break L161;\n       } else {\n        $$25$lcssa2391 = $$25$be;$$25958$lcssa2390 = $$25958$be;$$291017$lcssa2389 = $$291017$be;$$291073$lcssa2388 = $$291073$be;$548 = $470;\n        break;\n       }\n      }\n     } else {\n      $$25$lcssa2391 = $$25$ph;$$25958$lcssa2390 = $$25958$ph;$$291017$lcssa2389 = $$291017$ph;$$291073$lcssa2388 = $$291073$ph;$548 = $440;\n     }\n    } while(0);\n    $546 = HEAP16[$59>>1]|0;\n    $547 = ($546<<16>>16)==(0);\n    if ($547) {\n     HEAP32[$30>>2] = 27436;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$1$ph;$$01042$be = $338;$$01044$be = $$291073$lcssa2388;$$0917$be = $$0917;$$0922$be = $$25$lcssa2391;$$0933$be = $$25958$lcssa2390;$$0987$be = $$0987;$$0988$be = $$291017$lcssa2389;\n     break;\n    }\n    HEAP32[$61>>2] = $60;\n    HEAP32[$38>>2] = $60;\n    HEAP32[$39>>2] = 9;\n    $549 = (_inflate_table(1,$62,$548,$61,$39,$63)|0);\n    $550 = ($549|0)==(0);\n    if (!($550)) {\n     HEAP32[$30>>2] = 27473;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $549;$$01042$be = $338;$$01044$be = $$291073$lcssa2388;$$0917$be = $$0917;$$0922$be = $$25$lcssa2391;$$0933$be = $$25958$lcssa2390;$$0987$be = $$0987;$$0988$be = $$291017$lcssa2389;\n     break;\n    }\n    $551 = HEAP32[$61>>2]|0;\n    HEAP32[$40>>2] = $551;\n    HEAP32[$41>>2] = 6;\n    $552 = HEAP32[$57>>2]|0;\n    $553 = (((($5)) + 112|0) + ($552<<1)|0);\n    $554 = HEAP32[$58>>2]|0;\n    $555 = (_inflate_table(2,$553,$554,$61,$41,$63)|0);\n    $556 = ($555|0)==(0);\n    if ($556) {\n     HEAP32[$5>>2] = 19;\n     if ($42) {\n      $$53$ph = $$25$lcssa2391;$$53986$ph = $$25958$lcssa2390;$$57$ph = $$291017$lcssa2389;$$571101$ph = $$291073$lcssa2388;$$8$ph = 0;$$ph = $$0987;\n      label = 282;\n      break L17;\n     } else {\n      $$2 = 0;$$32 = $$25$lcssa2391;$$32965 = $$25958$lcssa2390;$$361024 = $$291017$lcssa2389;$$361080 = $$291073$lcssa2388;\n      label = 200;\n      break;\n     }\n    } else {\n     HEAP32[$30>>2] = 27501;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $555;$$01042$be = $338;$$01044$be = $$291073$lcssa2388;$$0917$be = $$0917;$$0922$be = $$25$lcssa2391;$$0933$be = $$25958$lcssa2390;$$0987$be = $$0987;$$0988$be = $$291017$lcssa2389;\n     break;\n    }\n   }\n  } while(0);\n  if ((label|0) == 57) {\n   label = 0;\n   $171 = HEAP32[$29>>2]|0;\n   $172 = ($171|0)==(0|0);\n   if (!($172)) {\n    $173 = $$4937$lcssa >>> 8;\n    $174 = ((($171)) + 8|0);\n    $175 = $$4937$lcssa & 255;\n    HEAP32[$174>>2] = $175;\n    $176 = ((($171)) + 12|0);\n    HEAP32[$176>>2] = $173;\n   }\n   $177 = HEAP32[$28>>2]|0;\n   $178 = $177 & 512;\n   $179 = ($178|0)==(0);\n   if (!($179)) {\n    $180 = $$4937$lcssa&255;\n    HEAP8[$2>>0] = $180;\n    $181 = $$4937$lcssa >>> 8;\n    $182 = $181&255;\n    HEAP8[$27>>0] = $182;\n    $183 = HEAP32[$26>>2]|0;\n    $184 = (_crc32($183,$2,2)|0);\n    HEAP32[$26>>2] = $184;\n   }\n   HEAP32[$5>>2] = 4;\n   $$51049 = $$41048$lcssa;$$5927 = 0;$$5938 = 0;$$5993 = $$4992$lcssa;\n   label = 62;\n  }\n  else if ((label|0) == 200) {\n   label = 0;\n   HEAP32[$5>>2] = 20;\n   $$3 = $$2;$$33 = $$32;$$33966 = $$32965;$$371025 = $$361024;$$371081 = $$361080;\n   label = 201;\n  }\n  do {\n   if ((label|0) == 62) {\n    label = 0;\n    $185 = HEAP32[$28>>2]|0;\n    $186 = $185 & 1024;\n    $187 = ($186|0)==(0);\n    if ($187) {\n     $208 = HEAP32[$29>>2]|0;\n     $209 = ($208|0)==(0|0);\n     if ($209) {\n      $$71051 = $$51049;$$7929 = $$5927;$$7940 = $$5938;$$7995 = $$5993;\n     } else {\n      $210 = ((($208)) + 16|0);\n      HEAP32[$210>>2] = 0;\n      $$71051 = $$51049;$$7929 = $$5927;$$7940 = $$5938;$$7995 = $$5993;\n     }\n    } else {\n     $188 = ($$5927>>>0)<(16);\n     if ($188) {\n      $$610501861 = $$51049;$$69281864 = $$5927;$$69391863 = $$5938;$$69941862 = $$5993;\n      while(1) {\n       $189 = ($$69941862|0)==(0);\n       if ($189) {\n        $$4921 = $$0917;$$53 = $$69281864;$$53986 = $$69391863;$$57 = 0;$$571101 = $$610501861;$$8 = $$0;$817 = $$0987;\n        break L17;\n       }\n       $190 = (($$69941862) + -1)|0;\n       $191 = ((($$610501861)) + 1|0);\n       $192 = HEAP8[$$610501861>>0]|0;\n       $193 = $192&255;\n       $194 = $193 << $$69281864;\n       $195 = (($194) + ($$69391863))|0;\n       $196 = (($$69281864) + 8)|0;\n       $197 = ($196>>>0)<(16);\n       if ($197) {\n        $$610501861 = $191;$$69281864 = $196;$$69391863 = $195;$$69941862 = $190;\n       } else {\n        $$61050$lcssa = $191;$$6939$lcssa = $195;$$6994$lcssa = $190;\n        break;\n       }\n      }\n     } else {\n      $$61050$lcssa = $$51049;$$6939$lcssa = $$5938;$$6994$lcssa = $$5993;\n     }\n     HEAP32[$34>>2] = $$6939$lcssa;\n     $198 = HEAP32[$29>>2]|0;\n     $199 = ($198|0)==(0|0);\n     if (!($199)) {\n      $200 = ((($198)) + 20|0);\n      HEAP32[$200>>2] = $$6939$lcssa;\n     }\n     $201 = $185 & 512;\n     $202 = ($201|0)==(0);\n     if ($202) {\n      $$71051 = $$61050$lcssa;$$7929 = 0;$$7940 = 0;$$7995 = $$6994$lcssa;\n     } else {\n      $203 = $$6939$lcssa&255;\n      HEAP8[$2>>0] = $203;\n      $204 = $$6939$lcssa >>> 8;\n      $205 = $204&255;\n      HEAP8[$27>>0] = $205;\n      $206 = HEAP32[$26>>2]|0;\n      $207 = (_crc32($206,$2,2)|0);\n      HEAP32[$26>>2] = $207;\n      $$71051 = $$61050$lcssa;$$7929 = 0;$$7940 = 0;$$7995 = $$6994$lcssa;\n     }\n    }\n    HEAP32[$5>>2] = 5;\n    $$81052 = $$71051;$$8930 = $$7929;$$8941 = $$7940;$$8996 = $$7995;\n    label = 73;\n   }\n   else if ((label|0) == 201) {\n    label = 0;\n    $557 = ($$371025>>>0)>(5);\n    $558 = ($$0987>>>0)>(257);\n    $or$cond6 = $558 & $557;\n    if ($or$cond6) {\n     HEAP32[$7>>2] = $338;\n     HEAP32[$17>>2] = $$0987;\n     HEAP32[$0>>2] = $$371081;\n     HEAP32[$19>>2] = $$371025;\n     HEAP32[$21>>2] = $$33966;\n     HEAP32[$23>>2] = $$33;\n     _inflate_fast($0,$$0917);\n     $559 = HEAP32[$7>>2]|0;\n     $560 = HEAP32[$17>>2]|0;\n     $561 = HEAP32[$0>>2]|0;\n     $562 = HEAP32[$19>>2]|0;\n     $563 = HEAP32[$21>>2]|0;\n     $564 = HEAP32[$23>>2]|0;\n     $565 = HEAP32[$5>>2]|0;\n     $566 = ($565|0)==(11);\n     if (!($566)) {\n      $$0$be = $$3;$$01042$be = $559;$$01044$be = $561;$$0917$be = $$0917;$$0922$be = $564;$$0933$be = $563;$$0987$be = $560;$$0988$be = $562;\n      break;\n     }\n     HEAP32[$43>>2] = -1;\n     $$0$be = $$3;$$01042$be = $559;$$01044$be = $561;$$0917$be = $$0917;$$0922$be = $564;$$0933$be = $563;$$0987$be = $560;$$0988$be = $562;\n     break;\n    }\n    HEAP32[$43>>2] = 0;\n    $567 = HEAP32[$39>>2]|0;\n    $568 = 1 << $567;\n    $569 = (($568) + -1)|0;\n    $570 = $569 & $$33966;\n    $571 = HEAP32[$38>>2]|0;\n    $$sroa$1874$0$$sroa_idx771702 = (((($571) + ($570<<2)|0)) + 1|0);\n    $$sroa$1874$0$copyload781703 = HEAP8[$$sroa$1874$0$$sroa_idx771702>>0]|0;\n    $572 = $$sroa$1874$0$copyload781703&255;\n    $573 = ($572>>>0)>($$33>>>0);\n    if ($573) {\n     $$341709 = $$33;$$349671708 = $$33966;$$3810261707 = $$371025;$$3810821706 = $$371081;\n     while(1) {\n      $574 = ($$3810261707|0)==(0);\n      if ($574) {\n       $$4921 = $$0917;$$53 = $$341709;$$53986 = $$349671708;$$57 = 0;$$571101 = $$3810821706;$$8 = $$3;$817 = $$0987;\n       break L17;\n      }\n      $575 = (($$3810261707) + -1)|0;\n      $576 = ((($$3810821706)) + 1|0);\n      $577 = HEAP8[$$3810821706>>0]|0;\n      $578 = $577&255;\n      $579 = $578 << $$341709;\n      $580 = (($579) + ($$349671708))|0;\n      $581 = (($$341709) + 8)|0;\n      $582 = $569 & $580;\n      $$sroa$1874$0$$sroa_idx77 = (((($571) + ($582<<2)|0)) + 1|0);\n      $$sroa$1874$0$copyload78 = HEAP8[$$sroa$1874$0$$sroa_idx77>>0]|0;\n      $583 = $$sroa$1874$0$copyload78&255;\n      $584 = ($583>>>0)>($581>>>0);\n      if ($584) {\n       $$341709 = $581;$$349671708 = $580;$$3810261707 = $575;$$3810821706 = $576;\n      } else {\n       $$34$lcssa = $581;$$34967$lcssa = $580;$$381026$lcssa = $575;$$381082$lcssa = $576;$$lcssa1242 = $583;$$pn2373 = $582;$$sroa$1874$0$copyload78$lcssa = $$sroa$1874$0$copyload78;\n       break;\n      }\n     }\n    } else {\n     $$34$lcssa = $$33;$$34967$lcssa = $$33966;$$381026$lcssa = $$371025;$$381082$lcssa = $$371081;$$lcssa1242 = $572;$$pn2373 = $570;$$sroa$1874$0$copyload78$lcssa = $$sroa$1874$0$copyload781703;\n    }\n    $$sroa$42$0$copyload109$lcssa$in = (((($571) + ($$pn2373<<2)|0)) + 2|0);\n    $$sroa$057$0$copyload69$lcssa$in = (($571) + ($$pn2373<<2)|0);\n    $$sroa$42$0$copyload109$lcssa = HEAP16[$$sroa$42$0$copyload109$lcssa$in>>1]|0;\n    $$sroa$057$0$copyload69$lcssa = HEAP8[$$sroa$057$0$copyload69$lcssa$in>>0]|0;\n    $585 = $$sroa$057$0$copyload69$lcssa&255;\n    $586 = ($$sroa$057$0$copyload69$lcssa<<24>>24)!=(0);\n    $587 = $585 & 240;\n    $588 = ($587|0)==(0);\n    $or$cond1106 = $586 & $588;\n    if ($or$cond1106) {\n     $589 = $$sroa$42$0$copyload109$lcssa&65535;\n     $590 = (($$lcssa1242) + ($585))|0;\n     $591 = 1 << $590;\n     $592 = (($591) + -1)|0;\n     $593 = $$34967$lcssa & $592;\n     $594 = $593 >>> $$lcssa1242;\n     $595 = (($594) + ($589))|0;\n     $$sroa$1874$0$$sroa_idx791726 = (((($571) + ($595<<2)|0)) + 1|0);\n     $$sroa$1874$0$copyload801727 = HEAP8[$$sroa$1874$0$$sroa_idx791726>>0]|0;\n     $596 = $$sroa$1874$0$copyload801727&255;\n     $597 = (($596) + ($$lcssa1242))|0;\n     $598 = ($597>>>0)>($$34$lcssa>>>0);\n     if ($598) {\n      $$351731 = $$34$lcssa;$$359681730 = $$34967$lcssa;$$3910271729 = $$381026$lcssa;$$3910831728 = $$381082$lcssa;\n      while(1) {\n       $599 = ($$3910271729|0)==(0);\n       if ($599) {\n        $$4921 = $$0917;$$53 = $$351731;$$53986 = $$359681730;$$57 = 0;$$571101 = $$3910831728;$$8 = $$3;$817 = $$0987;\n        break L17;\n       }\n       $600 = (($$3910271729) + -1)|0;\n       $601 = ((($$3910831728)) + 1|0);\n       $602 = HEAP8[$$3910831728>>0]|0;\n       $603 = $602&255;\n       $604 = $603 << $$351731;\n       $605 = (($604) + ($$359681730))|0;\n       $606 = (($$351731) + 8)|0;\n       $607 = $605 & $592;\n       $608 = $607 >>> $$lcssa1242;\n       $609 = (($608) + ($589))|0;\n       $$sroa$1874$0$$sroa_idx79 = (((($571) + ($609<<2)|0)) + 1|0);\n       $$sroa$1874$0$copyload80 = HEAP8[$$sroa$1874$0$$sroa_idx79>>0]|0;\n       $610 = $$sroa$1874$0$copyload80&255;\n       $611 = (($610) + ($$lcssa1242))|0;\n       $612 = ($611>>>0)>($606>>>0);\n       if ($612) {\n        $$351731 = $606;$$359681730 = $605;$$3910271729 = $600;$$3910831728 = $601;\n       } else {\n        $$35$lcssa = $606;$$35968$lcssa = $605;$$391027$lcssa = $600;$$391083$lcssa = $601;$$lcssa1256 = $609;$$sroa$1874$0$copyload80$lcssa = $$sroa$1874$0$copyload80;\n        break;\n       }\n      }\n     } else {\n      $$35$lcssa = $$34$lcssa;$$35968$lcssa = $$34967$lcssa;$$391027$lcssa = $$381026$lcssa;$$391083$lcssa = $$381082$lcssa;$$lcssa1256 = $595;$$sroa$1874$0$copyload80$lcssa = $$sroa$1874$0$copyload801727;\n     }\n     $$sroa$42$0$$sroa_idx110 = (((($571) + ($$lcssa1256<<2)|0)) + 2|0);\n     $$sroa$42$0$copyload111 = HEAP16[$$sroa$42$0$$sroa_idx110>>1]|0;\n     $$sroa$057$0$$sroa_idx70 = (($571) + ($$lcssa1256<<2)|0);\n     $$sroa$057$0$copyload71 = HEAP8[$$sroa$057$0$$sroa_idx70>>0]|0;\n     $613 = $$35968$lcssa >>> $$lcssa1242;\n     $614 = (($$35$lcssa) - ($$lcssa1242))|0;\n     HEAP32[$43>>2] = $$lcssa1242;\n     $$36 = $614;$$36969 = $613;$$401028 = $$391027$lcssa;$$401084 = $$391083$lcssa;$$sroa$057$0 = $$sroa$057$0$copyload71;$$sroa$1874$0 = $$sroa$1874$0$copyload80$lcssa;$$sroa$42$0 = $$sroa$42$0$copyload111;$619 = $$lcssa1242;\n    } else {\n     $$36 = $$34$lcssa;$$36969 = $$34967$lcssa;$$401028 = $$381026$lcssa;$$401084 = $$381082$lcssa;$$sroa$057$0 = $$sroa$057$0$copyload69$lcssa;$$sroa$1874$0 = $$sroa$1874$0$copyload78$lcssa;$$sroa$42$0 = $$sroa$42$0$copyload109$lcssa;$619 = 0;\n    }\n    $615 = $$sroa$1874$0&255;\n    $616 = $$36969 >>> $615;\n    $617 = (($$36) - ($615))|0;\n    $618 = (($619) + ($615))|0;\n    HEAP32[$43>>2] = $618;\n    $620 = $$sroa$42$0&65535;\n    HEAP32[$34>>2] = $620;\n    $621 = $$sroa$057$0&255;\n    $622 = ($$sroa$057$0<<24>>24)==(0);\n    if ($622) {\n     HEAP32[$5>>2] = 25;\n     $$0$be = $$3;$$01042$be = $338;$$01044$be = $$401084;$$0917$be = $$0917;$$0922$be = $617;$$0933$be = $616;$$0987$be = $$0987;$$0988$be = $$401028;\n     break;\n    }\n    $623 = $621 & 32;\n    $624 = ($623|0)==(0);\n    if (!($624)) {\n     HEAP32[$43>>2] = -1;\n     HEAP32[$5>>2] = 11;\n     $$0$be = $$3;$$01042$be = $338;$$01044$be = $$401084;$$0917$be = $$0917;$$0922$be = $617;$$0933$be = $616;$$0987$be = $$0987;$$0988$be = $$401028;\n     break;\n    }\n    $625 = $621 & 64;\n    $626 = ($625|0)==(0);\n    if ($626) {\n     $627 = $621 & 15;\n     HEAP32[$44>>2] = $627;\n     HEAP32[$5>>2] = 21;\n     $$37 = $617;$$37970 = $616;$$4 = $$3;$$411029 = $$401028;$$411085 = $$401084;$628 = $627;\n     label = 219;\n     break;\n    } else {\n     HEAP32[$30>>2] = 28522;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$3;$$01042$be = $338;$$01044$be = $$401084;$$0917$be = $$0917;$$0922$be = $617;$$0933$be = $616;$$0987$be = $$0987;$$0988$be = $$401028;\n     break;\n    }\n   }\n  } while(0);\n  if ((label|0) == 73) {\n   label = 0;\n   $211 = HEAP32[$28>>2]|0;\n   $212 = $211 & 1024;\n   $213 = ($212|0)==(0);\n   if ($213) {\n    $$101054 = $$81052;$$10998 = $$8996;\n   } else {\n    $214 = HEAP32[$34>>2]|0;\n    $215 = ($214>>>0)>($$8996>>>0);\n    $$8996$ = $215 ? $$8996 : $214;\n    $216 = ($$8996$|0)==(0);\n    if ($216) {\n     $$91053 = $$81052;$$9997 = $$8996;$241 = $214;\n    } else {\n     $217 = HEAP32[$29>>2]|0;\n     $218 = ($217|0)==(0|0);\n     if ($218) {\n      $233 = $211;\n     } else {\n      $219 = ((($217)) + 16|0);\n      $220 = HEAP32[$219>>2]|0;\n      $221 = ($220|0)==(0|0);\n      if ($221) {\n       $233 = $211;\n      } else {\n       $222 = ((($217)) + 20|0);\n       $223 = HEAP32[$222>>2]|0;\n       $224 = (($223) - ($214))|0;\n       $225 = (($220) + ($224)|0);\n       $226 = (($224) + ($$8996$))|0;\n       $227 = ((($217)) + 24|0);\n       $228 = HEAP32[$227>>2]|0;\n       $229 = ($226>>>0)>($228>>>0);\n       $230 = (($228) - ($224))|0;\n       $231 = $229 ? $230 : $$8996$;\n       _memcpy(($225|0),($$81052|0),($231|0))|0;\n       $$pre2368 = HEAP32[$28>>2]|0;\n       $233 = $$pre2368;\n      }\n     }\n     $232 = $233 & 512;\n     $234 = ($232|0)==(0);\n     if (!($234)) {\n      $235 = HEAP32[$26>>2]|0;\n      $236 = (_crc32($235,$$81052,$$8996$)|0);\n      HEAP32[$26>>2] = $236;\n     }\n     $237 = (($$8996) - ($$8996$))|0;\n     $238 = (($$81052) + ($$8996$)|0);\n     $239 = HEAP32[$34>>2]|0;\n     $240 = (($239) - ($$8996$))|0;\n     HEAP32[$34>>2] = $240;\n     $$91053 = $238;$$9997 = $237;$241 = $240;\n    }\n    $242 = ($241|0)==(0);\n    if ($242) {\n     $$101054 = $$91053;$$10998 = $$9997;\n    } else {\n     $$53$ph = $$8930;$$53986$ph = $$8941;$$57$ph = $$9997;$$571101$ph = $$91053;$$8$ph = $$0;$$ph = $$0987;\n     label = 282;\n     break;\n    }\n   }\n   HEAP32[$34>>2] = 0;\n   HEAP32[$5>>2] = 6;\n   $$111055 = $$101054;$$11999 = $$10998;$$9931 = $$8930;$$9942 = $$8941;\n   label = 83;\n  }\n  else if ((label|0) == 219) {\n   label = 0;\n   $629 = ($628|0)==(0);\n   if ($629) {\n    $$pre2363 = HEAP32[$34>>2]|0;\n    $$39 = $$37;$$39972 = $$37970;$$431031 = $$411029;$$431087 = $$411085;$649 = $$pre2363;\n   } else {\n    $630 = ($$37>>>0)<($628>>>0);\n    if ($630) {\n     $$381744 = $$37;$$389711743 = $$37970;$$4210301742 = $$411029;$$4210861741 = $$411085;\n     while(1) {\n      $631 = ($$4210301742|0)==(0);\n      if ($631) {\n       $$4921 = $$0917;$$53 = $$381744;$$53986 = $$389711743;$$57 = 0;$$571101 = $$4210861741;$$8 = $$4;$817 = $$0987;\n       break L17;\n      }\n      $632 = (($$4210301742) + -1)|0;\n      $633 = ((($$4210861741)) + 1|0);\n      $634 = HEAP8[$$4210861741>>0]|0;\n      $635 = $634&255;\n      $636 = $635 << $$381744;\n      $637 = (($636) + ($$389711743))|0;\n      $638 = (($$381744) + 8)|0;\n      $639 = ($638>>>0)<($628>>>0);\n      if ($639) {\n       $$381744 = $638;$$389711743 = $637;$$4210301742 = $632;$$4210861741 = $633;\n      } else {\n       $$38$lcssa = $638;$$38971$lcssa = $637;$$421030$lcssa = $632;$$421086$lcssa = $633;\n       break;\n      }\n     }\n    } else {\n     $$38$lcssa = $$37;$$38971$lcssa = $$37970;$$421030$lcssa = $$411029;$$421086$lcssa = $$411085;\n    }\n    $640 = 1 << $628;\n    $641 = (($640) + -1)|0;\n    $642 = $641 & $$38971$lcssa;\n    $643 = HEAP32[$34>>2]|0;\n    $644 = (($643) + ($642))|0;\n    HEAP32[$34>>2] = $644;\n    $645 = $$38971$lcssa >>> $628;\n    $646 = (($$38$lcssa) - ($628))|0;\n    $647 = HEAP32[$43>>2]|0;\n    $648 = (($647) + ($628))|0;\n    HEAP32[$43>>2] = $648;\n    $$39 = $646;$$39972 = $645;$$431031 = $$421030$lcssa;$$431087 = $$421086$lcssa;$649 = $644;\n   }\n   HEAP32[$45>>2] = $649;\n   HEAP32[$5>>2] = 22;\n   $$40$ph = $$39;$$40973$ph = $$39972;$$441032$ph = $$431031;$$441088$ph = $$431087;$$5$ph = $$4;\n   label = 226;\n  }\n  do {\n   if ((label|0) == 83) {\n    label = 0;\n    $243 = HEAP32[$28>>2]|0;\n    $244 = $243 & 2048;\n    $245 = ($244|0)==(0);\n    if ($245) {\n     $270 = HEAP32[$29>>2]|0;\n     $271 = ($270|0)==(0|0);\n     if ($271) {\n      $$121000 = $$11999;$$121056 = $$111055;\n     } else {\n      $272 = ((($270)) + 28|0);\n      HEAP32[$272>>2] = 0;\n      $$121000 = $$11999;$$121056 = $$111055;\n     }\n    } else {\n     $246 = ($$11999|0)==(0);\n     if ($246) {\n      $$53$ph = $$9931;$$53986$ph = $$9942;$$57$ph = 0;$$571101$ph = $$111055;$$8$ph = $$0;$$ph = $$0987;\n      label = 282;\n      break L17;\n     } else {\n      $$1908 = 0;\n     }\n     while(1) {\n      $247 = (($$1908) + 1)|0;\n      $248 = (($$111055) + ($$1908)|0);\n      $249 = HEAP8[$248>>0]|0;\n      $250 = HEAP32[$29>>2]|0;\n      $251 = ($250|0)==(0|0);\n      if (!($251)) {\n       $252 = ((($250)) + 28|0);\n       $253 = HEAP32[$252>>2]|0;\n       $254 = ($253|0)==(0|0);\n       if (!($254)) {\n        $255 = HEAP32[$34>>2]|0;\n        $256 = ((($250)) + 32|0);\n        $257 = HEAP32[$256>>2]|0;\n        $258 = ($255>>>0)<($257>>>0);\n        if ($258) {\n         $259 = (($255) + 1)|0;\n         HEAP32[$34>>2] = $259;\n         $260 = (($253) + ($255)|0);\n         HEAP8[$260>>0] = $249;\n        }\n       }\n      }\n      $261 = ($249<<24>>24)!=(0);\n      $262 = ($$11999>>>0)>($247>>>0);\n      $or$cond1103 = $261 & $262;\n      if ($or$cond1103) {\n       $$1908 = $247;\n      } else {\n       break;\n      }\n     }\n     $263 = HEAP32[$28>>2]|0;\n     $264 = $263 & 512;\n     $265 = ($264|0)==(0);\n     if (!($265)) {\n      $266 = HEAP32[$26>>2]|0;\n      $267 = (_crc32($266,$$111055,$247)|0);\n      HEAP32[$26>>2] = $267;\n     }\n     $268 = (($$11999) - ($247))|0;\n     $269 = (($$111055) + ($247)|0);\n     if ($261) {\n      $$53$ph = $$9931;$$53986$ph = $$9942;$$57$ph = $268;$$571101$ph = $269;$$8$ph = $$0;$$ph = $$0987;\n      label = 282;\n      break L17;\n     } else {\n      $$121000 = $268;$$121056 = $269;\n     }\n    }\n    HEAP32[$34>>2] = 0;\n    HEAP32[$5>>2] = 7;\n    $$10932 = $$9931;$$10943 = $$9942;$$131001 = $$121000;$$131057 = $$121056;\n    label = 96;\n   }\n   else if ((label|0) == 226) {\n    label = 0;\n    $650 = HEAP32[$41>>2]|0;\n    $651 = 1 << $650;\n    $652 = (($651) + -1)|0;\n    $653 = $652 & $$40973$ph;\n    $654 = HEAP32[$40>>2]|0;\n    $$sroa$1874$0$$sroa_idx751754 = (((($654) + ($653<<2)|0)) + 1|0);\n    $$sroa$1874$0$copyload761755 = HEAP8[$$sroa$1874$0$$sroa_idx751754>>0]|0;\n    $655 = $$sroa$1874$0$copyload761755&255;\n    $656 = ($655>>>0)>($$40$ph>>>0);\n    if ($656) {\n     $$401761 = $$40$ph;$$409731760 = $$40973$ph;$$4410321759 = $$441032$ph;$$4410881758 = $$441088$ph;\n     while(1) {\n      $657 = ($$4410321759|0)==(0);\n      if ($657) {\n       $$4921 = $$0917;$$53 = $$401761;$$53986 = $$409731760;$$57 = 0;$$571101 = $$4410881758;$$8 = $$5$ph;$817 = $$0987;\n       break L17;\n      }\n      $658 = (($$4410321759) + -1)|0;\n      $659 = ((($$4410881758)) + 1|0);\n      $660 = HEAP8[$$4410881758>>0]|0;\n      $661 = $660&255;\n      $662 = $661 << $$401761;\n      $663 = (($662) + ($$409731760))|0;\n      $664 = (($$401761) + 8)|0;\n      $665 = $652 & $663;\n      $$sroa$1874$0$$sroa_idx75 = (((($654) + ($665<<2)|0)) + 1|0);\n      $$sroa$1874$0$copyload76 = HEAP8[$$sroa$1874$0$$sroa_idx75>>0]|0;\n      $666 = $$sroa$1874$0$copyload76&255;\n      $667 = ($666>>>0)>($664>>>0);\n      if ($667) {\n       $$401761 = $664;$$409731760 = $663;$$4410321759 = $658;$$4410881758 = $659;\n      } else {\n       $$40$lcssa = $664;$$40973$lcssa = $663;$$441032$lcssa = $658;$$441088$lcssa = $659;$$lcssa1268 = $666;$$pn = $665;$$sroa$1874$0$copyload76$lcssa = $$sroa$1874$0$copyload76;\n       break;\n      }\n     }\n    } else {\n     $$40$lcssa = $$40$ph;$$40973$lcssa = $$40973$ph;$$441032$lcssa = $$441032$ph;$$441088$lcssa = $$441088$ph;$$lcssa1268 = $655;$$pn = $653;$$sroa$1874$0$copyload76$lcssa = $$sroa$1874$0$copyload761755;\n    }\n    $$sroa$42$0$copyload107$lcssa$in = (((($654) + ($$pn<<2)|0)) + 2|0);\n    $$sroa$057$0$copyload67$lcssa$in = (($654) + ($$pn<<2)|0);\n    $$sroa$42$0$copyload107$lcssa = HEAP16[$$sroa$42$0$copyload107$lcssa$in>>1]|0;\n    $$sroa$057$0$copyload67$lcssa = HEAP8[$$sroa$057$0$copyload67$lcssa$in>>0]|0;\n    $668 = $$sroa$057$0$copyload67$lcssa&255;\n    $669 = $668 & 240;\n    $670 = ($669|0)==(0);\n    if ($670) {\n     $671 = $$sroa$42$0$copyload107$lcssa&65535;\n     $672 = (($$lcssa1268) + ($668))|0;\n     $673 = 1 << $672;\n     $674 = (($673) + -1)|0;\n     $675 = $$40973$lcssa & $674;\n     $676 = $675 >>> $$lcssa1268;\n     $677 = (($676) + ($671))|0;\n     $$sroa$1874$0$$sroa_idx1777 = (((($654) + ($677<<2)|0)) + 1|0);\n     $$sroa$1874$0$copyload1778 = HEAP8[$$sroa$1874$0$$sroa_idx1777>>0]|0;\n     $678 = $$sroa$1874$0$copyload1778&255;\n     $679 = (($678) + ($$lcssa1268))|0;\n     $680 = ($679>>>0)>($$40$lcssa>>>0);\n     if ($680) {\n      $$411782 = $$40$lcssa;$$419741781 = $$40973$lcssa;$$4510331780 = $$441032$lcssa;$$4510891779 = $$441088$lcssa;\n      while(1) {\n       $681 = ($$4510331780|0)==(0);\n       if ($681) {\n        $$4921 = $$0917;$$53 = $$411782;$$53986 = $$419741781;$$57 = 0;$$571101 = $$4510891779;$$8 = $$5$ph;$817 = $$0987;\n        break L17;\n       }\n       $682 = (($$4510331780) + -1)|0;\n       $683 = ((($$4510891779)) + 1|0);\n       $684 = HEAP8[$$4510891779>>0]|0;\n       $685 = $684&255;\n       $686 = $685 << $$411782;\n       $687 = (($686) + ($$419741781))|0;\n       $688 = (($$411782) + 8)|0;\n       $689 = $687 & $674;\n       $690 = $689 >>> $$lcssa1268;\n       $691 = (($690) + ($671))|0;\n       $$sroa$1874$0$$sroa_idx = (((($654) + ($691<<2)|0)) + 1|0);\n       $$sroa$1874$0$copyload = HEAP8[$$sroa$1874$0$$sroa_idx>>0]|0;\n       $692 = $$sroa$1874$0$copyload&255;\n       $693 = (($692) + ($$lcssa1268))|0;\n       $694 = ($693>>>0)>($688>>>0);\n       if ($694) {\n        $$411782 = $688;$$419741781 = $687;$$4510331780 = $682;$$4510891779 = $683;\n       } else {\n        $$41$lcssa = $688;$$41974$lcssa = $687;$$451033$lcssa = $682;$$451089$lcssa = $683;$$lcssa1282 = $691;$$sroa$1874$0$copyload$lcssa = $$sroa$1874$0$copyload;\n        break;\n       }\n      }\n     } else {\n      $$41$lcssa = $$40$lcssa;$$41974$lcssa = $$40973$lcssa;$$451033$lcssa = $$441032$lcssa;$$451089$lcssa = $$441088$lcssa;$$lcssa1282 = $677;$$sroa$1874$0$copyload$lcssa = $$sroa$1874$0$copyload1778;\n     }\n     $$sroa$42$0$$sroa_idx104 = (((($654) + ($$lcssa1282<<2)|0)) + 2|0);\n     $$sroa$42$0$copyload = HEAP16[$$sroa$42$0$$sroa_idx104>>1]|0;\n     $$sroa$057$0$$sroa_idx = (($654) + ($$lcssa1282<<2)|0);\n     $$sroa$057$0$copyload = HEAP8[$$sroa$057$0$$sroa_idx>>0]|0;\n     $695 = $$41974$lcssa >>> $$lcssa1268;\n     $696 = (($$41$lcssa) - ($$lcssa1268))|0;\n     $697 = HEAP32[$43>>2]|0;\n     $698 = (($697) + ($$lcssa1268))|0;\n     HEAP32[$43>>2] = $698;\n     $$42 = $696;$$42975 = $695;$$461034 = $$451033$lcssa;$$461090 = $$451089$lcssa;$$sroa$057$1 = $$sroa$057$0$copyload;$$sroa$1874$1 = $$sroa$1874$0$copyload$lcssa;$$sroa$42$1 = $$sroa$42$0$copyload;$703 = $698;\n    } else {\n     $$pre2365 = HEAP32[$43>>2]|0;\n     $$42 = $$40$lcssa;$$42975 = $$40973$lcssa;$$461034 = $$441032$lcssa;$$461090 = $$441088$lcssa;$$sroa$057$1 = $$sroa$057$0$copyload67$lcssa;$$sroa$1874$1 = $$sroa$1874$0$copyload76$lcssa;$$sroa$42$1 = $$sroa$42$0$copyload107$lcssa;$703 = $$pre2365;\n    }\n    $699 = $$sroa$1874$1&255;\n    $700 = $$42975 >>> $699;\n    $701 = (($$42) - ($699))|0;\n    $702 = (($703) + ($699))|0;\n    HEAP32[$43>>2] = $702;\n    $704 = $$sroa$057$1&255;\n    $705 = $704 & 64;\n    $706 = ($705|0)==(0);\n    if ($706) {\n     $707 = $$sroa$42$1&65535;\n     HEAP32[$46>>2] = $707;\n     $708 = $704 & 15;\n     HEAP32[$44>>2] = $708;\n     HEAP32[$5>>2] = 23;\n     $$43 = $701;$$43976 = $700;$$471035 = $$461034;$$471091 = $$461090;$$6 = $$5$ph;$709 = $708;\n     label = 238;\n     break;\n    } else {\n     HEAP32[$30>>2] = 28500;\n     HEAP32[$5>>2] = 29;\n     $$0$be = $$5$ph;$$01042$be = $338;$$01044$be = $$461090;$$0917$be = $$0917;$$0922$be = $701;$$0933$be = $700;$$0987$be = $$0987;$$0988$be = $$461034;\n     break;\n    }\n   }\n  } while(0);\n  if ((label|0) == 96) {\n   label = 0;\n   $273 = HEAP32[$28>>2]|0;\n   $274 = $273 & 4096;\n   $275 = ($274|0)==(0);\n   if ($275) {\n    $300 = HEAP32[$29>>2]|0;\n    $301 = ($300|0)==(0|0);\n    if ($301) {\n     $$141002 = $$131001;$$141058 = $$131057;\n    } else {\n     $302 = ((($300)) + 36|0);\n     HEAP32[$302>>2] = 0;\n     $$141002 = $$131001;$$141058 = $$131057;\n    }\n   } else {\n    $276 = ($$131001|0)==(0);\n    if ($276) {\n     $$53$ph = $$10932;$$53986$ph = $$10943;$$57$ph = 0;$$571101$ph = $$131057;$$8$ph = $$0;$$ph = $$0987;\n     label = 282;\n     break;\n    } else {\n     $$2909 = 0;\n    }\n    while(1) {\n     $277 = (($$2909) + 1)|0;\n     $278 = (($$131057) + ($$2909)|0);\n     $279 = HEAP8[$278>>0]|0;\n     $280 = HEAP32[$29>>2]|0;\n     $281 = ($280|0)==(0|0);\n     if (!($281)) {\n      $282 = ((($280)) + 36|0);\n      $283 = HEAP32[$282>>2]|0;\n      $284 = ($283|0)==(0|0);\n      if (!($284)) {\n       $285 = HEAP32[$34>>2]|0;\n       $286 = ((($280)) + 40|0);\n       $287 = HEAP32[$286>>2]|0;\n       $288 = ($285>>>0)<($287>>>0);\n       if ($288) {\n        $289 = (($285) + 1)|0;\n        HEAP32[$34>>2] = $289;\n        $290 = (($283) + ($285)|0);\n        HEAP8[$290>>0] = $279;\n       }\n      }\n     }\n     $291 = ($279<<24>>24)!=(0);\n     $292 = ($$131001>>>0)>($277>>>0);\n     $or$cond1104 = $291 & $292;\n     if ($or$cond1104) {\n      $$2909 = $277;\n     } else {\n      break;\n     }\n    }\n    $293 = HEAP32[$28>>2]|0;\n    $294 = $293 & 512;\n    $295 = ($294|0)==(0);\n    if (!($295)) {\n     $296 = HEAP32[$26>>2]|0;\n     $297 = (_crc32($296,$$131057,$277)|0);\n     HEAP32[$26>>2] = $297;\n    }\n    $298 = (($$131001) - ($277))|0;\n    $299 = (($$131057) + ($277)|0);\n    if ($291) {\n     $$53$ph = $$10932;$$53986$ph = $$10943;$$57$ph = $298;$$571101$ph = $299;$$8$ph = $$0;$$ph = $$0987;\n     label = 282;\n     break;\n    } else {\n     $$141002 = $298;$$141058 = $299;\n    }\n   }\n   HEAP32[$5>>2] = 8;\n   $$11 = $$10932;$$11944 = $$10943;$$151003 = $$141002;$$151059 = $$141058;\n   label = 109;\n  }\n  else if ((label|0) == 238) {\n   label = 0;\n   $710 = ($709|0)==(0);\n   if ($710) {\n    $$45 = $$43;$$45978 = $$43976;$$491037 = $$471035;$$491093 = $$471091;\n   } else {\n    $711 = ($$43>>>0)<($709>>>0);\n    if ($711) {\n     $$441795 = $$43;$$449771794 = $$43976;$$4810361793 = $$471035;$$4810921792 = $$471091;\n     while(1) {\n      $712 = ($$4810361793|0)==(0);\n      if ($712) {\n       $$4921 = $$0917;$$53 = $$441795;$$53986 = $$449771794;$$57 = 0;$$571101 = $$4810921792;$$8 = $$6;$817 = $$0987;\n       break L17;\n      }\n      $713 = (($$4810361793) + -1)|0;\n      $714 = ((($$4810921792)) + 1|0);\n      $715 = HEAP8[$$4810921792>>0]|0;\n      $716 = $715&255;\n      $717 = $716 << $$441795;\n      $718 = (($717) + ($$449771794))|0;\n      $719 = (($$441795) + 8)|0;\n      $720 = ($719>>>0)<($709>>>0);\n      if ($720) {\n       $$441795 = $719;$$449771794 = $718;$$4810361793 = $713;$$4810921792 = $714;\n      } else {\n       $$44$lcssa = $719;$$44977$lcssa = $718;$$481036$lcssa = $713;$$481092$lcssa = $714;\n       break;\n      }\n     }\n    } else {\n     $$44$lcssa = $$43;$$44977$lcssa = $$43976;$$481036$lcssa = $$471035;$$481092$lcssa = $$471091;\n    }\n    $721 = 1 << $709;\n    $722 = (($721) + -1)|0;\n    $723 = $722 & $$44977$lcssa;\n    $724 = HEAP32[$46>>2]|0;\n    $725 = (($724) + ($723))|0;\n    HEAP32[$46>>2] = $725;\n    $726 = $$44977$lcssa >>> $709;\n    $727 = (($$44$lcssa) - ($709))|0;\n    $728 = HEAP32[$43>>2]|0;\n    $729 = (($728) + ($709))|0;\n    HEAP32[$43>>2] = $729;\n    $$45 = $727;$$45978 = $726;$$491037 = $$481036$lcssa;$$491093 = $$481092$lcssa;\n   }\n   HEAP32[$5>>2] = 24;\n   $$46 = $$45;$$46979 = $$45978;$$501038 = $$491037;$$501094 = $$491093;$$7 = $$6;\n   label = 244;\n  }\n  do {\n   if ((label|0) == 109) {\n    label = 0;\n    $303 = HEAP32[$28>>2]|0;\n    $304 = $303 & 512;\n    $305 = ($304|0)==(0);\n    if ($305) {\n     $$13 = $$11;$$13946 = $$11944;$$171005 = $$151003;$$171061 = $$151059;\n    } else {\n     $306 = ($$11>>>0)<(16);\n     if ($306) {\n      $$121873 = $$11;$$129451872 = $$11944;$$1610041871 = $$151003;$$1610601870 = $$151059;\n      while(1) {\n       $307 = ($$1610041871|0)==(0);\n       if ($307) {\n        $$4921 = $$0917;$$53 = $$121873;$$53986 = $$129451872;$$57 = 0;$$571101 = $$1610601870;$$8 = $$0;$817 = $$0987;\n        break L17;\n       }\n       $308 = (($$1610041871) + -1)|0;\n       $309 = ((($$1610601870)) + 1|0);\n       $310 = HEAP8[$$1610601870>>0]|0;\n       $311 = $310&255;\n       $312 = $311 << $$121873;\n       $313 = (($312) + ($$129451872))|0;\n       $314 = (($$121873) + 8)|0;\n       $315 = ($314>>>0)<(16);\n       if ($315) {\n        $$121873 = $314;$$129451872 = $313;$$1610041871 = $308;$$1610601870 = $309;\n       } else {\n        $$12$lcssa = $314;$$12945$lcssa = $313;$$161004$lcssa = $308;$$161060$lcssa = $309;\n        break;\n       }\n      }\n     } else {\n      $$12$lcssa = $$11;$$12945$lcssa = $$11944;$$161004$lcssa = $$151003;$$161060$lcssa = $$151059;\n     }\n     $316 = HEAP32[$26>>2]|0;\n     $317 = $316 & 65535;\n     $318 = ($$12945$lcssa|0)==($317|0);\n     if ($318) {\n      $$13 = 0;$$13946 = 0;$$171005 = $$161004$lcssa;$$171061 = $$161060$lcssa;\n     } else {\n      HEAP32[$30>>2] = 27281;\n      HEAP32[$5>>2] = 29;\n      $$0$be = $$0;$$01042$be = $338;$$01044$be = $$161060$lcssa;$$0917$be = $$0917;$$0922$be = $$12$lcssa;$$0933$be = $$12945$lcssa;$$0987$be = $$0987;$$0988$be = $$161004$lcssa;\n      break;\n     }\n    }\n    $319 = HEAP32[$29>>2]|0;\n    $320 = ($319|0)==(0|0);\n    if (!($320)) {\n     $321 = $303 >>> 9;\n     $322 = $321 & 1;\n     $323 = ((($319)) + 44|0);\n     HEAP32[$323>>2] = $322;\n     $324 = ((($319)) + 48|0);\n     HEAP32[$324>>2] = 1;\n    }\n    $325 = (_crc32(0,0,0)|0);\n    HEAP32[$26>>2] = $325;\n    HEAP32[$33>>2] = $325;\n    HEAP32[$5>>2] = 11;\n    $$0$be = $$0;$$01042$be = $338;$$01044$be = $$171061;$$0917$be = $$0917;$$0922$be = $$13;$$0933$be = $$13946;$$0987$be = $$0987;$$0988$be = $$171005;\n   }\n   else if ((label|0) == 244) {\n    label = 0;\n    $730 = ($$0987|0)==(0);\n    if ($730) {\n     $$53$ph = $$46;$$53986$ph = $$46979;$$57$ph = $$501038;$$571101$ph = $$501094;$$8$ph = $$7;$$ph = 0;\n     label = 282;\n     break L17;\n    }\n    $731 = (($$0917) - ($$0987))|0;\n    $732 = HEAP32[$46>>2]|0;\n    $733 = ($732>>>0)>($731>>>0);\n    if ($733) {\n     $734 = (($732) - ($731))|0;\n     $735 = HEAP32[$47>>2]|0;\n     $736 = ($734>>>0)>($735>>>0);\n     if ($736) {\n      $737 = HEAP32[$48>>2]|0;\n      $738 = ($737|0)==(0);\n      if (!($738)) {\n       HEAP32[$30>>2] = 28470;\n       HEAP32[$5>>2] = 29;\n       $$0$be = $$7;$$01042$be = $338;$$01044$be = $$501094;$$0917$be = $$0917;$$0922$be = $$46;$$0933$be = $$46979;$$0987$be = $$0987;$$0988$be = $$501038;\n       break;\n      }\n     }\n     $739 = HEAP32[$49>>2]|0;\n     $740 = ($734>>>0)>($739>>>0);\n     if ($740) {\n      $741 = (($734) - ($739))|0;\n      $742 = HEAP32[$50>>2]|0;\n      $743 = HEAP32[$51>>2]|0;\n      $744 = (($743) - ($741))|0;\n      $745 = (($742) + ($744)|0);\n      $$0904 = $745;$$7914 = $741;\n     } else {\n      $746 = HEAP32[$50>>2]|0;\n      $747 = (($739) - ($734))|0;\n      $748 = (($746) + ($747)|0);\n      $$0904 = $748;$$7914 = $734;\n     }\n     $749 = HEAP32[$34>>2]|0;\n     $750 = ($$7914>>>0)>($749>>>0);\n     $$$7914 = $750 ? $749 : $$7914;\n     $$1905 = $$0904;$$8915 = $$$7914;$756 = $749;\n    } else {\n     $751 = (0 - ($732))|0;\n     $752 = (($338) + ($751)|0);\n     $753 = HEAP32[$34>>2]|0;\n     $$1905 = $752;$$8915 = $753;$756 = $753;\n    }\n    $754 = ($$8915>>>0)>($$0987>>>0);\n    $$0987$$8915 = $754 ? $$0987 : $$8915;\n    $755 = (($756) - ($$0987$$8915))|0;\n    HEAP32[$34>>2] = $755;\n    $$10 = $$0987$$8915;$$11043 = $338;$$2906 = $$1905;\n    while(1) {\n     $757 = ((($$2906)) + 1|0);\n     $758 = HEAP8[$$2906>>0]|0;\n     $759 = ((($$11043)) + 1|0);\n     HEAP8[$$11043>>0] = $758;\n     $760 = (($$10) + -1)|0;\n     $761 = ($760|0)==(0);\n     if ($761) {\n      break;\n     } else {\n      $$10 = $760;$$11043 = $759;$$2906 = $757;\n     }\n    }\n    $762 = (($$0987) - ($$0987$$8915))|0;\n    $763 = HEAP32[$34>>2]|0;\n    $764 = ($763|0)==(0);\n    if ($764) {\n     HEAP32[$5>>2] = 20;\n     $$0$be = $$7;$$01042$be = $759;$$01044$be = $$501094;$$0917$be = $$0917;$$0922$be = $$46;$$0933$be = $$46979;$$0987$be = $762;$$0988$be = $$501038;\n    } else {\n     $$0$be = $$7;$$01042$be = $759;$$01044$be = $$501094;$$0917$be = $$0917;$$0922$be = $$46;$$0933$be = $$46979;$$0987$be = $762;$$0988$be = $$501038;\n    }\n   }\n  } while(0);\n  $$pre = HEAP32[$5>>2]|0;\n  $$0 = $$0$be;$$01044 = $$01044$be;$$0917 = $$0917$be;$$0922 = $$0922$be;$$0933 = $$0933$be;$$0987 = $$0987$be;$$0988 = $$0988$be;$338 = $$01042$be;$65 = $$pre;\n }\n if ((label|0) == 122) {\n  HEAP32[$7>>2] = $338;\n  HEAP32[$17>>2] = $$0987;\n  HEAP32[$0>>2] = $$191063;\n  HEAP32[$19>>2] = $$191007;\n  HEAP32[$21>>2] = $$15948;\n  HEAP32[$23>>2] = $$15;\n  $$01102 = 2;\n  STACKTOP = sp;return ($$01102|0);\n }\n else if ((label|0) == 133) {\n  $356 = $$18951$lcssa >>> 3;\n  $357 = (($$18$lcssa) + -3)|0;\n  $$4921 = $$0917;$$53 = $357;$$53986 = $356;$$57 = $$221010$lcssa;$$571101 = $$221066$lcssa;$$8 = $$0;$817 = $$0987;\n }\n else if ((label|0) == 136) {\n  // unreachable;\n }\n else if ((label|0) == 281) {\n  HEAP32[$5>>2] = 28;\n  $$4921 = $$2919;$$53 = $$51;$$53986 = $$51984;$$57 = $$55;$$571101 = $$551099;$$8 = 1;$817 = $$0987;\n }\n else if ((label|0) == 282) {\n  $$4921 = $$0917;$$53 = $$53$ph;$$53986 = $$53986$ph;$$57 = $$57$ph;$$571101 = $$571101$ph;$$8 = $$8$ph;$817 = $$ph;\n }\n else if ((label|0) == 296) {\n  $$01102 = -4;\n  STACKTOP = sp;return ($$01102|0);\n }\n else if ((label|0) == 297) {\n  STACKTOP = sp;return ($$01102|0);\n }\n HEAP32[$7>>2] = $338;\n HEAP32[$17>>2] = $817;\n HEAP32[$0>>2] = $$571101;\n HEAP32[$19>>2] = $$57;\n HEAP32[$21>>2] = $$53986;\n HEAP32[$23>>2] = $$53;\n $818 = HEAP32[$51>>2]|0;\n $819 = ($818|0)==(0);\n if ($819) {\n  $820 = ($$4921|0)==($817|0);\n  if ($820) {\n   $829 = $$57;$831 = $817;\n  } else {\n   $821 = HEAP32[$5>>2]|0;\n   $822 = ($821>>>0)<(29);\n   if ($822) {\n    $823 = ($821>>>0)<(26);\n    $824 = ($1|0)!=(4);\n    $or$cond8 = $824 | $823;\n    if ($or$cond8) {\n     label = 287;\n    } else {\n     $829 = $$57;$831 = $817;\n    }\n   } else {\n    $829 = $$57;$831 = $817;\n   }\n  }\n } else {\n  label = 287;\n }\n do {\n  if ((label|0) == 287) {\n   $825 = (($$4921) - ($817))|0;\n   $826 = (_updatewindow($0,$338,$825)|0);\n   $827 = ($826|0)==(0);\n   if ($827) {\n    $$pre2370 = HEAP32[$19>>2]|0;\n    $$pre2371 = HEAP32[$17>>2]|0;\n    $829 = $$pre2370;$831 = $$pre2371;\n    break;\n   }\n   HEAP32[$5>>2] = 30;\n   $$01102 = -4;\n   STACKTOP = sp;return ($$01102|0);\n  }\n } while(0);\n $828 = (($20) - ($829))|0;\n $830 = (($$4921) - ($831))|0;\n $832 = ((($0)) + 8|0);\n $833 = HEAP32[$832>>2]|0;\n $834 = (($833) + ($828))|0;\n HEAP32[$832>>2] = $834;\n $835 = HEAP32[$52>>2]|0;\n $836 = (($835) + ($830))|0;\n HEAP32[$52>>2] = $836;\n $837 = HEAP32[$53>>2]|0;\n $838 = (($837) + ($830))|0;\n HEAP32[$53>>2] = $838;\n $839 = HEAP32[$25>>2]|0;\n $840 = ($839|0)!=(0);\n $841 = ($830|0)!=(0);\n $or$cond10 = $841 & $840;\n if ($or$cond10) {\n  $842 = HEAP32[$28>>2]|0;\n  $843 = ($842|0)==(0);\n  $844 = HEAP32[$26>>2]|0;\n  $845 = HEAP32[$7>>2]|0;\n  $846 = (0 - ($830))|0;\n  $847 = (($845) + ($846)|0);\n  if ($843) {\n   $849 = (_adler32($844,$847,$830)|0);\n   $850 = $849;\n  } else {\n   $848 = (_crc32($844,$847,$830)|0);\n   $850 = $848;\n  }\n  HEAP32[$26>>2] = $850;\n  HEAP32[$33>>2] = $850;\n }\n $851 = HEAP32[$23>>2]|0;\n $852 = HEAP32[$37>>2]|0;\n $853 = ($852|0)!=(0);\n $854 = $853 ? 64 : 0;\n $855 = (($854) + ($851))|0;\n $856 = HEAP32[$5>>2]|0;\n $857 = ($856|0)==(11);\n $858 = $857 ? 128 : 0;\n $859 = (($855) + ($858))|0;\n $860 = ($856|0)==(19);\n $861 = ($856|0)==(14);\n $862 = $860 | $861;\n $863 = $862 ? 256 : 0;\n $864 = (($859) + ($863))|0;\n $865 = ((($0)) + 44|0);\n HEAP32[$865>>2] = $864;\n $866 = $830 | $828;\n $867 = ($866|0)==(0);\n $868 = ($1|0)==(4);\n $or$cond14 = $868 | $867;\n $869 = ($$8|0)==(0);\n $or$cond16 = $869 & $or$cond14;\n $$$8 = $or$cond16 ? -5 : $$8;\n $$01102 = $$$8;\n STACKTOP = sp;return ($$01102|0);\n}\nfunction _updatewindow($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$053 = 0, $$54 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($4)) + 52|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if ($7) {\n  $8 = ((($0)) + 32|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ((($0)) + 40|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ((($4)) + 36|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = 1 << $13;\n  $15 = (FUNCTION_TABLE_iiii[$9 & 127]($11,$14,1)|0);\n  HEAP32[$5>>2] = $15;\n  $16 = ($15|0)==(0|0);\n  if ($16) {\n   $$053 = 1;\n   return ($$053|0);\n  } else {\n   $29 = $15;\n  }\n } else {\n  $29 = $6;\n }\n $17 = ((($4)) + 40|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = ($18|0)==(0);\n if ($19) {\n  $20 = ((($4)) + 36|0);\n  $21 = HEAP32[$20>>2]|0;\n  $22 = 1 << $21;\n  HEAP32[$17>>2] = $22;\n  $23 = ((($4)) + 48|0);\n  HEAP32[$23>>2] = 0;\n  $24 = ((($4)) + 44|0);\n  HEAP32[$24>>2] = 0;\n  $25 = $22;\n } else {\n  $25 = $18;\n }\n $26 = ($25>>>0)>($2>>>0);\n if (!($26)) {\n  $27 = (0 - ($25))|0;\n  $28 = (($1) + ($27)|0);\n  _memcpy(($29|0),($28|0),($25|0))|0;\n  $30 = ((($4)) + 48|0);\n  HEAP32[$30>>2] = 0;\n  $31 = HEAP32[$17>>2]|0;\n  $32 = ((($4)) + 44|0);\n  HEAP32[$32>>2] = $31;\n  $$053 = 0;\n  return ($$053|0);\n }\n $33 = ((($4)) + 48|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = (($25) - ($34))|0;\n $36 = ($35>>>0)>($2>>>0);\n $$ = $36 ? $2 : $35;\n $37 = (($29) + ($34)|0);\n $38 = (0 - ($2))|0;\n $39 = (($1) + ($38)|0);\n _memcpy(($37|0),($39|0),($$|0))|0;\n $40 = (($2) - ($$))|0;\n $41 = ($40|0)==(0);\n if (!($41)) {\n  $42 = HEAP32[$5>>2]|0;\n  $43 = (0 - ($40))|0;\n  $44 = (($1) + ($43)|0);\n  _memcpy(($42|0),($44|0),($40|0))|0;\n  HEAP32[$33>>2] = $40;\n  $45 = HEAP32[$17>>2]|0;\n  $46 = ((($4)) + 44|0);\n  HEAP32[$46>>2] = $45;\n  $$053 = 0;\n  return ($$053|0);\n }\n $47 = HEAP32[$33>>2]|0;\n $48 = (($47) + ($$))|0;\n $49 = HEAP32[$17>>2]|0;\n $50 = ($48|0)==($49|0);\n $$54 = $50 ? 0 : $48;\n HEAP32[$33>>2] = $$54;\n $51 = ((($4)) + 44|0);\n $52 = HEAP32[$51>>2]|0;\n $53 = ($52>>>0)<($49>>>0);\n if (!($53)) {\n  $$053 = 0;\n  return ($$053|0);\n }\n $54 = (($52) + ($$))|0;\n HEAP32[$51>>2] = $54;\n $$053 = 0;\n return ($$053|0);\n}\nfunction _inflateEnd($0) {\n $0 = $0|0;\n var $$0 = 0, $$pre = 0, $$pre13 = 0, $$pre14 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $5 = ((($0)) + 36|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)==(0|0);\n if ($7) {\n  $$0 = -2;\n  return ($$0|0);\n }\n $8 = ((($3)) + 52|0);\n $9 = HEAP32[$8>>2]|0;\n $10 = ($9|0)==(0|0);\n $$pre14 = ((($0)) + 40|0);\n if ($10) {\n  $13 = $6;$14 = $3;\n } else {\n  $11 = HEAP32[$$pre14>>2]|0;\n  FUNCTION_TABLE_vii[$6 & 127]($11,$9);\n  $$pre = HEAP32[$5>>2]|0;\n  $$pre13 = HEAP32[$2>>2]|0;\n  $13 = $$pre;$14 = $$pre13;\n }\n $12 = HEAP32[$$pre14>>2]|0;\n FUNCTION_TABLE_vii[$13 & 127]($12,$14);\n HEAP32[$2>>2] = 0;\n $$0 = 0;\n return ($$0|0);\n}\nfunction _inflate_table($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$ = 0, $$0215243248$ph = 0, $$0216242249$ph = 0, $$0217$ph = 0, $$0217$ph253 = 0, $$0218 = 0, $$0219$ph = 0, $$0220 = 0, $$0221 = 0, $$0222 = 0, $$0222$ph = 0, $$0223$ph252 = 0, $$0226$ph = 0, $$0228$ph = 0, $$0232$ = 0, $$0232$310 = 0, $$0232$313 = 0, $$0232285$lcssa$ph = 0, $$0232285$lcssa311 = 0, $$0233$$0232$ = 0;\n var $$0233$$0232$$$0226 = 0, $$0233$lcssa = 0, $$0233278 = 0, $$0234286 = 0, $$0244247$ph = 0, $$1225269 = 0, $$1229$lcssa = 0, $$1229268 = 0, $$1235272 = 0, $$2 = 0, $$2$ph = 0, $$3 = 0, $$3$ph = 0, $$4 = 0, $$ph = 0, $$ph250 = 0, $$ph250$in = 0, $$ph251 = 0, $$ph308 = 0, $$ph309 = 0;\n var $$phi$trans$insert = 0, $$phi$trans$insert305 = 0, $$phi$trans$insert305$1 = 0, $$phi$trans$insert305$10 = 0, $$phi$trans$insert305$11 = 0, $$phi$trans$insert305$12 = 0, $$phi$trans$insert305$2 = 0, $$phi$trans$insert305$3 = 0, $$phi$trans$insert305$4 = 0, $$phi$trans$insert305$5 = 0, $$phi$trans$insert305$6 = 0, $$phi$trans$insert305$7 = 0, $$phi$trans$insert305$8 = 0, $$phi$trans$insert305$9 = 0, $$pre = 0, $$pre306 = 0, $$pre306$1 = 0, $$pre306$10 = 0, $$pre306$11 = 0, $$pre306$12 = 0;\n var $$pre306$2 = 0, $$pre306$3 = 0, $$pre306$4 = 0, $$pre306$5 = 0, $$pre306$6 = 0, $$pre306$7 = 0, $$pre306$8 = 0, $$pre306$9 = 0, $$sroa$0$0 = 0, $$sroa$0$0$$sroa_idx = 0, $$sroa$0$0$$sroa_idx25 = 0, $$sroa$11$0$$sroa_idx = 0, $$sroa$11$0$$sroa_idx31 = 0, $$sroa$11$0$$sroa_idx33 = 0, $$sroa$11$0$$sroa_idx35 = 0, $$sroa$14$0 = 0, $$sroa$14$0$$sroa_idx37 = 0, $$sroa$14$0$$sroa_idx38 = 0, $$sroa$14$0$$sroa_idx40 = 0, $$sroa$14$0$$sroa_idx42 = 0;\n var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;\n var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;\n var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;\n var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;\n var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;\n var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;\n var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;\n var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;\n var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;\n var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;\n var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;\n var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;\n var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond302 = 0, $fold = 0, $fold337 = 0, $fold338 = 0, $fold339 = 0, $fold340 = 0, $fold341 = 0, $fold342 = 0, $fold343 = 0, $fold344 = 0, $fold345 = 0, $fold346 = 0, $or$cond = 0, $or$cond239 = 0, $or$cond5 = 0, $or$cond7 = 0;\n var $or$cond9 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);\n $6 = sp + 32|0;\n $7 = sp;\n dest=$6; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));\n $8 = ($2|0)==(0);\n if ($8) {\n  $9 = HEAP32[$4>>2]|0;\n  $22 = $9;\n  label = 5;\n } else {\n  $$0234286 = 0;\n  while(1) {\n   $10 = (($1) + ($$0234286<<1)|0);\n   $11 = HEAP16[$10>>1]|0;\n   $12 = $11&65535;\n   $13 = (($6) + ($12<<1)|0);\n   $14 = HEAP16[$13>>1]|0;\n   $15 = (($14) + 1)<<16>>16;\n   HEAP16[$13>>1] = $15;\n   $16 = (($$0234286) + 1)|0;\n   $exitcond302 = ($16|0)==($2|0);\n   if ($exitcond302) {\n    break;\n   } else {\n    $$0234286 = $16;\n   }\n  }\n  $$phi$trans$insert = ((($6)) + 30|0);\n  $$pre = HEAP16[$$phi$trans$insert>>1]|0;\n  $17 = HEAP32[$4>>2]|0;\n  $18 = ($$pre<<16>>16)==(0);\n  if ($18) {\n   $22 = $17;\n   label = 5;\n  } else {\n   $$0232285$lcssa$ph = 15;$$ph308 = $17;$$ph309 = $$pre;\n   label = 7;\n  }\n }\n do {\n  if ((label|0) == 5) {\n   $19 = ((($6)) + 28|0);\n   $20 = HEAP16[$19>>1]|0;\n   $21 = ($20<<16>>16)==(0);\n   if ($21) {\n    $266 = ((($6)) + 26|0);\n    $267 = HEAP16[$266>>1]|0;\n    $268 = ($267<<16>>16)==(0);\n    if ($268) {\n     $269 = ((($6)) + 24|0);\n     $270 = HEAP16[$269>>1]|0;\n     $271 = ($270<<16>>16)==(0);\n     if ($271) {\n      $272 = ((($6)) + 22|0);\n      $273 = HEAP16[$272>>1]|0;\n      $274 = ($273<<16>>16)==(0);\n      if ($274) {\n       $275 = ((($6)) + 20|0);\n       $276 = HEAP16[$275>>1]|0;\n       $277 = ($276<<16>>16)==(0);\n       if ($277) {\n        $278 = ((($6)) + 18|0);\n        $279 = HEAP16[$278>>1]|0;\n        $280 = ($279<<16>>16)==(0);\n        if ($280) {\n         $281 = ((($6)) + 16|0);\n         $282 = HEAP16[$281>>1]|0;\n         $283 = ($282<<16>>16)==(0);\n         if ($283) {\n          $284 = ((($6)) + 14|0);\n          $285 = HEAP16[$284>>1]|0;\n          $286 = ($285<<16>>16)==(0);\n          if ($286) {\n           $287 = ((($6)) + 12|0);\n           $288 = HEAP16[$287>>1]|0;\n           $289 = ($288<<16>>16)==(0);\n           if ($289) {\n            $290 = ((($6)) + 10|0);\n            $291 = HEAP16[$290>>1]|0;\n            $292 = ($291<<16>>16)==(0);\n            if ($292) {\n             $293 = ((($6)) + 8|0);\n             $294 = HEAP16[$293>>1]|0;\n             $295 = ($294<<16>>16)==(0);\n             if ($295) {\n              $296 = ((($6)) + 6|0);\n              $297 = HEAP16[$296>>1]|0;\n              $298 = ($297<<16>>16)==(0);\n              if ($298) {\n               $299 = ((($6)) + 4|0);\n               $300 = HEAP16[$299>>1]|0;\n               $301 = ($300<<16>>16)==(0);\n               if ($301) {\n                $302 = ((($6)) + 2|0);\n                $303 = HEAP16[$302>>1]|0;\n                $304 = ($303<<16>>16)==(0);\n                if (!($304)) {\n                 $23 = ($22>>>0)>(1);\n                 $$0232$ = $23 ? 1 : $22;\n                 $$0232$313 = $$0232$;$$0232285$lcssa311 = 1;$$0233$lcssa = 1;$262 = 0;\n                 break;\n                }\n                $305 = HEAP32[$3>>2]|0;\n                $306 = ((($305)) + 4|0);\n                HEAP32[$3>>2] = $306;\n                HEAP8[$305>>0] = 64;\n                $$sroa$11$0$$sroa_idx35 = ((($305)) + 1|0);\n                HEAP8[$$sroa$11$0$$sroa_idx35>>0] = 1;\n                $$sroa$14$0$$sroa_idx42 = ((($305)) + 2|0);\n                HEAP16[$$sroa$14$0$$sroa_idx42>>1] = 0;\n                $307 = HEAP32[$3>>2]|0;\n                $308 = ((($307)) + 4|0);\n                HEAP32[$3>>2] = $308;\n                HEAP8[$307>>0] = 64;\n                $$sroa$11$0$$sroa_idx33 = ((($307)) + 1|0);\n                HEAP8[$$sroa$11$0$$sroa_idx33>>0] = 1;\n                $$sroa$14$0$$sroa_idx40 = ((($307)) + 2|0);\n                HEAP16[$$sroa$14$0$$sroa_idx40>>1] = 0;\n                HEAP32[$4>>2] = 1;\n                $$0218 = 0;\n                STACKTOP = sp;return ($$0218|0);\n               } else {\n                $$0232285$lcssa$ph = 2;$$ph308 = $22;$$ph309 = 0;\n                label = 7;\n               }\n              } else {\n               $$0232285$lcssa$ph = 3;$$ph308 = $22;$$ph309 = 0;\n               label = 7;\n              }\n             } else {\n              $$0232285$lcssa$ph = 4;$$ph308 = $22;$$ph309 = 0;\n              label = 7;\n             }\n            } else {\n             $$0232285$lcssa$ph = 5;$$ph308 = $22;$$ph309 = 0;\n             label = 7;\n            }\n           } else {\n            $$0232285$lcssa$ph = 6;$$ph308 = $22;$$ph309 = 0;\n            label = 7;\n           }\n          } else {\n           $$0232285$lcssa$ph = 7;$$ph308 = $22;$$ph309 = 0;\n           label = 7;\n          }\n         } else {\n          $$0232285$lcssa$ph = 8;$$ph308 = $22;$$ph309 = 0;\n          label = 7;\n         }\n        } else {\n         $$0232285$lcssa$ph = 9;$$ph308 = $22;$$ph309 = 0;\n         label = 7;\n        }\n       } else {\n        $$0232285$lcssa$ph = 10;$$ph308 = $22;$$ph309 = 0;\n        label = 7;\n       }\n      } else {\n       $$0232285$lcssa$ph = 11;$$ph308 = $22;$$ph309 = 0;\n       label = 7;\n      }\n     } else {\n      $$0232285$lcssa$ph = 12;$$ph308 = $22;$$ph309 = 0;\n      label = 7;\n     }\n    } else {\n     $$0232285$lcssa$ph = 13;$$ph308 = $22;$$ph309 = 0;\n     label = 7;\n    }\n   } else {\n    $$0232285$lcssa$ph = 14;$$ph308 = $22;$$ph309 = 0;\n    label = 7;\n   }\n  }\n } while(0);\n L25: do {\n  if ((label|0) == 7) {\n   $24 = ($$ph308>>>0)>($$0232285$lcssa$ph>>>0);\n   $$0232$310 = $24 ? $$0232285$lcssa$ph : $$ph308;\n   $$0233278 = 1;\n   while(1) {\n    $25 = (($6) + ($$0233278<<1)|0);\n    $26 = HEAP16[$25>>1]|0;\n    $27 = ($26<<16>>16)==(0);\n    if (!($27)) {\n     $$0232$313 = $$0232$310;$$0232285$lcssa311 = $$0232285$lcssa$ph;$$0233$lcssa = $$0233278;$262 = $$ph309;\n     break L25;\n    }\n    $28 = (($$0233278) + 1)|0;\n    $29 = ($28>>>0)<($$0232285$lcssa$ph>>>0);\n    if ($29) {\n     $$0233278 = $28;\n    } else {\n     $$0232$313 = $$0232$310;$$0232285$lcssa311 = $$0232285$lcssa$ph;$$0233$lcssa = $28;$262 = $$ph309;\n     break;\n    }\n   }\n  }\n } while(0);\n $30 = ($$0232$313>>>0)<($$0233$lcssa>>>0);\n $$0233$$0232$ = $30 ? $$0233$lcssa : $$0232$313;\n $31 = ((($6)) + 2|0);\n $32 = HEAP16[$31>>1]|0;\n $33 = $32&65535;\n $34 = (2 - ($33))|0;\n $35 = ($34|0)<(0);\n if ($35) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $36 = $34 << 1;\n $37 = ((($6)) + 4|0);\n $38 = HEAP16[$37>>1]|0;\n $39 = $38&65535;\n $40 = (($36) - ($39))|0;\n $41 = ($40|0)<(0);\n if ($41) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $188 = $40 << 1;\n $189 = ((($6)) + 6|0);\n $190 = HEAP16[$189>>1]|0;\n $191 = $190&65535;\n $192 = (($188) - ($191))|0;\n $193 = ($192|0)<(0);\n if ($193) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $194 = $192 << 1;\n $195 = ((($6)) + 8|0);\n $196 = HEAP16[$195>>1]|0;\n $197 = $196&65535;\n $198 = (($194) - ($197))|0;\n $199 = ($198|0)<(0);\n if ($199) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $200 = $198 << 1;\n $201 = ((($6)) + 10|0);\n $202 = HEAP16[$201>>1]|0;\n $203 = $202&65535;\n $204 = (($200) - ($203))|0;\n $205 = ($204|0)<(0);\n if ($205) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $206 = $204 << 1;\n $207 = ((($6)) + 12|0);\n $208 = HEAP16[$207>>1]|0;\n $209 = $208&65535;\n $210 = (($206) - ($209))|0;\n $211 = ($210|0)<(0);\n if ($211) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $212 = $210 << 1;\n $213 = ((($6)) + 14|0);\n $214 = HEAP16[$213>>1]|0;\n $215 = $214&65535;\n $216 = (($212) - ($215))|0;\n $217 = ($216|0)<(0);\n if ($217) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $218 = $216 << 1;\n $219 = ((($6)) + 16|0);\n $220 = HEAP16[$219>>1]|0;\n $221 = $220&65535;\n $222 = (($218) - ($221))|0;\n $223 = ($222|0)<(0);\n if ($223) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $224 = $222 << 1;\n $225 = ((($6)) + 18|0);\n $226 = HEAP16[$225>>1]|0;\n $227 = $226&65535;\n $228 = (($224) - ($227))|0;\n $229 = ($228|0)<(0);\n if ($229) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $230 = $228 << 1;\n $231 = ((($6)) + 20|0);\n $232 = HEAP16[$231>>1]|0;\n $233 = $232&65535;\n $234 = (($230) - ($233))|0;\n $235 = ($234|0)<(0);\n if ($235) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $236 = $234 << 1;\n $237 = ((($6)) + 22|0);\n $238 = HEAP16[$237>>1]|0;\n $239 = $238&65535;\n $240 = (($236) - ($239))|0;\n $241 = ($240|0)<(0);\n if ($241) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $242 = $240 << 1;\n $243 = ((($6)) + 24|0);\n $244 = HEAP16[$243>>1]|0;\n $245 = $244&65535;\n $246 = (($242) - ($245))|0;\n $247 = ($246|0)<(0);\n if ($247) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $248 = $246 << 1;\n $249 = ((($6)) + 26|0);\n $250 = HEAP16[$249>>1]|0;\n $251 = $250&65535;\n $252 = (($248) - ($251))|0;\n $253 = ($252|0)<(0);\n if ($253) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $254 = $252 << 1;\n $255 = ((($6)) + 28|0);\n $256 = HEAP16[$255>>1]|0;\n $257 = $256&65535;\n $258 = (($254) - ($257))|0;\n $259 = ($258|0)<(0);\n if ($259) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $260 = $258 << 1;\n $261 = $262&65535;\n $263 = (($260) - ($261))|0;\n $264 = ($263|0)<(0);\n if ($264) {\n  $$0218 = -1;\n  STACKTOP = sp;return ($$0218|0);\n }\n $265 = ($263|0)==(0);\n if (!($265)) {\n  $42 = ($0|0)==(0);\n  $43 = ($$0232285$lcssa311|0)!=(1);\n  $or$cond = $42 | $43;\n  if ($or$cond) {\n   $$0218 = -1;\n   STACKTOP = sp;return ($$0218|0);\n  }\n }\n $44 = ((($7)) + 2|0);\n HEAP16[$44>>1] = 0;\n $45 = ((($7)) + 4|0);\n HEAP16[$45>>1] = $32;\n $46 = $32&65535;\n $$phi$trans$insert305 = ((($6)) + 4|0);\n $$pre306 = HEAP16[$$phi$trans$insert305>>1]|0;\n $47 = $$pre306&65535;\n $48 = (($47) + ($46))|0;\n $49 = $48&65535;\n $50 = ((($7)) + 6|0);\n HEAP16[$50>>1] = $49;\n $$phi$trans$insert305$1 = ((($6)) + 6|0);\n $$pre306$1 = HEAP16[$$phi$trans$insert305$1>>1]|0;\n $51 = $$pre306$1&65535;\n $52 = (($51) + ($48))|0;\n $53 = $52&65535;\n $54 = ((($7)) + 8|0);\n HEAP16[$54>>1] = $53;\n $$phi$trans$insert305$2 = ((($6)) + 8|0);\n $$pre306$2 = HEAP16[$$phi$trans$insert305$2>>1]|0;\n $fold = (($48) + ($51))|0;\n $55 = $$pre306$2&65535;\n $56 = (($55) + ($fold))|0;\n $57 = $56&65535;\n $58 = ((($7)) + 10|0);\n HEAP16[$58>>1] = $57;\n $$phi$trans$insert305$3 = ((($6)) + 10|0);\n $$pre306$3 = HEAP16[$$phi$trans$insert305$3>>1]|0;\n $fold337 = (($fold) + ($55))|0;\n $59 = $$pre306$3&65535;\n $60 = (($59) + ($fold337))|0;\n $61 = $60&65535;\n $62 = ((($7)) + 12|0);\n HEAP16[$62>>1] = $61;\n $$phi$trans$insert305$4 = ((($6)) + 12|0);\n $$pre306$4 = HEAP16[$$phi$trans$insert305$4>>1]|0;\n $fold338 = (($fold337) + ($59))|0;\n $63 = $$pre306$4&65535;\n $64 = (($63) + ($fold338))|0;\n $65 = $64&65535;\n $66 = ((($7)) + 14|0);\n HEAP16[$66>>1] = $65;\n $$phi$trans$insert305$5 = ((($6)) + 14|0);\n $$pre306$5 = HEAP16[$$phi$trans$insert305$5>>1]|0;\n $fold339 = (($fold338) + ($63))|0;\n $67 = $$pre306$5&65535;\n $68 = (($67) + ($fold339))|0;\n $69 = $68&65535;\n $70 = ((($7)) + 16|0);\n HEAP16[$70>>1] = $69;\n $$phi$trans$insert305$6 = ((($6)) + 16|0);\n $$pre306$6 = HEAP16[$$phi$trans$insert305$6>>1]|0;\n $fold340 = (($fold339) + ($67))|0;\n $71 = $$pre306$6&65535;\n $72 = (($71) + ($fold340))|0;\n $73 = $72&65535;\n $74 = ((($7)) + 18|0);\n HEAP16[$74>>1] = $73;\n $$phi$trans$insert305$7 = ((($6)) + 18|0);\n $$pre306$7 = HEAP16[$$phi$trans$insert305$7>>1]|0;\n $fold341 = (($fold340) + ($71))|0;\n $75 = $$pre306$7&65535;\n $76 = (($75) + ($fold341))|0;\n $77 = $76&65535;\n $78 = ((($7)) + 20|0);\n HEAP16[$78>>1] = $77;\n $$phi$trans$insert305$8 = ((($6)) + 20|0);\n $$pre306$8 = HEAP16[$$phi$trans$insert305$8>>1]|0;\n $fold342 = (($fold341) + ($75))|0;\n $79 = $$pre306$8&65535;\n $80 = (($79) + ($fold342))|0;\n $81 = $80&65535;\n $82 = ((($7)) + 22|0);\n HEAP16[$82>>1] = $81;\n $$phi$trans$insert305$9 = ((($6)) + 22|0);\n $$pre306$9 = HEAP16[$$phi$trans$insert305$9>>1]|0;\n $fold343 = (($fold342) + ($79))|0;\n $83 = $$pre306$9&65535;\n $84 = (($83) + ($fold343))|0;\n $85 = $84&65535;\n $86 = ((($7)) + 24|0);\n HEAP16[$86>>1] = $85;\n $$phi$trans$insert305$10 = ((($6)) + 24|0);\n $$pre306$10 = HEAP16[$$phi$trans$insert305$10>>1]|0;\n $fold344 = (($fold343) + ($83))|0;\n $87 = $$pre306$10&65535;\n $88 = (($87) + ($fold344))|0;\n $89 = $88&65535;\n $90 = ((($7)) + 26|0);\n HEAP16[$90>>1] = $89;\n $$phi$trans$insert305$11 = ((($6)) + 26|0);\n $$pre306$11 = HEAP16[$$phi$trans$insert305$11>>1]|0;\n $fold345 = (($fold344) + ($87))|0;\n $91 = $$pre306$11&65535;\n $92 = (($91) + ($fold345))|0;\n $93 = $92&65535;\n $94 = ((($7)) + 28|0);\n HEAP16[$94>>1] = $93;\n $$phi$trans$insert305$12 = ((($6)) + 28|0);\n $$pre306$12 = HEAP16[$$phi$trans$insert305$12>>1]|0;\n $fold346 = (($fold345) + ($91))|0;\n $95 = $$pre306$12&65535;\n $96 = (($95) + ($fold346))|0;\n $97 = $96&65535;\n $98 = ((($7)) + 30|0);\n HEAP16[$98>>1] = $97;\n if (!($8)) {\n  $$1235272 = 0;\n  while(1) {\n   $99 = (($1) + ($$1235272<<1)|0);\n   $100 = HEAP16[$99>>1]|0;\n   $101 = ($100<<16>>16)==(0);\n   if (!($101)) {\n    $102 = $100&65535;\n    $103 = $$1235272&65535;\n    $104 = (($7) + ($102<<1)|0);\n    $105 = HEAP16[$104>>1]|0;\n    $106 = (($105) + 1)<<16>>16;\n    HEAP16[$104>>1] = $106;\n    $107 = $105&65535;\n    $108 = (($5) + ($107<<1)|0);\n    HEAP16[$108>>1] = $103;\n   }\n   $109 = (($$1235272) + 1)|0;\n   $exitcond = ($109|0)==($2|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$1235272 = $109;\n   }\n  }\n }\n switch ($0|0) {\n case 0:  {\n  $$0215243248$ph = $5;$$0216242249$ph = $5;$$0244247$ph = 19;$$ph = 0;$$ph251 = 0;\n  break;\n }\n case 1:  {\n  $110 = ($$0233$$0232$>>>0)>(9);\n  if ($110) {\n   $$0218 = 1;\n   STACKTOP = sp;return ($$0218|0);\n  } else {\n   $$0215243248$ph = (12582);$$0216242249$ph = (12456);$$0244247$ph = 256;$$ph = 0;$$ph251 = 1;\n  }\n  break;\n }\n default: {\n  $111 = ($$0233$$0232$>>>0)>(9);\n  $112 = ($0|0)==(2);\n  $or$cond5 = $112 & $111;\n  if ($or$cond5) {\n   $$0218 = 1;\n   STACKTOP = sp;return ($$0218|0);\n  } else {\n   $$0215243248$ph = 13032;$$0216242249$ph = 12906;$$0244247$ph = -1;$$ph = $112;$$ph251 = 0;\n  }\n }\n }\n $$ph250$in = 1 << $$0233$$0232$;\n $$0217$ph = HEAP32[$3>>2]|0;\n $$ph250 = (($$ph250$in) + -1)|0;\n $113 = $$0233$$0232$&255;\n $$0217$ph253 = $$0217$ph;$$0219$ph = -1;$$0222$ph = 0;$$0223$ph252 = $$ph250$in;$$0226$ph = 0;$$0228$ph = $$0233$$0232$;$$2$ph = 0;$$3$ph = $$0233$lcssa;\n L93: while(1) {\n  $114 = 1 << $$0228$ph;\n  $$0222 = $$0222$ph;$$2 = $$2$ph;$$3 = $$3$ph;\n  while(1) {\n   $115 = (($$3) - ($$0226$ph))|0;\n   $116 = $115&255;\n   $117 = (($5) + ($$2<<1)|0);\n   $118 = HEAP16[$117>>1]|0;\n   $119 = $118&65535;\n   $120 = ($119|0)<($$0244247$ph|0);\n   do {\n    if ($120) {\n     $$sroa$0$0 = 0;$$sroa$14$0 = $118;\n    } else {\n     $121 = ($119|0)>($$0244247$ph|0);\n     if (!($121)) {\n      $$sroa$0$0 = 96;$$sroa$14$0 = 0;\n      break;\n     }\n     $122 = (($$0216242249$ph) + ($119<<1)|0);\n     $123 = (($$0215243248$ph) + ($119<<1)|0);\n     $124 = HEAP16[$123>>1]|0;\n     $125 = $124&255;\n     $126 = HEAP16[$122>>1]|0;\n     $$sroa$0$0 = $125;$$sroa$14$0 = $126;\n    }\n   } while(0);\n   $127 = 1 << $115;\n   $128 = $$0222 >>> $$0226$ph;\n   $$0220 = $114;\n   while(1) {\n    $129 = (($$0220) - ($127))|0;\n    $130 = (($129) + ($128))|0;\n    $$sroa$0$0$$sroa_idx25 = (($$0217$ph253) + ($130<<2)|0);\n    HEAP8[$$sroa$0$0$$sroa_idx25>>0] = $$sroa$0$0;\n    $$sroa$11$0$$sroa_idx31 = (((($$0217$ph253) + ($130<<2)|0)) + 1|0);\n    HEAP8[$$sroa$11$0$$sroa_idx31>>0] = $116;\n    $$sroa$14$0$$sroa_idx38 = (((($$0217$ph253) + ($130<<2)|0)) + 2|0);\n    HEAP16[$$sroa$14$0$$sroa_idx38>>1] = $$sroa$14$0;\n    $131 = ($129|0)==(0);\n    if ($131) {\n     break;\n    } else {\n     $$0220 = $129;\n    }\n   }\n   $132 = (($$3) + -1)|0;\n   $133 = 1 << $132;\n   $$0221 = $133;\n   while(1) {\n    $134 = $$0221 & $$0222;\n    $135 = ($134|0)==(0);\n    $136 = $$0221 >>> 1;\n    if ($135) {\n     break;\n    } else {\n     $$0221 = $136;\n    }\n   }\n   $137 = ($$0221|0)==(0);\n   $138 = (($$0221) + -1)|0;\n   $139 = $138 & $$0222;\n   $140 = (($139) + ($$0221))|0;\n   $$ = $137 ? 0 : $140;\n   $141 = (($$2) + 1)|0;\n   $142 = (($6) + ($$3<<1)|0);\n   $143 = HEAP16[$142>>1]|0;\n   $144 = (($143) + -1)<<16>>16;\n   HEAP16[$142>>1] = $144;\n   $145 = ($144<<16>>16)==(0);\n   if ($145) {\n    $146 = ($$3|0)==($$0232285$lcssa311|0);\n    if ($146) {\n     break L93;\n    }\n    $147 = (($5) + ($141<<1)|0);\n    $148 = HEAP16[$147>>1]|0;\n    $149 = $148&65535;\n    $150 = (($1) + ($149<<1)|0);\n    $151 = HEAP16[$150>>1]|0;\n    $152 = $151&65535;\n    $$4 = $152;\n   } else {\n    $$4 = $$3;\n   }\n   $153 = ($$4>>>0)>($$0233$$0232$>>>0);\n   if (!($153)) {\n    $$0222 = $$;$$2 = $141;$$3 = $$4;\n    continue;\n   }\n   $154 = $$ & $$ph250;\n   $155 = ($154|0)==($$0219$ph|0);\n   if ($155) {\n    $$0222 = $$;$$2 = $141;$$3 = $$4;\n   } else {\n    break;\n   }\n  }\n  $156 = ($$0226$ph|0)==(0);\n  $$0233$$0232$$$0226 = $156 ? $$0233$$0232$ : $$0226$ph;\n  $157 = (($$0217$ph253) + ($114<<2)|0);\n  $158 = (($$4) - ($$0233$$0232$$$0226))|0;\n  $159 = ($$4>>>0)<($$0232285$lcssa311>>>0);\n  L113: do {\n   if ($159) {\n    $160 = 1 << $158;\n    $$1225269 = $160;$$1229268 = $158;$162 = $$4;\n    while(1) {\n     $161 = (($6) + ($162<<1)|0);\n     $163 = HEAP16[$161>>1]|0;\n     $164 = $163&65535;\n     $165 = (($$1225269) - ($164))|0;\n     $166 = ($165|0)<(1);\n     if ($166) {\n      $$1229$lcssa = $$1229268;\n      break L113;\n     }\n     $167 = (($$1229268) + 1)|0;\n     $168 = $165 << 1;\n     $169 = (($167) + ($$0233$$0232$$$0226))|0;\n     $170 = ($169>>>0)<($$0232285$lcssa311>>>0);\n     if ($170) {\n      $$1225269 = $168;$$1229268 = $167;$162 = $169;\n     } else {\n      $$1229$lcssa = $167;\n      break;\n     }\n    }\n   } else {\n    $$1229$lcssa = $158;\n   }\n  } while(0);\n  $171 = 1 << $$1229$lcssa;\n  $172 = (($171) + ($$0223$ph252))|0;\n  $173 = ($172>>>0)>(852);\n  $or$cond7 = $$ph251 & $173;\n  $174 = ($172>>>0)>(592);\n  $or$cond9 = $$ph & $174;\n  $or$cond239 = $or$cond7 | $or$cond9;\n  if ($or$cond239) {\n   $$0218 = 1;\n   label = 43;\n   break;\n  }\n  $175 = $$1229$lcssa&255;\n  $176 = HEAP32[$3>>2]|0;\n  $177 = (($176) + ($154<<2)|0);\n  HEAP8[$177>>0] = $175;\n  $178 = (((($176) + ($154<<2)|0)) + 1|0);\n  HEAP8[$178>>0] = $113;\n  $179 = $157;\n  $180 = $176;\n  $181 = (($179) - ($180))|0;\n  $182 = $181 >>> 2;\n  $183 = $182&65535;\n  $184 = (((($176) + ($154<<2)|0)) + 2|0);\n  HEAP16[$184>>1] = $183;\n  $$0217$ph253 = $157;$$0219$ph = $154;$$0222$ph = $$;$$0223$ph252 = $172;$$0226$ph = $$0233$$0232$$$0226;$$0228$ph = $$1229$lcssa;$$2$ph = $141;$$3$ph = $$4;\n }\n if ((label|0) == 43) {\n  STACKTOP = sp;return ($$0218|0);\n }\n $185 = ($$|0)==(0);\n if (!($185)) {\n  $$sroa$14$0$$sroa_idx37 = (((($$0217$ph253) + ($$<<2)|0)) + 2|0);\n  $$sroa$11$0$$sroa_idx = (((($$0217$ph253) + ($$<<2)|0)) + 1|0);\n  $$sroa$0$0$$sroa_idx = (($$0217$ph253) + ($$<<2)|0);\n  HEAP8[$$sroa$0$0$$sroa_idx>>0] = 64;\n  HEAP8[$$sroa$11$0$$sroa_idx>>0] = $116;\n  HEAP16[$$sroa$14$0$$sroa_idx37>>1] = 0;\n }\n $186 = HEAP32[$3>>2]|0;\n $187 = (($186) + ($$0223$ph252<<2)|0);\n HEAP32[$3>>2] = $187;\n HEAP32[$4>>2] = $$0233$$0232$;\n $$0218 = 0;\n STACKTOP = sp;return ($$0218|0);\n}\nfunction __tr_init($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 148|0);\n $2 = ((($0)) + 2840|0);\n HEAP32[$2>>2] = $1;\n $3 = ((($0)) + 2848|0);\n HEAP32[$3>>2] = 9328;\n $4 = ((($0)) + 2440|0);\n $5 = ((($0)) + 2852|0);\n HEAP32[$5>>2] = $4;\n $6 = ((($0)) + 2860|0);\n HEAP32[$6>>2] = 9348;\n $7 = ((($0)) + 2684|0);\n $8 = ((($0)) + 2864|0);\n HEAP32[$8>>2] = $7;\n $9 = ((($0)) + 2872|0);\n HEAP32[$9>>2] = 9368;\n $10 = ((($0)) + 5816|0);\n HEAP16[$10>>1] = 0;\n $11 = ((($0)) + 5820|0);\n HEAP32[$11>>2] = 0;\n _init_block($0);\n return;\n}\nfunction _init_block($0) {\n $0 = $0|0;\n var $$020 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;\n var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$020 = 0;\n while(1) {\n  $1 = (((($0)) + 148|0) + ($$020<<2)|0);\n  HEAP16[$1>>1] = 0;\n  $2 = (($$020) + 1)|0;\n  $exitcond = ($2|0)==(286);\n  if ($exitcond) {\n   break;\n  } else {\n   $$020 = $2;\n  }\n }\n $3 = ((($0)) + 2440|0);\n HEAP16[$3>>1] = 0;\n $4 = ((($0)) + 2444|0);\n HEAP16[$4>>1] = 0;\n $5 = ((($0)) + 2448|0);\n HEAP16[$5>>1] = 0;\n $6 = ((($0)) + 2452|0);\n HEAP16[$6>>1] = 0;\n $7 = ((($0)) + 2456|0);\n HEAP16[$7>>1] = 0;\n $8 = ((($0)) + 2460|0);\n HEAP16[$8>>1] = 0;\n $9 = ((($0)) + 2464|0);\n HEAP16[$9>>1] = 0;\n $10 = ((($0)) + 2468|0);\n HEAP16[$10>>1] = 0;\n $11 = ((($0)) + 2472|0);\n HEAP16[$11>>1] = 0;\n $12 = ((($0)) + 2476|0);\n HEAP16[$12>>1] = 0;\n $13 = ((($0)) + 2480|0);\n HEAP16[$13>>1] = 0;\n $14 = ((($0)) + 2484|0);\n HEAP16[$14>>1] = 0;\n $15 = ((($0)) + 2488|0);\n HEAP16[$15>>1] = 0;\n $16 = ((($0)) + 2492|0);\n HEAP16[$16>>1] = 0;\n $17 = ((($0)) + 2496|0);\n HEAP16[$17>>1] = 0;\n $18 = ((($0)) + 2500|0);\n HEAP16[$18>>1] = 0;\n $19 = ((($0)) + 2504|0);\n HEAP16[$19>>1] = 0;\n $20 = ((($0)) + 2508|0);\n HEAP16[$20>>1] = 0;\n $21 = ((($0)) + 2512|0);\n HEAP16[$21>>1] = 0;\n $22 = ((($0)) + 2516|0);\n HEAP16[$22>>1] = 0;\n $23 = ((($0)) + 2520|0);\n HEAP16[$23>>1] = 0;\n $24 = ((($0)) + 2524|0);\n HEAP16[$24>>1] = 0;\n $25 = ((($0)) + 2528|0);\n HEAP16[$25>>1] = 0;\n $26 = ((($0)) + 2532|0);\n HEAP16[$26>>1] = 0;\n $27 = ((($0)) + 2536|0);\n HEAP16[$27>>1] = 0;\n $28 = ((($0)) + 2540|0);\n HEAP16[$28>>1] = 0;\n $29 = ((($0)) + 2544|0);\n HEAP16[$29>>1] = 0;\n $30 = ((($0)) + 2548|0);\n HEAP16[$30>>1] = 0;\n $31 = ((($0)) + 2552|0);\n HEAP16[$31>>1] = 0;\n $32 = ((($0)) + 2556|0);\n HEAP16[$32>>1] = 0;\n $33 = ((($0)) + 2684|0);\n HEAP16[$33>>1] = 0;\n $34 = ((($0)) + 2688|0);\n HEAP16[$34>>1] = 0;\n $35 = ((($0)) + 2692|0);\n HEAP16[$35>>1] = 0;\n $36 = ((($0)) + 2696|0);\n HEAP16[$36>>1] = 0;\n $37 = ((($0)) + 2700|0);\n HEAP16[$37>>1] = 0;\n $38 = ((($0)) + 2704|0);\n HEAP16[$38>>1] = 0;\n $39 = ((($0)) + 2708|0);\n HEAP16[$39>>1] = 0;\n $40 = ((($0)) + 2712|0);\n HEAP16[$40>>1] = 0;\n $41 = ((($0)) + 2716|0);\n HEAP16[$41>>1] = 0;\n $42 = ((($0)) + 2720|0);\n HEAP16[$42>>1] = 0;\n $43 = ((($0)) + 2724|0);\n HEAP16[$43>>1] = 0;\n $44 = ((($0)) + 2728|0);\n HEAP16[$44>>1] = 0;\n $45 = ((($0)) + 2732|0);\n HEAP16[$45>>1] = 0;\n $46 = ((($0)) + 2736|0);\n HEAP16[$46>>1] = 0;\n $47 = ((($0)) + 2740|0);\n HEAP16[$47>>1] = 0;\n $48 = ((($0)) + 2744|0);\n HEAP16[$48>>1] = 0;\n $49 = ((($0)) + 2748|0);\n HEAP16[$49>>1] = 0;\n $50 = ((($0)) + 2752|0);\n HEAP16[$50>>1] = 0;\n $51 = ((($0)) + 2756|0);\n HEAP16[$51>>1] = 0;\n $52 = ((($0)) + 1172|0);\n HEAP16[$52>>1] = 1;\n $53 = ((($0)) + 5804|0);\n HEAP32[$53>>2] = 0;\n $54 = ((($0)) + 5800|0);\n HEAP32[$54>>2] = 0;\n $55 = ((($0)) + 5808|0);\n HEAP32[$55>>2] = 0;\n $56 = ((($0)) + 5792|0);\n HEAP32[$56>>2] = 0;\n return;\n}\nfunction __tr_stored_block($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0171$i = 0, $$02$i = 0, $$off0 = 0, $$off0$in = 0, $$pre$phi$iZ2D = 0, $$pre$phi4$iZ2D = 0, $$pre3$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;\n var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;\n var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 5820|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(13);\n $7 = $3 & 65535;\n $8 = $7 << $5;\n $9 = ((($0)) + 5816|0);\n $10 = HEAP16[$9>>1]|0;\n $11 = $10&65535;\n $12 = $11 | $8;\n $13 = $12&65535;\n HEAP16[$9>>1] = $13;\n if ($6) {\n  $14 = $12&255;\n  $15 = ((($0)) + 20|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = (($16) + 1)|0;\n  HEAP32[$15>>2] = $17;\n  $18 = ((($0)) + 8|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = (($19) + ($16)|0);\n  HEAP8[$20>>0] = $14;\n  $21 = HEAP16[$9>>1]|0;\n  $22 = ($21&65535) >>> 8;\n  $23 = $22&255;\n  $24 = HEAP32[$15>>2]|0;\n  $25 = (($24) + 1)|0;\n  HEAP32[$15>>2] = $25;\n  $26 = HEAP32[$18>>2]|0;\n  $27 = (($26) + ($24)|0);\n  HEAP8[$27>>0] = $23;\n  $28 = HEAP32[$4>>2]|0;\n  $29 = (16 - ($28))|0;\n  $30 = $7 >>> $29;\n  $31 = $30&65535;\n  HEAP16[$9>>1] = $31;\n  $32 = (($28) + -13)|0;\n  $$off0$in = $30;$storemerge = $32;\n } else {\n  $33 = (($5) + 3)|0;\n  $$off0$in = $12;$storemerge = $33;\n }\n $$off0 = $$off0$in&255;\n HEAP32[$4>>2] = $storemerge;\n $34 = ($storemerge|0)>(8);\n do {\n  if ($34) {\n   $35 = ((($0)) + 20|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = (($36) + 1)|0;\n   HEAP32[$35>>2] = $37;\n   $38 = ((($0)) + 8|0);\n   $39 = HEAP32[$38>>2]|0;\n   $40 = (($39) + ($36)|0);\n   HEAP8[$40>>0] = $$off0;\n   $41 = HEAP16[$9>>1]|0;\n   $42 = ($41&65535) >>> 8;\n   $43 = $42&255;\n   $44 = HEAP32[$35>>2]|0;\n   $45 = (($44) + 1)|0;\n   HEAP32[$35>>2] = $45;\n   $46 = HEAP32[$38>>2]|0;\n   $47 = (($46) + ($44)|0);\n   HEAP8[$47>>0] = $43;\n   $$pre$phi$iZ2D = $35;$$pre$phi4$iZ2D = $38;\n  } else {\n   $48 = ($storemerge|0)>(0);\n   $49 = ((($0)) + 20|0);\n   if ($48) {\n    $50 = HEAP32[$49>>2]|0;\n    $51 = (($50) + 1)|0;\n    HEAP32[$49>>2] = $51;\n    $52 = ((($0)) + 8|0);\n    $53 = HEAP32[$52>>2]|0;\n    $54 = (($53) + ($50)|0);\n    HEAP8[$54>>0] = $$off0;\n    $$pre$phi$iZ2D = $49;$$pre$phi4$iZ2D = $52;\n    break;\n   } else {\n    $$pre3$i = ((($0)) + 8|0);\n    $$pre$phi$iZ2D = $49;$$pre$phi4$iZ2D = $$pre3$i;\n    break;\n   }\n  }\n } while(0);\n HEAP16[$9>>1] = 0;\n HEAP32[$4>>2] = 0;\n $55 = $2&255;\n $56 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n $57 = (($56) + 1)|0;\n HEAP32[$$pre$phi$iZ2D>>2] = $57;\n $58 = HEAP32[$$pre$phi4$iZ2D>>2]|0;\n $59 = (($58) + ($56)|0);\n HEAP8[$59>>0] = $55;\n $60 = $2 >>> 8;\n $61 = $60&255;\n $62 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n $63 = (($62) + 1)|0;\n HEAP32[$$pre$phi$iZ2D>>2] = $63;\n $64 = HEAP32[$$pre$phi4$iZ2D>>2]|0;\n $65 = (($64) + ($62)|0);\n HEAP8[$65>>0] = $61;\n $66 = $2 & 65535;\n $67 = $66 ^ 65535;\n $68 = $67&255;\n $69 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n $70 = (($69) + 1)|0;\n HEAP32[$$pre$phi$iZ2D>>2] = $70;\n $71 = HEAP32[$$pre$phi4$iZ2D>>2]|0;\n $72 = (($71) + ($69)|0);\n HEAP8[$72>>0] = $68;\n $73 = $67 >>> 8;\n $74 = $73&255;\n $75 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n $76 = (($75) + 1)|0;\n HEAP32[$$pre$phi$iZ2D>>2] = $76;\n $77 = HEAP32[$$pre$phi4$iZ2D>>2]|0;\n $78 = (($77) + ($75)|0);\n HEAP8[$78>>0] = $74;\n $79 = ($2|0)==(0);\n if ($79) {\n  return;\n } else {\n  $$0171$i = $2;$$02$i = $1;\n }\n while(1) {\n  $80 = (($$0171$i) + -1)|0;\n  $81 = ((($$02$i)) + 1|0);\n  $82 = HEAP8[$$02$i>>0]|0;\n  $83 = HEAP32[$$pre$phi$iZ2D>>2]|0;\n  $84 = (($83) + 1)|0;\n  HEAP32[$$pre$phi$iZ2D>>2] = $84;\n  $85 = HEAP32[$$pre$phi4$iZ2D>>2]|0;\n  $86 = (($85) + ($83)|0);\n  HEAP8[$86>>0] = $82;\n  $87 = ($80|0)==(0);\n  if ($87) {\n   break;\n  } else {\n   $$0171$i = $80;$$02$i = $81;\n  }\n }\n return;\n}\nfunction __tr_flush_bits($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 5820|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(16);\n if ($3) {\n  $4 = ((($0)) + 5816|0);\n  $5 = HEAP16[$4>>1]|0;\n  $6 = $5&255;\n  $7 = ((($0)) + 20|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = (($8) + 1)|0;\n  HEAP32[$7>>2] = $9;\n  $10 = ((($0)) + 8|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = (($11) + ($8)|0);\n  HEAP8[$12>>0] = $6;\n  $13 = HEAP16[$4>>1]|0;\n  $14 = ($13&65535) >>> 8;\n  $15 = $14&255;\n  $16 = HEAP32[$7>>2]|0;\n  $17 = (($16) + 1)|0;\n  HEAP32[$7>>2] = $17;\n  $18 = HEAP32[$10>>2]|0;\n  $19 = (($18) + ($16)|0);\n  HEAP8[$19>>0] = $15;\n  HEAP16[$4>>1] = 0;\n  HEAP32[$1>>2] = 0;\n  return;\n }\n $20 = ($2|0)>(7);\n if (!($20)) {\n  return;\n }\n $21 = ((($0)) + 5816|0);\n $22 = HEAP16[$21>>1]|0;\n $23 = $22&255;\n $24 = ((($0)) + 20|0);\n $25 = HEAP32[$24>>2]|0;\n $26 = (($25) + 1)|0;\n HEAP32[$24>>2] = $26;\n $27 = ((($0)) + 8|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = (($28) + ($25)|0);\n HEAP8[$29>>0] = $23;\n $30 = HEAP16[$21>>1]|0;\n $31 = ($30&65535) >>> 8;\n HEAP16[$21>>1] = $31;\n $32 = HEAP32[$1>>2]|0;\n $33 = (($32) + -8)|0;\n HEAP32[$1>>2] = $33;\n return;\n}\nfunction __tr_align($0) {\n $0 = $0|0;\n var $$off0 = 0, $$off0$in = 0, $$off049 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $storemerge = 0, $storemerge47 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 5820|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)>(13);\n $4 = 2 << $2;\n $5 = ((($0)) + 5816|0);\n $6 = HEAP16[$5>>1]|0;\n $7 = $6&65535;\n $8 = $7 | $4;\n $9 = $8&65535;\n HEAP16[$5>>1] = $9;\n if ($3) {\n  $10 = $8&255;\n  $11 = ((($0)) + 20|0);\n  $12 = HEAP32[$11>>2]|0;\n  $13 = (($12) + 1)|0;\n  HEAP32[$11>>2] = $13;\n  $14 = ((($0)) + 8|0);\n  $15 = HEAP32[$14>>2]|0;\n  $16 = (($15) + ($12)|0);\n  HEAP8[$16>>0] = $10;\n  $17 = HEAP16[$5>>1]|0;\n  $18 = ($17&65535) >>> 8;\n  $19 = $18&255;\n  $20 = HEAP32[$11>>2]|0;\n  $21 = (($20) + 1)|0;\n  HEAP32[$11>>2] = $21;\n  $22 = HEAP32[$14>>2]|0;\n  $23 = (($22) + ($20)|0);\n  HEAP8[$23>>0] = $19;\n  $24 = HEAP32[$1>>2]|0;\n  $25 = (16 - ($24))|0;\n  $26 = 2 >>> $25;\n  $27 = $26&65535;\n  HEAP16[$5>>1] = $27;\n  $28 = (($24) + -13)|0;\n  $$off0$in = $26;$storemerge = $28;\n } else {\n  $29 = (($2) + 3)|0;\n  $$off0$in = $8;$storemerge = $29;\n }\n $$off0 = $$off0$in&255;\n HEAP32[$1>>2] = $storemerge;\n $30 = ($storemerge|0)>(9);\n if ($30) {\n  $31 = ((($0)) + 20|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = (($32) + 1)|0;\n  HEAP32[$31>>2] = $33;\n  $34 = ((($0)) + 8|0);\n  $35 = HEAP32[$34>>2]|0;\n  $36 = (($35) + ($32)|0);\n  HEAP8[$36>>0] = $$off0;\n  $37 = HEAP16[$5>>1]|0;\n  $38 = ($37&65535) >>> 8;\n  $39 = $38&255;\n  $40 = HEAP32[$31>>2]|0;\n  $41 = (($40) + 1)|0;\n  HEAP32[$31>>2] = $41;\n  $42 = HEAP32[$34>>2]|0;\n  $43 = (($42) + ($40)|0);\n  HEAP8[$43>>0] = $39;\n  HEAP16[$5>>1] = 0;\n  $44 = HEAP32[$1>>2]|0;\n  $45 = (($44) + -9)|0;\n  $$off049 = 0;$storemerge47 = $45;\n } else {\n  $46 = (($storemerge) + 7)|0;\n  $$off049 = $$off0;$storemerge47 = $46;\n }\n HEAP32[$1>>2] = $storemerge47;\n $47 = ($storemerge47|0)==(16);\n if ($47) {\n  $48 = ((($0)) + 20|0);\n  $49 = HEAP32[$48>>2]|0;\n  $50 = (($49) + 1)|0;\n  HEAP32[$48>>2] = $50;\n  $51 = ((($0)) + 8|0);\n  $52 = HEAP32[$51>>2]|0;\n  $53 = (($52) + ($49)|0);\n  HEAP8[$53>>0] = $$off049;\n  $54 = HEAP16[$5>>1]|0;\n  $55 = ($54&65535) >>> 8;\n  $56 = $55&255;\n  $57 = HEAP32[$48>>2]|0;\n  $58 = (($57) + 1)|0;\n  HEAP32[$48>>2] = $58;\n  $59 = HEAP32[$51>>2]|0;\n  $60 = (($59) + ($57)|0);\n  HEAP8[$60>>0] = $56;\n  HEAP16[$5>>1] = 0;\n  HEAP32[$1>>2] = 0;\n  return;\n }\n $61 = ($storemerge47|0)>(7);\n if (!($61)) {\n  return;\n }\n $62 = ((($0)) + 20|0);\n $63 = HEAP32[$62>>2]|0;\n $64 = (($63) + 1)|0;\n HEAP32[$62>>2] = $64;\n $65 = ((($0)) + 8|0);\n $66 = HEAP32[$65>>2]|0;\n $67 = (($66) + ($63)|0);\n HEAP8[$67>>0] = $$off049;\n $68 = HEAP16[$5>>1]|0;\n $69 = ($68&65535) >>> 8;\n HEAP16[$5>>1] = $69;\n $70 = HEAP32[$1>>2]|0;\n $71 = (($70) + -8)|0;\n HEAP32[$1>>2] = $71;\n return;\n}\nfunction __tr_flush_block($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$$53$i$i = 0, $$$53$i27$i = 0, $$$54$i$i = 0, $$$54$i28$i = 0, $$$i = 0, $$$i$i = 0, $$$i15$i = 0, $$0 = 0, $$0$lcssa$i = 0, $$0118$i = 0, $$01620$i = 0, $$017$i = 0, $$021$i = 0, $$046$i$i = 0, $$046$i24$i = 0, $$048$ph$i$i = 0, $$048$ph$i19$i = 0, $$049$i$i = 0, $$049$i23$i = 0;\n var $$049$ph$i$i = 0, $$049$ph$i18$i = 0, $$050$ph$i$i = 0, $$050$ph$i$i$phi = 0, $$050$ph$i17$i = 0, $$050$ph$i17$i$phi = 0, $$092 = 0, $$093 = 0, $$1$ph$i$i = 0, $$1$ph$i21$i = 0, $$119$i = 0, $$144$ph$i$i = 0, $$144$ph$i20$i = 0, $$52$i$i = 0, $$52$i16$i = 0, $$53$i$i = 0, $$53$i26$i = 0, $$pre = 0, $$pre$phi$iZ2D = 0, $$pre$phi117Z2D = 0;\n var $$pre$phiZ2D = 0, $$pre116 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;\n var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;\n var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;\n var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;\n var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;\n var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;\n var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;\n var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;\n var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;\n var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;\n var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;\n var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;\n var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;\n var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;\n var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;\n var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$i25$i = 0, $or$cond95 = 0, $storemerge = 0, $storemerge116$i = 0, $storemerge117$i = 0, $storemerge94 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $4 = ((($0)) + 132|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)>(0);\n if ($6) {\n  $7 = HEAP32[$0>>2]|0;\n  $8 = ((($7)) + 44|0);\n  $9 = HEAP32[$8>>2]|0;\n  $10 = ($9|0)==(2);\n  if ($10) {\n   $$01620$i = -201342849;$$021$i = 0;\n   while(1) {\n    $11 = $$01620$i & 1;\n    $12 = ($11|0)==(0);\n    if (!($12)) {\n     $13 = (((($0)) + 148|0) + ($$021$i<<2)|0);\n     $14 = HEAP16[$13>>1]|0;\n     $15 = ($14<<16>>16)==(0);\n     if (!($15)) {\n      $$017$i = 0;\n      break;\n     }\n    }\n    $16 = (($$021$i) + 1)|0;\n    $17 = $$01620$i >>> 1;\n    $18 = ($16|0)<(32);\n    if ($18) {\n     $$01620$i = $17;$$021$i = $16;\n    } else {\n     label = 6;\n     break;\n    }\n   }\n   L9: do {\n    if ((label|0) == 6) {\n     $19 = ((($0)) + 184|0);\n     $20 = HEAP16[$19>>1]|0;\n     $21 = ($20<<16>>16)==(0);\n     if ($21) {\n      $22 = ((($0)) + 188|0);\n      $23 = HEAP16[$22>>1]|0;\n      $24 = ($23<<16>>16)==(0);\n      if ($24) {\n       $25 = ((($0)) + 200|0);\n       $26 = HEAP16[$25>>1]|0;\n       $27 = ($26<<16>>16)==(0);\n       if ($27) {\n        $$119$i = 32;\n        while(1) {\n         $30 = (((($0)) + 148|0) + ($$119$i<<2)|0);\n         $31 = HEAP16[$30>>1]|0;\n         $32 = ($31<<16>>16)==(0);\n         $28 = (($$119$i) + 1)|0;\n         if (!($32)) {\n          $$017$i = 1;\n          break L9;\n         }\n         $29 = ($28|0)<(256);\n         if ($29) {\n          $$119$i = $28;\n         } else {\n          $$017$i = 0;\n          break;\n         }\n        }\n       } else {\n        $$017$i = 1;\n       }\n      } else {\n       $$017$i = 1;\n      }\n     } else {\n      $$017$i = 1;\n     }\n    }\n   } while(0);\n   HEAP32[$8>>2] = $$017$i;\n  }\n  $33 = ((($0)) + 2840|0);\n  _build_tree($0,$33);\n  $34 = ((($0)) + 2852|0);\n  _build_tree($0,$34);\n  $35 = ((($0)) + 2844|0);\n  $36 = HEAP32[$35>>2]|0;\n  $37 = ((($0)) + 150|0);\n  $38 = HEAP16[$37>>1]|0;\n  $39 = $38&65535;\n  $40 = ($38<<16>>16)==(0);\n  $$$i$i = $40 ? 138 : 7;\n  $$52$i$i = $40 ? 3 : 4;\n  $41 = (($36) + 1)|0;\n  $42 = (((((($0)) + 148|0) + ($41<<2)|0)) + 2|0);\n  HEAP16[$42>>1] = -1;\n  $43 = ((($0)) + 2752|0);\n  $44 = ((($0)) + 2756|0);\n  $45 = ((($0)) + 2748|0);\n  $$048$ph$i$i = $39;$$049$ph$i$i = 0;$$050$ph$i$i = -1;$$1$ph$i$i = $$52$i$i;$$144$ph$i$i = $$$i$i;\n  L18: while(1) {\n   $$046$i$i = 0;$$049$i$i = $$049$ph$i$i;\n   while(1) {\n    $46 = ($$049$i$i|0)>($36|0);\n    if ($46) {\n     break L18;\n    }\n    $47 = (($$049$i$i) + 1)|0;\n    $48 = (((((($0)) + 148|0) + ($47<<2)|0)) + 2|0);\n    $49 = HEAP16[$48>>1]|0;\n    $50 = $49&65535;\n    $51 = (($$046$i$i) + 1)|0;\n    $52 = ($51|0)<($$144$ph$i$i|0);\n    $53 = ($$048$ph$i$i|0)==($50|0);\n    $or$cond$i$i = $52 & $53;\n    if ($or$cond$i$i) {\n     $$046$i$i = $51;$$049$i$i = $47;\n    } else {\n     break;\n    }\n   }\n   $54 = ($51|0)<($$1$ph$i$i|0);\n   do {\n    if ($54) {\n     $55 = (((($0)) + 2684|0) + ($$048$ph$i$i<<2)|0);\n     $56 = HEAP16[$55>>1]|0;\n     $57 = $56&65535;\n     $58 = (($57) + ($51))|0;\n     $59 = $58&65535;\n     HEAP16[$55>>1] = $59;\n    } else {\n     $60 = ($$048$ph$i$i|0)==(0);\n     if ($60) {\n      $67 = ($51|0)<(11);\n      if ($67) {\n       $68 = HEAP16[$43>>1]|0;\n       $69 = (($68) + 1)<<16>>16;\n       HEAP16[$43>>1] = $69;\n       break;\n      } else {\n       $70 = HEAP16[$44>>1]|0;\n       $71 = (($70) + 1)<<16>>16;\n       HEAP16[$44>>1] = $71;\n       break;\n      }\n     } else {\n      $61 = ($$048$ph$i$i|0)==($$050$ph$i$i|0);\n      $62 = (((($0)) + 2684|0) + ($$048$ph$i$i<<2)|0);\n      if (!($61)) {\n       $63 = HEAP16[$62>>1]|0;\n       $64 = (($63) + 1)<<16>>16;\n       HEAP16[$62>>1] = $64;\n      }\n      $65 = HEAP16[$45>>1]|0;\n      $66 = (($65) + 1)<<16>>16;\n      HEAP16[$45>>1] = $66;\n      break;\n     }\n    }\n   } while(0);\n   $72 = ($49<<16>>16)==(0);\n   $$53$i$i = $53 ? 6 : 7;\n   $$$53$i$i = $72 ? 138 : $$53$i$i;\n   $73 = $72 | $53;\n   $$$54$i$i = $73 ? 3 : 4;\n   $$050$ph$i$i$phi = $$048$ph$i$i;$$048$ph$i$i = $50;$$049$ph$i$i = $47;$$1$ph$i$i = $$$54$i$i;$$144$ph$i$i = $$$53$i$i;$$050$ph$i$i = $$050$ph$i$i$phi;\n  }\n  $74 = ((($0)) + 2856|0);\n  $75 = HEAP32[$74>>2]|0;\n  $76 = ((($0)) + 2442|0);\n  $77 = HEAP16[$76>>1]|0;\n  $78 = $77&65535;\n  $79 = ($77<<16>>16)==(0);\n  $$$i15$i = $79 ? 138 : 7;\n  $$52$i16$i = $79 ? 3 : 4;\n  $80 = (($75) + 1)|0;\n  $81 = (((((($0)) + 2440|0) + ($80<<2)|0)) + 2|0);\n  HEAP16[$81>>1] = -1;\n  $$048$ph$i19$i = $78;$$049$ph$i18$i = 0;$$050$ph$i17$i = -1;$$1$ph$i21$i = $$52$i16$i;$$144$ph$i20$i = $$$i15$i;\n  L38: while(1) {\n   $$046$i24$i = 0;$$049$i23$i = $$049$ph$i18$i;\n   while(1) {\n    $82 = ($$049$i23$i|0)>($75|0);\n    if ($82) {\n     break L38;\n    }\n    $83 = (($$049$i23$i) + 1)|0;\n    $84 = (((((($0)) + 2440|0) + ($83<<2)|0)) + 2|0);\n    $85 = HEAP16[$84>>1]|0;\n    $86 = $85&65535;\n    $87 = (($$046$i24$i) + 1)|0;\n    $88 = ($87|0)<($$144$ph$i20$i|0);\n    $89 = ($$048$ph$i19$i|0)==($86|0);\n    $or$cond$i25$i = $88 & $89;\n    if ($or$cond$i25$i) {\n     $$046$i24$i = $87;$$049$i23$i = $83;\n    } else {\n     break;\n    }\n   }\n   $90 = ($87|0)<($$1$ph$i21$i|0);\n   do {\n    if ($90) {\n     $91 = (((($0)) + 2684|0) + ($$048$ph$i19$i<<2)|0);\n     $92 = HEAP16[$91>>1]|0;\n     $93 = $92&65535;\n     $94 = (($93) + ($87))|0;\n     $95 = $94&65535;\n     HEAP16[$91>>1] = $95;\n    } else {\n     $96 = ($$048$ph$i19$i|0)==(0);\n     if ($96) {\n      $103 = ($87|0)<(11);\n      if ($103) {\n       $104 = HEAP16[$43>>1]|0;\n       $105 = (($104) + 1)<<16>>16;\n       HEAP16[$43>>1] = $105;\n       break;\n      } else {\n       $106 = HEAP16[$44>>1]|0;\n       $107 = (($106) + 1)<<16>>16;\n       HEAP16[$44>>1] = $107;\n       break;\n      }\n     } else {\n      $97 = ($$048$ph$i19$i|0)==($$050$ph$i17$i|0);\n      $98 = (((($0)) + 2684|0) + ($$048$ph$i19$i<<2)|0);\n      if (!($97)) {\n       $99 = HEAP16[$98>>1]|0;\n       $100 = (($99) + 1)<<16>>16;\n       HEAP16[$98>>1] = $100;\n      }\n      $101 = HEAP16[$45>>1]|0;\n      $102 = (($101) + 1)<<16>>16;\n      HEAP16[$45>>1] = $102;\n      break;\n     }\n    }\n   } while(0);\n   $108 = ($85<<16>>16)==(0);\n   $$53$i26$i = $89 ? 6 : 7;\n   $$$53$i27$i = $108 ? 138 : $$53$i26$i;\n   $109 = $108 | $89;\n   $$$54$i28$i = $109 ? 3 : 4;\n   $$050$ph$i17$i$phi = $$048$ph$i19$i;$$048$ph$i19$i = $86;$$049$ph$i18$i = $83;$$1$ph$i21$i = $$$54$i28$i;$$144$ph$i20$i = $$$53$i27$i;$$050$ph$i17$i = $$050$ph$i17$i$phi;\n  }\n  $110 = ((($0)) + 2864|0);\n  _build_tree($0,$110);\n  $111 = ((($0)) + 2746|0);\n  $112 = HEAP16[$111>>1]|0;\n  $113 = ($112<<16>>16)==(0);\n  if ($113) {\n   $114 = ((($0)) + 2690|0);\n   $115 = HEAP16[$114>>1]|0;\n   $116 = ($115<<16>>16)==(0);\n   if ($116) {\n    $117 = ((($0)) + 2742|0);\n    $118 = HEAP16[$117>>1]|0;\n    $119 = ($118<<16>>16)==(0);\n    if ($119) {\n     $120 = ((($0)) + 2694|0);\n     $121 = HEAP16[$120>>1]|0;\n     $122 = ($121<<16>>16)==(0);\n     if ($122) {\n      $123 = ((($0)) + 2738|0);\n      $124 = HEAP16[$123>>1]|0;\n      $125 = ($124<<16>>16)==(0);\n      if ($125) {\n       $126 = ((($0)) + 2698|0);\n       $127 = HEAP16[$126>>1]|0;\n       $128 = ($127<<16>>16)==(0);\n       if ($128) {\n        $129 = ((($0)) + 2734|0);\n        $130 = HEAP16[$129>>1]|0;\n        $131 = ($130<<16>>16)==(0);\n        if ($131) {\n         $132 = ((($0)) + 2702|0);\n         $133 = HEAP16[$132>>1]|0;\n         $134 = ($133<<16>>16)==(0);\n         if ($134) {\n          $135 = ((($0)) + 2730|0);\n          $136 = HEAP16[$135>>1]|0;\n          $137 = ($136<<16>>16)==(0);\n          if ($137) {\n           $138 = ((($0)) + 2706|0);\n           $139 = HEAP16[$138>>1]|0;\n           $140 = ($139<<16>>16)==(0);\n           if ($140) {\n            $141 = ((($0)) + 2726|0);\n            $142 = HEAP16[$141>>1]|0;\n            $143 = ($142<<16>>16)==(0);\n            if ($143) {\n             $144 = ((($0)) + 2710|0);\n             $145 = HEAP16[$144>>1]|0;\n             $146 = ($145<<16>>16)==(0);\n             if ($146) {\n              $147 = ((($0)) + 2722|0);\n              $148 = HEAP16[$147>>1]|0;\n              $149 = ($148<<16>>16)==(0);\n              if ($149) {\n               $150 = ((($0)) + 2714|0);\n               $151 = HEAP16[$150>>1]|0;\n               $152 = ($151<<16>>16)==(0);\n               if ($152) {\n                $153 = ((($0)) + 2718|0);\n                $154 = HEAP16[$153>>1]|0;\n                $155 = ($154<<16>>16)==(0);\n                if ($155) {\n                 $156 = ((($0)) + 2686|0);\n                 $157 = HEAP16[$156>>1]|0;\n                 $158 = ($157<<16>>16)==(0);\n                 $$$i = $158 ? 2 : 3;\n                 $$0$lcssa$i = $$$i;\n                } else {\n                 $$0$lcssa$i = 4;\n                }\n               } else {\n                $$0$lcssa$i = 5;\n               }\n              } else {\n               $$0$lcssa$i = 6;\n              }\n             } else {\n              $$0$lcssa$i = 7;\n             }\n            } else {\n             $$0$lcssa$i = 8;\n            }\n           } else {\n            $$0$lcssa$i = 9;\n           }\n          } else {\n           $$0$lcssa$i = 10;\n          }\n         } else {\n          $$0$lcssa$i = 11;\n         }\n        } else {\n         $$0$lcssa$i = 12;\n        }\n       } else {\n        $$0$lcssa$i = 13;\n       }\n      } else {\n       $$0$lcssa$i = 14;\n      }\n     } else {\n      $$0$lcssa$i = 15;\n     }\n    } else {\n     $$0$lcssa$i = 16;\n    }\n   } else {\n    $$0$lcssa$i = 17;\n   }\n  } else {\n   $$0$lcssa$i = 18;\n  }\n  $159 = ($$0$lcssa$i*3)|0;\n  $160 = (($159) + 17)|0;\n  $161 = ((($0)) + 5800|0);\n  $162 = HEAP32[$161>>2]|0;\n  $163 = (($160) + ($162))|0;\n  HEAP32[$161>>2] = $163;\n  $164 = (($163) + 10)|0;\n  $165 = $164 >>> 3;\n  $166 = ((($0)) + 5804|0);\n  $167 = HEAP32[$166>>2]|0;\n  $168 = (($167) + 10)|0;\n  $169 = $168 >>> 3;\n  $170 = ($169>>>0)>($165>>>0);\n  $$ = $170 ? $165 : $169;\n  $$0 = $$;$$092 = $169;$$093 = $$0$lcssa$i;\n } else {\n  $171 = (($2) + 5)|0;\n  $$0 = $171;$$092 = $171;$$093 = 0;\n }\n $172 = (($2) + 4)|0;\n $173 = ($172>>>0)<=($$0>>>0);\n $174 = ($1|0)!=(0|0);\n $or$cond = $174 & $173;\n do {\n  if ($or$cond) {\n   __tr_stored_block($0,$1,$2,$3);\n  } else {\n   $175 = ((($0)) + 136|0);\n   $176 = HEAP32[$175>>2]|0;\n   $177 = ($176|0)==(4);\n   $178 = ($$092|0)==($$0|0);\n   $or$cond95 = $178 | $177;\n   $179 = ((($0)) + 5820|0);\n   $180 = HEAP32[$179>>2]|0;\n   $181 = ($180|0)>(13);\n   if ($or$cond95) {\n    $182 = (($3) + 2)|0;\n    $183 = $182 & 65535;\n    $184 = $183 << $180;\n    $185 = ((($0)) + 5816|0);\n    $186 = HEAP16[$185>>1]|0;\n    $187 = $186&65535;\n    $188 = $187 | $184;\n    $189 = $188&65535;\n    HEAP16[$185>>1] = $189;\n    if ($181) {\n     $190 = $188&255;\n     $191 = ((($0)) + 20|0);\n     $192 = HEAP32[$191>>2]|0;\n     $193 = (($192) + 1)|0;\n     HEAP32[$191>>2] = $193;\n     $194 = ((($0)) + 8|0);\n     $195 = HEAP32[$194>>2]|0;\n     $196 = (($195) + ($192)|0);\n     HEAP8[$196>>0] = $190;\n     $197 = HEAP16[$185>>1]|0;\n     $198 = ($197&65535) >>> 8;\n     $199 = $198&255;\n     $200 = HEAP32[$191>>2]|0;\n     $201 = (($200) + 1)|0;\n     HEAP32[$191>>2] = $201;\n     $202 = HEAP32[$194>>2]|0;\n     $203 = (($202) + ($200)|0);\n     HEAP8[$203>>0] = $199;\n     $204 = HEAP32[$179>>2]|0;\n     $205 = (16 - ($204))|0;\n     $206 = $183 >>> $205;\n     $207 = $206&65535;\n     HEAP16[$185>>1] = $207;\n     $208 = (($204) + -13)|0;\n     $storemerge94 = $208;\n    } else {\n     $209 = (($180) + 3)|0;\n     $storemerge94 = $209;\n    }\n    HEAP32[$179>>2] = $storemerge94;\n    _compress_block($0,13278,13158);\n    break;\n   }\n   $210 = (($3) + 4)|0;\n   $211 = $210 & 65535;\n   $212 = $211 << $180;\n   $213 = ((($0)) + 5816|0);\n   $214 = HEAP16[$213>>1]|0;\n   $215 = $214&65535;\n   $216 = $215 | $212;\n   $217 = $216&65535;\n   HEAP16[$213>>1] = $217;\n   if ($181) {\n    $218 = $216&255;\n    $219 = ((($0)) + 20|0);\n    $220 = HEAP32[$219>>2]|0;\n    $221 = (($220) + 1)|0;\n    HEAP32[$219>>2] = $221;\n    $222 = ((($0)) + 8|0);\n    $223 = HEAP32[$222>>2]|0;\n    $224 = (($223) + ($220)|0);\n    HEAP8[$224>>0] = $218;\n    $225 = HEAP16[$213>>1]|0;\n    $226 = ($225&65535) >>> 8;\n    $227 = $226&255;\n    $228 = HEAP32[$219>>2]|0;\n    $229 = (($228) + 1)|0;\n    HEAP32[$219>>2] = $229;\n    $230 = HEAP32[$222>>2]|0;\n    $231 = (($230) + ($228)|0);\n    HEAP8[$231>>0] = $227;\n    $232 = HEAP32[$179>>2]|0;\n    $233 = (16 - ($232))|0;\n    $234 = $211 >>> $233;\n    $235 = $234&65535;\n    HEAP16[$213>>1] = $235;\n    $236 = (($232) + -13)|0;\n    $247 = $234;$storemerge = $236;\n   } else {\n    $237 = (($180) + 3)|0;\n    $247 = $216;$storemerge = $237;\n   }\n   HEAP32[$179>>2] = $storemerge;\n   $238 = ((($0)) + 2844|0);\n   $239 = HEAP32[$238>>2]|0;\n   $240 = ((($0)) + 2856|0);\n   $241 = HEAP32[$240>>2]|0;\n   $242 = ($storemerge|0)>(11);\n   $243 = (($239) + 65280)|0;\n   $244 = $243 & 65535;\n   $245 = $244 << $storemerge;\n   $246 = $247 & 65535;\n   $248 = $246 | $245;\n   $249 = $248&65535;\n   HEAP16[$213>>1] = $249;\n   if ($242) {\n    $250 = $248&255;\n    $251 = ((($0)) + 20|0);\n    $252 = HEAP32[$251>>2]|0;\n    $253 = (($252) + 1)|0;\n    HEAP32[$251>>2] = $253;\n    $254 = ((($0)) + 8|0);\n    $255 = HEAP32[$254>>2]|0;\n    $256 = (($255) + ($252)|0);\n    HEAP8[$256>>0] = $250;\n    $257 = HEAP16[$213>>1]|0;\n    $258 = ($257&65535) >>> 8;\n    $259 = $258&255;\n    $260 = HEAP32[$251>>2]|0;\n    $261 = (($260) + 1)|0;\n    HEAP32[$251>>2] = $261;\n    $262 = HEAP32[$254>>2]|0;\n    $263 = (($262) + ($260)|0);\n    HEAP8[$263>>0] = $259;\n    $264 = HEAP32[$179>>2]|0;\n    $265 = (16 - ($264))|0;\n    $266 = $244 >>> $265;\n    $267 = $266&65535;\n    HEAP16[$213>>1] = $267;\n    $268 = (($264) + -11)|0;\n    $270 = $268;$275 = $266;\n   } else {\n    $269 = (($storemerge) + 5)|0;\n    $270 = $269;$275 = $248;\n   }\n   HEAP32[$179>>2] = $270;\n   $271 = ($270|0)>(11);\n   $272 = $241 & 65535;\n   $273 = $272 << $270;\n   $274 = $275 & 65535;\n   $276 = $273 | $274;\n   $277 = $276&65535;\n   HEAP16[$213>>1] = $277;\n   if ($271) {\n    $278 = $276&255;\n    $279 = ((($0)) + 20|0);\n    $280 = HEAP32[$279>>2]|0;\n    $281 = (($280) + 1)|0;\n    HEAP32[$279>>2] = $281;\n    $282 = ((($0)) + 8|0);\n    $283 = HEAP32[$282>>2]|0;\n    $284 = (($283) + ($280)|0);\n    HEAP8[$284>>0] = $278;\n    $285 = HEAP16[$213>>1]|0;\n    $286 = ($285&65535) >>> 8;\n    $287 = $286&255;\n    $288 = HEAP32[$279>>2]|0;\n    $289 = (($288) + 1)|0;\n    HEAP32[$279>>2] = $289;\n    $290 = HEAP32[$282>>2]|0;\n    $291 = (($290) + ($288)|0);\n    HEAP8[$291>>0] = $287;\n    $292 = HEAP32[$179>>2]|0;\n    $293 = (16 - ($292))|0;\n    $294 = $272 >>> $293;\n    $295 = $294&65535;\n    HEAP16[$213>>1] = $295;\n    $296 = (($292) + -11)|0;\n    $298 = $296;$304 = $294;\n   } else {\n    $297 = (($270) + 5)|0;\n    $298 = $297;$304 = $276;\n   }\n   HEAP32[$179>>2] = $298;\n   $299 = ($298|0)>(12);\n   $300 = (($$093) + 65533)|0;\n   $301 = $300 & 65535;\n   $302 = $301 << $298;\n   $303 = $304 & 65535;\n   $305 = $302 | $303;\n   $306 = $305&65535;\n   HEAP16[$213>>1] = $306;\n   if ($299) {\n    $307 = $305&255;\n    $308 = ((($0)) + 20|0);\n    $309 = HEAP32[$308>>2]|0;\n    $310 = (($309) + 1)|0;\n    HEAP32[$308>>2] = $310;\n    $311 = ((($0)) + 8|0);\n    $312 = HEAP32[$311>>2]|0;\n    $313 = (($312) + ($309)|0);\n    HEAP8[$313>>0] = $307;\n    $314 = HEAP16[$213>>1]|0;\n    $315 = ($314&65535) >>> 8;\n    $316 = $315&255;\n    $317 = HEAP32[$308>>2]|0;\n    $318 = (($317) + 1)|0;\n    HEAP32[$308>>2] = $318;\n    $319 = HEAP32[$311>>2]|0;\n    $320 = (($319) + ($317)|0);\n    HEAP8[$320>>0] = $316;\n    $321 = HEAP32[$179>>2]|0;\n    $322 = (16 - ($321))|0;\n    $323 = $301 >>> $322;\n    $324 = $323&65535;\n    HEAP16[$213>>1] = $324;\n    $325 = (($321) + -12)|0;\n    $$pre$phi117Z2D = $311;$$pre$phiZ2D = $308;$391 = $323;$storemerge116$i = $325;\n   } else {\n    $326 = (($298) + 4)|0;\n    $$pre = ((($0)) + 20|0);\n    $$pre116 = ((($0)) + 8|0);\n    $$pre$phi117Z2D = $$pre116;$$pre$phiZ2D = $$pre;$391 = $305;$storemerge116$i = $326;\n   }\n   HEAP32[$179>>2] = $storemerge116$i;\n   $$0118$i = 0;$327 = $storemerge116$i;$337 = $391;\n   while(1) {\n    $328 = ($327|0)>(13);\n    $329 = (28335 + ($$0118$i)|0);\n    $330 = HEAP8[$329>>0]|0;\n    $331 = $330&255;\n    $332 = (((((($0)) + 2684|0) + ($331<<2)|0)) + 2|0);\n    $333 = HEAP16[$332>>1]|0;\n    $334 = $333&65535;\n    $335 = $334 << $327;\n    $336 = $337 & 65535;\n    $338 = $335 | $336;\n    $339 = $338&65535;\n    HEAP16[$213>>1] = $339;\n    if ($328) {\n     $340 = $338&255;\n     $341 = HEAP32[$$pre$phiZ2D>>2]|0;\n     $342 = (($341) + 1)|0;\n     HEAP32[$$pre$phiZ2D>>2] = $342;\n     $343 = HEAP32[$$pre$phi117Z2D>>2]|0;\n     $344 = (($343) + ($341)|0);\n     HEAP8[$344>>0] = $340;\n     $345 = HEAP16[$213>>1]|0;\n     $346 = ($345&65535) >>> 8;\n     $347 = $346&255;\n     $348 = HEAP32[$$pre$phiZ2D>>2]|0;\n     $349 = (($348) + 1)|0;\n     HEAP32[$$pre$phiZ2D>>2] = $349;\n     $350 = HEAP32[$$pre$phi117Z2D>>2]|0;\n     $351 = (($350) + ($348)|0);\n     HEAP8[$351>>0] = $347;\n     $352 = HEAP32[$179>>2]|0;\n     $353 = (16 - ($352))|0;\n     $354 = $334 >>> $353;\n     $355 = $354&65535;\n     HEAP16[$213>>1] = $355;\n     $356 = (($352) + -13)|0;\n     $392 = $354;$storemerge117$i = $356;\n    } else {\n     $357 = (($327) + 3)|0;\n     $392 = $338;$storemerge117$i = $357;\n    }\n    HEAP32[$179>>2] = $storemerge117$i;\n    $358 = (($$0118$i) + 1)|0;\n    $exitcond$i = ($$0118$i|0)==($$093|0);\n    if ($exitcond$i) {\n     break;\n    } else {\n     $$0118$i = $358;$327 = $storemerge117$i;$337 = $392;\n    }\n   }\n   $359 = ((($0)) + 148|0);\n   _send_tree($0,$359,$239);\n   $360 = ((($0)) + 2440|0);\n   _send_tree($0,$360,$241);\n   _compress_block($0,$359,$360);\n  }\n } while(0);\n _init_block($0);\n $361 = ($3|0)==(0);\n if ($361) {\n  return;\n }\n $362 = ((($0)) + 5820|0);\n $363 = HEAP32[$362>>2]|0;\n $364 = ($363|0)>(8);\n if ($364) {\n  $365 = ((($0)) + 5816|0);\n  $366 = HEAP16[$365>>1]|0;\n  $367 = $366&255;\n  $368 = ((($0)) + 20|0);\n  $369 = HEAP32[$368>>2]|0;\n  $370 = (($369) + 1)|0;\n  HEAP32[$368>>2] = $370;\n  $371 = ((($0)) + 8|0);\n  $372 = HEAP32[$371>>2]|0;\n  $373 = (($372) + ($369)|0);\n  HEAP8[$373>>0] = $367;\n  $374 = HEAP16[$365>>1]|0;\n  $375 = ($374&65535) >>> 8;\n  $376 = $375&255;\n  $377 = HEAP32[$368>>2]|0;\n  $378 = (($377) + 1)|0;\n  HEAP32[$368>>2] = $378;\n  $379 = HEAP32[$371>>2]|0;\n  $380 = (($379) + ($377)|0);\n  HEAP8[$380>>0] = $376;\n  $$pre$phi$iZ2D = $365;\n } else {\n  $381 = ($363|0)>(0);\n  $382 = ((($0)) + 5816|0);\n  if ($381) {\n   $383 = HEAP16[$382>>1]|0;\n   $384 = $383&255;\n   $385 = ((($0)) + 20|0);\n   $386 = HEAP32[$385>>2]|0;\n   $387 = (($386) + 1)|0;\n   HEAP32[$385>>2] = $387;\n   $388 = ((($0)) + 8|0);\n   $389 = HEAP32[$388>>2]|0;\n   $390 = (($389) + ($386)|0);\n   HEAP8[$390>>0] = $384;\n   $$pre$phi$iZ2D = $382;\n  } else {\n   $$pre$phi$iZ2D = $382;\n  }\n }\n HEAP16[$$pre$phi$iZ2D>>1] = 0;\n HEAP32[$362>>2] = 0;\n return;\n}\nfunction _build_tree($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$ = 0, $$$2 = 0, $$$2$us = 0, $$$i = 0, $$$us = 0, $$$us$i = 0, $$0 = 0, $$0$$i = 0, $$0$$us$i = 0, $$0$i = 0, $$0$i$i = 0, $$0$i111 = 0, $$0$i119 = 0, $$0$lcssa$i = 0, $$0108$i = 0, $$0108$us$i = 0, $$010810$i = 0, $$010812$i = 0, $$010812$us$i = 0, $$011$i = 0;\n var $$011$us$i = 0, $$0111$i = 0, $$0111$us$i = 0, $$0115$ph$i131 = 0, $$02329$i = 0, $$02426$i = 0, $$02528$i = 0, $$052$lcssa$i = 0, $$052$lcssa$i112 = 0, $$052$lcssa$i120 = 0, $$05254$i = 0, $$05254$i109 = 0, $$05254$i117 = 0, $$053$i = 0, $$055$i = 0, $$055$i108 = 0, $$055$i116 = 0, $$07$i$i = 0, $$08$i$i = 0, $$097$lcssa152 = 0;\n var $$097138 = 0, $$098137 = 0, $$1 = 0, $$1$i = 0, $$1$i110 = 0, $$1$i118 = 0, $$100 = 0, $$11099$i = 0, $$199133 = 0, $$2$i = 0, $$2$lcssa = 0, $$2110$i = 0, $$2110$ph$i$lcssa = 0, $$2110$ph$i132 = 0, $$2114$i = 0, $$2114$in$i = 0, $$2134 = 0, $$2134$us = 0, $$37$i = 0, $$idx$val = 0;\n var $$idx101$val = 0, $$idx102$val = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $$pre149 = 0, $$pre150$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;\n var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;\n var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;\n var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;\n var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;\n var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;\n var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;\n var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;\n var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;\n var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;\n var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;\n var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;\n var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;\n var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;\n var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;\n var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;\n var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;\n var $exitcond$i = 0, $exitcond$i104 = 0, $exitcond21$i = 0, $exitcond30$i = 0, $scevgep$i = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $2 = sp;\n $3 = HEAP32[$1>>2]|0;\n $4 = ((($1)) + 8|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = HEAP32[$5>>2]|0;\n $7 = ((($5)) + 12|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($0)) + 5200|0);\n HEAP32[$9>>2] = 0;\n $10 = ((($0)) + 5204|0);\n HEAP32[$10>>2] = 573;\n $11 = ($8|0)>(0);\n if ($11) {\n  $$097138 = -1;$$098137 = 0;\n  while(1) {\n   $27 = (($3) + ($$098137<<2)|0);\n   $28 = HEAP16[$27>>1]|0;\n   $29 = ($28<<16>>16)==(0);\n   if ($29) {\n    $34 = (((($3) + ($$098137<<2)|0)) + 2|0);\n    HEAP16[$34>>1] = 0;\n    $$1 = $$097138;\n   } else {\n    $30 = HEAP32[$9>>2]|0;\n    $31 = (($30) + 1)|0;\n    HEAP32[$9>>2] = $31;\n    $32 = (((($0)) + 2908|0) + ($31<<2)|0);\n    HEAP32[$32>>2] = $$098137;\n    $33 = (((($0)) + 5208|0) + ($$098137)|0);\n    HEAP8[$33>>0] = 0;\n    $$1 = $$098137;\n   }\n   $35 = (($$098137) + 1)|0;\n   $exitcond = ($35|0)==($8|0);\n   if ($exitcond) {\n    break;\n   } else {\n    $$097138 = $$1;$$098137 = $35;\n   }\n  }\n  $$pre = HEAP32[$9>>2]|0;\n  $12 = ($$pre|0)<(2);\n  if ($12) {\n   $$097$lcssa152 = $$1;$353 = $$pre;\n   label = 3;\n  } else {\n   $$2$lcssa = $$1;$54 = $$pre;\n  }\n } else {\n  $$097$lcssa152 = -1;$353 = 0;\n  label = 3;\n }\n if ((label|0) == 3) {\n  $13 = ((($0)) + 5800|0);\n  $14 = ($6|0)==(0|0);\n  $15 = ((($0)) + 5804|0);\n  if ($14) {\n   $$2134$us = $$097$lcssa152;$19 = $353;\n   while(1) {\n    $16 = ($$2134$us|0)<(2);\n    $17 = (($$2134$us) + 1)|0;\n    $$$2$us = $16 ? $17 : $$2134$us;\n    $$$us = $16 ? $17 : 0;\n    $18 = (($19) + 1)|0;\n    HEAP32[$9>>2] = $18;\n    $20 = (((($0)) + 2908|0) + ($18<<2)|0);\n    HEAP32[$20>>2] = $$$us;\n    $21 = (($3) + ($$$us<<2)|0);\n    HEAP16[$21>>1] = 1;\n    $22 = (((($0)) + 5208|0) + ($$$us)|0);\n    HEAP8[$22>>0] = 0;\n    $23 = HEAP32[$13>>2]|0;\n    $24 = (($23) + -1)|0;\n    HEAP32[$13>>2] = $24;\n    $25 = HEAP32[$9>>2]|0;\n    $26 = ($25|0)<(2);\n    if ($26) {\n     $$2134$us = $$$2$us;$19 = $25;\n    } else {\n     $$2$lcssa = $$$2$us;$54 = $25;\n     break;\n    }\n   }\n  } else {\n   $$2134 = $$097$lcssa152;$39 = $353;\n   while(1) {\n    $36 = ($$2134|0)<(2);\n    $37 = (($$2134) + 1)|0;\n    $$$2 = $36 ? $37 : $$2134;\n    $$ = $36 ? $37 : 0;\n    $38 = (($39) + 1)|0;\n    HEAP32[$9>>2] = $38;\n    $40 = (((($0)) + 2908|0) + ($38<<2)|0);\n    HEAP32[$40>>2] = $$;\n    $41 = (($3) + ($$<<2)|0);\n    HEAP16[$41>>1] = 1;\n    $42 = (((($0)) + 5208|0) + ($$)|0);\n    HEAP8[$42>>0] = 0;\n    $43 = HEAP32[$13>>2]|0;\n    $44 = (($43) + -1)|0;\n    HEAP32[$13>>2] = $44;\n    $45 = (((($6) + ($$<<2)|0)) + 2|0);\n    $46 = HEAP16[$45>>1]|0;\n    $47 = $46&65535;\n    $48 = HEAP32[$15>>2]|0;\n    $49 = (($48) - ($47))|0;\n    HEAP32[$15>>2] = $49;\n    $50 = HEAP32[$9>>2]|0;\n    $51 = ($50|0)<(2);\n    if ($51) {\n     $$2134 = $$$2;$39 = $50;\n    } else {\n     $$2$lcssa = $$$2;$54 = $50;\n     break;\n    }\n   }\n  }\n }\n $52 = ((($1)) + 4|0);\n HEAP32[$52>>2] = $$2$lcssa;\n $53 = (($54|0) / 2)&-1;\n $$199133 = $53;$60 = $54;\n while(1) {\n  $56 = (((($0)) + 2908|0) + ($$199133<<2)|0);\n  $57 = HEAP32[$56>>2]|0;\n  $58 = (((($0)) + 5208|0) + ($57)|0);\n  $$053$i = $$199133 << 1;\n  $59 = ($$053$i|0)>($60|0);\n  L19: do {\n   if ($59) {\n    $$052$lcssa$i = $$199133;\n   } else {\n    $61 = (($3) + ($57<<2)|0);\n    $$05254$i = $$199133;$$055$i = $$053$i;$63 = $60;\n    while(1) {\n     $62 = ($$055$i|0)<($63|0);\n     do {\n      if ($62) {\n       $64 = $$055$i | 1;\n       $65 = (((($0)) + 2908|0) + ($64<<2)|0);\n       $66 = HEAP32[$65>>2]|0;\n       $67 = (($3) + ($66<<2)|0);\n       $68 = HEAP16[$67>>1]|0;\n       $69 = (((($0)) + 2908|0) + ($$055$i<<2)|0);\n       $70 = HEAP32[$69>>2]|0;\n       $71 = (($3) + ($70<<2)|0);\n       $72 = HEAP16[$71>>1]|0;\n       $73 = ($68&65535)<($72&65535);\n       if (!($73)) {\n        $74 = ($68<<16>>16)==($72<<16>>16);\n        if (!($74)) {\n         $$1$i = $$055$i;\n         break;\n        }\n        $75 = (((($0)) + 5208|0) + ($66)|0);\n        $76 = HEAP8[$75>>0]|0;\n        $77 = (((($0)) + 5208|0) + ($70)|0);\n        $78 = HEAP8[$77>>0]|0;\n        $79 = ($76&255)>($78&255);\n        if ($79) {\n         $$1$i = $$055$i;\n         break;\n        }\n       }\n       $$1$i = $64;\n      } else {\n       $$1$i = $$055$i;\n      }\n     } while(0);\n     $80 = HEAP16[$61>>1]|0;\n     $81 = (((($0)) + 2908|0) + ($$1$i<<2)|0);\n     $82 = HEAP32[$81>>2]|0;\n     $83 = (($3) + ($82<<2)|0);\n     $84 = HEAP16[$83>>1]|0;\n     $85 = ($80&65535)<($84&65535);\n     if ($85) {\n      $$052$lcssa$i = $$05254$i;\n      break L19;\n     }\n     $86 = ($80<<16>>16)==($84<<16>>16);\n     if ($86) {\n      $87 = HEAP8[$58>>0]|0;\n      $88 = (((($0)) + 5208|0) + ($82)|0);\n      $89 = HEAP8[$88>>0]|0;\n      $90 = ($87&255)>($89&255);\n      if (!($90)) {\n       $$052$lcssa$i = $$05254$i;\n       break L19;\n      }\n     }\n     $91 = (((($0)) + 2908|0) + ($$05254$i<<2)|0);\n     HEAP32[$91>>2] = $82;\n     $$0$i = $$1$i << 1;\n     $92 = HEAP32[$9>>2]|0;\n     $93 = ($$0$i|0)>($92|0);\n     if ($93) {\n      $$052$lcssa$i = $$1$i;\n      break;\n     } else {\n      $$05254$i = $$1$i;$$055$i = $$0$i;$63 = $92;\n     }\n    }\n   }\n  } while(0);\n  $94 = (((($0)) + 2908|0) + ($$052$lcssa$i<<2)|0);\n  HEAP32[$94>>2] = $57;\n  $95 = ($$199133|0)>(1);\n  if (!($95)) {\n   break;\n  }\n  $96 = (($$199133) + -1)|0;\n  $$pre149 = HEAP32[$9>>2]|0;\n  $$199133 = $96;$60 = $$pre149;\n }\n $$pre150$pre = HEAP32[$9>>2]|0;\n $55 = ((($0)) + 2912|0);\n $$0 = $8;$99 = $$pre150$pre;\n while(1) {\n  $97 = HEAP32[$55>>2]|0;\n  $98 = (($99) + -1)|0;\n  HEAP32[$9>>2] = $98;\n  $100 = (((($0)) + 2908|0) + ($99<<2)|0);\n  $101 = HEAP32[$100>>2]|0;\n  HEAP32[$55>>2] = $101;\n  $102 = (((($0)) + 5208|0) + ($101)|0);\n  $103 = ($99|0)<(3);\n  L39: do {\n   if ($103) {\n    $$052$lcssa$i120 = 1;\n   } else {\n    $104 = (($3) + ($101<<2)|0);\n    $$05254$i117 = 1;$$055$i116 = 2;$106 = $98;\n    while(1) {\n     $105 = ($$055$i116|0)<($106|0);\n     do {\n      if ($105) {\n       $107 = $$055$i116 | 1;\n       $108 = (((($0)) + 2908|0) + ($107<<2)|0);\n       $109 = HEAP32[$108>>2]|0;\n       $110 = (($3) + ($109<<2)|0);\n       $111 = HEAP16[$110>>1]|0;\n       $112 = (((($0)) + 2908|0) + ($$055$i116<<2)|0);\n       $113 = HEAP32[$112>>2]|0;\n       $114 = (($3) + ($113<<2)|0);\n       $115 = HEAP16[$114>>1]|0;\n       $116 = ($111&65535)<($115&65535);\n       if (!($116)) {\n        $117 = ($111<<16>>16)==($115<<16>>16);\n        if (!($117)) {\n         $$1$i118 = $$055$i116;\n         break;\n        }\n        $118 = (((($0)) + 5208|0) + ($109)|0);\n        $119 = HEAP8[$118>>0]|0;\n        $120 = (((($0)) + 5208|0) + ($113)|0);\n        $121 = HEAP8[$120>>0]|0;\n        $122 = ($119&255)>($121&255);\n        if ($122) {\n         $$1$i118 = $$055$i116;\n         break;\n        }\n       }\n       $$1$i118 = $107;\n      } else {\n       $$1$i118 = $$055$i116;\n      }\n     } while(0);\n     $123 = HEAP16[$104>>1]|0;\n     $124 = (((($0)) + 2908|0) + ($$1$i118<<2)|0);\n     $125 = HEAP32[$124>>2]|0;\n     $126 = (($3) + ($125<<2)|0);\n     $127 = HEAP16[$126>>1]|0;\n     $128 = ($123&65535)<($127&65535);\n     if ($128) {\n      $$052$lcssa$i120 = $$05254$i117;\n      break L39;\n     }\n     $129 = ($123<<16>>16)==($127<<16>>16);\n     if ($129) {\n      $130 = HEAP8[$102>>0]|0;\n      $131 = (((($0)) + 5208|0) + ($125)|0);\n      $132 = HEAP8[$131>>0]|0;\n      $133 = ($130&255)>($132&255);\n      if (!($133)) {\n       $$052$lcssa$i120 = $$05254$i117;\n       break L39;\n      }\n     }\n     $134 = (((($0)) + 2908|0) + ($$05254$i117<<2)|0);\n     HEAP32[$134>>2] = $125;\n     $$0$i119 = $$1$i118 << 1;\n     $135 = HEAP32[$9>>2]|0;\n     $136 = ($$0$i119|0)>($135|0);\n     if ($136) {\n      $$052$lcssa$i120 = $$1$i118;\n      break;\n     } else {\n      $$05254$i117 = $$1$i118;$$055$i116 = $$0$i119;$106 = $135;\n     }\n    }\n   }\n  } while(0);\n  $137 = (((($0)) + 2908|0) + ($$052$lcssa$i120<<2)|0);\n  HEAP32[$137>>2] = $101;\n  $138 = HEAP32[$55>>2]|0;\n  $139 = HEAP32[$10>>2]|0;\n  $140 = (($139) + -1)|0;\n  HEAP32[$10>>2] = $140;\n  $141 = (((($0)) + 2908|0) + ($140<<2)|0);\n  HEAP32[$141>>2] = $97;\n  $142 = HEAP32[$10>>2]|0;\n  $143 = (($142) + -1)|0;\n  HEAP32[$10>>2] = $143;\n  $144 = (((($0)) + 2908|0) + ($143<<2)|0);\n  HEAP32[$144>>2] = $138;\n  $145 = (($3) + ($97<<2)|0);\n  $146 = HEAP16[$145>>1]|0;\n  $147 = $146&65535;\n  $148 = (($3) + ($138<<2)|0);\n  $149 = HEAP16[$148>>1]|0;\n  $150 = $149&65535;\n  $151 = (($150) + ($147))|0;\n  $152 = $151&65535;\n  $153 = (($3) + ($$0<<2)|0);\n  HEAP16[$153>>1] = $152;\n  $154 = (((($0)) + 5208|0) + ($97)|0);\n  $155 = HEAP8[$154>>0]|0;\n  $156 = (((($0)) + 5208|0) + ($138)|0);\n  $157 = HEAP8[$156>>0]|0;\n  $158 = ($155&255)<($157&255);\n  $$100 = $158 ? $157 : $155;\n  $159 = $$100&255;\n  $160 = (($159) + 1)|0;\n  $161 = $160&255;\n  $162 = (((($0)) + 5208|0) + ($$0)|0);\n  HEAP8[$162>>0] = $161;\n  $163 = $$0&65535;\n  $164 = (((($3) + ($138<<2)|0)) + 2|0);\n  HEAP16[$164>>1] = $163;\n  $165 = (((($3) + ($97<<2)|0)) + 2|0);\n  HEAP16[$165>>1] = $163;\n  $166 = (($$0) + 1)|0;\n  HEAP32[$55>>2] = $$0;\n  $167 = HEAP32[$9>>2]|0;\n  $168 = ($167|0)<(2);\n  L55: do {\n   if ($168) {\n    $$052$lcssa$i112 = 1;\n   } else {\n    $$05254$i109 = 1;$$055$i108 = 2;$170 = $167;\n    while(1) {\n     $169 = ($$055$i108|0)<($170|0);\n     do {\n      if ($169) {\n       $171 = $$055$i108 | 1;\n       $172 = (((($0)) + 2908|0) + ($171<<2)|0);\n       $173 = HEAP32[$172>>2]|0;\n       $174 = (($3) + ($173<<2)|0);\n       $175 = HEAP16[$174>>1]|0;\n       $176 = (((($0)) + 2908|0) + ($$055$i108<<2)|0);\n       $177 = HEAP32[$176>>2]|0;\n       $178 = (($3) + ($177<<2)|0);\n       $179 = HEAP16[$178>>1]|0;\n       $180 = ($175&65535)<($179&65535);\n       if (!($180)) {\n        $181 = ($175<<16>>16)==($179<<16>>16);\n        if (!($181)) {\n         $$1$i110 = $$055$i108;\n         break;\n        }\n        $182 = (((($0)) + 5208|0) + ($173)|0);\n        $183 = HEAP8[$182>>0]|0;\n        $184 = (((($0)) + 5208|0) + ($177)|0);\n        $185 = HEAP8[$184>>0]|0;\n        $186 = ($183&255)>($185&255);\n        if ($186) {\n         $$1$i110 = $$055$i108;\n         break;\n        }\n       }\n       $$1$i110 = $171;\n      } else {\n       $$1$i110 = $$055$i108;\n      }\n     } while(0);\n     $187 = HEAP16[$153>>1]|0;\n     $188 = (((($0)) + 2908|0) + ($$1$i110<<2)|0);\n     $189 = HEAP32[$188>>2]|0;\n     $190 = (($3) + ($189<<2)|0);\n     $191 = HEAP16[$190>>1]|0;\n     $192 = ($187&65535)<($191&65535);\n     if ($192) {\n      $$052$lcssa$i112 = $$05254$i109;\n      break L55;\n     }\n     $193 = ($187<<16>>16)==($191<<16>>16);\n     if ($193) {\n      $194 = HEAP8[$162>>0]|0;\n      $195 = (((($0)) + 5208|0) + ($189)|0);\n      $196 = HEAP8[$195>>0]|0;\n      $197 = ($194&255)>($196&255);\n      if (!($197)) {\n       $$052$lcssa$i112 = $$05254$i109;\n       break L55;\n      }\n     }\n     $198 = (((($0)) + 2908|0) + ($$05254$i109<<2)|0);\n     HEAP32[$198>>2] = $189;\n     $$0$i111 = $$1$i110 << 1;\n     $199 = HEAP32[$9>>2]|0;\n     $200 = ($$0$i111|0)>($199|0);\n     if ($200) {\n      $$052$lcssa$i112 = $$1$i110;\n      break;\n     } else {\n      $$05254$i109 = $$1$i110;$$055$i108 = $$0$i111;$170 = $199;\n     }\n    }\n   }\n  } while(0);\n  $201 = (((($0)) + 2908|0) + ($$052$lcssa$i112<<2)|0);\n  HEAP32[$201>>2] = $$0;\n  $202 = HEAP32[$9>>2]|0;\n  $203 = ($202|0)>(1);\n  if ($203) {\n   $$0 = $166;$99 = $202;\n  } else {\n   break;\n  }\n }\n $204 = HEAP32[$55>>2]|0;\n $205 = HEAP32[$10>>2]|0;\n $206 = (($205) + -1)|0;\n HEAP32[$10>>2] = $206;\n $207 = (((($0)) + 2908|0) + ($206<<2)|0);\n HEAP32[$207>>2] = $204;\n $$idx$val = HEAP32[$1>>2]|0;\n $$idx101$val = HEAP32[$52>>2]|0;\n $$idx102$val = HEAP32[$4>>2]|0;\n $208 = HEAP32[$$idx102$val>>2]|0;\n $209 = ((($$idx102$val)) + 4|0);\n $210 = HEAP32[$209>>2]|0;\n $211 = ((($$idx102$val)) + 8|0);\n $212 = HEAP32[$211>>2]|0;\n $213 = ((($$idx102$val)) + 16|0);\n $214 = HEAP32[$213>>2]|0;\n $scevgep$i = ((($0)) + 2876|0);\n dest=$scevgep$i; stop=dest+32|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));\n $215 = HEAP32[$10>>2]|0;\n $216 = (((($0)) + 2908|0) + ($215<<2)|0);\n $217 = HEAP32[$216>>2]|0;\n $218 = (((($$idx$val) + ($217<<2)|0)) + 2|0);\n HEAP16[$218>>1] = 0;\n $$010810$i = (($215) + 1)|0;\n $219 = ($$010810$i|0)<(573);\n L71: do {\n  if ($219) {\n   $220 = ((($0)) + 5800|0);\n   $221 = ($208|0)==(0|0);\n   $222 = ((($0)) + 5804|0);\n   if ($221) {\n    $$010812$us$i = $$010810$i;$$011$us$i = 0;\n    while(1) {\n     $223 = (((($0)) + 2908|0) + ($$010812$us$i<<2)|0);\n     $224 = HEAP32[$223>>2]|0;\n     $225 = (((($$idx$val) + ($224<<2)|0)) + 2|0);\n     $226 = HEAP16[$225>>1]|0;\n     $227 = $226&65535;\n     $228 = (((($$idx$val) + ($227<<2)|0)) + 2|0);\n     $229 = HEAP16[$228>>1]|0;\n     $230 = $229&65535;\n     $231 = (($230) + 1)|0;\n     $232 = ($230|0)<($214|0);\n     $$$us$i = $232 ? $231 : $214;\n     $233 = $232&1;\n     $234 = $233 ^ 1;\n     $$0$$us$i = (($234) + ($$011$us$i))|0;\n     $235 = $$$us$i&65535;\n     HEAP16[$225>>1] = $235;\n     $236 = ($224|0)>($$idx101$val|0);\n     if (!($236)) {\n      $237 = (((($0)) + 2876|0) + ($$$us$i<<1)|0);\n      $238 = HEAP16[$237>>1]|0;\n      $239 = (($238) + 1)<<16>>16;\n      HEAP16[$237>>1] = $239;\n      $240 = ($224|0)<($212|0);\n      if ($240) {\n       $$0111$us$i = 0;\n      } else {\n       $241 = (($224) - ($212))|0;\n       $242 = (($210) + ($241<<2)|0);\n       $243 = HEAP32[$242>>2]|0;\n       $$0111$us$i = $243;\n      }\n      $244 = (($$idx$val) + ($224<<2)|0);\n      $245 = HEAP16[$244>>1]|0;\n      $246 = $245&65535;\n      $247 = (($$0111$us$i) + ($$$us$i))|0;\n      $248 = Math_imul($246, $247)|0;\n      $249 = HEAP32[$220>>2]|0;\n      $250 = (($248) + ($249))|0;\n      HEAP32[$220>>2] = $250;\n     }\n     $$0108$us$i = (($$010812$us$i) + 1)|0;\n     $exitcond$i104 = ($$0108$us$i|0)==(573);\n     if ($exitcond$i104) {\n      $$0$lcssa$i = $$0$$us$i;\n      break;\n     } else {\n      $$010812$us$i = $$0108$us$i;$$011$us$i = $$0$$us$i;\n     }\n    }\n   } else {\n    $$010812$i = $$010810$i;$$011$i = 0;\n    while(1) {\n     $251 = (((($0)) + 2908|0) + ($$010812$i<<2)|0);\n     $252 = HEAP32[$251>>2]|0;\n     $253 = (((($$idx$val) + ($252<<2)|0)) + 2|0);\n     $254 = HEAP16[$253>>1]|0;\n     $255 = $254&65535;\n     $256 = (((($$idx$val) + ($255<<2)|0)) + 2|0);\n     $257 = HEAP16[$256>>1]|0;\n     $258 = $257&65535;\n     $259 = (($258) + 1)|0;\n     $260 = ($258|0)<($214|0);\n     $$$i = $260 ? $259 : $214;\n     $261 = $260&1;\n     $262 = $261 ^ 1;\n     $$0$$i = (($262) + ($$011$i))|0;\n     $263 = $$$i&65535;\n     HEAP16[$253>>1] = $263;\n     $264 = ($252|0)>($$idx101$val|0);\n     if (!($264)) {\n      $265 = (((($0)) + 2876|0) + ($$$i<<1)|0);\n      $266 = HEAP16[$265>>1]|0;\n      $267 = (($266) + 1)<<16>>16;\n      HEAP16[$265>>1] = $267;\n      $268 = ($252|0)<($212|0);\n      if ($268) {\n       $$0111$i = 0;\n      } else {\n       $269 = (($252) - ($212))|0;\n       $270 = (($210) + ($269<<2)|0);\n       $271 = HEAP32[$270>>2]|0;\n       $$0111$i = $271;\n      }\n      $272 = (($$idx$val) + ($252<<2)|0);\n      $273 = HEAP16[$272>>1]|0;\n      $274 = $273&65535;\n      $275 = (($$0111$i) + ($$$i))|0;\n      $276 = Math_imul($274, $275)|0;\n      $277 = HEAP32[$220>>2]|0;\n      $278 = (($276) + ($277))|0;\n      HEAP32[$220>>2] = $278;\n      $279 = (((($208) + ($252<<2)|0)) + 2|0);\n      $280 = HEAP16[$279>>1]|0;\n      $281 = $280&65535;\n      $282 = (($281) + ($$0111$i))|0;\n      $283 = Math_imul($282, $274)|0;\n      $284 = HEAP32[$222>>2]|0;\n      $285 = (($283) + ($284))|0;\n      HEAP32[$222>>2] = $285;\n     }\n     $$0108$i = (($$010812$i) + 1)|0;\n     $exitcond21$i = ($$0108$i|0)==(573);\n     if ($exitcond21$i) {\n      $$0$lcssa$i = $$0$$i;\n      break;\n     } else {\n      $$010812$i = $$0108$i;$$011$i = $$0$$i;\n     }\n    }\n   }\n   $286 = ($$0$lcssa$i|0)==(0);\n   if (!($286)) {\n    $287 = (((($0)) + 2876|0) + ($214<<1)|0);\n    $$2$i = $$0$lcssa$i;\n    while(1) {\n     $$2114$in$i = $214;\n     while(1) {\n      $$2114$i = (($$2114$in$i) + -1)|0;\n      $288 = (((($0)) + 2876|0) + ($$2114$i<<1)|0);\n      $289 = HEAP16[$288>>1]|0;\n      $290 = ($289<<16>>16)==(0);\n      if ($290) {\n       $$2114$in$i = $$2114$i;\n      } else {\n       break;\n      }\n     }\n     $291 = (($289) + -1)<<16>>16;\n     HEAP16[$288>>1] = $291;\n     $292 = (((($0)) + 2876|0) + ($$2114$in$i<<1)|0);\n     $293 = HEAP16[$292>>1]|0;\n     $294 = $293&65535;\n     $295 = (($294) + 2)|0;\n     $296 = $295&65535;\n     HEAP16[$292>>1] = $296;\n     $297 = HEAP16[$287>>1]|0;\n     $298 = (($297) + -1)<<16>>16;\n     HEAP16[$287>>1] = $298;\n     $299 = (($$2$i) + -2)|0;\n     $300 = ($$2$i|0)>(2);\n     if ($300) {\n      $$2$i = $299;\n     } else {\n      break;\n     }\n    }\n    $301 = ($214|0)==(0);\n    if (!($301)) {\n     $$11099$i = 573;$$37$i = $214;$303 = $298;\n     while(1) {\n      $302 = $$37$i&65535;\n      $304 = ($303<<16>>16)==(0);\n      if ($304) {\n       $$2110$ph$i$lcssa = $$11099$i;\n      } else {\n       $305 = $303&65535;\n       $$0115$ph$i131 = $305;$$2110$ph$i132 = $$11099$i;\n       while(1) {\n        $$2110$i = $$2110$ph$i132;\n        while(1) {\n         $306 = (($$2110$i) + -1)|0;\n         $307 = (((($0)) + 2908|0) + ($306<<2)|0);\n         $308 = HEAP32[$307>>2]|0;\n         $309 = ($308|0)>($$idx101$val|0);\n         if ($309) {\n          $$2110$i = $306;\n         } else {\n          break;\n         }\n        }\n        $310 = (((($$idx$val) + ($308<<2)|0)) + 2|0);\n        $311 = HEAP16[$310>>1]|0;\n        $312 = $311&65535;\n        $313 = ($$37$i|0)==($312|0);\n        if (!($313)) {\n         $314 = (($$37$i) - ($312))|0;\n         $315 = (($$idx$val) + ($308<<2)|0);\n         $316 = HEAP16[$315>>1]|0;\n         $317 = $316&65535;\n         $318 = Math_imul($317, $314)|0;\n         $319 = HEAP32[$220>>2]|0;\n         $320 = (($318) + ($319))|0;\n         HEAP32[$220>>2] = $320;\n         HEAP16[$310>>1] = $302;\n        }\n        $321 = (($$0115$ph$i131) + -1)|0;\n        $322 = ($321|0)==(0);\n        if ($322) {\n         $$2110$ph$i$lcssa = $306;\n         break;\n        } else {\n         $$0115$ph$i131 = $321;$$2110$ph$i132 = $306;\n        }\n       }\n      }\n      $323 = (($$37$i) + -1)|0;\n      $324 = ($323|0)==(0);\n      if ($324) {\n       break L71;\n      }\n      $$phi$trans$insert$i = (((($0)) + 2876|0) + ($323<<1)|0);\n      $$pre$i = HEAP16[$$phi$trans$insert$i>>1]|0;\n      $$11099$i = $$2110$ph$i$lcssa;$$37$i = $323;$303 = $$pre$i;\n     }\n    }\n   }\n  }\n } while(0);\n $$02329$i = 0;$$02528$i = 1;\n while(1) {\n  $326 = $$02329$i & 65534;\n  $327 = (($$02528$i) + -1)|0;\n  $328 = (((($0)) + 2876|0) + ($327<<1)|0);\n  $329 = HEAP16[$328>>1]|0;\n  $330 = $329&65535;\n  $331 = (($330) + ($326))|0;\n  $332 = $331 << 1;\n  $333 = $332&65535;\n  $334 = (($2) + ($$02528$i<<1)|0);\n  HEAP16[$334>>1] = $333;\n  $335 = (($$02528$i) + 1)|0;\n  $exitcond30$i = ($335|0)==(16);\n  if ($exitcond30$i) {\n   break;\n  } else {\n   $$02329$i = $332;$$02528$i = $335;\n  }\n }\n $325 = ($$2$lcssa|0)<(0);\n if ($325) {\n  STACKTOP = sp;return;\n } else {\n  $$02426$i = 0;\n }\n while(1) {\n  $336 = (((($3) + ($$02426$i<<2)|0)) + 2|0);\n  $337 = HEAP16[$336>>1]|0;\n  $338 = $337&65535;\n  $339 = ($337<<16>>16)==(0);\n  if (!($339)) {\n   $340 = (($2) + ($338<<1)|0);\n   $341 = HEAP16[$340>>1]|0;\n   $342 = (($341) + 1)<<16>>16;\n   HEAP16[$340>>1] = $342;\n   $343 = $341&65535;\n   $$0$i$i = 0;$$07$i$i = $338;$$08$i$i = $343;\n   while(1) {\n    $344 = $$08$i$i & 1;\n    $345 = $$0$i$i | $344;\n    $346 = $$08$i$i >>> 1;\n    $347 = $345 << 1;\n    $348 = (($$07$i$i) + -1)|0;\n    $349 = ($$07$i$i|0)>(1);\n    if ($349) {\n     $$0$i$i = $347;$$07$i$i = $348;$$08$i$i = $346;\n    } else {\n     break;\n    }\n   }\n   $350 = $345&65535;\n   $351 = (($3) + ($$02426$i<<2)|0);\n   HEAP16[$351>>1] = $350;\n  }\n  $352 = (($$02426$i) + 1)|0;\n  $exitcond$i = ($$02426$i|0)==($$2$lcssa|0);\n  if ($exitcond$i) {\n   break;\n  } else {\n   $$02426$i = $352;\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _compress_block($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert204 = 0, $$pn = 0, $$pre = 0, $$pre$phi206Z2D = 0, $$pre$phiZ2D = 0, $$pre205 = 0, $$sink = 0, $$sink$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;\n var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;\n var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;\n var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;\n var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;\n var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;\n var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;\n var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;\n var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, $storemerge201 = 0, $storemerge202 = 0, $storemerge203 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 5792|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0);\n if ($5) {\n  $$phi$trans$insert = ((($0)) + 5820|0);\n  $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n  $$phi$trans$insert204 = ((($0)) + 5816|0);\n  $$pre205 = HEAP16[$$phi$trans$insert204>>1]|0;\n  $$pre$phi206Z2D = $$phi$trans$insert204;$$pre$phiZ2D = $$phi$trans$insert;$207 = $$pre;$214 = $$pre205;\n } else {\n  $6 = ((($0)) + 5796|0);\n  $7 = ((($0)) + 5784|0);\n  $8 = ((($0)) + 5820|0);\n  $9 = ((($0)) + 5816|0);\n  $10 = ((($0)) + 20|0);\n  $11 = ((($0)) + 8|0);\n  $$0 = 0;\n  while(1) {\n   $12 = HEAP32[$6>>2]|0;\n   $13 = (($12) + ($$0<<1)|0);\n   $14 = HEAP16[$13>>1]|0;\n   $15 = $14&65535;\n   $16 = (($$0) + 1)|0;\n   $17 = HEAP32[$7>>2]|0;\n   $18 = (($17) + ($$0)|0);\n   $19 = HEAP8[$18>>0]|0;\n   $20 = $19&255;\n   $21 = ($14<<16>>16)==(0);\n   if ($21) {\n    $22 = (((($1) + ($20<<2)|0)) + 2|0);\n    $23 = HEAP16[$22>>1]|0;\n    $24 = $23&65535;\n    $25 = HEAP32[$8>>2]|0;\n    $26 = (16 - ($24))|0;\n    $27 = ($25|0)>($26|0);\n    $28 = (($1) + ($20<<2)|0);\n    $29 = HEAP16[$28>>1]|0;\n    $30 = $29&65535;\n    $31 = $30 << $25;\n    $32 = HEAP16[$9>>1]|0;\n    $33 = $32&65535;\n    $34 = $33 | $31;\n    $35 = $34&65535;\n    HEAP16[$9>>1] = $35;\n    if ($27) {\n     $36 = $34&255;\n     $37 = HEAP32[$10>>2]|0;\n     $38 = (($37) + 1)|0;\n     HEAP32[$10>>2] = $38;\n     $39 = HEAP32[$11>>2]|0;\n     $40 = (($39) + ($37)|0);\n     HEAP8[$40>>0] = $36;\n     $41 = HEAP16[$9>>1]|0;\n     $42 = ($41&65535) >>> 8;\n     $43 = $42&255;\n     $44 = HEAP32[$10>>2]|0;\n     $45 = (($44) + 1)|0;\n     HEAP32[$10>>2] = $45;\n     $46 = HEAP32[$11>>2]|0;\n     $47 = (($46) + ($44)|0);\n     HEAP8[$47>>0] = $43;\n     $48 = HEAP32[$8>>2]|0;\n     $49 = (16 - ($48))|0;\n     $50 = $30 >>> $49;\n     $51 = $50&65535;\n     HEAP16[$9>>1] = $51;\n     $52 = (($24) + -16)|0;\n     $53 = (($52) + ($48))|0;\n     $238 = $51;$storemerge203 = $53;\n    } else {\n     $54 = (($25) + ($24))|0;\n     $238 = $35;$storemerge203 = $54;\n    }\n    HEAP32[$8>>2] = $storemerge203;\n    $239 = $238;$240 = $storemerge203;\n   } else {\n    $55 = (28079 + ($20)|0);\n    $56 = HEAP8[$55>>0]|0;\n    $57 = $56&255;\n    $58 = $57 | 256;\n    $59 = (($58) + 1)|0;\n    $60 = (((($1) + ($59<<2)|0)) + 2|0);\n    $61 = HEAP16[$60>>1]|0;\n    $62 = $61&65535;\n    $63 = HEAP32[$8>>2]|0;\n    $64 = (16 - ($62))|0;\n    $65 = ($63|0)>($64|0);\n    $66 = (($1) + ($59<<2)|0);\n    $67 = HEAP16[$66>>1]|0;\n    $68 = $67&65535;\n    $69 = $68 << $63;\n    $70 = HEAP16[$9>>1]|0;\n    $71 = $70&65535;\n    $72 = $71 | $69;\n    $73 = $72&65535;\n    HEAP16[$9>>1] = $73;\n    if ($65) {\n     $74 = $72&255;\n     $75 = HEAP32[$10>>2]|0;\n     $76 = (($75) + 1)|0;\n     HEAP32[$10>>2] = $76;\n     $77 = HEAP32[$11>>2]|0;\n     $78 = (($77) + ($75)|0);\n     HEAP8[$78>>0] = $74;\n     $79 = HEAP16[$9>>1]|0;\n     $80 = ($79&65535) >>> 8;\n     $81 = $80&255;\n     $82 = HEAP32[$10>>2]|0;\n     $83 = (($82) + 1)|0;\n     HEAP32[$10>>2] = $83;\n     $84 = HEAP32[$11>>2]|0;\n     $85 = (($84) + ($82)|0);\n     HEAP8[$85>>0] = $81;\n     $86 = HEAP32[$8>>2]|0;\n     $87 = (16 - ($86))|0;\n     $88 = $68 >>> $87;\n     $89 = $88&65535;\n     HEAP16[$9>>1] = $89;\n     $90 = (($62) + -16)|0;\n     $91 = (($90) + ($86))|0;\n     $106 = $89;$93 = $91;\n    } else {\n     $92 = (($63) + ($62))|0;\n     $106 = $73;$93 = $92;\n    }\n    HEAP32[$8>>2] = $93;\n    $94 = (9584 + ($57<<2)|0);\n    $95 = HEAP32[$94>>2]|0;\n    $96 = (($57) + -8)|0;\n    $97 = ($96>>>0)<(20);\n    if ($97) {\n     $98 = (9700 + ($57<<2)|0);\n     $99 = HEAP32[$98>>2]|0;\n     $100 = (($20) - ($99))|0;\n     $101 = (16 - ($95))|0;\n     $102 = ($93|0)>($101|0);\n     $103 = $100 & 65535;\n     $104 = $103 << $93;\n     $105 = $106&65535;\n     $107 = $104 | $105;\n     $108 = $107&65535;\n     HEAP16[$9>>1] = $108;\n     if ($102) {\n      $109 = $107&255;\n      $110 = HEAP32[$10>>2]|0;\n      $111 = (($110) + 1)|0;\n      HEAP32[$10>>2] = $111;\n      $112 = HEAP32[$11>>2]|0;\n      $113 = (($112) + ($110)|0);\n      HEAP8[$113>>0] = $109;\n      $114 = HEAP16[$9>>1]|0;\n      $115 = ($114&65535) >>> 8;\n      $116 = $115&255;\n      $117 = HEAP32[$10>>2]|0;\n      $118 = (($117) + 1)|0;\n      HEAP32[$10>>2] = $118;\n      $119 = HEAP32[$11>>2]|0;\n      $120 = (($119) + ($117)|0);\n      HEAP8[$120>>0] = $116;\n      $121 = HEAP32[$8>>2]|0;\n      $122 = (16 - ($121))|0;\n      $123 = $103 >>> $122;\n      $124 = $123&65535;\n      HEAP16[$9>>1] = $124;\n      $125 = (($95) + -16)|0;\n      $126 = (($125) + ($121))|0;\n      $241 = $124;$storemerge202 = $126;\n     } else {\n      $127 = (($93) + ($95))|0;\n      $241 = $108;$storemerge202 = $127;\n     }\n     HEAP32[$8>>2] = $storemerge202;\n     $137 = $storemerge202;$144 = $241;\n    } else {\n     $137 = $93;$144 = $106;\n    }\n    $128 = (($15) + -1)|0;\n    $129 = ($128>>>0)<(256);\n    $130 = $128 >>> 7;\n    $131 = (($130) + 256)|0;\n    $$pn = $129 ? $128 : $131;\n    $$sink$in = (27567 + ($$pn)|0);\n    $$sink = HEAP8[$$sink$in>>0]|0;\n    $132 = $$sink&255;\n    $133 = (((($2) + ($132<<2)|0)) + 2|0);\n    $134 = HEAP16[$133>>1]|0;\n    $135 = $134&65535;\n    $136 = (16 - ($135))|0;\n    $138 = ($137|0)>($136|0);\n    $139 = (($2) + ($132<<2)|0);\n    $140 = HEAP16[$139>>1]|0;\n    $141 = $140&65535;\n    $142 = $141 << $137;\n    $143 = $144&65535;\n    $145 = $143 | $142;\n    $146 = $145&65535;\n    HEAP16[$9>>1] = $146;\n    if ($138) {\n     $147 = $145&255;\n     $148 = HEAP32[$10>>2]|0;\n     $149 = (($148) + 1)|0;\n     HEAP32[$10>>2] = $149;\n     $150 = HEAP32[$11>>2]|0;\n     $151 = (($150) + ($148)|0);\n     HEAP8[$151>>0] = $147;\n     $152 = HEAP16[$9>>1]|0;\n     $153 = ($152&65535) >>> 8;\n     $154 = $153&255;\n     $155 = HEAP32[$10>>2]|0;\n     $156 = (($155) + 1)|0;\n     HEAP32[$10>>2] = $156;\n     $157 = HEAP32[$11>>2]|0;\n     $158 = (($157) + ($155)|0);\n     HEAP8[$158>>0] = $154;\n     $159 = HEAP32[$8>>2]|0;\n     $160 = (16 - ($159))|0;\n     $161 = $141 >>> $160;\n     $162 = $161&65535;\n     HEAP16[$9>>1] = $162;\n     $163 = (($135) + -16)|0;\n     $164 = (($163) + ($159))|0;\n     $166 = $164;$179 = $162;\n    } else {\n     $165 = (($137) + ($135))|0;\n     $166 = $165;$179 = $146;\n    }\n    HEAP32[$8>>2] = $166;\n    $167 = (9464 + ($132<<2)|0);\n    $168 = HEAP32[$167>>2]|0;\n    $169 = (($132) + -4)|0;\n    $170 = ($169>>>0)<(26);\n    if ($170) {\n     $171 = (9816 + ($132<<2)|0);\n     $172 = HEAP32[$171>>2]|0;\n     $173 = (($128) - ($172))|0;\n     $174 = (16 - ($168))|0;\n     $175 = ($166|0)>($174|0);\n     $176 = $173 & 65535;\n     $177 = $176 << $166;\n     $178 = $179&65535;\n     $180 = $177 | $178;\n     $181 = $180&65535;\n     HEAP16[$9>>1] = $181;\n     if ($175) {\n      $182 = $180&255;\n      $183 = HEAP32[$10>>2]|0;\n      $184 = (($183) + 1)|0;\n      HEAP32[$10>>2] = $184;\n      $185 = HEAP32[$11>>2]|0;\n      $186 = (($185) + ($183)|0);\n      HEAP8[$186>>0] = $182;\n      $187 = HEAP16[$9>>1]|0;\n      $188 = ($187&65535) >>> 8;\n      $189 = $188&255;\n      $190 = HEAP32[$10>>2]|0;\n      $191 = (($190) + 1)|0;\n      HEAP32[$10>>2] = $191;\n      $192 = HEAP32[$11>>2]|0;\n      $193 = (($192) + ($190)|0);\n      HEAP8[$193>>0] = $189;\n      $194 = HEAP32[$8>>2]|0;\n      $195 = (16 - ($194))|0;\n      $196 = $176 >>> $195;\n      $197 = $196&65535;\n      HEAP16[$9>>1] = $197;\n      $198 = (($168) + -16)|0;\n      $199 = (($198) + ($194))|0;\n      $242 = $197;$storemerge201 = $199;\n     } else {\n      $200 = (($166) + ($168))|0;\n      $242 = $181;$storemerge201 = $200;\n     }\n     HEAP32[$8>>2] = $storemerge201;\n     $239 = $242;$240 = $storemerge201;\n    } else {\n     $239 = $179;$240 = $166;\n    }\n   }\n   $201 = HEAP32[$3>>2]|0;\n   $202 = ($16>>>0)<($201>>>0);\n   if ($202) {\n    $$0 = $16;\n   } else {\n    $$pre$phi206Z2D = $9;$$pre$phiZ2D = $8;$207 = $240;$214 = $239;\n    break;\n   }\n  }\n }\n $203 = ((($1)) + 1026|0);\n $204 = HEAP16[$203>>1]|0;\n $205 = $204&65535;\n $206 = (16 - ($205))|0;\n $208 = ($207|0)>($206|0);\n $209 = ((($1)) + 1024|0);\n $210 = HEAP16[$209>>1]|0;\n $211 = $210&65535;\n $212 = $211 << $207;\n $213 = $214&65535;\n $215 = $213 | $212;\n $216 = $215&65535;\n HEAP16[$$pre$phi206Z2D>>1] = $216;\n if ($208) {\n  $217 = $215&255;\n  $218 = ((($0)) + 20|0);\n  $219 = HEAP32[$218>>2]|0;\n  $220 = (($219) + 1)|0;\n  HEAP32[$218>>2] = $220;\n  $221 = ((($0)) + 8|0);\n  $222 = HEAP32[$221>>2]|0;\n  $223 = (($222) + ($219)|0);\n  HEAP8[$223>>0] = $217;\n  $224 = HEAP16[$$pre$phi206Z2D>>1]|0;\n  $225 = ($224&65535) >>> 8;\n  $226 = $225&255;\n  $227 = HEAP32[$218>>2]|0;\n  $228 = (($227) + 1)|0;\n  HEAP32[$218>>2] = $228;\n  $229 = HEAP32[$221>>2]|0;\n  $230 = (($229) + ($227)|0);\n  HEAP8[$230>>0] = $226;\n  $231 = HEAP32[$$pre$phiZ2D>>2]|0;\n  $232 = (16 - ($231))|0;\n  $233 = $211 >>> $232;\n  $234 = $233&65535;\n  HEAP16[$$pre$phi206Z2D>>1] = $234;\n  $235 = (($205) + -16)|0;\n  $236 = (($235) + ($231))|0;\n  $storemerge = $236;\n  HEAP32[$$pre$phiZ2D>>2] = $storemerge;\n  return;\n } else {\n  $237 = (($207) + ($205))|0;\n  $storemerge = $237;\n  HEAP32[$$pre$phiZ2D>>2] = $storemerge;\n  return;\n }\n}\nfunction _send_tree($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$$273 = 0, $$$274 = 0, $$0 = 0, $$0$ph = 0, $$0255$ph = 0, $$0255$ph$phi = 0, $$0256$ph = 0, $$0257 = 0, $$1258 = 0, $$1260$ph = 0, $$1263$ph = 0, $$2 = 0, $$272 = 0, $$274 = 0, $$pre = 0, $$pre287 = 0, $$pre288 = 0, $$pre289 = 0, $10 = 0;\n var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;\n var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;\n var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;\n var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;\n var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;\n var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;\n var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;\n var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;\n var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;\n var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;\n var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;\n var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;\n var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $storemerge265 = 0, $storemerge267 = 0, $storemerge269 = 0, $storemerge270 = 0, $storemerge271 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($1)) + 2|0);\n $4 = HEAP16[$3>>1]|0;\n $5 = $4&65535;\n $6 = ($4<<16>>16)==(0);\n $$ = $6 ? 3 : 4;\n $$272 = $6 ? 138 : 7;\n $7 = ((($0)) + 2754|0);\n $8 = ((($0)) + 5820|0);\n $9 = ((($0)) + 2752|0);\n $10 = ((($0)) + 5816|0);\n $11 = ((($0)) + 20|0);\n $12 = ((($0)) + 8|0);\n $13 = ((($0)) + 2758|0);\n $14 = ((($0)) + 2756|0);\n $15 = ((($0)) + 2750|0);\n $16 = ((($0)) + 2748|0);\n $$0$ph = 0;$$0255$ph = -1;$$0256$ph = $5;$$1260$ph = $$272;$$1263$ph = $$;\n L1: while(1) {\n  $$0 = $$0$ph;$$0257 = 0;\n  while(1) {\n   $17 = ($$0|0)>($2|0);\n   if ($17) {\n    break L1;\n   }\n   $18 = (($$0) + 1)|0;\n   $19 = (((($1) + ($18<<2)|0)) + 2|0);\n   $20 = HEAP16[$19>>1]|0;\n   $21 = $20&65535;\n   $22 = (($$0257) + 1)|0;\n   $23 = ($22|0)<($$1260$ph|0);\n   $24 = ($$0256$ph|0)==($21|0);\n   $or$cond = $23 & $24;\n   if ($or$cond) {\n    $$0 = $18;$$0257 = $22;\n   } else {\n    break;\n   }\n  }\n  $25 = ($22|0)<($$1263$ph|0);\n  do {\n   if ($25) {\n    $26 = (((((($0)) + 2684|0) + ($$0256$ph<<2)|0)) + 2|0);\n    $27 = (((($0)) + 2684|0) + ($$0256$ph<<2)|0);\n    $$pre288 = HEAP32[$8>>2]|0;\n    $$pre289 = HEAP16[$10>>1]|0;\n    $$1258 = $22;$31 = $$pre288;$37 = $$pre289;\n    while(1) {\n     $28 = HEAP16[$26>>1]|0;\n     $29 = $28&65535;\n     $30 = (16 - ($29))|0;\n     $32 = ($31|0)>($30|0);\n     $33 = HEAP16[$27>>1]|0;\n     $34 = $33&65535;\n     $35 = $34 << $31;\n     $36 = $37&65535;\n     $38 = $36 | $35;\n     $39 = $38&65535;\n     HEAP16[$10>>1] = $39;\n     if ($32) {\n      $40 = $38&255;\n      $41 = HEAP32[$11>>2]|0;\n      $42 = (($41) + 1)|0;\n      HEAP32[$11>>2] = $42;\n      $43 = HEAP32[$12>>2]|0;\n      $44 = (($43) + ($41)|0);\n      HEAP8[$44>>0] = $40;\n      $45 = HEAP16[$10>>1]|0;\n      $46 = ($45&65535) >>> 8;\n      $47 = $46&255;\n      $48 = HEAP32[$11>>2]|0;\n      $49 = (($48) + 1)|0;\n      HEAP32[$11>>2] = $49;\n      $50 = HEAP32[$12>>2]|0;\n      $51 = (($50) + ($48)|0);\n      HEAP8[$51>>0] = $47;\n      $52 = HEAP32[$8>>2]|0;\n      $53 = (16 - ($52))|0;\n      $54 = $34 >>> $53;\n      $55 = $54&65535;\n      HEAP16[$10>>1] = $55;\n      $56 = (($29) + -16)|0;\n      $57 = (($56) + ($52))|0;\n      $273 = $55;$storemerge271 = $57;\n     } else {\n      $58 = (($31) + ($29))|0;\n      $273 = $39;$storemerge271 = $58;\n     }\n     HEAP32[$8>>2] = $storemerge271;\n     $59 = (($$1258) + -1)|0;\n     $60 = ($59|0)==(0);\n     if ($60) {\n      break;\n     } else {\n      $$1258 = $59;$31 = $storemerge271;$37 = $273;\n     }\n    }\n   } else {\n    $61 = ($$0256$ph|0)==(0);\n    if (!($61)) {\n     $62 = ($$0256$ph|0)==($$0255$ph|0);\n     if ($62) {\n      $$pre = HEAP32[$8>>2]|0;\n      $$pre287 = HEAP16[$10>>1]|0;\n      $$2 = $22;$105 = $$pre287;$99 = $$pre;\n     } else {\n      $63 = (((((($0)) + 2684|0) + ($$0256$ph<<2)|0)) + 2|0);\n      $64 = HEAP16[$63>>1]|0;\n      $65 = $64&65535;\n      $66 = HEAP32[$8>>2]|0;\n      $67 = (16 - ($65))|0;\n      $68 = ($66|0)>($67|0);\n      $69 = (((($0)) + 2684|0) + ($$0256$ph<<2)|0);\n      $70 = HEAP16[$69>>1]|0;\n      $71 = $70&65535;\n      $72 = $71 << $66;\n      $73 = HEAP16[$10>>1]|0;\n      $74 = $73&65535;\n      $75 = $74 | $72;\n      $76 = $75&65535;\n      HEAP16[$10>>1] = $76;\n      if ($68) {\n       $77 = $75&255;\n       $78 = HEAP32[$11>>2]|0;\n       $79 = (($78) + 1)|0;\n       HEAP32[$11>>2] = $79;\n       $80 = HEAP32[$12>>2]|0;\n       $81 = (($80) + ($78)|0);\n       HEAP8[$81>>0] = $77;\n       $82 = HEAP16[$10>>1]|0;\n       $83 = ($82&65535) >>> 8;\n       $84 = $83&255;\n       $85 = HEAP32[$11>>2]|0;\n       $86 = (($85) + 1)|0;\n       HEAP32[$11>>2] = $86;\n       $87 = HEAP32[$12>>2]|0;\n       $88 = (($87) + ($85)|0);\n       HEAP8[$88>>0] = $84;\n       $89 = HEAP32[$8>>2]|0;\n       $90 = (16 - ($89))|0;\n       $91 = $71 >>> $90;\n       $92 = $91&65535;\n       HEAP16[$10>>1] = $92;\n       $93 = (($65) + -16)|0;\n       $94 = (($93) + ($89))|0;\n       $274 = $92;$storemerge270 = $94;\n      } else {\n       $95 = (($66) + ($65))|0;\n       $274 = $76;$storemerge270 = $95;\n      }\n      HEAP32[$8>>2] = $storemerge270;\n      $$2 = $$0257;$105 = $274;$99 = $storemerge270;\n     }\n     $96 = HEAP16[$15>>1]|0;\n     $97 = $96&65535;\n     $98 = (16 - ($97))|0;\n     $100 = ($99|0)>($98|0);\n     $101 = HEAP16[$16>>1]|0;\n     $102 = $101&65535;\n     $103 = $102 << $99;\n     $104 = $105&65535;\n     $106 = $104 | $103;\n     $107 = $106&65535;\n     HEAP16[$10>>1] = $107;\n     if ($100) {\n      $108 = $106&255;\n      $109 = HEAP32[$11>>2]|0;\n      $110 = (($109) + 1)|0;\n      HEAP32[$11>>2] = $110;\n      $111 = HEAP32[$12>>2]|0;\n      $112 = (($111) + ($109)|0);\n      HEAP8[$112>>0] = $108;\n      $113 = HEAP16[$10>>1]|0;\n      $114 = ($113&65535) >>> 8;\n      $115 = $114&255;\n      $116 = HEAP32[$11>>2]|0;\n      $117 = (($116) + 1)|0;\n      HEAP32[$11>>2] = $117;\n      $118 = HEAP32[$12>>2]|0;\n      $119 = (($118) + ($116)|0);\n      HEAP8[$119>>0] = $115;\n      $120 = HEAP32[$8>>2]|0;\n      $121 = (16 - ($120))|0;\n      $122 = $102 >>> $121;\n      $123 = $122&65535;\n      HEAP16[$10>>1] = $123;\n      $124 = (($97) + -16)|0;\n      $125 = (($124) + ($120))|0;\n      $127 = $125;$133 = $122;\n     } else {\n      $126 = (($99) + ($97))|0;\n      $127 = $126;$133 = $106;\n     }\n     HEAP32[$8>>2] = $127;\n     $128 = ($127|0)>(14);\n     $129 = (($$2) + 65533)|0;\n     $130 = $129 & 65535;\n     $131 = $130 << $127;\n     $132 = $133 & 65535;\n     $134 = $132 | $131;\n     $135 = $134&65535;\n     HEAP16[$10>>1] = $135;\n     if ($128) {\n      $136 = $134&255;\n      $137 = HEAP32[$11>>2]|0;\n      $138 = (($137) + 1)|0;\n      HEAP32[$11>>2] = $138;\n      $139 = HEAP32[$12>>2]|0;\n      $140 = (($139) + ($137)|0);\n      HEAP8[$140>>0] = $136;\n      $141 = HEAP16[$10>>1]|0;\n      $142 = ($141&65535) >>> 8;\n      $143 = $142&255;\n      $144 = HEAP32[$11>>2]|0;\n      $145 = (($144) + 1)|0;\n      HEAP32[$11>>2] = $145;\n      $146 = HEAP32[$12>>2]|0;\n      $147 = (($146) + ($144)|0);\n      HEAP8[$147>>0] = $143;\n      $148 = HEAP32[$8>>2]|0;\n      $149 = (16 - ($148))|0;\n      $150 = $130 >>> $149;\n      $151 = $150&65535;\n      HEAP16[$10>>1] = $151;\n      $152 = (($148) + -14)|0;\n      $storemerge269 = $152;\n     } else {\n      $153 = (($127) + 2)|0;\n      $storemerge269 = $153;\n     }\n     HEAP32[$8>>2] = $storemerge269;\n     break;\n    }\n    $154 = ($22|0)<(11);\n    if ($154) {\n     $155 = HEAP16[$7>>1]|0;\n     $156 = $155&65535;\n     $157 = HEAP32[$8>>2]|0;\n     $158 = (16 - ($156))|0;\n     $159 = ($157|0)>($158|0);\n     $160 = HEAP16[$9>>1]|0;\n     $161 = $160&65535;\n     $162 = $161 << $157;\n     $163 = HEAP16[$10>>1]|0;\n     $164 = $163&65535;\n     $165 = $164 | $162;\n     $166 = $165&65535;\n     HEAP16[$10>>1] = $166;\n     if ($159) {\n      $167 = $165&255;\n      $168 = HEAP32[$11>>2]|0;\n      $169 = (($168) + 1)|0;\n      HEAP32[$11>>2] = $169;\n      $170 = HEAP32[$12>>2]|0;\n      $171 = (($170) + ($168)|0);\n      HEAP8[$171>>0] = $167;\n      $172 = HEAP16[$10>>1]|0;\n      $173 = ($172&65535) >>> 8;\n      $174 = $173&255;\n      $175 = HEAP32[$11>>2]|0;\n      $176 = (($175) + 1)|0;\n      HEAP32[$11>>2] = $176;\n      $177 = HEAP32[$12>>2]|0;\n      $178 = (($177) + ($175)|0);\n      HEAP8[$178>>0] = $174;\n      $179 = HEAP32[$8>>2]|0;\n      $180 = (16 - ($179))|0;\n      $181 = $161 >>> $180;\n      $182 = $181&65535;\n      HEAP16[$10>>1] = $182;\n      $183 = (($156) + -16)|0;\n      $184 = (($183) + ($179))|0;\n      $186 = $184;$192 = $181;\n     } else {\n      $185 = (($157) + ($156))|0;\n      $186 = $185;$192 = $165;\n     }\n     HEAP32[$8>>2] = $186;\n     $187 = ($186|0)>(13);\n     $188 = (($$0257) + 65534)|0;\n     $189 = $188 & 65535;\n     $190 = $189 << $186;\n     $191 = $192 & 65535;\n     $193 = $191 | $190;\n     $194 = $193&65535;\n     HEAP16[$10>>1] = $194;\n     if ($187) {\n      $195 = $193&255;\n      $196 = HEAP32[$11>>2]|0;\n      $197 = (($196) + 1)|0;\n      HEAP32[$11>>2] = $197;\n      $198 = HEAP32[$12>>2]|0;\n      $199 = (($198) + ($196)|0);\n      HEAP8[$199>>0] = $195;\n      $200 = HEAP16[$10>>1]|0;\n      $201 = ($200&65535) >>> 8;\n      $202 = $201&255;\n      $203 = HEAP32[$11>>2]|0;\n      $204 = (($203) + 1)|0;\n      HEAP32[$11>>2] = $204;\n      $205 = HEAP32[$12>>2]|0;\n      $206 = (($205) + ($203)|0);\n      HEAP8[$206>>0] = $202;\n      $207 = HEAP32[$8>>2]|0;\n      $208 = (16 - ($207))|0;\n      $209 = $189 >>> $208;\n      $210 = $209&65535;\n      HEAP16[$10>>1] = $210;\n      $211 = (($207) + -13)|0;\n      $storemerge267 = $211;\n     } else {\n      $212 = (($186) + 3)|0;\n      $storemerge267 = $212;\n     }\n     HEAP32[$8>>2] = $storemerge267;\n     break;\n    } else {\n     $213 = HEAP16[$13>>1]|0;\n     $214 = $213&65535;\n     $215 = HEAP32[$8>>2]|0;\n     $216 = (16 - ($214))|0;\n     $217 = ($215|0)>($216|0);\n     $218 = HEAP16[$14>>1]|0;\n     $219 = $218&65535;\n     $220 = $219 << $215;\n     $221 = HEAP16[$10>>1]|0;\n     $222 = $221&65535;\n     $223 = $222 | $220;\n     $224 = $223&65535;\n     HEAP16[$10>>1] = $224;\n     if ($217) {\n      $225 = $223&255;\n      $226 = HEAP32[$11>>2]|0;\n      $227 = (($226) + 1)|0;\n      HEAP32[$11>>2] = $227;\n      $228 = HEAP32[$12>>2]|0;\n      $229 = (($228) + ($226)|0);\n      HEAP8[$229>>0] = $225;\n      $230 = HEAP16[$10>>1]|0;\n      $231 = ($230&65535) >>> 8;\n      $232 = $231&255;\n      $233 = HEAP32[$11>>2]|0;\n      $234 = (($233) + 1)|0;\n      HEAP32[$11>>2] = $234;\n      $235 = HEAP32[$12>>2]|0;\n      $236 = (($235) + ($233)|0);\n      HEAP8[$236>>0] = $232;\n      $237 = HEAP32[$8>>2]|0;\n      $238 = (16 - ($237))|0;\n      $239 = $219 >>> $238;\n      $240 = $239&65535;\n      HEAP16[$10>>1] = $240;\n      $241 = (($214) + -16)|0;\n      $242 = (($241) + ($237))|0;\n      $244 = $242;$250 = $239;\n     } else {\n      $243 = (($215) + ($214))|0;\n      $244 = $243;$250 = $223;\n     }\n     HEAP32[$8>>2] = $244;\n     $245 = ($244|0)>(9);\n     $246 = (($$0257) + 65526)|0;\n     $247 = $246 & 65535;\n     $248 = $247 << $244;\n     $249 = $250 & 65535;\n     $251 = $249 | $248;\n     $252 = $251&65535;\n     HEAP16[$10>>1] = $252;\n     if ($245) {\n      $253 = $251&255;\n      $254 = HEAP32[$11>>2]|0;\n      $255 = (($254) + 1)|0;\n      HEAP32[$11>>2] = $255;\n      $256 = HEAP32[$12>>2]|0;\n      $257 = (($256) + ($254)|0);\n      HEAP8[$257>>0] = $253;\n      $258 = HEAP16[$10>>1]|0;\n      $259 = ($258&65535) >>> 8;\n      $260 = $259&255;\n      $261 = HEAP32[$11>>2]|0;\n      $262 = (($261) + 1)|0;\n      HEAP32[$11>>2] = $262;\n      $263 = HEAP32[$12>>2]|0;\n      $264 = (($263) + ($261)|0);\n      HEAP8[$264>>0] = $260;\n      $265 = HEAP32[$8>>2]|0;\n      $266 = (16 - ($265))|0;\n      $267 = $247 >>> $266;\n      $268 = $267&65535;\n      HEAP16[$10>>1] = $268;\n      $269 = (($265) + -9)|0;\n      $storemerge265 = $269;\n     } else {\n      $270 = (($244) + 7)|0;\n      $storemerge265 = $270;\n     }\n     HEAP32[$8>>2] = $storemerge265;\n     break;\n    }\n   }\n  } while(0);\n  $271 = ($20<<16>>16)==(0);\n  $$274 = $24 ? 6 : 7;\n  $272 = $271 | $24;\n  $$$273 = $272 ? 3 : 4;\n  $$$274 = $271 ? 138 : $$274;\n  $$0255$ph$phi = $$0256$ph;$$0$ph = $18;$$0256$ph = $21;$$1260$ph = $$$274;$$1263$ph = $$$273;$$0255$ph = $$0255$ph$phi;\n }\n return;\n}\nfunction _zcalloc($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = Math_imul($2, $1)|0;\n $4 = (_malloc($3)|0);\n return ($4|0);\n}\nfunction _zcfree($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n _free($1);\n return;\n}\nfunction _inflate_fast($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$0295 = 0, $$0298 = 0, $$0302 = 0, $$0308 = 0, $$0316 = 0, $$0325 = 0, $$1 = 0, $$1296$lcssa = 0, $$1296$ph = 0, $$1296398 = 0, $$1299 = 0, $$1303 = 0, $$1309 = 0, $$1317 = 0, $$1326 = 0, $$2 = 0, $$2297 = 0, $$2300 = 0, $$2304 = 0;\n var $$2310 = 0, $$3 = 0, $$3301 = 0, $$3305 = 0, $$3311 = 0, $$3319 = 0, $$3328 = 0, $$4$lcssa = 0, $$4$ph = 0, $$4306 = 0, $$4312 = 0, $$4320 = 0, $$4329 = 0, $$4399 = 0, $$5 = 0, $$5307 = 0, $$5313$lcssa = 0, $$5313$ph = 0, $$5313397 = 0, $$5321 = 0;\n var $$5330 = 0, $$6 = 0, $$6314 = 0, $$7 = 0, $$7315 = 0, $$7323 = 0, $$7332 = 0, $$8 = 0, $$8324 = 0, $$8333 = 0, $$9 = 0, $$9334 = 0, $$lcssa = 0, $$lcssa345 = 0, $$lcssa348 = 0, $$lcssa354 = 0, $$lcssa356 = 0, $$sroa$0$0 = 0, $$sroa$0$0$in = 0, $$sroa$0$0$in374 = 0;\n var $$sroa$0$0377 = 0, $$sroa$0$1 = 0, $$sroa$0$1$in = 0, $$sroa$0$1$in383 = 0, $$sroa$0$1386 = 0, $$sroa$10$0 = 0, $$sroa$10$0$in = 0, $$sroa$10$0$in376 = 0, $$sroa$10$0$lcssa$off0 = 0, $$sroa$10$0379 = 0, $$sroa$10$0380 = 0, $$sroa$10$1 = 0, $$sroa$10$1$in = 0, $$sroa$10$1$in385 = 0, $$sroa$10$1$lcssa = 0, $$sroa$10$1388 = 0, $$sroa$10$1389 = 0, $$sroa$8$0 = 0, $$sroa$8$0$in = 0, $$sroa$8$0$in375 = 0;\n var $$sroa$8$0378 = 0, $$sroa$8$1 = 0, $$sroa$8$1$in = 0, $$sroa$8$1$in384 = 0, $$sroa$8$1387 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;\n var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;\n var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;\n var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;\n var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;\n var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;\n var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;\n var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;\n var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;\n var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;\n var $276 = 0, $277 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $extract$t = 0, $extract$t405 = 0, $or$cond = 0, $scevgep = 0, $scevgep448 = 0, $scevgep450 = 0, $scevgep451 = 0, $scevgep453 = 0, $scevgep454 = 0, $scevgep457 = 0, $scevgep458 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 28|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = HEAP32[$0>>2]|0;\n $5 = ((($4)) + -1|0);\n $6 = ((($0)) + 4|0);\n $7 = HEAP32[$6>>2]|0;\n $8 = (($7) + -5)|0;\n $9 = (($5) + ($8)|0);\n $10 = ((($0)) + 12|0);\n $11 = HEAP32[$10>>2]|0;\n $12 = ((($11)) + -1|0);\n $13 = ((($0)) + 16|0);\n $14 = HEAP32[$13>>2]|0;\n $15 = (($14) - ($1))|0;\n $16 = (($12) + ($15)|0);\n $17 = (($14) + -257)|0;\n $18 = (($12) + ($17)|0);\n $19 = ((($3)) + 40|0);\n $20 = HEAP32[$19>>2]|0;\n $21 = ((($3)) + 44|0);\n $22 = HEAP32[$21>>2]|0;\n $23 = ((($3)) + 48|0);\n $24 = HEAP32[$23>>2]|0;\n $25 = ((($3)) + 52|0);\n $26 = HEAP32[$25>>2]|0;\n $27 = ((($3)) + 56|0);\n $28 = HEAP32[$27>>2]|0;\n $29 = ((($3)) + 60|0);\n $30 = HEAP32[$29>>2]|0;\n $31 = ((($3)) + 76|0);\n $32 = HEAP32[$31>>2]|0;\n $33 = ((($3)) + 80|0);\n $34 = HEAP32[$33>>2]|0;\n $35 = ((($3)) + 84|0);\n $36 = HEAP32[$35>>2]|0;\n $37 = 1 << $36;\n $38 = (($37) + -1)|0;\n $39 = ((($3)) + 88|0);\n $40 = HEAP32[$39>>2]|0;\n $41 = 1 << $40;\n $42 = (($41) + -1)|0;\n $43 = $16;\n $44 = ((($3)) + 7104|0);\n $45 = ((($26)) + -1|0);\n $46 = ($24|0)==(0);\n $47 = (($24) + ($20))|0;\n $48 = (($43) - ($24))|0;\n $$0302 = $5;$$0308 = $12;$$0316 = $28;$$0325 = $30;\n L1: while(1) {\n  $49 = ($$0325>>>0)<(15);\n  if ($49) {\n   $50 = ((($$0302)) + 1|0);\n   $51 = HEAP8[$50>>0]|0;\n   $52 = $51&255;\n   $53 = $52 << $$0325;\n   $54 = (($53) + ($$0316))|0;\n   $55 = (($$0325) + 8)|0;\n   $56 = ((($$0302)) + 2|0);\n   $57 = HEAP8[$56>>0]|0;\n   $58 = $57&255;\n   $59 = $58 << $55;\n   $60 = (($54) + ($59))|0;\n   $61 = (($$0325) + 16)|0;\n   $$1303 = $56;$$1317 = $60;$$1326 = $61;\n  } else {\n   $$1303 = $$0302;$$1317 = $$0316;$$1326 = $$0325;\n  }\n  $62 = $$1317 & $38;\n  $$sroa$0$0$in374 = (($32) + ($62<<2)|0);\n  $$sroa$8$0$in375 = (((($32) + ($62<<2)|0)) + 1|0);\n  $$sroa$10$0$in376 = (((($32) + ($62<<2)|0)) + 2|0);\n  $$sroa$0$0377 = HEAP8[$$sroa$0$0$in374>>0]|0;\n  $$sroa$8$0378 = HEAP8[$$sroa$8$0$in375>>0]|0;\n  $$sroa$10$0379 = HEAP16[$$sroa$10$0$in376>>1]|0;\n  $63 = $$sroa$8$0378&255;\n  $64 = $$1317 >>> $63;\n  $65 = (($$1326) - ($63))|0;\n  $66 = ($$sroa$0$0377<<24>>24)==(0);\n  $extract$t = $$sroa$10$0379&255;\n  do {\n   if ($66) {\n    $$lcssa345 = $65;$$lcssa348 = $64;$$sroa$10$0$lcssa$off0 = $extract$t;\n    label = 7;\n   } else {\n    $67 = $$sroa$0$0377&255;\n    $$sroa$10$0380 = $$sroa$10$0379;$70 = $67;$75 = $65;$83 = $64;\n    while(1) {\n     $69 = $70 & 16;\n     $71 = ($69|0)==(0);\n     if (!($71)) {\n      break;\n     }\n     $243 = $70 & 64;\n     $244 = ($243|0)==(0);\n     if (!($244)) {\n      label = 55;\n      break L1;\n     }\n     $245 = $$sroa$10$0380&65535;\n     $246 = 1 << $70;\n     $247 = (($246) + -1)|0;\n     $248 = $83 & $247;\n     $249 = (($248) + ($245))|0;\n     $$sroa$0$0$in = (($32) + ($249<<2)|0);\n     $$sroa$8$0$in = (((($32) + ($249<<2)|0)) + 1|0);\n     $$sroa$10$0$in = (((($32) + ($249<<2)|0)) + 2|0);\n     $$sroa$0$0 = HEAP8[$$sroa$0$0$in>>0]|0;\n     $$sroa$8$0 = HEAP8[$$sroa$8$0$in>>0]|0;\n     $$sroa$10$0 = HEAP16[$$sroa$10$0$in>>1]|0;\n     $250 = $$sroa$8$0&255;\n     $251 = $83 >>> $250;\n     $252 = (($75) - ($250))|0;\n     $253 = $$sroa$0$0&255;\n     $254 = ($$sroa$0$0<<24>>24)==(0);\n     if ($254) {\n      label = 6;\n      break;\n     } else {\n      $$sroa$10$0380 = $$sroa$10$0;$70 = $253;$75 = $252;$83 = $251;\n     }\n    }\n    if ((label|0) == 6) {\n     label = 0;\n     $extract$t405 = $$sroa$10$0&255;\n     $$lcssa345 = $252;$$lcssa348 = $251;$$sroa$10$0$lcssa$off0 = $extract$t405;\n     label = 7;\n     break;\n    }\n    $72 = $$sroa$10$0380&65535;\n    $73 = $70 & 15;\n    $74 = ($73|0)==(0);\n    if ($74) {\n     $$0295 = $72;$$3305 = $$1303;$$4320 = $83;$$4329 = $75;\n    } else {\n     $76 = ($75>>>0)<($73>>>0);\n     $77 = ((($$1303)) + 1|0);\n     if ($76) {\n      $78 = (($75) + 8)|0;\n      $79 = HEAP8[$77>>0]|0;\n      $80 = $79&255;\n      $81 = $80 << $75;\n      $82 = (($81) + ($83))|0;\n      $$2304 = $77;$$3319 = $82;$$3328 = $78;\n     } else {\n      $$2304 = $$1303;$$3319 = $83;$$3328 = $75;\n     }\n     $84 = 1 << $73;\n     $85 = (($84) + -1)|0;\n     $86 = $$3319 & $85;\n     $87 = (($86) + ($72))|0;\n     $88 = $$3319 >>> $73;\n     $89 = (($$3328) - ($73))|0;\n     $$0295 = $87;$$3305 = $$2304;$$4320 = $88;$$4329 = $89;\n    }\n    $90 = ($$4329>>>0)<(15);\n    if ($90) {\n     $91 = ((($$3305)) + 1|0);\n     $92 = HEAP8[$91>>0]|0;\n     $93 = $92&255;\n     $94 = $93 << $$4329;\n     $95 = (($94) + ($$4320))|0;\n     $96 = (($$4329) + 8)|0;\n     $97 = ((($$3305)) + 2|0);\n     $98 = HEAP8[$97>>0]|0;\n     $99 = $98&255;\n     $100 = $99 << $96;\n     $101 = (($95) + ($100))|0;\n     $102 = (($$4329) + 16)|0;\n     $$4306 = $97;$$5321 = $101;$$5330 = $102;\n    } else {\n     $$4306 = $$3305;$$5321 = $$4320;$$5330 = $$4329;\n    }\n    $103 = $$5321 & $42;\n    $$sroa$0$1$in383 = (($34) + ($103<<2)|0);\n    $$sroa$8$1$in384 = (((($34) + ($103<<2)|0)) + 1|0);\n    $$sroa$10$1$in385 = (((($34) + ($103<<2)|0)) + 2|0);\n    $$sroa$0$1386 = HEAP8[$$sroa$0$1$in383>>0]|0;\n    $$sroa$8$1387 = HEAP8[$$sroa$8$1$in384>>0]|0;\n    $$sroa$10$1388 = HEAP16[$$sroa$10$1$in385>>1]|0;\n    $104 = $$sroa$8$1387&255;\n    $105 = $$5321 >>> $104;\n    $106 = (($$5330) - ($104))|0;\n    $107 = $$sroa$0$1386&255;\n    $108 = $107 & 16;\n    $109 = ($108|0)==(0);\n    if ($109) {\n     $$sroa$10$1389 = $$sroa$10$1388;$227 = $107;$233 = $105;$238 = $106;\n     while(1) {\n      $226 = $227 & 64;\n      $228 = ($226|0)==(0);\n      if (!($228)) {\n       label = 52;\n       break L1;\n      }\n      $229 = $$sroa$10$1389&65535;\n      $230 = 1 << $227;\n      $231 = (($230) + -1)|0;\n      $232 = $233 & $231;\n      $234 = (($232) + ($229))|0;\n      $$sroa$0$1$in = (($34) + ($234<<2)|0);\n      $$sroa$8$1$in = (((($34) + ($234<<2)|0)) + 1|0);\n      $$sroa$10$1$in = (((($34) + ($234<<2)|0)) + 2|0);\n      $$sroa$0$1 = HEAP8[$$sroa$0$1$in>>0]|0;\n      $$sroa$8$1 = HEAP8[$$sroa$8$1$in>>0]|0;\n      $$sroa$10$1 = HEAP16[$$sroa$10$1$in>>1]|0;\n      $235 = $$sroa$8$1&255;\n      $236 = $233 >>> $235;\n      $237 = (($238) - ($235))|0;\n      $239 = $$sroa$0$1&255;\n      $240 = $239 & 16;\n      $241 = ($240|0)==(0);\n      if ($241) {\n       $$sroa$10$1389 = $$sroa$10$1;$227 = $239;$233 = $236;$238 = $237;\n      } else {\n       $$lcssa = $239;$$lcssa354 = $237;$$lcssa356 = $236;$$sroa$10$1$lcssa = $$sroa$10$1;\n       break;\n      }\n     }\n    } else {\n     $$lcssa = $107;$$lcssa354 = $106;$$lcssa356 = $105;$$sroa$10$1$lcssa = $$sroa$10$1388;\n    }\n    $110 = $$sroa$10$1$lcssa&65535;\n    $111 = $$lcssa & 15;\n    $112 = ($$lcssa354>>>0)<($111>>>0);\n    if ($112) {\n     $113 = ((($$4306)) + 1|0);\n     $114 = HEAP8[$113>>0]|0;\n     $115 = $114&255;\n     $116 = $115 << $$lcssa354;\n     $117 = (($116) + ($$lcssa356))|0;\n     $118 = (($$lcssa354) + 8)|0;\n     $119 = ($118>>>0)<($111>>>0);\n     $120 = ((($$4306)) + 2|0);\n     if ($119) {\n      $121 = (($$lcssa354) + 16)|0;\n      $122 = HEAP8[$120>>0]|0;\n      $123 = $122&255;\n      $124 = $123 << $118;\n      $125 = (($124) + ($117))|0;\n      $$5307 = $120;$$7323 = $125;$$7332 = $121;\n     } else {\n      $$5307 = $113;$$7323 = $117;$$7332 = $118;\n     }\n    } else {\n     $$5307 = $$4306;$$7323 = $$lcssa356;$$7332 = $$lcssa354;\n    }\n    $126 = 1 << $111;\n    $127 = (($126) + -1)|0;\n    $128 = $$7323 & $127;\n    $129 = (($128) + ($110))|0;\n    $130 = $$7323 >>> $111;\n    $131 = (($$7332) - ($111))|0;\n    $132 = $$0308;\n    $133 = (($132) - ($43))|0;\n    $134 = ($129>>>0)>($133>>>0);\n    if (!($134)) {\n     $205 = (0 - ($129))|0;\n     $206 = (($$0308) + ($205)|0);\n     $$2297 = $$0295;$$5 = $206;$$6314 = $$0308;\n     while(1) {\n      $207 = ((($$5)) + 1|0);\n      $208 = HEAP8[$207>>0]|0;\n      $209 = ((($$6314)) + 1|0);\n      HEAP8[$209>>0] = $208;\n      $210 = ((($$5)) + 2|0);\n      $211 = HEAP8[$210>>0]|0;\n      $212 = ((($$6314)) + 2|0);\n      HEAP8[$212>>0] = $211;\n      $213 = ((($$5)) + 3|0);\n      $214 = HEAP8[$213>>0]|0;\n      $215 = ((($$6314)) + 3|0);\n      HEAP8[$215>>0] = $214;\n      $216 = (($$2297) + -3)|0;\n      $217 = ($216>>>0)>(2);\n      if ($217) {\n       $$2297 = $216;$$5 = $213;$$6314 = $215;\n      } else {\n       break;\n      }\n     }\n     $218 = ($216|0)==(0);\n     if ($218) {\n      $$6 = $$5307;$$7315 = $215;$$8324 = $130;$$8333 = $131;\n      break;\n     }\n     $219 = ((($$5)) + 4|0);\n     $220 = HEAP8[$219>>0]|0;\n     $221 = ((($$6314)) + 4|0);\n     HEAP8[$221>>0] = $220;\n     $222 = ($216|0)==(1);\n     if ($222) {\n      $$6 = $$5307;$$7315 = $221;$$8324 = $130;$$8333 = $131;\n      break;\n     }\n     $223 = ((($$5)) + 5|0);\n     $224 = HEAP8[$223>>0]|0;\n     $225 = ((($$6314)) + 5|0);\n     HEAP8[$225>>0] = $224;\n     $$6 = $$5307;$$7315 = $225;$$8324 = $130;$$8333 = $131;\n     break;\n    }\n    $135 = (($129) - ($133))|0;\n    $136 = ($135>>>0)>($22>>>0);\n    if ($136) {\n     $137 = HEAP32[$44>>2]|0;\n     $138 = ($137|0)==(0);\n     if (!($138)) {\n      label = 22;\n      break L1;\n     }\n    }\n    do {\n     if ($46) {\n      $140 = (($20) - ($135))|0;\n      $141 = (($45) + ($140)|0);\n      $142 = ($$0295>>>0)>($135>>>0);\n      if ($142) {\n       $143 = (($$0295) - ($135))|0;\n       $144 = (($129) - ($132))|0;\n       $$0 = $141;$$0298 = $135;$$1309 = $$0308;\n       while(1) {\n        $145 = ((($$0)) + 1|0);\n        $146 = HEAP8[$145>>0]|0;\n        $147 = ((($$1309)) + 1|0);\n        HEAP8[$147>>0] = $146;\n        $148 = (($$0298) + -1)|0;\n        $149 = ($148|0)==(0);\n        if ($149) {\n         break;\n        } else {\n         $$0 = $145;$$0298 = $148;$$1309 = $147;\n        }\n       }\n       $scevgep457 = (($$0308) + ($43)|0);\n       $scevgep458 = (($scevgep457) + ($144)|0);\n       $150 = (0 - ($129))|0;\n       $151 = (($scevgep458) + ($150)|0);\n       $$1296$ph = $143;$$4$ph = $151;$$5313$ph = $scevgep458;\n      } else {\n       $$1296$ph = $$0295;$$4$ph = $141;$$5313$ph = $$0308;\n      }\n     } else {\n      $152 = ($24>>>0)<($135>>>0);\n      if (!($152)) {\n       $173 = (($24) - ($135))|0;\n       $174 = (($45) + ($173)|0);\n       $175 = ($$0295>>>0)>($135>>>0);\n       if (!($175)) {\n        $$1296$ph = $$0295;$$4$ph = $174;$$5313$ph = $$0308;\n        break;\n       }\n       $176 = (($$0295) - ($135))|0;\n       $177 = (($129) - ($132))|0;\n       $$3 = $174;$$3301 = $135;$$4312 = $$0308;\n       while(1) {\n        $178 = ((($$3)) + 1|0);\n        $179 = HEAP8[$178>>0]|0;\n        $180 = ((($$4312)) + 1|0);\n        HEAP8[$180>>0] = $179;\n        $181 = (($$3301) + -1)|0;\n        $182 = ($181|0)==(0);\n        if ($182) {\n         break;\n        } else {\n         $$3 = $178;$$3301 = $181;$$4312 = $180;\n        }\n       }\n       $scevgep = (($$0308) + ($43)|0);\n       $scevgep448 = (($scevgep) + ($177)|0);\n       $183 = (0 - ($129))|0;\n       $184 = (($scevgep448) + ($183)|0);\n       $$1296$ph = $176;$$4$ph = $184;$$5313$ph = $scevgep448;\n       break;\n      }\n      $153 = (($47) - ($135))|0;\n      $154 = (($45) + ($153)|0);\n      $155 = (($135) - ($24))|0;\n      $156 = ($$0295>>>0)>($155>>>0);\n      if ($156) {\n       $157 = (($$0295) - ($155))|0;\n       $158 = (($129) - ($132))|0;\n       $$1 = $154;$$1299 = $155;$$2310 = $$0308;\n       while(1) {\n        $159 = ((($$1)) + 1|0);\n        $160 = HEAP8[$159>>0]|0;\n        $161 = ((($$2310)) + 1|0);\n        HEAP8[$161>>0] = $160;\n        $162 = (($$1299) + -1)|0;\n        $163 = ($162|0)==(0);\n        if ($163) {\n         break;\n        } else {\n         $$1 = $159;$$1299 = $162;$$2310 = $161;\n        }\n       }\n       $scevgep450 = (($$0308) + ($48)|0);\n       $scevgep451 = (($scevgep450) + ($158)|0);\n       $164 = ($157>>>0)>($24>>>0);\n       if ($164) {\n        $scevgep453 = (($$0308) + ($43)|0);\n        $$2 = $45;$$2300 = $24;$$3311 = $scevgep451;\n        while(1) {\n         $165 = ((($$2)) + 1|0);\n         $166 = HEAP8[$165>>0]|0;\n         $167 = ((($$3311)) + 1|0);\n         HEAP8[$167>>0] = $166;\n         $168 = (($$2300) + -1)|0;\n         $169 = ($168|0)==(0);\n         if ($169) {\n          break;\n         } else {\n          $$2 = $165;$$2300 = $168;$$3311 = $167;\n         }\n        }\n        $170 = (($157) - ($24))|0;\n        $scevgep454 = (($scevgep453) + ($158)|0);\n        $171 = (0 - ($129))|0;\n        $172 = (($scevgep454) + ($171)|0);\n        $$1296$ph = $170;$$4$ph = $172;$$5313$ph = $scevgep454;\n       } else {\n        $$1296$ph = $157;$$4$ph = $45;$$5313$ph = $scevgep451;\n       }\n      } else {\n       $$1296$ph = $$0295;$$4$ph = $154;$$5313$ph = $$0308;\n      }\n     }\n    } while(0);\n    $185 = ($$1296$ph>>>0)>(2);\n    if ($185) {\n     $$1296398 = $$1296$ph;$$4399 = $$4$ph;$$5313397 = $$5313$ph;\n     while(1) {\n      $186 = ((($$4399)) + 1|0);\n      $187 = HEAP8[$186>>0]|0;\n      $188 = ((($$5313397)) + 1|0);\n      HEAP8[$188>>0] = $187;\n      $189 = ((($$4399)) + 2|0);\n      $190 = HEAP8[$189>>0]|0;\n      $191 = ((($$5313397)) + 2|0);\n      HEAP8[$191>>0] = $190;\n      $192 = ((($$4399)) + 3|0);\n      $193 = HEAP8[$192>>0]|0;\n      $194 = ((($$5313397)) + 3|0);\n      HEAP8[$194>>0] = $193;\n      $195 = (($$1296398) + -3)|0;\n      $196 = ($195>>>0)>(2);\n      if ($196) {\n       $$1296398 = $195;$$4399 = $192;$$5313397 = $194;\n      } else {\n       $$1296$lcssa = $195;$$4$lcssa = $192;$$5313$lcssa = $194;\n       break;\n      }\n     }\n    } else {\n     $$1296$lcssa = $$1296$ph;$$4$lcssa = $$4$ph;$$5313$lcssa = $$5313$ph;\n    }\n    $197 = ($$1296$lcssa|0)==(0);\n    if ($197) {\n     $$6 = $$5307;$$7315 = $$5313$lcssa;$$8324 = $130;$$8333 = $131;\n    } else {\n     $198 = ((($$4$lcssa)) + 1|0);\n     $199 = HEAP8[$198>>0]|0;\n     $200 = ((($$5313$lcssa)) + 1|0);\n     HEAP8[$200>>0] = $199;\n     $201 = ($$1296$lcssa|0)==(1);\n     if ($201) {\n      $$6 = $$5307;$$7315 = $200;$$8324 = $130;$$8333 = $131;\n     } else {\n      $202 = ((($$4$lcssa)) + 2|0);\n      $203 = HEAP8[$202>>0]|0;\n      $204 = ((($$5313$lcssa)) + 2|0);\n      HEAP8[$204>>0] = $203;\n      $$6 = $$5307;$$7315 = $204;$$8324 = $130;$$8333 = $131;\n     }\n    }\n   }\n  } while(0);\n  if ((label|0) == 7) {\n   label = 0;\n   $68 = ((($$0308)) + 1|0);\n   HEAP8[$68>>0] = $$sroa$10$0$lcssa$off0;\n   $$6 = $$1303;$$7315 = $68;$$8324 = $$lcssa348;$$8333 = $$lcssa345;\n  }\n  $258 = ($$6>>>0)<($9>>>0);\n  $259 = ($$7315>>>0)<($18>>>0);\n  $or$cond = $259 & $258;\n  if ($or$cond) {\n   $$0302 = $$6;$$0308 = $$7315;$$0316 = $$8324;$$0325 = $$8333;\n  } else {\n   $$7 = $$6;$$8 = $$7315;$$9 = $$8324;$$9334 = $$8333;\n   break;\n  }\n }\n do {\n  if ((label|0) == 22) {\n   $139 = ((($0)) + 24|0);\n   HEAP32[$139>>2] = 28470;\n   HEAP32[$3>>2] = 29;\n   $$7 = $$5307;$$8 = $$0308;$$9 = $130;$$9334 = $131;\n  }\n  else if ((label|0) == 52) {\n   $242 = ((($0)) + 24|0);\n   HEAP32[$242>>2] = 28500;\n   HEAP32[$3>>2] = 29;\n   $$7 = $$4306;$$8 = $$0308;$$9 = $233;$$9334 = $238;\n  }\n  else if ((label|0) == 55) {\n   $255 = $70 & 32;\n   $256 = ($255|0)==(0);\n   if ($256) {\n    $257 = ((($0)) + 24|0);\n    HEAP32[$257>>2] = 28522;\n    HEAP32[$3>>2] = 29;\n    $$7 = $$1303;$$8 = $$0308;$$9 = $83;$$9334 = $75;\n    break;\n   } else {\n    HEAP32[$3>>2] = 11;\n    $$7 = $$1303;$$8 = $$0308;$$9 = $83;$$9334 = $75;\n    break;\n   }\n  }\n } while(0);\n $260 = $$9334 >>> 3;\n $261 = (0 - ($260))|0;\n $262 = (($$7) + ($261)|0);\n $263 = $260 << 3;\n $264 = (($$9334) - ($263))|0;\n $265 = 1 << $264;\n $266 = (($265) + -1)|0;\n $267 = $266 & $$9;\n $268 = ((($262)) + 1|0);\n HEAP32[$0>>2] = $268;\n $269 = ((($$8)) + 1|0);\n HEAP32[$10>>2] = $269;\n $270 = $9;\n $271 = $262;\n $272 = (($270) + 5)|0;\n $273 = (($272) - ($271))|0;\n HEAP32[$6>>2] = $273;\n $274 = $18;\n $275 = $$8;\n $276 = (($274) + 257)|0;\n $277 = (($276) - ($275))|0;\n HEAP32[$13>>2] = $277;\n HEAP32[$27>>2] = $267;\n HEAP32[$29>>2] = $264;\n return;\n}\nfunction ___stdio_close($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n $1 = ((($0)) + 60|0);\n $2 = HEAP32[$1>>2]|0;\n HEAP32[$vararg_buffer>>2] = $2;\n $3 = (___syscall6(6,($vararg_buffer|0))|0);\n $4 = (___syscall_ret($3)|0);\n STACKTOP = sp;return ($4|0);\n}\nfunction ___stdio_read($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$026 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer = sp;\n $3 = sp + 32|0;\n HEAP32[$3>>2] = $1;\n $4 = ((($3)) + 4|0);\n $5 = ((($0)) + 48|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)!=(0);\n $8 = $7&1;\n $9 = (($2) - ($8))|0;\n HEAP32[$4>>2] = $9;\n $10 = ((($3)) + 8|0);\n $11 = ((($0)) + 44|0);\n $12 = HEAP32[$11>>2]|0;\n HEAP32[$10>>2] = $12;\n $13 = ((($3)) + 12|0);\n HEAP32[$13>>2] = $6;\n $14 = HEAP32[7831]|0;\n $15 = ($14|0)==(0|0);\n if ($15) {\n  $20 = ((($0)) + 60|0);\n  $21 = HEAP32[$20>>2]|0;\n  HEAP32[$vararg_buffer3>>2] = $21;\n  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);\n  HEAP32[$vararg_ptr6>>2] = $3;\n  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);\n  HEAP32[$vararg_ptr7>>2] = 2;\n  $22 = (___syscall145(145,($vararg_buffer3|0))|0);\n  $23 = (___syscall_ret($22)|0);\n  $$0 = $23;\n } else {\n  _pthread_cleanup_push((70|0),($0|0));\n  $16 = ((($0)) + 60|0);\n  $17 = HEAP32[$16>>2]|0;\n  HEAP32[$vararg_buffer>>2] = $17;\n  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n  HEAP32[$vararg_ptr1>>2] = $3;\n  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n  HEAP32[$vararg_ptr2>>2] = 2;\n  $18 = (___syscall145(145,($vararg_buffer|0))|0);\n  $19 = (___syscall_ret($18)|0);\n  _pthread_cleanup_pop(0);\n  $$0 = $19;\n }\n $24 = ($$0|0)<(1);\n if ($24) {\n  $25 = $$0 & 48;\n  $26 = $25 ^ 16;\n  $27 = HEAP32[$0>>2]|0;\n  $28 = $27 | $26;\n  HEAP32[$0>>2] = $28;\n  $29 = ((($0)) + 8|0);\n  HEAP32[$29>>2] = 0;\n  $30 = ((($0)) + 4|0);\n  HEAP32[$30>>2] = 0;\n  $$026 = $$0;\n } else {\n  $31 = HEAP32[$4>>2]|0;\n  $32 = ($$0>>>0)>($31>>>0);\n  if ($32) {\n   $33 = (($$0) - ($31))|0;\n   $34 = HEAP32[$11>>2]|0;\n   $35 = ((($0)) + 4|0);\n   HEAP32[$35>>2] = $34;\n   $$cast = $34;\n   $36 = (($$cast) + ($33)|0);\n   $37 = ((($0)) + 8|0);\n   HEAP32[$37>>2] = $36;\n   $38 = HEAP32[$5>>2]|0;\n   $39 = ($38|0)==(0);\n   if ($39) {\n    $$026 = $2;\n   } else {\n    $40 = ((($$cast)) + 1|0);\n    HEAP32[$35>>2] = $40;\n    $41 = HEAP8[$$cast>>0]|0;\n    $42 = (($2) + -1)|0;\n    $43 = (($1) + ($42)|0);\n    HEAP8[$43>>0] = $41;\n    $$026 = $2;\n   }\n  } else {\n   $$026 = $$0;\n  }\n }\n STACKTOP = sp;return ($$026|0);\n}\nfunction ___stdio_seek($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$pre = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer = sp;\n $3 = sp + 20|0;\n $4 = ((($0)) + 60|0);\n $5 = HEAP32[$4>>2]|0;\n HEAP32[$vararg_buffer>>2] = $5;\n $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n HEAP32[$vararg_ptr1>>2] = 0;\n $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n HEAP32[$vararg_ptr2>>2] = $1;\n $vararg_ptr3 = ((($vararg_buffer)) + 12|0);\n HEAP32[$vararg_ptr3>>2] = $3;\n $vararg_ptr4 = ((($vararg_buffer)) + 16|0);\n HEAP32[$vararg_ptr4>>2] = $2;\n $6 = (___syscall140(140,($vararg_buffer|0))|0);\n $7 = (___syscall_ret($6)|0);\n $8 = ($7|0)<(0);\n if ($8) {\n  HEAP32[$3>>2] = -1;\n  $9 = -1;\n } else {\n  $$pre = HEAP32[$3>>2]|0;\n  $9 = $$pre;\n }\n STACKTOP = sp;return ($9|0);\n}\nfunction ___syscall_ret($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0>>>0)>(4294963200);\n if ($1) {\n  $2 = (0 - ($0))|0;\n  $3 = (___errno_location()|0);\n  HEAP32[$3>>2] = $2;\n  $$0 = -1;\n } else {\n  $$0 = $0;\n }\n return ($$0|0);\n}\nfunction ___errno_location() {\n var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $0 = HEAP32[7831]|0;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  $$0 = 31368;\n } else {\n  $2 = (_pthread_self()|0);\n  $3 = ((($2)) + 64|0);\n  $4 = HEAP32[$3>>2]|0;\n  $$0 = $4;\n }\n return ($$0|0);\n}\nfunction _cleanup_263($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 68|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0);\n if ($3) {\n  ___unlockfile($0);\n }\n return;\n}\nfunction ___unlockfile($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return;\n}\nfunction ___stdout_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);\n $vararg_buffer = sp;\n $3 = sp + 12|0;\n $4 = ((($0)) + 36|0);\n HEAP32[$4>>2] = 8;\n $5 = HEAP32[$0>>2]|0;\n $6 = $5 & 64;\n $7 = ($6|0)==(0);\n if ($7) {\n  $8 = ((($0)) + 60|0);\n  $9 = HEAP32[$8>>2]|0;\n  HEAP32[$vararg_buffer>>2] = $9;\n  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n  HEAP32[$vararg_ptr1>>2] = 21505;\n  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n  HEAP32[$vararg_ptr2>>2] = $3;\n  $10 = (___syscall54(54,($vararg_buffer|0))|0);\n  $11 = ($10|0)==(0);\n  if (!($11)) {\n   $12 = ((($0)) + 75|0);\n   HEAP8[$12>>0] = -1;\n  }\n }\n $13 = (___stdio_write($0,$1,$2)|0);\n STACKTOP = sp;return ($13|0);\n}\nfunction ___stdio_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$056 = 0, $$058 = 0, $$059 = 0, $$061 = 0, $$1 = 0, $$157 = 0, $$160 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer = sp;\n $3 = sp + 32|0;\n $4 = ((($0)) + 28|0);\n $5 = HEAP32[$4>>2]|0;\n HEAP32[$3>>2] = $5;\n $6 = ((($3)) + 4|0);\n $7 = ((($0)) + 20|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = (($8) - ($5))|0;\n HEAP32[$6>>2] = $9;\n $10 = ((($3)) + 8|0);\n HEAP32[$10>>2] = $1;\n $11 = ((($3)) + 12|0);\n HEAP32[$11>>2] = $2;\n $12 = (($9) + ($2))|0;\n $13 = ((($0)) + 60|0);\n $14 = ((($0)) + 44|0);\n $$056 = 2;$$058 = $12;$$059 = $3;\n while(1) {\n  $15 = HEAP32[7831]|0;\n  $16 = ($15|0)==(0|0);\n  if ($16) {\n   $20 = HEAP32[$13>>2]|0;\n   HEAP32[$vararg_buffer3>>2] = $20;\n   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);\n   HEAP32[$vararg_ptr6>>2] = $$059;\n   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);\n   HEAP32[$vararg_ptr7>>2] = $$056;\n   $21 = (___syscall146(146,($vararg_buffer3|0))|0);\n   $22 = (___syscall_ret($21)|0);\n   $$0 = $22;\n  } else {\n   _pthread_cleanup_push((71|0),($0|0));\n   $17 = HEAP32[$13>>2]|0;\n   HEAP32[$vararg_buffer>>2] = $17;\n   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n   HEAP32[$vararg_ptr1>>2] = $$059;\n   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n   HEAP32[$vararg_ptr2>>2] = $$056;\n   $18 = (___syscall146(146,($vararg_buffer|0))|0);\n   $19 = (___syscall_ret($18)|0);\n   _pthread_cleanup_pop(0);\n   $$0 = $19;\n  }\n  $23 = ($$058|0)==($$0|0);\n  if ($23) {\n   label = 6;\n   break;\n  }\n  $30 = ($$0|0)<(0);\n  if ($30) {\n   label = 8;\n   break;\n  }\n  $38 = (($$058) - ($$0))|0;\n  $39 = ((($$059)) + 4|0);\n  $40 = HEAP32[$39>>2]|0;\n  $41 = ($$0>>>0)>($40>>>0);\n  if ($41) {\n   $42 = HEAP32[$14>>2]|0;\n   HEAP32[$4>>2] = $42;\n   HEAP32[$7>>2] = $42;\n   $43 = (($$0) - ($40))|0;\n   $44 = ((($$059)) + 8|0);\n   $45 = (($$056) + -1)|0;\n   $$phi$trans$insert = ((($$059)) + 12|0);\n   $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n   $$1 = $43;$$157 = $45;$$160 = $44;$53 = $$pre;\n  } else {\n   $46 = ($$056|0)==(2);\n   if ($46) {\n    $47 = HEAP32[$4>>2]|0;\n    $48 = (($47) + ($$0)|0);\n    HEAP32[$4>>2] = $48;\n    $$1 = $$0;$$157 = 2;$$160 = $$059;$53 = $40;\n   } else {\n    $$1 = $$0;$$157 = $$056;$$160 = $$059;$53 = $40;\n   }\n  }\n  $49 = HEAP32[$$160>>2]|0;\n  $50 = (($49) + ($$1)|0);\n  HEAP32[$$160>>2] = $50;\n  $51 = ((($$160)) + 4|0);\n  $52 = (($53) - ($$1))|0;\n  HEAP32[$51>>2] = $52;\n  $$056 = $$157;$$058 = $38;$$059 = $$160;\n }\n if ((label|0) == 6) {\n  $24 = HEAP32[$14>>2]|0;\n  $25 = ((($0)) + 48|0);\n  $26 = HEAP32[$25>>2]|0;\n  $27 = (($24) + ($26)|0);\n  $28 = ((($0)) + 16|0);\n  HEAP32[$28>>2] = $27;\n  $29 = $24;\n  HEAP32[$4>>2] = $29;\n  HEAP32[$7>>2] = $29;\n  $$061 = $2;\n }\n else if ((label|0) == 8) {\n  $31 = ((($0)) + 16|0);\n  HEAP32[$31>>2] = 0;\n  HEAP32[$4>>2] = 0;\n  HEAP32[$7>>2] = 0;\n  $32 = HEAP32[$0>>2]|0;\n  $33 = $32 | 32;\n  HEAP32[$0>>2] = $33;\n  $34 = ($$056|0)==(2);\n  if ($34) {\n   $$061 = 0;\n  } else {\n   $35 = ((($$059)) + 4|0);\n   $36 = HEAP32[$35>>2]|0;\n   $37 = (($2) - ($36))|0;\n   $$061 = $37;\n  }\n }\n STACKTOP = sp;return ($$061|0);\n}\nfunction _cleanup_217($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 68|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0);\n if ($3) {\n  ___unlockfile($0);\n }\n return;\n}\nfunction _strlen($0) {\n $0 = $0|0;\n var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;\n var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = $0;\n $2 = $1 & 3;\n $3 = ($2|0)==(0);\n L1: do {\n  if ($3) {\n   $$015$lcssa = $0;\n   label = 4;\n  } else {\n   $$01518 = $0;$22 = $1;\n   while(1) {\n    $4 = HEAP8[$$01518>>0]|0;\n    $5 = ($4<<24>>24)==(0);\n    if ($5) {\n     $$pn = $22;\n     break L1;\n    }\n    $6 = ((($$01518)) + 1|0);\n    $7 = $6;\n    $8 = $7 & 3;\n    $9 = ($8|0)==(0);\n    if ($9) {\n     $$015$lcssa = $6;\n     label = 4;\n     break;\n    } else {\n     $$01518 = $6;$22 = $7;\n    }\n   }\n  }\n } while(0);\n if ((label|0) == 4) {\n  $$0 = $$015$lcssa;\n  while(1) {\n   $10 = HEAP32[$$0>>2]|0;\n   $11 = (($10) + -16843009)|0;\n   $12 = $10 & -2139062144;\n   $13 = $12 ^ -2139062144;\n   $14 = $13 & $11;\n   $15 = ($14|0)==(0);\n   $16 = ((($$0)) + 4|0);\n   if ($15) {\n    $$0 = $16;\n   } else {\n    break;\n   }\n  }\n  $17 = $10&255;\n  $18 = ($17<<24>>24)==(0);\n  if ($18) {\n   $$1$lcssa = $$0;\n  } else {\n   $$pn29 = $$0;\n   while(1) {\n    $19 = ((($$pn29)) + 1|0);\n    $$pre = HEAP8[$19>>0]|0;\n    $20 = ($$pre<<24>>24)==(0);\n    if ($20) {\n     $$1$lcssa = $19;\n     break;\n    } else {\n     $$pn29 = $19;\n    }\n   }\n  }\n  $21 = $$1$lcssa;\n  $$pn = $21;\n }\n $$014 = (($$pn) - ($1))|0;\n return ($$014|0);\n}\nfunction _memcmp($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($2|0)==(0);\n L1: do {\n  if ($3) {\n   $14 = 0;\n  } else {\n   $$01318 = $0;$$01417 = $2;$$019 = $1;\n   while(1) {\n    $4 = HEAP8[$$01318>>0]|0;\n    $5 = HEAP8[$$019>>0]|0;\n    $6 = ($4<<24>>24)==($5<<24>>24);\n    if (!($6)) {\n     break;\n    }\n    $7 = (($$01417) + -1)|0;\n    $8 = ((($$01318)) + 1|0);\n    $9 = ((($$019)) + 1|0);\n    $10 = ($7|0)==(0);\n    if ($10) {\n     $14 = 0;\n     break L1;\n    } else {\n     $$01318 = $8;$$01417 = $7;$$019 = $9;\n    }\n   }\n   $11 = $4&255;\n   $12 = $5&255;\n   $13 = (($11) - ($12))|0;\n   $14 = $13;\n  }\n } while(0);\n return ($14|0);\n}\nfunction _strtoul($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_strtox_339($0,$1,$2,-1,0)|0);\n $4 = tempRet0;\n return ($3|0);\n}\nfunction _strtox_339($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);\n $5 = sp;\n HEAP32[$5>>2] = 0;\n $6 = ((($5)) + 4|0);\n HEAP32[$6>>2] = $0;\n $7 = ((($5)) + 44|0);\n HEAP32[$7>>2] = $0;\n $8 = ($0|0)<(0|0);\n $9 = ((($0)) + 2147483647|0);\n $$sink = $8 ? (-1) : $9;\n $10 = ((($5)) + 8|0);\n HEAP32[$10>>2] = $$sink;\n $11 = ((($5)) + 76|0);\n HEAP32[$11>>2] = -1;\n ___shlim($5,0);\n $12 = (___intscan($5,$2,1,$3,$4)|0);\n $13 = tempRet0;\n $14 = ($1|0)==(0|0);\n if (!($14)) {\n  $15 = ((($5)) + 108|0);\n  $16 = HEAP32[$15>>2]|0;\n  $17 = HEAP32[$6>>2]|0;\n  $18 = HEAP32[$10>>2]|0;\n  $19 = (($17) + ($16))|0;\n  $20 = (($19) - ($18))|0;\n  $21 = (($0) + ($20)|0);\n  HEAP32[$1>>2] = $21;\n }\n tempRet0 = ($13);\n STACKTOP = sp;return ($12|0);\n}\nfunction ___shlim($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 104|0);\n HEAP32[$2>>2] = $1;\n $3 = ((($0)) + 8|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($0)) + 4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($4) - ($6))|0;\n $8 = ((($0)) + 108|0);\n HEAP32[$8>>2] = $7;\n $9 = ($1|0)!=(0);\n $10 = ($7|0)>($1|0);\n $or$cond = $9 & $10;\n if ($or$cond) {\n  $11 = $6;\n  $12 = (($11) + ($1)|0);\n  $13 = ((($0)) + 100|0);\n  HEAP32[$13>>2] = $12;\n } else {\n  $14 = ((($0)) + 100|0);\n  HEAP32[$14>>2] = $4;\n }\n return;\n}\nfunction ___intscan($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0154222 = 0, $$0157 = 0, $$0157$ = 0, $$0159 = 0, $$1155188 = 0, $$1158 = 0, $$1160 = 0, $$1160169 = 0, $$1165 = 0, $$1165167 = 0, $$1165168 = 0, $$166 = 0, $$2156206 = 0, $$2161$be = 0, $$2161$lcssa = 0, $$3162$be = 0, $$3162$lcssa = 0, $$3162211 = 0, $$4163$be = 0, $$4163$lcssa = 0;\n var $$5$be = 0, $$6$be = 0, $$6$lcssa = 0, $$7$be = 0, $$7194 = 0, $$8 = 0, $$9$be = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;\n var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;\n var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;\n var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;\n var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;\n var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;\n var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;\n var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;\n var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;\n var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;\n var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;\n var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;\n var $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond183 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = ($1>>>0)>(36);\n L1: do {\n  if ($5) {\n   $8 = (___errno_location()|0);\n   HEAP32[$8>>2] = 22;\n   $289 = 0;$290 = 0;\n  } else {\n   $6 = ((($0)) + 4|0);\n   $7 = ((($0)) + 100|0);\n   while(1) {\n    $9 = HEAP32[$6>>2]|0;\n    $10 = HEAP32[$7>>2]|0;\n    $11 = ($9>>>0)<($10>>>0);\n    if ($11) {\n     $12 = ((($9)) + 1|0);\n     HEAP32[$6>>2] = $12;\n     $13 = HEAP8[$9>>0]|0;\n     $14 = $13&255;\n     $16 = $14;\n    } else {\n     $15 = (___shgetc($0)|0);\n     $16 = $15;\n    }\n    $17 = (_isspace($16)|0);\n    $18 = ($17|0)==(0);\n    if ($18) {\n     break;\n    }\n   }\n   $19 = ($16|0)==(45);\n   L11: do {\n    switch ($16|0) {\n    case 43: case 45:  {\n     $20 = $19 << 31 >> 31;\n     $21 = HEAP32[$6>>2]|0;\n     $22 = HEAP32[$7>>2]|0;\n     $23 = ($21>>>0)<($22>>>0);\n     if ($23) {\n      $24 = ((($21)) + 1|0);\n      HEAP32[$6>>2] = $24;\n      $25 = HEAP8[$21>>0]|0;\n      $26 = $25&255;\n      $$0157 = $20;$$0159 = $26;\n      break L11;\n     } else {\n      $27 = (___shgetc($0)|0);\n      $$0157 = $20;$$0159 = $27;\n      break L11;\n     }\n     break;\n    }\n    default: {\n     $$0157 = 0;$$0159 = $16;\n    }\n    }\n   } while(0);\n   $28 = ($1|0)==(0);\n   $29 = $1 | 16;\n   $30 = ($29|0)==(16);\n   $31 = ($$0159|0)==(48);\n   $or$cond5 = $30 & $31;\n   do {\n    if ($or$cond5) {\n     $32 = HEAP32[$6>>2]|0;\n     $33 = HEAP32[$7>>2]|0;\n     $34 = ($32>>>0)<($33>>>0);\n     if ($34) {\n      $35 = ((($32)) + 1|0);\n      HEAP32[$6>>2] = $35;\n      $36 = HEAP8[$32>>0]|0;\n      $37 = $36&255;\n      $40 = $37;\n     } else {\n      $38 = (___shgetc($0)|0);\n      $40 = $38;\n     }\n     $39 = $40 | 32;\n     $41 = ($39|0)==(120);\n     if (!($41)) {\n      if ($28) {\n       $$1160169 = $40;$$1165168 = 8;\n       label = 46;\n       break;\n      } else {\n       $$1160 = $40;$$1165 = $1;\n       label = 32;\n       break;\n      }\n     }\n     $42 = HEAP32[$6>>2]|0;\n     $43 = HEAP32[$7>>2]|0;\n     $44 = ($42>>>0)<($43>>>0);\n     if ($44) {\n      $45 = ((($42)) + 1|0);\n      HEAP32[$6>>2] = $45;\n      $46 = HEAP8[$42>>0]|0;\n      $47 = $46&255;\n      $50 = $47;\n     } else {\n      $48 = (___shgetc($0)|0);\n      $50 = $48;\n     }\n     $49 = ((28551) + ($50)|0);\n     $51 = HEAP8[$49>>0]|0;\n     $52 = ($51&255)>(15);\n     if ($52) {\n      $53 = HEAP32[$7>>2]|0;\n      $54 = ($53|0)==(0|0);\n      if (!($54)) {\n       $55 = HEAP32[$6>>2]|0;\n       $56 = ((($55)) + -1|0);\n       HEAP32[$6>>2] = $56;\n      }\n      $57 = ($2|0)==(0);\n      if ($57) {\n       ___shlim($0,0);\n       $289 = 0;$290 = 0;\n       break L1;\n      }\n      if ($54) {\n       $289 = 0;$290 = 0;\n       break L1;\n      }\n      $58 = HEAP32[$6>>2]|0;\n      $59 = ((($58)) + -1|0);\n      HEAP32[$6>>2] = $59;\n      $289 = 0;$290 = 0;\n      break L1;\n     } else {\n      $$1160169 = $50;$$1165168 = 16;\n      label = 46;\n     }\n    } else {\n     $$166 = $28 ? 10 : $1;\n     $60 = ((28551) + ($$0159)|0);\n     $61 = HEAP8[$60>>0]|0;\n     $62 = $61&255;\n     $63 = ($62>>>0)<($$166>>>0);\n     if ($63) {\n      $$1160 = $$0159;$$1165 = $$166;\n      label = 32;\n     } else {\n      $64 = HEAP32[$7>>2]|0;\n      $65 = ($64|0)==(0|0);\n      if (!($65)) {\n       $66 = HEAP32[$6>>2]|0;\n       $67 = ((($66)) + -1|0);\n       HEAP32[$6>>2] = $67;\n      }\n      ___shlim($0,0);\n      $68 = (___errno_location()|0);\n      HEAP32[$68>>2] = 22;\n      $289 = 0;$290 = 0;\n      break L1;\n     }\n    }\n   } while(0);\n   if ((label|0) == 32) {\n    $69 = ($$1165|0)==(10);\n    if ($69) {\n     $70 = (($$1160) + -48)|0;\n     $71 = ($70>>>0)<(10);\n     if ($71) {\n      $$0154222 = 0;$74 = $70;\n      while(1) {\n       $72 = ($$0154222*10)|0;\n       $73 = (($72) + ($74))|0;\n       $75 = HEAP32[$6>>2]|0;\n       $76 = HEAP32[$7>>2]|0;\n       $77 = ($75>>>0)<($76>>>0);\n       if ($77) {\n        $78 = ((($75)) + 1|0);\n        HEAP32[$6>>2] = $78;\n        $79 = HEAP8[$75>>0]|0;\n        $80 = $79&255;\n        $$2161$be = $80;\n       } else {\n        $81 = (___shgetc($0)|0);\n        $$2161$be = $81;\n       }\n       $82 = (($$2161$be) + -48)|0;\n       $83 = ($82>>>0)<(10);\n       $84 = ($73>>>0)<(429496729);\n       $85 = $83 & $84;\n       if ($85) {\n        $$0154222 = $73;$74 = $82;\n       } else {\n        break;\n       }\n      }\n      $$2161$lcssa = $$2161$be;$291 = $73;$292 = 0;\n     } else {\n      $$2161$lcssa = $$1160;$291 = 0;$292 = 0;\n     }\n     $86 = (($$2161$lcssa) + -48)|0;\n     $87 = ($86>>>0)<(10);\n     if ($87) {\n      $$3162211 = $$2161$lcssa;$88 = $291;$89 = $292;$92 = $86;\n      while(1) {\n       $90 = (___muldi3(($88|0),($89|0),10,0)|0);\n       $91 = tempRet0;\n       $93 = ($92|0)<(0);\n       $94 = $93 << 31 >> 31;\n       $95 = $92 ^ -1;\n       $96 = $94 ^ -1;\n       $97 = ($91>>>0)>($96>>>0);\n       $98 = ($90>>>0)>($95>>>0);\n       $99 = ($91|0)==($96|0);\n       $100 = $99 & $98;\n       $101 = $97 | $100;\n       if ($101) {\n        $$3162$lcssa = $$3162211;$$lcssa = $92;$293 = $88;$294 = $89;\n        break;\n       }\n       $102 = (_i64Add(($90|0),($91|0),($92|0),($94|0))|0);\n       $103 = tempRet0;\n       $104 = HEAP32[$6>>2]|0;\n       $105 = HEAP32[$7>>2]|0;\n       $106 = ($104>>>0)<($105>>>0);\n       if ($106) {\n        $107 = ((($104)) + 1|0);\n        HEAP32[$6>>2] = $107;\n        $108 = HEAP8[$104>>0]|0;\n        $109 = $108&255;\n        $$3162$be = $109;\n       } else {\n        $110 = (___shgetc($0)|0);\n        $$3162$be = $110;\n       }\n       $111 = (($$3162$be) + -48)|0;\n       $112 = ($111>>>0)<(10);\n       $113 = ($103>>>0)<(429496729);\n       $114 = ($102>>>0)<(2576980378);\n       $115 = ($103|0)==(429496729);\n       $116 = $115 & $114;\n       $117 = $113 | $116;\n       $or$cond7 = $112 & $117;\n       if ($or$cond7) {\n        $$3162211 = $$3162$be;$88 = $102;$89 = $103;$92 = $111;\n       } else {\n        $$3162$lcssa = $$3162$be;$$lcssa = $111;$293 = $102;$294 = $103;\n        break;\n       }\n      }\n      $118 = ($$lcssa>>>0)>(9);\n      if ($118) {\n       $$1158 = $$0157;$262 = $294;$264 = $293;\n      } else {\n       $$1165167 = 10;$$8 = $$3162$lcssa;$295 = $293;$296 = $294;\n       label = 72;\n      }\n     } else {\n      $$1158 = $$0157;$262 = $292;$264 = $291;\n     }\n    } else {\n     $$1160169 = $$1160;$$1165168 = $$1165;\n     label = 46;\n    }\n   }\n   L63: do {\n    if ((label|0) == 46) {\n     $119 = (($$1165168) + -1)|0;\n     $120 = $119 & $$1165168;\n     $121 = ($120|0)==(0);\n     if ($121) {\n      $126 = ($$1165168*23)|0;\n      $127 = $126 >>> 5;\n      $128 = $127 & 7;\n      $129 = (28807 + ($128)|0);\n      $130 = HEAP8[$129>>0]|0;\n      $131 = $130 << 24 >> 24;\n      $132 = ((28551) + ($$1160169)|0);\n      $133 = HEAP8[$132>>0]|0;\n      $134 = $133&255;\n      $135 = ($134>>>0)<($$1165168>>>0);\n      if ($135) {\n       $$1155188 = 0;$138 = $134;\n       while(1) {\n        $136 = $$1155188 << $131;\n        $137 = $138 | $136;\n        $139 = HEAP32[$6>>2]|0;\n        $140 = HEAP32[$7>>2]|0;\n        $141 = ($139>>>0)<($140>>>0);\n        if ($141) {\n         $142 = ((($139)) + 1|0);\n         HEAP32[$6>>2] = $142;\n         $143 = HEAP8[$139>>0]|0;\n         $144 = $143&255;\n         $$4163$be = $144;\n        } else {\n         $145 = (___shgetc($0)|0);\n         $$4163$be = $145;\n        }\n        $146 = ((28551) + ($$4163$be)|0);\n        $147 = HEAP8[$146>>0]|0;\n        $148 = $147&255;\n        $149 = ($148>>>0)<($$1165168>>>0);\n        $150 = ($137>>>0)<(134217728);\n        $151 = $150 & $149;\n        if ($151) {\n         $$1155188 = $137;$138 = $148;\n        } else {\n         break;\n        }\n       }\n       $$4163$lcssa = $$4163$be;$155 = $147;$157 = 0;$159 = $137;\n      } else {\n       $$4163$lcssa = $$1160169;$155 = $133;$157 = 0;$159 = 0;\n      }\n      $152 = (_bitshift64Lshr(-1,-1,($131|0))|0);\n      $153 = tempRet0;\n      $154 = $155&255;\n      $156 = ($154>>>0)>=($$1165168>>>0);\n      $158 = ($157>>>0)>($153>>>0);\n      $160 = ($159>>>0)>($152>>>0);\n      $161 = ($157|0)==($153|0);\n      $162 = $161 & $160;\n      $163 = $158 | $162;\n      $or$cond183 = $156 | $163;\n      if ($or$cond183) {\n       $$1165167 = $$1165168;$$8 = $$4163$lcssa;$295 = $159;$296 = $157;\n       label = 72;\n       break;\n      } else {\n       $164 = $159;$165 = $157;$169 = $155;\n      }\n      while(1) {\n       $166 = (_bitshift64Shl(($164|0),($165|0),($131|0))|0);\n       $167 = tempRet0;\n       $168 = $169&255;\n       $170 = $168 | $166;\n       $171 = HEAP32[$6>>2]|0;\n       $172 = HEAP32[$7>>2]|0;\n       $173 = ($171>>>0)<($172>>>0);\n       if ($173) {\n        $174 = ((($171)) + 1|0);\n        HEAP32[$6>>2] = $174;\n        $175 = HEAP8[$171>>0]|0;\n        $176 = $175&255;\n        $$5$be = $176;\n       } else {\n        $177 = (___shgetc($0)|0);\n        $$5$be = $177;\n       }\n       $178 = ((28551) + ($$5$be)|0);\n       $179 = HEAP8[$178>>0]|0;\n       $180 = $179&255;\n       $181 = ($180>>>0)>=($$1165168>>>0);\n       $182 = ($167>>>0)>($153>>>0);\n       $183 = ($170>>>0)>($152>>>0);\n       $184 = ($167|0)==($153|0);\n       $185 = $184 & $183;\n       $186 = $182 | $185;\n       $or$cond = $181 | $186;\n       if ($or$cond) {\n        $$1165167 = $$1165168;$$8 = $$5$be;$295 = $170;$296 = $167;\n        label = 72;\n        break L63;\n       } else {\n        $164 = $170;$165 = $167;$169 = $179;\n       }\n      }\n     }\n     $122 = ((28551) + ($$1160169)|0);\n     $123 = HEAP8[$122>>0]|0;\n     $124 = $123&255;\n     $125 = ($124>>>0)<($$1165168>>>0);\n     if ($125) {\n      $$2156206 = 0;$189 = $124;\n      while(1) {\n       $187 = Math_imul($$2156206, $$1165168)|0;\n       $188 = (($189) + ($187))|0;\n       $190 = HEAP32[$6>>2]|0;\n       $191 = HEAP32[$7>>2]|0;\n       $192 = ($190>>>0)<($191>>>0);\n       if ($192) {\n        $193 = ((($190)) + 1|0);\n        HEAP32[$6>>2] = $193;\n        $194 = HEAP8[$190>>0]|0;\n        $195 = $194&255;\n        $$6$be = $195;\n       } else {\n        $196 = (___shgetc($0)|0);\n        $$6$be = $196;\n       }\n       $197 = ((28551) + ($$6$be)|0);\n       $198 = HEAP8[$197>>0]|0;\n       $199 = $198&255;\n       $200 = ($199>>>0)<($$1165168>>>0);\n       $201 = ($188>>>0)<(119304647);\n       $202 = $201 & $200;\n       if ($202) {\n        $$2156206 = $188;$189 = $199;\n       } else {\n        break;\n       }\n      }\n      $$6$lcssa = $$6$be;$204 = $198;$297 = $188;$298 = 0;\n     } else {\n      $$6$lcssa = $$1160169;$204 = $123;$297 = 0;$298 = 0;\n     }\n     $203 = $204&255;\n     $205 = ($203>>>0)<($$1165168>>>0);\n     if ($205) {\n      $206 = (___udivdi3(-1,-1,($$1165168|0),0)|0);\n      $207 = tempRet0;\n      $$7194 = $$6$lcssa;$208 = $298;$210 = $297;$218 = $204;\n      while(1) {\n       $209 = ($208>>>0)>($207>>>0);\n       $211 = ($210>>>0)>($206>>>0);\n       $212 = ($208|0)==($207|0);\n       $213 = $212 & $211;\n       $214 = $209 | $213;\n       if ($214) {\n        $$1165167 = $$1165168;$$8 = $$7194;$295 = $210;$296 = $208;\n        label = 72;\n        break L63;\n       }\n       $215 = (___muldi3(($210|0),($208|0),($$1165168|0),0)|0);\n       $216 = tempRet0;\n       $217 = $218&255;\n       $219 = $217 ^ -1;\n       $220 = ($216>>>0)>(4294967295);\n       $221 = ($215>>>0)>($219>>>0);\n       $222 = ($216|0)==(-1);\n       $223 = $222 & $221;\n       $224 = $220 | $223;\n       if ($224) {\n        $$1165167 = $$1165168;$$8 = $$7194;$295 = $210;$296 = $208;\n        label = 72;\n        break L63;\n       }\n       $225 = (_i64Add(($217|0),0,($215|0),($216|0))|0);\n       $226 = tempRet0;\n       $227 = HEAP32[$6>>2]|0;\n       $228 = HEAP32[$7>>2]|0;\n       $229 = ($227>>>0)<($228>>>0);\n       if ($229) {\n        $230 = ((($227)) + 1|0);\n        HEAP32[$6>>2] = $230;\n        $231 = HEAP8[$227>>0]|0;\n        $232 = $231&255;\n        $$7$be = $232;\n       } else {\n        $233 = (___shgetc($0)|0);\n        $$7$be = $233;\n       }\n       $234 = ((28551) + ($$7$be)|0);\n       $235 = HEAP8[$234>>0]|0;\n       $236 = $235&255;\n       $237 = ($236>>>0)<($$1165168>>>0);\n       if ($237) {\n        $$7194 = $$7$be;$208 = $226;$210 = $225;$218 = $235;\n       } else {\n        $$1165167 = $$1165168;$$8 = $$7$be;$295 = $225;$296 = $226;\n        label = 72;\n        break;\n       }\n      }\n     } else {\n      $$1165167 = $$1165168;$$8 = $$6$lcssa;$295 = $297;$296 = $298;\n      label = 72;\n     }\n    }\n   } while(0);\n   if ((label|0) == 72) {\n    $238 = ((28551) + ($$8)|0);\n    $239 = HEAP8[$238>>0]|0;\n    $240 = $239&255;\n    $241 = ($240>>>0)<($$1165167>>>0);\n    if ($241) {\n     while(1) {\n      $242 = HEAP32[$6>>2]|0;\n      $243 = HEAP32[$7>>2]|0;\n      $244 = ($242>>>0)<($243>>>0);\n      if ($244) {\n       $245 = ((($242)) + 1|0);\n       HEAP32[$6>>2] = $245;\n       $246 = HEAP8[$242>>0]|0;\n       $247 = $246&255;\n       $$9$be = $247;\n      } else {\n       $248 = (___shgetc($0)|0);\n       $$9$be = $248;\n      }\n      $249 = ((28551) + ($$9$be)|0);\n      $250 = HEAP8[$249>>0]|0;\n      $251 = $250&255;\n      $252 = ($251>>>0)<($$1165167>>>0);\n      if (!($252)) {\n       break;\n      }\n     }\n     $253 = (___errno_location()|0);\n     HEAP32[$253>>2] = 34;\n     $254 = $3 & 1;\n     $255 = ($254|0)==(0);\n     $256 = (0)==(0);\n     $257 = $255 & $256;\n     $$0157$ = $257 ? $$0157 : 0;\n     $$1158 = $$0157$;$262 = $4;$264 = $3;\n    } else {\n     $$1158 = $$0157;$262 = $296;$264 = $295;\n    }\n   }\n   $258 = HEAP32[$7>>2]|0;\n   $259 = ($258|0)==(0|0);\n   if (!($259)) {\n    $260 = HEAP32[$6>>2]|0;\n    $261 = ((($260)) + -1|0);\n    HEAP32[$6>>2] = $261;\n   }\n   $263 = ($262>>>0)<($4>>>0);\n   $265 = ($264>>>0)<($3>>>0);\n   $266 = ($262|0)==($4|0);\n   $267 = $266 & $265;\n   $268 = $263 | $267;\n   if (!($268)) {\n    $269 = $3 & 1;\n    $270 = ($269|0)!=(0);\n    $271 = (0)!=(0);\n    $272 = $270 | $271;\n    $273 = ($$1158|0)!=(0);\n    $or$cond12 = $272 | $273;\n    if (!($or$cond12)) {\n     $274 = (___errno_location()|0);\n     HEAP32[$274>>2] = 34;\n     $275 = (_i64Add(($3|0),($4|0),-1,-1)|0);\n     $276 = tempRet0;\n     $289 = $276;$290 = $275;\n     break;\n    }\n    $277 = ($262>>>0)>($4>>>0);\n    $278 = ($264>>>0)>($3>>>0);\n    $279 = ($262|0)==($4|0);\n    $280 = $279 & $278;\n    $281 = $277 | $280;\n    if ($281) {\n     $282 = (___errno_location()|0);\n     HEAP32[$282>>2] = 34;\n     $289 = $4;$290 = $3;\n     break;\n    }\n   }\n   $283 = ($$1158|0)<(0);\n   $284 = $283 << 31 >> 31;\n   $285 = $264 ^ $$1158;\n   $286 = $262 ^ $284;\n   $287 = (_i64Subtract(($285|0),($286|0),($$1158|0),($284|0))|0);\n   $288 = tempRet0;\n   $289 = $288;$290 = $287;\n  }\n } while(0);\n tempRet0 = ($289);\n return ($290|0);\n}\nfunction ___shgetc($0) {\n $0 = $0|0;\n var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 104|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)==(0);\n if ($3) {\n  label = 3;\n } else {\n  $4 = ((($0)) + 108|0);\n  $5 = HEAP32[$4>>2]|0;\n  $6 = ($5|0)<($2|0);\n  if ($6) {\n   label = 3;\n  } else {\n   label = 4;\n  }\n }\n if ((label|0) == 3) {\n  $7 = (___uflow($0)|0);\n  $8 = ($7|0)<(0);\n  if ($8) {\n   label = 4;\n  } else {\n   $10 = HEAP32[$1>>2]|0;\n   $11 = ($10|0)==(0);\n   $$phi$trans$insert = ((($0)) + 8|0);\n   $$pre = HEAP32[$$phi$trans$insert>>2]|0;\n   if ($11) {\n    $12 = $$pre;\n    $42 = $12;\n    label = 9;\n   } else {\n    $13 = ((($0)) + 4|0);\n    $14 = HEAP32[$13>>2]|0;\n    $15 = $14;\n    $16 = (($$pre) - ($15))|0;\n    $17 = ((($0)) + 108|0);\n    $18 = HEAP32[$17>>2]|0;\n    $19 = (($10) - ($18))|0;\n    $20 = ($16|0)<($19|0);\n    $21 = $$pre;\n    if ($20) {\n     $42 = $21;\n     label = 9;\n    } else {\n     $22 = (($19) + -1)|0;\n     $23 = (($14) + ($22)|0);\n     $24 = ((($0)) + 100|0);\n     HEAP32[$24>>2] = $23;\n     $26 = $21;\n    }\n   }\n   if ((label|0) == 9) {\n    $25 = ((($0)) + 100|0);\n    HEAP32[$25>>2] = $$pre;\n    $26 = $42;\n   }\n   $27 = ($26|0)==(0|0);\n   $$phi$trans$insert28 = ((($0)) + 4|0);\n   if ($27) {\n    $$pre29 = HEAP32[$$phi$trans$insert28>>2]|0;\n    $37 = $$pre29;\n   } else {\n    $28 = HEAP32[$$phi$trans$insert28>>2]|0;\n    $29 = $26;\n    $30 = ((($0)) + 108|0);\n    $31 = HEAP32[$30>>2]|0;\n    $32 = (($29) + 1)|0;\n    $33 = (($32) - ($28))|0;\n    $34 = (($33) + ($31))|0;\n    HEAP32[$30>>2] = $34;\n    $35 = $28;\n    $37 = $35;\n   }\n   $36 = ((($37)) + -1|0);\n   $38 = HEAP8[$36>>0]|0;\n   $39 = $38&255;\n   $40 = ($39|0)==($7|0);\n   if ($40) {\n    $$0 = $7;\n   } else {\n    $41 = $7&255;\n    HEAP8[$36>>0] = $41;\n    $$0 = $7;\n   }\n  }\n }\n if ((label|0) == 4) {\n  $9 = ((($0)) + 100|0);\n  HEAP32[$9>>2] = 0;\n  $$0 = -1;\n }\n return ($$0|0);\n}\nfunction _isspace($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(32);\n $2 = (($0) + -9)|0;\n $3 = ($2>>>0)<(5);\n $4 = $1 | $3;\n $5 = $4&1;\n return ($5|0);\n}\nfunction ___uflow($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = ((($0)) + 8|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)==(0|0);\n if ($4) {\n  $5 = (___toread($0)|0);\n  $6 = ($5|0)==(0);\n  if ($6) {\n   label = 3;\n  } else {\n   $$0 = -1;\n  }\n } else {\n  label = 3;\n }\n if ((label|0) == 3) {\n  $7 = ((($0)) + 32|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = (FUNCTION_TABLE_iiii[$8 & 127]($0,$1,1)|0);\n  $10 = ($9|0)==(1);\n  if ($10) {\n   $11 = HEAP8[$1>>0]|0;\n   $12 = $11&255;\n   $$0 = $12;\n  } else {\n   $$0 = -1;\n  }\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction ___toread($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 74|0);\n $2 = HEAP8[$1>>0]|0;\n $3 = $2 << 24 >> 24;\n $4 = (($3) + 255)|0;\n $5 = $4 | $3;\n $6 = $5&255;\n HEAP8[$1>>0] = $6;\n $7 = ((($0)) + 20|0);\n $8 = HEAP32[$7>>2]|0;\n $9 = ((($0)) + 44|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = ($8>>>0)>($10>>>0);\n if ($11) {\n  $12 = ((($0)) + 36|0);\n  $13 = HEAP32[$12>>2]|0;\n  (FUNCTION_TABLE_iiii[$13 & 127]($0,0,0)|0);\n }\n $14 = ((($0)) + 16|0);\n HEAP32[$14>>2] = 0;\n $15 = ((($0)) + 28|0);\n HEAP32[$15>>2] = 0;\n HEAP32[$7>>2] = 0;\n $16 = HEAP32[$0>>2]|0;\n $17 = $16 & 20;\n $18 = ($17|0)==(0);\n if ($18) {\n  $22 = HEAP32[$9>>2]|0;\n  $23 = ((($0)) + 8|0);\n  HEAP32[$23>>2] = $22;\n  $24 = ((($0)) + 4|0);\n  HEAP32[$24>>2] = $22;\n  $$0 = 0;\n } else {\n  $19 = $16 & 4;\n  $20 = ($19|0)==(0);\n  if ($20) {\n   $$0 = -1;\n  } else {\n   $21 = $16 | 32;\n   HEAP32[$0>>2] = $21;\n   $$0 = -1;\n  }\n }\n return ($$0|0);\n}\nfunction _vsnprintf($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);\n $4 = sp + 112|0;\n $5 = sp;\n dest=$5; src=10540; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));\n $6 = (($1) + -1)|0;\n $7 = ($6>>>0)>(2147483646);\n if ($7) {\n  $8 = ($1|0)==(0);\n  if ($8) {\n   $$014 = $4;$$015 = 1;\n   label = 4;\n  } else {\n   $9 = (___errno_location()|0);\n   HEAP32[$9>>2] = 75;\n   $$0 = -1;\n  }\n } else {\n  $$014 = $0;$$015 = $1;\n  label = 4;\n }\n if ((label|0) == 4) {\n  $10 = $$014;\n  $11 = (-2 - ($10))|0;\n  $12 = ($$015>>>0)>($11>>>0);\n  $$$015 = $12 ? $11 : $$015;\n  $13 = ((($5)) + 48|0);\n  HEAP32[$13>>2] = $$$015;\n  $14 = ((($5)) + 20|0);\n  HEAP32[$14>>2] = $$014;\n  $15 = ((($5)) + 44|0);\n  HEAP32[$15>>2] = $$014;\n  $16 = (($$014) + ($$$015)|0);\n  $17 = ((($5)) + 16|0);\n  HEAP32[$17>>2] = $16;\n  $18 = ((($5)) + 28|0);\n  HEAP32[$18>>2] = $16;\n  $19 = (_vfprintf($5,$2,$3)|0);\n  $20 = ($$$015|0)==(0);\n  if ($20) {\n   $$0 = $19;\n  } else {\n   $21 = HEAP32[$14>>2]|0;\n   $22 = HEAP32[$17>>2]|0;\n   $23 = ($21|0)==($22|0);\n   $24 = $23 << 31 >> 31;\n   $25 = (($21) + ($24)|0);\n   HEAP8[$25>>0] = 0;\n   $$0 = $19;\n  }\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction _vfprintf($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);\n $3 = sp + 120|0;\n $4 = sp + 80|0;\n $5 = sp;\n $6 = sp + 136|0;\n dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $vacopy_currentptr = HEAP32[$2>>2]|0;\n HEAP32[$3>>2] = $vacopy_currentptr;\n $7 = (_printf_core(0,$1,$3,$5,$4)|0);\n $8 = ($7|0)<(0);\n if ($8) {\n  $$0 = -1;\n } else {\n  $9 = ((($0)) + 76|0);\n  $10 = HEAP32[$9>>2]|0;\n  $11 = ($10|0)>(-1);\n  if ($11) {\n   $12 = (___lockfile($0)|0);\n   $39 = $12;\n  } else {\n   $39 = 0;\n  }\n  $13 = HEAP32[$0>>2]|0;\n  $14 = $13 & 32;\n  $15 = ((($0)) + 74|0);\n  $16 = HEAP8[$15>>0]|0;\n  $17 = ($16<<24>>24)<(1);\n  if ($17) {\n   $18 = $13 & -33;\n   HEAP32[$0>>2] = $18;\n  }\n  $19 = ((($0)) + 48|0);\n  $20 = HEAP32[$19>>2]|0;\n  $21 = ($20|0)==(0);\n  if ($21) {\n   $23 = ((($0)) + 44|0);\n   $24 = HEAP32[$23>>2]|0;\n   HEAP32[$23>>2] = $6;\n   $25 = ((($0)) + 28|0);\n   HEAP32[$25>>2] = $6;\n   $26 = ((($0)) + 20|0);\n   HEAP32[$26>>2] = $6;\n   HEAP32[$19>>2] = 80;\n   $27 = ((($6)) + 80|0);\n   $28 = ((($0)) + 16|0);\n   HEAP32[$28>>2] = $27;\n   $29 = (_printf_core($0,$1,$3,$5,$4)|0);\n   $30 = ($24|0)==(0|0);\n   if ($30) {\n    $$1 = $29;\n   } else {\n    $31 = ((($0)) + 36|0);\n    $32 = HEAP32[$31>>2]|0;\n    (FUNCTION_TABLE_iiii[$32 & 127]($0,0,0)|0);\n    $33 = HEAP32[$26>>2]|0;\n    $34 = ($33|0)==(0|0);\n    $$ = $34 ? -1 : $29;\n    HEAP32[$23>>2] = $24;\n    HEAP32[$19>>2] = 0;\n    HEAP32[$28>>2] = 0;\n    HEAP32[$25>>2] = 0;\n    HEAP32[$26>>2] = 0;\n    $$1 = $$;\n   }\n  } else {\n   $22 = (_printf_core($0,$1,$3,$5,$4)|0);\n   $$1 = $22;\n  }\n  $35 = HEAP32[$0>>2]|0;\n  $36 = $35 & 32;\n  $37 = ($36|0)==(0);\n  $$1$ = $37 ? $$1 : -1;\n  $38 = $35 | $14;\n  HEAP32[$0>>2] = $38;\n  $40 = ($39|0)==(0);\n  if (!($40)) {\n   ___unlockfile($0);\n  }\n  $$0 = $$1$;\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction _printf_core($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$ = 0, $$$0259 = 0, $$$0262 = 0, $$$0269 = 0, $$$3484$i = 0, $$$3484705$i = 0, $$$3484706$i = 0, $$$3501$i = 0, $$$4266 = 0, $$$4502$i = 0, $$$5 = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i300 = 0, $$0228 = 0, $$0229396 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0;\n var $$0240$lcssa = 0, $$0240$lcssa460 = 0, $$0240395 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249383 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$ = 0, $$0259 = 0, $$0262342 = 0, $$0262390 = 0, $$0269 = 0, $$0269$phi = 0, $$0321 = 0, $$0463$lcssa$i = 0, $$0463594$i = 0, $$0464603$i = 0;\n var $$0466$i = 0.0, $$0470$i = 0, $$0471$i = 0.0, $$0479$i = 0, $$0487652$i = 0, $$0488$i = 0, $$0488663$i = 0, $$0488665$i = 0, $$0496$$9$i = 0, $$0497664$i = 0, $$0498$i = 0, $$05$lcssa$i = 0, $$0509592$i = 0.0, $$0510$i = 0, $$0511$i = 0, $$0514647$i = 0, $$0520$i = 0, $$0522$$i = 0, $$0522$i = 0, $$0524$i = 0;\n var $$0526$i = 0, $$0528$i = 0, $$0528639$i = 0, $$0528641$i = 0, $$0531646$i = 0, $$056$i = 0, $$06$i = 0, $$06$i290 = 0, $$06$i298 = 0, $$1 = 0, $$1230407 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241406 = 0, $$1244394 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0;\n var $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$1322 = 0, $$1465$i = 0, $$1467$i = 0.0, $$1469$i = 0.0, $$1472$i = 0.0, $$1480$i = 0, $$1482$lcssa$i = 0, $$1482671$i = 0, $$1489651$i = 0, $$1499$lcssa$i = 0, $$1499670$i = 0, $$1508593$i = 0, $$1512$lcssa$i = 0, $$1512617$i = 0, $$1515$i = 0, $$1521$i = 0, $$1525$i = 0;\n var $$1527$i = 0, $$1529624$i = 0, $$1532$lcssa$i = 0, $$1532640$i = 0, $$1607$i = 0, $$2 = 0, $$2$i = 0, $$2234 = 0, $$2239 = 0, $$2242381 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2261 = 0, $$2271 = 0, $$2323$lcssa = 0, $$2323382 = 0, $$2473$i = 0.0, $$2476$$545$i = 0;\n var $$2476$$547$i = 0, $$2476$i = 0, $$2483$ph$i = 0, $$2490$lcssa$i = 0, $$2490632$i = 0, $$2500$i = 0, $$2513$i = 0, $$2516628$i = 0, $$2530$i = 0, $$2533627$i = 0, $$3$i = 0.0, $$3257 = 0, $$3265 = 0, $$3272 = 0, $$331 = 0, $$332 = 0, $$333 = 0, $$3379 = 0, $$3477$i = 0, $$3484$lcssa$i = 0;\n var $$3484658$i = 0, $$3501$lcssa$i = 0, $$3501657$i = 0, $$3534623$i = 0, $$4$i = 0.0, $$4258458 = 0, $$4266 = 0, $$4325 = 0, $$4478$lcssa$i = 0, $$4478600$i = 0, $$4492$i = 0, $$4502$i = 0, $$4518$i = 0, $$5 = 0, $$5$lcssa$i = 0, $$537$i = 0, $$538$$i = 0, $$538$i = 0, $$541$i = 0.0, $$544$i = 0;\n var $$546$i = 0, $$5486$lcssa$i = 0, $$5486633$i = 0, $$5493606$i = 0, $$5519$ph$i = 0, $$553$i = 0, $$554$i = 0, $$557$i = 0.0, $$5611$i = 0, $$6 = 0, $$6$i = 0, $$6268 = 0, $$6494599$i = 0, $$7 = 0, $$7495610$i = 0, $$7505$$i = 0, $$7505$i = 0, $$7505$ph$i = 0, $$8$i = 0, $$9$ph$i = 0;\n var $$lcssa683$i = 0, $$neg$i = 0, $$neg572$i = 0, $$pn$i = 0, $$pr = 0, $$pr$i = 0, $$pr571$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi704$iZ2D = 0, $$pre452 = 0, $$pre453 = 0, $$pre454 = 0, $$pre697$i = 0, $$pre700$i = 0, $$pre703$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;\n var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;\n var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;\n var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;\n var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;\n var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;\n var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;\n var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;\n var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;\n var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;\n var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;\n var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;\n var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;\n var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;\n var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;\n var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0.0, $372 = 0, $373 = 0, $374 = 0, $375 = 0.0;\n var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;\n var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0.0, $404 = 0.0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;\n var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0.0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0.0, $424 = 0.0, $425 = 0.0, $426 = 0.0, $427 = 0.0, $428 = 0.0, $429 = 0, $43 = 0;\n var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;\n var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;\n var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;\n var $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;\n var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;\n var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;\n var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;\n var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;\n var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;\n var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0.0, $606 = 0.0, $607 = 0, $608 = 0.0, $609 = 0, $61 = 0;\n var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;\n var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;\n var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;\n var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;\n var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;\n var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;\n var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;\n var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;\n var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0;\n var $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0;\n var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;\n var $809 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $exitcond$i = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i292 = 0, $isdigit275 = 0;\n var $isdigit277 = 0, $isdigit5$i = 0, $isdigit5$i288 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i291 = 0, $isdigittmp274 = 0, $isdigittmp276 = 0, $isdigittmp4$i = 0, $isdigittmp4$i287 = 0, $isdigittmp7$i = 0, $isdigittmp7$i289 = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond280 = 0, $or$cond282 = 0, $or$cond285 = 0;\n var $or$cond3$not$i = 0, $or$cond412 = 0, $or$cond540$i = 0, $or$cond543$i = 0, $or$cond552$i = 0, $or$cond6$i = 0, $scevgep694$i = 0, $scevgep694695$i = 0, $storemerge = 0, $storemerge273345 = 0, $storemerge273389 = 0, $storemerge278 = 0, $sum = 0, $trunc = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);\n $5 = sp + 24|0;\n $6 = sp + 16|0;\n $7 = sp + 588|0;\n $8 = sp + 576|0;\n $9 = sp;\n $10 = sp + 536|0;\n $11 = sp + 8|0;\n $12 = sp + 528|0;\n $13 = ($0|0)!=(0|0);\n $14 = ((($10)) + 40|0);\n $15 = $14;\n $16 = ((($10)) + 39|0);\n $17 = ((($11)) + 4|0);\n $18 = $7;\n $19 = (0 - ($18))|0;\n $20 = ((($8)) + 12|0);\n $21 = ((($8)) + 11|0);\n $22 = $20;\n $23 = (($22) - ($18))|0;\n $24 = (-2 - ($18))|0;\n $25 = (($22) + 2)|0;\n $26 = ((($5)) + 288|0);\n $27 = ((($7)) + 9|0);\n $28 = $27;\n $29 = ((($7)) + 8|0);\n $$0243 = 0;$$0247 = 0;$$0269 = 0;$$0321 = $1;\n L1: while(1) {\n  $30 = ($$0247|0)>(-1);\n  do {\n   if ($30) {\n    $31 = (2147483647 - ($$0247))|0;\n    $32 = ($$0243|0)>($31|0);\n    if ($32) {\n     $33 = (___errno_location()|0);\n     HEAP32[$33>>2] = 75;\n     $$1248 = -1;\n     break;\n    } else {\n     $34 = (($$0243) + ($$0247))|0;\n     $$1248 = $34;\n     break;\n    }\n   } else {\n    $$1248 = $$0247;\n   }\n  } while(0);\n  $35 = HEAP8[$$0321>>0]|0;\n  $36 = ($35<<24>>24)==(0);\n  if ($36) {\n   label = 243;\n   break;\n  } else {\n   $$1322 = $$0321;$37 = $35;\n  }\n  L9: while(1) {\n   switch ($37<<24>>24) {\n   case 37:  {\n    $$0249383 = $$1322;$$2323382 = $$1322;\n    label = 9;\n    break L9;\n    break;\n   }\n   case 0:  {\n    $$0249$lcssa = $$1322;$$2323$lcssa = $$1322;\n    break L9;\n    break;\n   }\n   default: {\n   }\n   }\n   $38 = ((($$1322)) + 1|0);\n   $$pre = HEAP8[$38>>0]|0;\n   $$1322 = $38;$37 = $$pre;\n  }\n  L12: do {\n   if ((label|0) == 9) {\n    while(1) {\n     label = 0;\n     $39 = ((($$2323382)) + 1|0);\n     $40 = HEAP8[$39>>0]|0;\n     $41 = ($40<<24>>24)==(37);\n     if (!($41)) {\n      $$0249$lcssa = $$0249383;$$2323$lcssa = $$2323382;\n      break L12;\n     }\n     $42 = ((($$0249383)) + 1|0);\n     $43 = ((($$2323382)) + 2|0);\n     $44 = HEAP8[$43>>0]|0;\n     $45 = ($44<<24>>24)==(37);\n     if ($45) {\n      $$0249383 = $42;$$2323382 = $43;\n      label = 9;\n     } else {\n      $$0249$lcssa = $42;$$2323$lcssa = $43;\n      break;\n     }\n    }\n   }\n  } while(0);\n  $46 = $$0249$lcssa;\n  $47 = $$0321;\n  $48 = (($46) - ($47))|0;\n  if ($13) {\n   $49 = HEAP32[$0>>2]|0;\n   $50 = $49 & 32;\n   $51 = ($50|0)==(0);\n   if ($51) {\n    (___fwritex($$0321,$48,$0)|0);\n   }\n  }\n  $52 = ($48|0)==(0);\n  if (!($52)) {\n   $$0269$phi = $$0269;$$0243 = $48;$$0247 = $$1248;$$0321 = $$2323$lcssa;$$0269 = $$0269$phi;\n   continue;\n  }\n  $53 = ((($$2323$lcssa)) + 1|0);\n  $54 = HEAP8[$53>>0]|0;\n  $55 = $54 << 24 >> 24;\n  $isdigittmp = (($55) + -48)|0;\n  $isdigit = ($isdigittmp>>>0)<(10);\n  if ($isdigit) {\n   $56 = ((($$2323$lcssa)) + 2|0);\n   $57 = HEAP8[$56>>0]|0;\n   $58 = ($57<<24>>24)==(36);\n   $59 = ((($$2323$lcssa)) + 3|0);\n   $$331 = $58 ? $59 : $53;\n   $$$0269 = $58 ? 1 : $$0269;\n   $isdigittmp$ = $58 ? $isdigittmp : -1;\n   $$pre452 = HEAP8[$$331>>0]|0;\n   $$0253 = $isdigittmp$;$$1270 = $$$0269;$61 = $$pre452;$storemerge = $$331;\n  } else {\n   $$0253 = -1;$$1270 = $$0269;$61 = $54;$storemerge = $53;\n  }\n  $60 = $61 << 24 >> 24;\n  $62 = (($60) + -32)|0;\n  $63 = ($62>>>0)<(32);\n  L25: do {\n   if ($63) {\n    $$0262390 = 0;$65 = $62;$69 = $61;$storemerge273389 = $storemerge;\n    while(1) {\n     $64 = 1 << $65;\n     $66 = $64 & 75913;\n     $67 = ($66|0)==(0);\n     if ($67) {\n      $$0262342 = $$0262390;$78 = $69;$storemerge273345 = $storemerge273389;\n      break L25;\n     }\n     $68 = $69 << 24 >> 24;\n     $70 = (($68) + -32)|0;\n     $71 = 1 << $70;\n     $72 = $71 | $$0262390;\n     $73 = ((($storemerge273389)) + 1|0);\n     $74 = HEAP8[$73>>0]|0;\n     $75 = $74 << 24 >> 24;\n     $76 = (($75) + -32)|0;\n     $77 = ($76>>>0)<(32);\n     if ($77) {\n      $$0262390 = $72;$65 = $76;$69 = $74;$storemerge273389 = $73;\n     } else {\n      $$0262342 = $72;$78 = $74;$storemerge273345 = $73;\n      break;\n     }\n    }\n   } else {\n    $$0262342 = 0;$78 = $61;$storemerge273345 = $storemerge;\n   }\n  } while(0);\n  $79 = ($78<<24>>24)==(42);\n  do {\n   if ($79) {\n    $80 = ((($storemerge273345)) + 1|0);\n    $81 = HEAP8[$80>>0]|0;\n    $82 = $81 << 24 >> 24;\n    $isdigittmp276 = (($82) + -48)|0;\n    $isdigit277 = ($isdigittmp276>>>0)<(10);\n    if ($isdigit277) {\n     $83 = ((($storemerge273345)) + 2|0);\n     $84 = HEAP8[$83>>0]|0;\n     $85 = ($84<<24>>24)==(36);\n     if ($85) {\n      $86 = (($4) + ($isdigittmp276<<2)|0);\n      HEAP32[$86>>2] = 10;\n      $87 = HEAP8[$80>>0]|0;\n      $88 = $87 << 24 >> 24;\n      $89 = (($88) + -48)|0;\n      $90 = (($3) + ($89<<3)|0);\n      $91 = $90;\n      $92 = $91;\n      $93 = HEAP32[$92>>2]|0;\n      $94 = (($91) + 4)|0;\n      $95 = $94;\n      $96 = HEAP32[$95>>2]|0;\n      $97 = ((($storemerge273345)) + 3|0);\n      $$0259 = $93;$$2271 = 1;$storemerge278 = $97;\n     } else {\n      label = 24;\n     }\n    } else {\n     label = 24;\n    }\n    if ((label|0) == 24) {\n     label = 0;\n     $98 = ($$1270|0)==(0);\n     if (!($98)) {\n      $$0 = -1;\n      break L1;\n     }\n     if (!($13)) {\n      $$1260 = 0;$$1263 = $$0262342;$$3272 = 0;$$4325 = $80;$$pr = $81;\n      break;\n     }\n     $arglist_current = HEAP32[$2>>2]|0;\n     $99 = $arglist_current;\n     $100 = ((0) + 4|0);\n     $expanded4 = $100;\n     $expanded = (($expanded4) - 1)|0;\n     $101 = (($99) + ($expanded))|0;\n     $102 = ((0) + 4|0);\n     $expanded8 = $102;\n     $expanded7 = (($expanded8) - 1)|0;\n     $expanded6 = $expanded7 ^ -1;\n     $103 = $101 & $expanded6;\n     $104 = $103;\n     $105 = HEAP32[$104>>2]|0;\n     $arglist_next = ((($104)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next;\n     $$0259 = $105;$$2271 = 0;$storemerge278 = $80;\n    }\n    $106 = ($$0259|0)<(0);\n    $107 = $$0262342 | 8192;\n    $108 = (0 - ($$0259))|0;\n    $$$0262 = $106 ? $107 : $$0262342;\n    $$$0259 = $106 ? $108 : $$0259;\n    $$pre453 = HEAP8[$storemerge278>>0]|0;\n    $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$$4325 = $storemerge278;$$pr = $$pre453;\n   } else {\n    $109 = $78 << 24 >> 24;\n    $isdigittmp4$i = (($109) + -48)|0;\n    $isdigit5$i = ($isdigittmp4$i>>>0)<(10);\n    if ($isdigit5$i) {\n     $$06$i = 0;$113 = $storemerge273345;$isdigittmp7$i = $isdigittmp4$i;\n     while(1) {\n      $110 = ($$06$i*10)|0;\n      $111 = (($110) + ($isdigittmp7$i))|0;\n      $112 = ((($113)) + 1|0);\n      $114 = HEAP8[$112>>0]|0;\n      $115 = $114 << 24 >> 24;\n      $isdigittmp$i = (($115) + -48)|0;\n      $isdigit$i = ($isdigittmp$i>>>0)<(10);\n      if ($isdigit$i) {\n       $$06$i = $111;$113 = $112;$isdigittmp7$i = $isdigittmp$i;\n      } else {\n       break;\n      }\n     }\n     $116 = ($111|0)<(0);\n     if ($116) {\n      $$0 = -1;\n      break L1;\n     } else {\n      $$1260 = $111;$$1263 = $$0262342;$$3272 = $$1270;$$4325 = $112;$$pr = $114;\n     }\n    } else {\n     $$1260 = 0;$$1263 = $$0262342;$$3272 = $$1270;$$4325 = $storemerge273345;$$pr = $78;\n    }\n   }\n  } while(0);\n  $117 = ($$pr<<24>>24)==(46);\n  L45: do {\n   if ($117) {\n    $118 = ((($$4325)) + 1|0);\n    $119 = HEAP8[$118>>0]|0;\n    $120 = ($119<<24>>24)==(42);\n    if (!($120)) {\n     $147 = $119 << 24 >> 24;\n     $isdigittmp4$i287 = (($147) + -48)|0;\n     $isdigit5$i288 = ($isdigittmp4$i287>>>0)<(10);\n     if ($isdigit5$i288) {\n      $$06$i290 = 0;$151 = $118;$isdigittmp7$i289 = $isdigittmp4$i287;\n     } else {\n      $$0254 = 0;$$6 = $118;\n      break;\n     }\n     while(1) {\n      $148 = ($$06$i290*10)|0;\n      $149 = (($148) + ($isdigittmp7$i289))|0;\n      $150 = ((($151)) + 1|0);\n      $152 = HEAP8[$150>>0]|0;\n      $153 = $152 << 24 >> 24;\n      $isdigittmp$i291 = (($153) + -48)|0;\n      $isdigit$i292 = ($isdigittmp$i291>>>0)<(10);\n      if ($isdigit$i292) {\n       $$06$i290 = $149;$151 = $150;$isdigittmp7$i289 = $isdigittmp$i291;\n      } else {\n       $$0254 = $149;$$6 = $150;\n       break L45;\n      }\n     }\n    }\n    $121 = ((($$4325)) + 2|0);\n    $122 = HEAP8[$121>>0]|0;\n    $123 = $122 << 24 >> 24;\n    $isdigittmp274 = (($123) + -48)|0;\n    $isdigit275 = ($isdigittmp274>>>0)<(10);\n    if ($isdigit275) {\n     $124 = ((($$4325)) + 3|0);\n     $125 = HEAP8[$124>>0]|0;\n     $126 = ($125<<24>>24)==(36);\n     if ($126) {\n      $127 = (($4) + ($isdigittmp274<<2)|0);\n      HEAP32[$127>>2] = 10;\n      $128 = HEAP8[$121>>0]|0;\n      $129 = $128 << 24 >> 24;\n      $130 = (($129) + -48)|0;\n      $131 = (($3) + ($130<<3)|0);\n      $132 = $131;\n      $133 = $132;\n      $134 = HEAP32[$133>>2]|0;\n      $135 = (($132) + 4)|0;\n      $136 = $135;\n      $137 = HEAP32[$136>>2]|0;\n      $138 = ((($$4325)) + 4|0);\n      $$0254 = $134;$$6 = $138;\n      break;\n     }\n    }\n    $139 = ($$3272|0)==(0);\n    if (!($139)) {\n     $$0 = -1;\n     break L1;\n    }\n    if ($13) {\n     $arglist_current2 = HEAP32[$2>>2]|0;\n     $140 = $arglist_current2;\n     $141 = ((0) + 4|0);\n     $expanded11 = $141;\n     $expanded10 = (($expanded11) - 1)|0;\n     $142 = (($140) + ($expanded10))|0;\n     $143 = ((0) + 4|0);\n     $expanded15 = $143;\n     $expanded14 = (($expanded15) - 1)|0;\n     $expanded13 = $expanded14 ^ -1;\n     $144 = $142 & $expanded13;\n     $145 = $144;\n     $146 = HEAP32[$145>>2]|0;\n     $arglist_next3 = ((($145)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next3;\n     $$0254 = $146;$$6 = $121;\n    } else {\n     $$0254 = 0;$$6 = $121;\n    }\n   } else {\n    $$0254 = -1;$$6 = $$4325;\n   }\n  } while(0);\n  $$0252 = 0;$$7 = $$6;\n  while(1) {\n   $154 = HEAP8[$$7>>0]|0;\n   $155 = $154 << 24 >> 24;\n   $156 = (($155) + -65)|0;\n   $157 = ($156>>>0)>(57);\n   if ($157) {\n    $$0 = -1;\n    break L1;\n   }\n   $158 = ((($$7)) + 1|0);\n   $159 = ((28816 + (($$0252*58)|0)|0) + ($156)|0);\n   $160 = HEAP8[$159>>0]|0;\n   $161 = $160&255;\n   $162 = (($161) + -1)|0;\n   $163 = ($162>>>0)<(8);\n   if ($163) {\n    $$0252 = $161;$$7 = $158;\n   } else {\n    break;\n   }\n  }\n  $164 = ($160<<24>>24)==(0);\n  if ($164) {\n   $$0 = -1;\n   break;\n  }\n  $165 = ($160<<24>>24)==(19);\n  $166 = ($$0253|0)>(-1);\n  do {\n   if ($165) {\n    if ($166) {\n     $$0 = -1;\n     break L1;\n    } else {\n     label = 51;\n    }\n   } else {\n    if ($166) {\n     $167 = (($4) + ($$0253<<2)|0);\n     HEAP32[$167>>2] = $161;\n     $168 = (($3) + ($$0253<<3)|0);\n     $169 = $168;\n     $170 = $169;\n     $171 = HEAP32[$170>>2]|0;\n     $172 = (($169) + 4)|0;\n     $173 = $172;\n     $174 = HEAP32[$173>>2]|0;\n     $175 = $9;\n     $176 = $175;\n     HEAP32[$176>>2] = $171;\n     $177 = (($175) + 4)|0;\n     $178 = $177;\n     HEAP32[$178>>2] = $174;\n     label = 51;\n     break;\n    }\n    if (!($13)) {\n     $$0 = 0;\n     break L1;\n    }\n    _pop_arg($9,$161,$2);\n   }\n  } while(0);\n  if ((label|0) == 51) {\n   label = 0;\n   if (!($13)) {\n    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n    continue;\n   }\n  }\n  $179 = HEAP8[$$7>>0]|0;\n  $180 = $179 << 24 >> 24;\n  $181 = ($$0252|0)!=(0);\n  $182 = $180 & 15;\n  $183 = ($182|0)==(3);\n  $or$cond280 = $181 & $183;\n  $184 = $180 & -33;\n  $$0235 = $or$cond280 ? $184 : $180;\n  $185 = $$1263 & 8192;\n  $186 = ($185|0)==(0);\n  $187 = $$1263 & -65537;\n  $$1263$ = $186 ? $$1263 : $187;\n  L74: do {\n   switch ($$0235|0) {\n   case 110:  {\n    $trunc = $$0252&255;\n    switch ($trunc<<24>>24) {\n    case 0:  {\n     $194 = HEAP32[$9>>2]|0;\n     HEAP32[$194>>2] = $$1248;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 1:  {\n     $195 = HEAP32[$9>>2]|0;\n     HEAP32[$195>>2] = $$1248;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 2:  {\n     $196 = ($$1248|0)<(0);\n     $197 = $196 << 31 >> 31;\n     $198 = HEAP32[$9>>2]|0;\n     $199 = $198;\n     $200 = $199;\n     HEAP32[$200>>2] = $$1248;\n     $201 = (($199) + 4)|0;\n     $202 = $201;\n     HEAP32[$202>>2] = $197;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 3:  {\n     $203 = $$1248&65535;\n     $204 = HEAP32[$9>>2]|0;\n     HEAP16[$204>>1] = $203;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 4:  {\n     $205 = $$1248&255;\n     $206 = HEAP32[$9>>2]|0;\n     HEAP8[$206>>0] = $205;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 6:  {\n     $207 = HEAP32[$9>>2]|0;\n     HEAP32[$207>>2] = $$1248;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    case 7:  {\n     $208 = ($$1248|0)<(0);\n     $209 = $208 << 31 >> 31;\n     $210 = HEAP32[$9>>2]|0;\n     $211 = $210;\n     $212 = $211;\n     HEAP32[$212>>2] = $$1248;\n     $213 = (($211) + 4)|0;\n     $214 = $213;\n     HEAP32[$214>>2] = $209;\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n     break;\n    }\n    default: {\n     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n     continue L1;\n    }\n    }\n    break;\n   }\n   case 112:  {\n    $215 = ($$0254>>>0)>(8);\n    $216 = $215 ? $$0254 : 8;\n    $217 = $$1263$ | 8;\n    $$1236 = 120;$$1255 = $216;$$3265 = $217;\n    label = 63;\n    break;\n   }\n   case 88: case 120:  {\n    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;\n    label = 63;\n    break;\n   }\n   case 111:  {\n    $257 = $9;\n    $258 = $257;\n    $259 = HEAP32[$258>>2]|0;\n    $260 = (($257) + 4)|0;\n    $261 = $260;\n    $262 = HEAP32[$261>>2]|0;\n    $263 = ($259|0)==(0);\n    $264 = ($262|0)==(0);\n    $265 = $263 & $264;\n    if ($265) {\n     $$0$lcssa$i300 = $14;\n    } else {\n     $$06$i298 = $14;$267 = $259;$271 = $262;\n     while(1) {\n      $266 = $267 & 7;\n      $268 = $266 | 48;\n      $269 = $268&255;\n      $270 = ((($$06$i298)) + -1|0);\n      HEAP8[$270>>0] = $269;\n      $272 = (_bitshift64Lshr(($267|0),($271|0),3)|0);\n      $273 = tempRet0;\n      $274 = ($272|0)==(0);\n      $275 = ($273|0)==(0);\n      $276 = $274 & $275;\n      if ($276) {\n       $$0$lcssa$i300 = $270;\n       break;\n      } else {\n       $$06$i298 = $270;$267 = $272;$271 = $273;\n      }\n     }\n    }\n    $277 = $$1263$ & 8;\n    $278 = ($277|0)==(0);\n    if ($278) {\n     $$0228 = $$0$lcssa$i300;$$1233 = 0;$$1238 = 29296;$$2256 = $$0254;$$4266 = $$1263$;\n     label = 76;\n    } else {\n     $279 = $$0$lcssa$i300;\n     $280 = (($15) - ($279))|0;\n     $281 = ($$0254|0)>($280|0);\n     $282 = (($280) + 1)|0;\n     $$0254$ = $281 ? $$0254 : $282;\n     $$0228 = $$0$lcssa$i300;$$1233 = 0;$$1238 = 29296;$$2256 = $$0254$;$$4266 = $$1263$;\n     label = 76;\n    }\n    break;\n   }\n   case 105: case 100:  {\n    $283 = $9;\n    $284 = $283;\n    $285 = HEAP32[$284>>2]|0;\n    $286 = (($283) + 4)|0;\n    $287 = $286;\n    $288 = HEAP32[$287>>2]|0;\n    $289 = ($288|0)<(0);\n    if ($289) {\n     $290 = (_i64Subtract(0,0,($285|0),($288|0))|0);\n     $291 = tempRet0;\n     $292 = $9;\n     $293 = $292;\n     HEAP32[$293>>2] = $290;\n     $294 = (($292) + 4)|0;\n     $295 = $294;\n     HEAP32[$295>>2] = $291;\n     $$0232 = 1;$$0237 = 29296;$300 = $290;$301 = $291;\n     label = 75;\n     break L74;\n    }\n    $296 = $$1263$ & 2048;\n    $297 = ($296|0)==(0);\n    if ($297) {\n     $298 = $$1263$ & 1;\n     $299 = ($298|0)==(0);\n     $$ = $299 ? 29296 : (29298);\n     $$0232 = $298;$$0237 = $$;$300 = $285;$301 = $288;\n     label = 75;\n    } else {\n     $$0232 = 1;$$0237 = (29297);$300 = $285;$301 = $288;\n     label = 75;\n    }\n    break;\n   }\n   case 117:  {\n    $188 = $9;\n    $189 = $188;\n    $190 = HEAP32[$189>>2]|0;\n    $191 = (($188) + 4)|0;\n    $192 = $191;\n    $193 = HEAP32[$192>>2]|0;\n    $$0232 = 0;$$0237 = 29296;$300 = $190;$301 = $193;\n    label = 75;\n    break;\n   }\n   case 99:  {\n    $321 = $9;\n    $322 = $321;\n    $323 = HEAP32[$322>>2]|0;\n    $324 = (($321) + 4)|0;\n    $325 = $324;\n    $326 = HEAP32[$325>>2]|0;\n    $327 = $323&255;\n    HEAP8[$16>>0] = $327;\n    $$2 = $16;$$2234 = 0;$$2239 = 29296;$$2251 = $14;$$5 = 1;$$6268 = $187;\n    break;\n   }\n   case 109:  {\n    $328 = (___errno_location()|0);\n    $329 = HEAP32[$328>>2]|0;\n    $330 = (_strerror($329)|0);\n    $$1 = $330;\n    label = 81;\n    break;\n   }\n   case 115:  {\n    $331 = HEAP32[$9>>2]|0;\n    $332 = ($331|0)!=(0|0);\n    $333 = $332 ? $331 : 29306;\n    $$1 = $333;\n    label = 81;\n    break;\n   }\n   case 67:  {\n    $340 = $9;\n    $341 = $340;\n    $342 = HEAP32[$341>>2]|0;\n    $343 = (($340) + 4)|0;\n    $344 = $343;\n    $345 = HEAP32[$344>>2]|0;\n    HEAP32[$11>>2] = $342;\n    HEAP32[$17>>2] = 0;\n    HEAP32[$9>>2] = $11;\n    $$4258458 = -1;$809 = $11;\n    label = 85;\n    break;\n   }\n   case 83:  {\n    $$pre454 = HEAP32[$9>>2]|0;\n    $346 = ($$0254|0)==(0);\n    if ($346) {\n     _pad($0,32,$$1260,0,$$1263$);\n     $$0240$lcssa460 = 0;\n     label = 96;\n    } else {\n     $$4258458 = $$0254;$809 = $$pre454;\n     label = 85;\n    }\n    break;\n   }\n   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {\n    $371 = +HEAPF64[$9>>3];\n    HEAP32[$6>>2] = 0;\n    HEAPF64[tempDoublePtr>>3] = $371;$372 = HEAP32[tempDoublePtr>>2]|0;\n    $373 = HEAP32[tempDoublePtr+4>>2]|0;\n    $374 = ($373|0)<(0);\n    if ($374) {\n     $375 = -$371;\n     $$0471$i = $375;$$0520$i = 1;$$0522$i = 29313;\n    } else {\n     $376 = $$1263$ & 2048;\n     $377 = ($376|0)==(0);\n     $378 = $$1263$ & 1;\n     if ($377) {\n      $379 = ($378|0)==(0);\n      $$$i = $379 ? (29314) : (29319);\n      $$0471$i = $371;$$0520$i = $378;$$0522$i = $$$i;\n     } else {\n      $$0471$i = $371;$$0520$i = 1;$$0522$i = (29316);\n     }\n    }\n    HEAPF64[tempDoublePtr>>3] = $$0471$i;$380 = HEAP32[tempDoublePtr>>2]|0;\n    $381 = HEAP32[tempDoublePtr+4>>2]|0;\n    $382 = $381 & 2146435072;\n    $383 = ($382>>>0)<(2146435072);\n    $384 = (0)<(0);\n    $385 = ($382|0)==(2146435072);\n    $386 = $385 & $384;\n    $387 = $383 | $386;\n    do {\n     if ($387) {\n      $403 = (+_frexpl($$0471$i,$6));\n      $404 = $403 * 2.0;\n      $405 = $404 != 0.0;\n      if ($405) {\n       $406 = HEAP32[$6>>2]|0;\n       $407 = (($406) + -1)|0;\n       HEAP32[$6>>2] = $407;\n      }\n      $408 = $$0235 | 32;\n      $409 = ($408|0)==(97);\n      if ($409) {\n       $410 = $$0235 & 32;\n       $411 = ($410|0)==(0);\n       $412 = ((($$0522$i)) + 9|0);\n       $$0522$$i = $411 ? $$0522$i : $412;\n       $413 = $$0520$i | 2;\n       $414 = ($$0254>>>0)>(11);\n       $415 = (12 - ($$0254))|0;\n       $416 = ($415|0)==(0);\n       $417 = $414 | $416;\n       do {\n        if ($417) {\n         $$1472$i = $404;\n        } else {\n         $$0509592$i = 8.0;$$1508593$i = $415;\n         while(1) {\n          $418 = (($$1508593$i) + -1)|0;\n          $419 = $$0509592$i * 16.0;\n          $420 = ($418|0)==(0);\n          if ($420) {\n           break;\n          } else {\n           $$0509592$i = $419;$$1508593$i = $418;\n          }\n         }\n         $421 = HEAP8[$$0522$$i>>0]|0;\n         $422 = ($421<<24>>24)==(45);\n         if ($422) {\n          $423 = -$404;\n          $424 = $423 - $419;\n          $425 = $419 + $424;\n          $426 = -$425;\n          $$1472$i = $426;\n          break;\n         } else {\n          $427 = $404 + $419;\n          $428 = $427 - $419;\n          $$1472$i = $428;\n          break;\n         }\n        }\n       } while(0);\n       $429 = HEAP32[$6>>2]|0;\n       $430 = ($429|0)<(0);\n       $431 = (0 - ($429))|0;\n       $432 = $430 ? $431 : $429;\n       $433 = ($432|0)<(0);\n       $434 = $433 << 31 >> 31;\n       $435 = (_fmt_u($432,$434,$20)|0);\n       $436 = ($435|0)==($20|0);\n       if ($436) {\n        HEAP8[$21>>0] = 48;\n        $$0511$i = $21;\n       } else {\n        $$0511$i = $435;\n       }\n       $437 = $429 >> 31;\n       $438 = $437 & 2;\n       $439 = (($438) + 43)|0;\n       $440 = $439&255;\n       $441 = ((($$0511$i)) + -1|0);\n       HEAP8[$441>>0] = $440;\n       $442 = (($$0235) + 15)|0;\n       $443 = $442&255;\n       $444 = ((($$0511$i)) + -2|0);\n       HEAP8[$444>>0] = $443;\n       $notrhs$i = ($$0254|0)<(1);\n       $445 = $$1263$ & 8;\n       $446 = ($445|0)==(0);\n       $$0524$i = $7;$$2473$i = $$1472$i;\n       while(1) {\n        $447 = (~~(($$2473$i)));\n        $448 = (29280 + ($447)|0);\n        $449 = HEAP8[$448>>0]|0;\n        $450 = $449&255;\n        $451 = $450 | $410;\n        $452 = $451&255;\n        $453 = ((($$0524$i)) + 1|0);\n        HEAP8[$$0524$i>>0] = $452;\n        $454 = (+($447|0));\n        $455 = $$2473$i - $454;\n        $456 = $455 * 16.0;\n        $457 = $453;\n        $458 = (($457) - ($18))|0;\n        $459 = ($458|0)==(1);\n        do {\n         if ($459) {\n          $notlhs$i = $456 == 0.0;\n          $or$cond3$not$i = $notrhs$i & $notlhs$i;\n          $or$cond$i = $446 & $or$cond3$not$i;\n          if ($or$cond$i) {\n           $$1525$i = $453;\n           break;\n          }\n          $460 = ((($$0524$i)) + 2|0);\n          HEAP8[$453>>0] = 46;\n          $$1525$i = $460;\n         } else {\n          $$1525$i = $453;\n         }\n        } while(0);\n        $461 = $456 != 0.0;\n        if ($461) {\n         $$0524$i = $$1525$i;$$2473$i = $456;\n        } else {\n         break;\n        }\n       }\n       $462 = ($$0254|0)!=(0);\n       $$pre700$i = $$1525$i;\n       $463 = (($24) + ($$pre700$i))|0;\n       $464 = ($463|0)<($$0254|0);\n       $or$cond412 = $462 & $464;\n       $465 = $444;\n       $466 = (($25) + ($$0254))|0;\n       $467 = (($466) - ($465))|0;\n       $468 = (($23) - ($465))|0;\n       $469 = (($468) + ($$pre700$i))|0;\n       $$0526$i = $or$cond412 ? $467 : $469;\n       $470 = (($$0526$i) + ($413))|0;\n       _pad($0,32,$$1260,$470,$$1263$);\n       $471 = HEAP32[$0>>2]|0;\n       $472 = $471 & 32;\n       $473 = ($472|0)==(0);\n       if ($473) {\n        (___fwritex($$0522$$i,$413,$0)|0);\n       }\n       $474 = $$1263$ ^ 65536;\n       _pad($0,48,$$1260,$470,$474);\n       $475 = (($$pre700$i) - ($18))|0;\n       $476 = HEAP32[$0>>2]|0;\n       $477 = $476 & 32;\n       $478 = ($477|0)==(0);\n       if ($478) {\n        (___fwritex($7,$475,$0)|0);\n       }\n       $479 = (($22) - ($465))|0;\n       $sum = (($475) + ($479))|0;\n       $480 = (($$0526$i) - ($sum))|0;\n       _pad($0,48,$480,0,0);\n       $481 = HEAP32[$0>>2]|0;\n       $482 = $481 & 32;\n       $483 = ($482|0)==(0);\n       if ($483) {\n        (___fwritex($444,$479,$0)|0);\n       }\n       $484 = $$1263$ ^ 8192;\n       _pad($0,32,$$1260,$470,$484);\n       $485 = ($470|0)<($$1260|0);\n       $$537$i = $485 ? $$1260 : $470;\n       $$0470$i = $$537$i;\n       break;\n      }\n      $486 = ($$0254|0)<(0);\n      $$538$i = $486 ? 6 : $$0254;\n      if ($405) {\n       $487 = $404 * 268435456.0;\n       $488 = HEAP32[$6>>2]|0;\n       $489 = (($488) + -28)|0;\n       HEAP32[$6>>2] = $489;\n       $$3$i = $487;$$pr$i = $489;\n      } else {\n       $$pre697$i = HEAP32[$6>>2]|0;\n       $$3$i = $404;$$pr$i = $$pre697$i;\n      }\n      $490 = ($$pr$i|0)<(0);\n      $$554$i = $490 ? $5 : $26;\n      $$0498$i = $$554$i;$$4$i = $$3$i;\n      while(1) {\n       $491 = (~~(($$4$i))>>>0);\n       HEAP32[$$0498$i>>2] = $491;\n       $492 = ((($$0498$i)) + 4|0);\n       $493 = (+($491>>>0));\n       $494 = $$4$i - $493;\n       $495 = $494 * 1.0E+9;\n       $496 = $495 != 0.0;\n       if ($496) {\n        $$0498$i = $492;$$4$i = $495;\n       } else {\n        break;\n       }\n      }\n      $497 = ($$pr$i|0)>(0);\n      if ($497) {\n       $$1482671$i = $$554$i;$$1499670$i = $492;$498 = $$pr$i;\n       while(1) {\n        $499 = ($498|0)>(29);\n        $500 = $499 ? 29 : $498;\n        $$0488663$i = ((($$1499670$i)) + -4|0);\n        $501 = ($$0488663$i>>>0)<($$1482671$i>>>0);\n        do {\n         if ($501) {\n          $$2483$ph$i = $$1482671$i;\n         } else {\n          $$0488665$i = $$0488663$i;$$0497664$i = 0;\n          while(1) {\n           $502 = HEAP32[$$0488665$i>>2]|0;\n           $503 = (_bitshift64Shl(($502|0),0,($500|0))|0);\n           $504 = tempRet0;\n           $505 = (_i64Add(($503|0),($504|0),($$0497664$i|0),0)|0);\n           $506 = tempRet0;\n           $507 = (___uremdi3(($505|0),($506|0),1000000000,0)|0);\n           $508 = tempRet0;\n           HEAP32[$$0488665$i>>2] = $507;\n           $509 = (___udivdi3(($505|0),($506|0),1000000000,0)|0);\n           $510 = tempRet0;\n           $$0488$i = ((($$0488665$i)) + -4|0);\n           $511 = ($$0488$i>>>0)<($$1482671$i>>>0);\n           if ($511) {\n            break;\n           } else {\n            $$0488665$i = $$0488$i;$$0497664$i = $509;\n           }\n          }\n          $512 = ($509|0)==(0);\n          if ($512) {\n           $$2483$ph$i = $$1482671$i;\n           break;\n          }\n          $513 = ((($$1482671$i)) + -4|0);\n          HEAP32[$513>>2] = $509;\n          $$2483$ph$i = $513;\n         }\n        } while(0);\n        $$2500$i = $$1499670$i;\n        while(1) {\n         $514 = ($$2500$i>>>0)>($$2483$ph$i>>>0);\n         if (!($514)) {\n          break;\n         }\n         $515 = ((($$2500$i)) + -4|0);\n         $516 = HEAP32[$515>>2]|0;\n         $517 = ($516|0)==(0);\n         if ($517) {\n          $$2500$i = $515;\n         } else {\n          break;\n         }\n        }\n        $518 = HEAP32[$6>>2]|0;\n        $519 = (($518) - ($500))|0;\n        HEAP32[$6>>2] = $519;\n        $520 = ($519|0)>(0);\n        if ($520) {\n         $$1482671$i = $$2483$ph$i;$$1499670$i = $$2500$i;$498 = $519;\n        } else {\n         $$1482$lcssa$i = $$2483$ph$i;$$1499$lcssa$i = $$2500$i;$$pr571$i = $519;\n         break;\n        }\n       }\n      } else {\n       $$1482$lcssa$i = $$554$i;$$1499$lcssa$i = $492;$$pr571$i = $$pr$i;\n      }\n      $521 = ($$pr571$i|0)<(0);\n      if ($521) {\n       $522 = (($$538$i) + 25)|0;\n       $523 = (($522|0) / 9)&-1;\n       $524 = (($523) + 1)|0;\n       $525 = ($408|0)==(102);\n       $$3484658$i = $$1482$lcssa$i;$$3501657$i = $$1499$lcssa$i;$527 = $$pr571$i;\n       while(1) {\n        $526 = (0 - ($527))|0;\n        $528 = ($526|0)>(9);\n        $529 = $528 ? 9 : $526;\n        $530 = ($$3484658$i>>>0)<($$3501657$i>>>0);\n        do {\n         if ($530) {\n          $534 = 1 << $529;\n          $535 = (($534) + -1)|0;\n          $536 = 1000000000 >>> $529;\n          $$0487652$i = 0;$$1489651$i = $$3484658$i;\n          while(1) {\n           $537 = HEAP32[$$1489651$i>>2]|0;\n           $538 = $537 & $535;\n           $539 = $537 >>> $529;\n           $540 = (($539) + ($$0487652$i))|0;\n           HEAP32[$$1489651$i>>2] = $540;\n           $541 = Math_imul($538, $536)|0;\n           $542 = ((($$1489651$i)) + 4|0);\n           $543 = ($542>>>0)<($$3501657$i>>>0);\n           if ($543) {\n            $$0487652$i = $541;$$1489651$i = $542;\n           } else {\n            break;\n           }\n          }\n          $544 = HEAP32[$$3484658$i>>2]|0;\n          $545 = ($544|0)==(0);\n          $546 = ((($$3484658$i)) + 4|0);\n          $$$3484$i = $545 ? $546 : $$3484658$i;\n          $547 = ($541|0)==(0);\n          if ($547) {\n           $$$3484706$i = $$$3484$i;$$4502$i = $$3501657$i;\n           break;\n          }\n          $548 = ((($$3501657$i)) + 4|0);\n          HEAP32[$$3501657$i>>2] = $541;\n          $$$3484706$i = $$$3484$i;$$4502$i = $548;\n         } else {\n          $531 = HEAP32[$$3484658$i>>2]|0;\n          $532 = ($531|0)==(0);\n          $533 = ((($$3484658$i)) + 4|0);\n          $$$3484705$i = $532 ? $533 : $$3484658$i;\n          $$$3484706$i = $$$3484705$i;$$4502$i = $$3501657$i;\n         }\n        } while(0);\n        $549 = $525 ? $$554$i : $$$3484706$i;\n        $550 = $$4502$i;\n        $551 = $549;\n        $552 = (($550) - ($551))|0;\n        $553 = $552 >> 2;\n        $554 = ($553|0)>($524|0);\n        $555 = (($549) + ($524<<2)|0);\n        $$$4502$i = $554 ? $555 : $$4502$i;\n        $556 = HEAP32[$6>>2]|0;\n        $557 = (($556) + ($529))|0;\n        HEAP32[$6>>2] = $557;\n        $558 = ($557|0)<(0);\n        if ($558) {\n         $$3484658$i = $$$3484706$i;$$3501657$i = $$$4502$i;$527 = $557;\n        } else {\n         $$3484$lcssa$i = $$$3484706$i;$$3501$lcssa$i = $$$4502$i;\n         break;\n        }\n       }\n      } else {\n       $$3484$lcssa$i = $$1482$lcssa$i;$$3501$lcssa$i = $$1499$lcssa$i;\n      }\n      $559 = ($$3484$lcssa$i>>>0)<($$3501$lcssa$i>>>0);\n      $560 = $$554$i;\n      do {\n       if ($559) {\n        $561 = $$3484$lcssa$i;\n        $562 = (($560) - ($561))|0;\n        $563 = $562 >> 2;\n        $564 = ($563*9)|0;\n        $565 = HEAP32[$$3484$lcssa$i>>2]|0;\n        $566 = ($565>>>0)<(10);\n        if ($566) {\n         $$1515$i = $564;\n         break;\n        } else {\n         $$0514647$i = $564;$$0531646$i = 10;\n        }\n        while(1) {\n         $567 = ($$0531646$i*10)|0;\n         $568 = (($$0514647$i) + 1)|0;\n         $569 = ($565>>>0)<($567>>>0);\n         if ($569) {\n          $$1515$i = $568;\n          break;\n         } else {\n          $$0514647$i = $568;$$0531646$i = $567;\n         }\n        }\n       } else {\n        $$1515$i = 0;\n       }\n      } while(0);\n      $570 = ($408|0)!=(102);\n      $571 = $570 ? $$1515$i : 0;\n      $572 = (($$538$i) - ($571))|0;\n      $573 = ($408|0)==(103);\n      $574 = ($$538$i|0)!=(0);\n      $575 = $574 & $573;\n      $$neg$i = $575 << 31 >> 31;\n      $576 = (($572) + ($$neg$i))|0;\n      $577 = $$3501$lcssa$i;\n      $578 = (($577) - ($560))|0;\n      $579 = $578 >> 2;\n      $580 = ($579*9)|0;\n      $581 = (($580) + -9)|0;\n      $582 = ($576|0)<($581|0);\n      if ($582) {\n       $583 = ((($$554$i)) + 4|0);\n       $584 = (($576) + 9216)|0;\n       $585 = (($584|0) / 9)&-1;\n       $586 = (($585) + -1024)|0;\n       $587 = (($583) + ($586<<2)|0);\n       $588 = (($584|0) % 9)&-1;\n       $$0528639$i = (($588) + 1)|0;\n       $589 = ($$0528639$i|0)<(9);\n       if ($589) {\n        $$0528641$i = $$0528639$i;$$1532640$i = 10;\n        while(1) {\n         $590 = ($$1532640$i*10)|0;\n         $$0528$i = (($$0528641$i) + 1)|0;\n         $exitcond$i = ($$0528$i|0)==(9);\n         if ($exitcond$i) {\n          $$1532$lcssa$i = $590;\n          break;\n         } else {\n          $$0528641$i = $$0528$i;$$1532640$i = $590;\n         }\n        }\n       } else {\n        $$1532$lcssa$i = 10;\n       }\n       $591 = HEAP32[$587>>2]|0;\n       $592 = (($591>>>0) % ($$1532$lcssa$i>>>0))&-1;\n       $593 = ($592|0)==(0);\n       $594 = ((($587)) + 4|0);\n       $595 = ($594|0)==($$3501$lcssa$i|0);\n       $or$cond540$i = $595 & $593;\n       do {\n        if ($or$cond540$i) {\n         $$4492$i = $587;$$4518$i = $$1515$i;$$8$i = $$3484$lcssa$i;\n        } else {\n         $596 = (($591>>>0) / ($$1532$lcssa$i>>>0))&-1;\n         $597 = $596 & 1;\n         $598 = ($597|0)==(0);\n         $$541$i = $598 ? 9007199254740992.0 : 9007199254740994.0;\n         $599 = (($$1532$lcssa$i|0) / 2)&-1;\n         $600 = ($592>>>0)<($599>>>0);\n         if ($600) {\n          $$0466$i = 0.5;\n         } else {\n          $601 = ($592|0)==($599|0);\n          $or$cond543$i = $595 & $601;\n          $$557$i = $or$cond543$i ? 1.0 : 1.5;\n          $$0466$i = $$557$i;\n         }\n         $602 = ($$0520$i|0)==(0);\n         do {\n          if ($602) {\n           $$1467$i = $$0466$i;$$1469$i = $$541$i;\n          } else {\n           $603 = HEAP8[$$0522$i>>0]|0;\n           $604 = ($603<<24>>24)==(45);\n           if (!($604)) {\n            $$1467$i = $$0466$i;$$1469$i = $$541$i;\n            break;\n           }\n           $605 = -$$541$i;\n           $606 = -$$0466$i;\n           $$1467$i = $606;$$1469$i = $605;\n          }\n         } while(0);\n         $607 = (($591) - ($592))|0;\n         HEAP32[$587>>2] = $607;\n         $608 = $$1469$i + $$1467$i;\n         $609 = $608 != $$1469$i;\n         if (!($609)) {\n          $$4492$i = $587;$$4518$i = $$1515$i;$$8$i = $$3484$lcssa$i;\n          break;\n         }\n         $610 = (($607) + ($$1532$lcssa$i))|0;\n         HEAP32[$587>>2] = $610;\n         $611 = ($610>>>0)>(999999999);\n         if ($611) {\n          $$2490632$i = $587;$$5486633$i = $$3484$lcssa$i;\n          while(1) {\n           $612 = ((($$2490632$i)) + -4|0);\n           HEAP32[$$2490632$i>>2] = 0;\n           $613 = ($612>>>0)<($$5486633$i>>>0);\n           if ($613) {\n            $614 = ((($$5486633$i)) + -4|0);\n            HEAP32[$614>>2] = 0;\n            $$6$i = $614;\n           } else {\n            $$6$i = $$5486633$i;\n           }\n           $615 = HEAP32[$612>>2]|0;\n           $616 = (($615) + 1)|0;\n           HEAP32[$612>>2] = $616;\n           $617 = ($616>>>0)>(999999999);\n           if ($617) {\n            $$2490632$i = $612;$$5486633$i = $$6$i;\n           } else {\n            $$2490$lcssa$i = $612;$$5486$lcssa$i = $$6$i;\n            break;\n           }\n          }\n         } else {\n          $$2490$lcssa$i = $587;$$5486$lcssa$i = $$3484$lcssa$i;\n         }\n         $618 = $$5486$lcssa$i;\n         $619 = (($560) - ($618))|0;\n         $620 = $619 >> 2;\n         $621 = ($620*9)|0;\n         $622 = HEAP32[$$5486$lcssa$i>>2]|0;\n         $623 = ($622>>>0)<(10);\n         if ($623) {\n          $$4492$i = $$2490$lcssa$i;$$4518$i = $621;$$8$i = $$5486$lcssa$i;\n          break;\n         } else {\n          $$2516628$i = $621;$$2533627$i = 10;\n         }\n         while(1) {\n          $624 = ($$2533627$i*10)|0;\n          $625 = (($$2516628$i) + 1)|0;\n          $626 = ($622>>>0)<($624>>>0);\n          if ($626) {\n           $$4492$i = $$2490$lcssa$i;$$4518$i = $625;$$8$i = $$5486$lcssa$i;\n           break;\n          } else {\n           $$2516628$i = $625;$$2533627$i = $624;\n          }\n         }\n        }\n       } while(0);\n       $627 = ((($$4492$i)) + 4|0);\n       $628 = ($$3501$lcssa$i>>>0)>($627>>>0);\n       $$$3501$i = $628 ? $627 : $$3501$lcssa$i;\n       $$5519$ph$i = $$4518$i;$$7505$ph$i = $$$3501$i;$$9$ph$i = $$8$i;\n      } else {\n       $$5519$ph$i = $$1515$i;$$7505$ph$i = $$3501$lcssa$i;$$9$ph$i = $$3484$lcssa$i;\n      }\n      $629 = (0 - ($$5519$ph$i))|0;\n      $$7505$i = $$7505$ph$i;\n      while(1) {\n       $630 = ($$7505$i>>>0)>($$9$ph$i>>>0);\n       if (!($630)) {\n        $$lcssa683$i = 0;\n        break;\n       }\n       $631 = ((($$7505$i)) + -4|0);\n       $632 = HEAP32[$631>>2]|0;\n       $633 = ($632|0)==(0);\n       if ($633) {\n        $$7505$i = $631;\n       } else {\n        $$lcssa683$i = 1;\n        break;\n       }\n      }\n      do {\n       if ($573) {\n        $634 = $574&1;\n        $635 = $634 ^ 1;\n        $$538$$i = (($635) + ($$538$i))|0;\n        $636 = ($$538$$i|0)>($$5519$ph$i|0);\n        $637 = ($$5519$ph$i|0)>(-5);\n        $or$cond6$i = $636 & $637;\n        if ($or$cond6$i) {\n         $638 = (($$0235) + -1)|0;\n         $$neg572$i = (($$538$$i) + -1)|0;\n         $639 = (($$neg572$i) - ($$5519$ph$i))|0;\n         $$0479$i = $638;$$2476$i = $639;\n        } else {\n         $640 = (($$0235) + -2)|0;\n         $641 = (($$538$$i) + -1)|0;\n         $$0479$i = $640;$$2476$i = $641;\n        }\n        $642 = $$1263$ & 8;\n        $643 = ($642|0)==(0);\n        if (!($643)) {\n         $$1480$i = $$0479$i;$$3477$i = $$2476$i;$$pre$phi704$iZ2D = $642;\n         break;\n        }\n        do {\n         if ($$lcssa683$i) {\n          $644 = ((($$7505$i)) + -4|0);\n          $645 = HEAP32[$644>>2]|0;\n          $646 = ($645|0)==(0);\n          if ($646) {\n           $$2530$i = 9;\n           break;\n          }\n          $647 = (($645>>>0) % 10)&-1;\n          $648 = ($647|0)==(0);\n          if ($648) {\n           $$1529624$i = 0;$$3534623$i = 10;\n          } else {\n           $$2530$i = 0;\n           break;\n          }\n          while(1) {\n           $649 = ($$3534623$i*10)|0;\n           $650 = (($$1529624$i) + 1)|0;\n           $651 = (($645>>>0) % ($649>>>0))&-1;\n           $652 = ($651|0)==(0);\n           if ($652) {\n            $$1529624$i = $650;$$3534623$i = $649;\n           } else {\n            $$2530$i = $650;\n            break;\n           }\n          }\n         } else {\n          $$2530$i = 9;\n         }\n        } while(0);\n        $653 = $$0479$i | 32;\n        $654 = ($653|0)==(102);\n        $655 = $$7505$i;\n        $656 = (($655) - ($560))|0;\n        $657 = $656 >> 2;\n        $658 = ($657*9)|0;\n        $659 = (($658) + -9)|0;\n        if ($654) {\n         $660 = (($659) - ($$2530$i))|0;\n         $661 = ($660|0)<(0);\n         $$544$i = $661 ? 0 : $660;\n         $662 = ($$2476$i|0)<($$544$i|0);\n         $$2476$$545$i = $662 ? $$2476$i : $$544$i;\n         $$1480$i = $$0479$i;$$3477$i = $$2476$$545$i;$$pre$phi704$iZ2D = 0;\n         break;\n        } else {\n         $663 = (($659) + ($$5519$ph$i))|0;\n         $664 = (($663) - ($$2530$i))|0;\n         $665 = ($664|0)<(0);\n         $$546$i = $665 ? 0 : $664;\n         $666 = ($$2476$i|0)<($$546$i|0);\n         $$2476$$547$i = $666 ? $$2476$i : $$546$i;\n         $$1480$i = $$0479$i;$$3477$i = $$2476$$547$i;$$pre$phi704$iZ2D = 0;\n         break;\n        }\n       } else {\n        $$pre703$i = $$1263$ & 8;\n        $$1480$i = $$0235;$$3477$i = $$538$i;$$pre$phi704$iZ2D = $$pre703$i;\n       }\n      } while(0);\n      $667 = $$3477$i | $$pre$phi704$iZ2D;\n      $668 = ($667|0)!=(0);\n      $669 = $668&1;\n      $670 = $$1480$i | 32;\n      $671 = ($670|0)==(102);\n      if ($671) {\n       $672 = ($$5519$ph$i|0)>(0);\n       $673 = $672 ? $$5519$ph$i : 0;\n       $$2513$i = 0;$$pn$i = $673;\n      } else {\n       $674 = ($$5519$ph$i|0)<(0);\n       $675 = $674 ? $629 : $$5519$ph$i;\n       $676 = ($675|0)<(0);\n       $677 = $676 << 31 >> 31;\n       $678 = (_fmt_u($675,$677,$20)|0);\n       $679 = $678;\n       $680 = (($22) - ($679))|0;\n       $681 = ($680|0)<(2);\n       if ($681) {\n        $$1512617$i = $678;\n        while(1) {\n         $682 = ((($$1512617$i)) + -1|0);\n         HEAP8[$682>>0] = 48;\n         $683 = $682;\n         $684 = (($22) - ($683))|0;\n         $685 = ($684|0)<(2);\n         if ($685) {\n          $$1512617$i = $682;\n         } else {\n          $$1512$lcssa$i = $682;\n          break;\n         }\n        }\n       } else {\n        $$1512$lcssa$i = $678;\n       }\n       $686 = $$5519$ph$i >> 31;\n       $687 = $686 & 2;\n       $688 = (($687) + 43)|0;\n       $689 = $688&255;\n       $690 = ((($$1512$lcssa$i)) + -1|0);\n       HEAP8[$690>>0] = $689;\n       $691 = $$1480$i&255;\n       $692 = ((($$1512$lcssa$i)) + -2|0);\n       HEAP8[$692>>0] = $691;\n       $693 = $692;\n       $694 = (($22) - ($693))|0;\n       $$2513$i = $692;$$pn$i = $694;\n      }\n      $695 = (($$0520$i) + 1)|0;\n      $696 = (($695) + ($$3477$i))|0;\n      $$1527$i = (($696) + ($669))|0;\n      $697 = (($$1527$i) + ($$pn$i))|0;\n      _pad($0,32,$$1260,$697,$$1263$);\n      $698 = HEAP32[$0>>2]|0;\n      $699 = $698 & 32;\n      $700 = ($699|0)==(0);\n      if ($700) {\n       (___fwritex($$0522$i,$$0520$i,$0)|0);\n      }\n      $701 = $$1263$ ^ 65536;\n      _pad($0,48,$$1260,$697,$701);\n      do {\n       if ($671) {\n        $702 = ($$9$ph$i>>>0)>($$554$i>>>0);\n        $$0496$$9$i = $702 ? $$554$i : $$9$ph$i;\n        $$5493606$i = $$0496$$9$i;\n        while(1) {\n         $703 = HEAP32[$$5493606$i>>2]|0;\n         $704 = (_fmt_u($703,0,$27)|0);\n         $705 = ($$5493606$i|0)==($$0496$$9$i|0);\n         do {\n          if ($705) {\n           $711 = ($704|0)==($27|0);\n           if (!($711)) {\n            $$1465$i = $704;\n            break;\n           }\n           HEAP8[$29>>0] = 48;\n           $$1465$i = $29;\n          } else {\n           $706 = ($704>>>0)>($7>>>0);\n           if (!($706)) {\n            $$1465$i = $704;\n            break;\n           }\n           $707 = $704;\n           $708 = (($707) - ($18))|0;\n           _memset(($7|0),48,($708|0))|0;\n           $$0464603$i = $704;\n           while(1) {\n            $709 = ((($$0464603$i)) + -1|0);\n            $710 = ($709>>>0)>($7>>>0);\n            if ($710) {\n             $$0464603$i = $709;\n            } else {\n             $$1465$i = $709;\n             break;\n            }\n           }\n          }\n         } while(0);\n         $712 = HEAP32[$0>>2]|0;\n         $713 = $712 & 32;\n         $714 = ($713|0)==(0);\n         if ($714) {\n          $715 = $$1465$i;\n          $716 = (($28) - ($715))|0;\n          (___fwritex($$1465$i,$716,$0)|0);\n         }\n         $717 = ((($$5493606$i)) + 4|0);\n         $718 = ($717>>>0)>($$554$i>>>0);\n         if ($718) {\n          break;\n         } else {\n          $$5493606$i = $717;\n         }\n        }\n        $719 = ($667|0)==(0);\n        do {\n         if (!($719)) {\n          $720 = HEAP32[$0>>2]|0;\n          $721 = $720 & 32;\n          $722 = ($721|0)==(0);\n          if (!($722)) {\n           break;\n          }\n          (___fwritex(29344,1,$0)|0);\n         }\n        } while(0);\n        $723 = ($717>>>0)<($$7505$i>>>0);\n        $724 = ($$3477$i|0)>(0);\n        $725 = $724 & $723;\n        if ($725) {\n         $$4478600$i = $$3477$i;$$6494599$i = $717;\n         while(1) {\n          $726 = HEAP32[$$6494599$i>>2]|0;\n          $727 = (_fmt_u($726,0,$27)|0);\n          $728 = ($727>>>0)>($7>>>0);\n          if ($728) {\n           $729 = $727;\n           $730 = (($729) - ($18))|0;\n           _memset(($7|0),48,($730|0))|0;\n           $$0463594$i = $727;\n           while(1) {\n            $731 = ((($$0463594$i)) + -1|0);\n            $732 = ($731>>>0)>($7>>>0);\n            if ($732) {\n             $$0463594$i = $731;\n            } else {\n             $$0463$lcssa$i = $731;\n             break;\n            }\n           }\n          } else {\n           $$0463$lcssa$i = $727;\n          }\n          $733 = HEAP32[$0>>2]|0;\n          $734 = $733 & 32;\n          $735 = ($734|0)==(0);\n          if ($735) {\n           $736 = ($$4478600$i|0)>(9);\n           $737 = $736 ? 9 : $$4478600$i;\n           (___fwritex($$0463$lcssa$i,$737,$0)|0);\n          }\n          $738 = ((($$6494599$i)) + 4|0);\n          $739 = (($$4478600$i) + -9)|0;\n          $740 = ($738>>>0)<($$7505$i>>>0);\n          $741 = ($$4478600$i|0)>(9);\n          $742 = $741 & $740;\n          if ($742) {\n           $$4478600$i = $739;$$6494599$i = $738;\n          } else {\n           $$4478$lcssa$i = $739;\n           break;\n          }\n         }\n        } else {\n         $$4478$lcssa$i = $$3477$i;\n        }\n        $743 = (($$4478$lcssa$i) + 9)|0;\n        _pad($0,48,$743,9,0);\n       } else {\n        $744 = ((($$9$ph$i)) + 4|0);\n        $$7505$$i = $$lcssa683$i ? $$7505$i : $744;\n        $745 = ($$3477$i|0)>(-1);\n        if ($745) {\n         $746 = ($$pre$phi704$iZ2D|0)==(0);\n         $$5611$i = $$3477$i;$$7495610$i = $$9$ph$i;\n         while(1) {\n          $747 = HEAP32[$$7495610$i>>2]|0;\n          $748 = (_fmt_u($747,0,$27)|0);\n          $749 = ($748|0)==($27|0);\n          if ($749) {\n           HEAP8[$29>>0] = 48;\n           $$0$i = $29;\n          } else {\n           $$0$i = $748;\n          }\n          $750 = ($$7495610$i|0)==($$9$ph$i|0);\n          do {\n           if ($750) {\n            $754 = ((($$0$i)) + 1|0);\n            $755 = HEAP32[$0>>2]|0;\n            $756 = $755 & 32;\n            $757 = ($756|0)==(0);\n            if ($757) {\n             (___fwritex($$0$i,1,$0)|0);\n            }\n            $758 = ($$5611$i|0)<(1);\n            $or$cond552$i = $746 & $758;\n            if ($or$cond552$i) {\n             $$2$i = $754;\n             break;\n            }\n            $759 = HEAP32[$0>>2]|0;\n            $760 = $759 & 32;\n            $761 = ($760|0)==(0);\n            if (!($761)) {\n             $$2$i = $754;\n             break;\n            }\n            (___fwritex(29344,1,$0)|0);\n            $$2$i = $754;\n           } else {\n            $751 = ($$0$i>>>0)>($7>>>0);\n            if (!($751)) {\n             $$2$i = $$0$i;\n             break;\n            }\n            $scevgep694$i = (($$0$i) + ($19)|0);\n            $scevgep694695$i = $scevgep694$i;\n            _memset(($7|0),48,($scevgep694695$i|0))|0;\n            $$1607$i = $$0$i;\n            while(1) {\n             $752 = ((($$1607$i)) + -1|0);\n             $753 = ($752>>>0)>($7>>>0);\n             if ($753) {\n              $$1607$i = $752;\n             } else {\n              $$2$i = $752;\n              break;\n             }\n            }\n           }\n          } while(0);\n          $762 = $$2$i;\n          $763 = (($28) - ($762))|0;\n          $764 = HEAP32[$0>>2]|0;\n          $765 = $764 & 32;\n          $766 = ($765|0)==(0);\n          if ($766) {\n           $767 = ($$5611$i|0)>($763|0);\n           $768 = $767 ? $763 : $$5611$i;\n           (___fwritex($$2$i,$768,$0)|0);\n          }\n          $769 = (($$5611$i) - ($763))|0;\n          $770 = ((($$7495610$i)) + 4|0);\n          $771 = ($770>>>0)<($$7505$$i>>>0);\n          $772 = ($769|0)>(-1);\n          $773 = $771 & $772;\n          if ($773) {\n           $$5611$i = $769;$$7495610$i = $770;\n          } else {\n           $$5$lcssa$i = $769;\n           break;\n          }\n         }\n        } else {\n         $$5$lcssa$i = $$3477$i;\n        }\n        $774 = (($$5$lcssa$i) + 18)|0;\n        _pad($0,48,$774,18,0);\n        $775 = HEAP32[$0>>2]|0;\n        $776 = $775 & 32;\n        $777 = ($776|0)==(0);\n        if (!($777)) {\n         break;\n        }\n        $778 = $$2513$i;\n        $779 = (($22) - ($778))|0;\n        (___fwritex($$2513$i,$779,$0)|0);\n       }\n      } while(0);\n      $780 = $$1263$ ^ 8192;\n      _pad($0,32,$$1260,$697,$780);\n      $781 = ($697|0)<($$1260|0);\n      $$553$i = $781 ? $$1260 : $697;\n      $$0470$i = $$553$i;\n     } else {\n      $388 = $$0235 & 32;\n      $389 = ($388|0)!=(0);\n      $390 = $389 ? 29332 : 29336;\n      $391 = ($$0471$i != $$0471$i) | (0.0 != 0.0);\n      $392 = $389 ? 31247 : 29340;\n      $$1521$i = $391 ? 0 : $$0520$i;\n      $$0510$i = $391 ? $392 : $390;\n      $393 = (($$1521$i) + 3)|0;\n      _pad($0,32,$$1260,$393,$187);\n      $394 = HEAP32[$0>>2]|0;\n      $395 = $394 & 32;\n      $396 = ($395|0)==(0);\n      if ($396) {\n       (___fwritex($$0522$i,$$1521$i,$0)|0);\n       $$pre$i = HEAP32[$0>>2]|0;\n       $398 = $$pre$i;\n      } else {\n       $398 = $394;\n      }\n      $397 = $398 & 32;\n      $399 = ($397|0)==(0);\n      if ($399) {\n       (___fwritex($$0510$i,3,$0)|0);\n      }\n      $400 = $$1263$ ^ 8192;\n      _pad($0,32,$$1260,$393,$400);\n      $401 = ($393|0)<($$1260|0);\n      $402 = $401 ? $$1260 : $393;\n      $$0470$i = $402;\n     }\n    } while(0);\n    $$0243 = $$0470$i;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n    continue L1;\n    break;\n   }\n   default: {\n    $$2 = $$0321;$$2234 = 0;$$2239 = 29296;$$2251 = $14;$$5 = $$0254;$$6268 = $$1263$;\n   }\n   }\n  } while(0);\n  L310: do {\n   if ((label|0) == 63) {\n    label = 0;\n    $218 = $9;\n    $219 = $218;\n    $220 = HEAP32[$219>>2]|0;\n    $221 = (($218) + 4)|0;\n    $222 = $221;\n    $223 = HEAP32[$222>>2]|0;\n    $224 = $$1236 & 32;\n    $225 = ($220|0)==(0);\n    $226 = ($223|0)==(0);\n    $227 = $225 & $226;\n    if ($227) {\n     $$05$lcssa$i = $14;$248 = 0;$250 = 0;\n    } else {\n     $$056$i = $14;$229 = $220;$236 = $223;\n     while(1) {\n      $228 = $229 & 15;\n      $230 = (29280 + ($228)|0);\n      $231 = HEAP8[$230>>0]|0;\n      $232 = $231&255;\n      $233 = $232 | $224;\n      $234 = $233&255;\n      $235 = ((($$056$i)) + -1|0);\n      HEAP8[$235>>0] = $234;\n      $237 = (_bitshift64Lshr(($229|0),($236|0),4)|0);\n      $238 = tempRet0;\n      $239 = ($237|0)==(0);\n      $240 = ($238|0)==(0);\n      $241 = $239 & $240;\n      if ($241) {\n       break;\n      } else {\n       $$056$i = $235;$229 = $237;$236 = $238;\n      }\n     }\n     $242 = $9;\n     $243 = $242;\n     $244 = HEAP32[$243>>2]|0;\n     $245 = (($242) + 4)|0;\n     $246 = $245;\n     $247 = HEAP32[$246>>2]|0;\n     $$05$lcssa$i = $235;$248 = $244;$250 = $247;\n    }\n    $249 = ($248|0)==(0);\n    $251 = ($250|0)==(0);\n    $252 = $249 & $251;\n    $253 = $$3265 & 8;\n    $254 = ($253|0)==(0);\n    $or$cond282 = $254 | $252;\n    $255 = $$1236 >> 4;\n    $256 = (29296 + ($255)|0);\n    $$332 = $or$cond282 ? 29296 : $256;\n    $$333 = $or$cond282 ? 0 : 2;\n    $$0228 = $$05$lcssa$i;$$1233 = $$333;$$1238 = $$332;$$2256 = $$1255;$$4266 = $$3265;\n    label = 76;\n   }\n   else if ((label|0) == 75) {\n    label = 0;\n    $302 = (_fmt_u($300,$301,$14)|0);\n    $$0228 = $302;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;\n    label = 76;\n   }\n   else if ((label|0) == 81) {\n    label = 0;\n    $334 = (_memchr($$1,0,$$0254)|0);\n    $335 = ($334|0)==(0|0);\n    $336 = $334;\n    $337 = $$1;\n    $338 = (($336) - ($337))|0;\n    $339 = (($$1) + ($$0254)|0);\n    $$3257 = $335 ? $$0254 : $338;\n    $$1250 = $335 ? $339 : $334;\n    $$2 = $$1;$$2234 = 0;$$2239 = 29296;$$2251 = $$1250;$$5 = $$3257;$$6268 = $187;\n   }\n   else if ((label|0) == 85) {\n    label = 0;\n    $$0229396 = $809;$$0240395 = 0;$$1244394 = 0;\n    while(1) {\n     $347 = HEAP32[$$0229396>>2]|0;\n     $348 = ($347|0)==(0);\n     if ($348) {\n      $$0240$lcssa = $$0240395;$$2245 = $$1244394;\n      break;\n     }\n     $349 = (_wctomb($12,$347)|0);\n     $350 = ($349|0)<(0);\n     $351 = (($$4258458) - ($$0240395))|0;\n     $352 = ($349>>>0)>($351>>>0);\n     $or$cond285 = $350 | $352;\n     if ($or$cond285) {\n      $$0240$lcssa = $$0240395;$$2245 = $349;\n      break;\n     }\n     $353 = ((($$0229396)) + 4|0);\n     $354 = (($349) + ($$0240395))|0;\n     $355 = ($$4258458>>>0)>($354>>>0);\n     if ($355) {\n      $$0229396 = $353;$$0240395 = $354;$$1244394 = $349;\n     } else {\n      $$0240$lcssa = $354;$$2245 = $349;\n      break;\n     }\n    }\n    $356 = ($$2245|0)<(0);\n    if ($356) {\n     $$0 = -1;\n     break L1;\n    }\n    _pad($0,32,$$1260,$$0240$lcssa,$$1263$);\n    $357 = ($$0240$lcssa|0)==(0);\n    if ($357) {\n     $$0240$lcssa460 = 0;\n     label = 96;\n    } else {\n     $$1230407 = $809;$$1241406 = 0;\n     while(1) {\n      $358 = HEAP32[$$1230407>>2]|0;\n      $359 = ($358|0)==(0);\n      if ($359) {\n       $$0240$lcssa460 = $$0240$lcssa;\n       label = 96;\n       break L310;\n      }\n      $360 = ((($$1230407)) + 4|0);\n      $361 = (_wctomb($12,$358)|0);\n      $362 = (($361) + ($$1241406))|0;\n      $363 = ($362|0)>($$0240$lcssa|0);\n      if ($363) {\n       $$0240$lcssa460 = $$0240$lcssa;\n       label = 96;\n       break L310;\n      }\n      $364 = HEAP32[$0>>2]|0;\n      $365 = $364 & 32;\n      $366 = ($365|0)==(0);\n      if ($366) {\n       (___fwritex($12,$361,$0)|0);\n      }\n      $367 = ($362>>>0)<($$0240$lcssa>>>0);\n      if ($367) {\n       $$1230407 = $360;$$1241406 = $362;\n      } else {\n       $$0240$lcssa460 = $$0240$lcssa;\n       label = 96;\n       break;\n      }\n     }\n    }\n   }\n  } while(0);\n  if ((label|0) == 96) {\n   label = 0;\n   $368 = $$1263$ ^ 8192;\n   _pad($0,32,$$1260,$$0240$lcssa460,$368);\n   $369 = ($$1260|0)>($$0240$lcssa460|0);\n   $370 = $369 ? $$1260 : $$0240$lcssa460;\n   $$0243 = $370;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n   continue;\n  }\n  if ((label|0) == 76) {\n   label = 0;\n   $303 = ($$2256|0)>(-1);\n   $304 = $$4266 & -65537;\n   $$$4266 = $303 ? $304 : $$4266;\n   $305 = $9;\n   $306 = $305;\n   $307 = HEAP32[$306>>2]|0;\n   $308 = (($305) + 4)|0;\n   $309 = $308;\n   $310 = HEAP32[$309>>2]|0;\n   $311 = ($307|0)!=(0);\n   $312 = ($310|0)!=(0);\n   $313 = $311 | $312;\n   $314 = ($$2256|0)!=(0);\n   $or$cond = $314 | $313;\n   if ($or$cond) {\n    $315 = $$0228;\n    $316 = (($15) - ($315))|0;\n    $317 = $313&1;\n    $318 = $317 ^ 1;\n    $319 = (($318) + ($316))|0;\n    $320 = ($$2256|0)>($319|0);\n    $$2256$ = $320 ? $$2256 : $319;\n    $$2 = $$0228;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $14;$$5 = $$2256$;$$6268 = $$$4266;\n   } else {\n    $$2 = $14;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $14;$$5 = 0;$$6268 = $$$4266;\n   }\n  }\n  $782 = $$2251;\n  $783 = $$2;\n  $784 = (($782) - ($783))|0;\n  $785 = ($$5|0)<($784|0);\n  $$$5 = $785 ? $784 : $$5;\n  $786 = (($$$5) + ($$2234))|0;\n  $787 = ($$1260|0)<($786|0);\n  $$2261 = $787 ? $786 : $$1260;\n  _pad($0,32,$$2261,$786,$$6268);\n  $788 = HEAP32[$0>>2]|0;\n  $789 = $788 & 32;\n  $790 = ($789|0)==(0);\n  if ($790) {\n   (___fwritex($$2239,$$2234,$0)|0);\n  }\n  $791 = $$6268 ^ 65536;\n  _pad($0,48,$$2261,$786,$791);\n  _pad($0,48,$$$5,$784,0);\n  $792 = HEAP32[$0>>2]|0;\n  $793 = $792 & 32;\n  $794 = ($793|0)==(0);\n  if ($794) {\n   (___fwritex($$2,$784,$0)|0);\n  }\n  $795 = $$6268 ^ 8192;\n  _pad($0,32,$$2261,$786,$795);\n  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;\n }\n L345: do {\n  if ((label|0) == 243) {\n   $796 = ($0|0)==(0|0);\n   if ($796) {\n    $797 = ($$0269|0)==(0);\n    if ($797) {\n     $$0 = 0;\n    } else {\n     $$2242381 = 1;\n     while(1) {\n      $798 = (($4) + ($$2242381<<2)|0);\n      $799 = HEAP32[$798>>2]|0;\n      $800 = ($799|0)==(0);\n      if ($800) {\n       $$3379 = $$2242381;\n       break;\n      }\n      $801 = (($3) + ($$2242381<<3)|0);\n      _pop_arg($801,$799,$2);\n      $802 = (($$2242381) + 1)|0;\n      $803 = ($802|0)<(10);\n      if ($803) {\n       $$2242381 = $802;\n      } else {\n       $$0 = 1;\n       break L345;\n      }\n     }\n     while(1) {\n      $806 = (($4) + ($$3379<<2)|0);\n      $807 = HEAP32[$806>>2]|0;\n      $808 = ($807|0)==(0);\n      $804 = (($$3379) + 1)|0;\n      if (!($808)) {\n       $$0 = -1;\n       break L345;\n      }\n      $805 = ($804|0)<(10);\n      if ($805) {\n       $$3379 = $804;\n      } else {\n       $$0 = 1;\n       break;\n      }\n     }\n    }\n   } else {\n    $$0 = $$1248;\n   }\n  }\n } while(0);\n STACKTOP = sp;return ($$0|0);\n}\nfunction ___lockfile($0) {\n $0 = $0|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n return 0;\n}\nfunction ___fwritex($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$032 = 0, $$033 = 0, $$034 = 0, $$1 = 0, $$pre = 0, $$pre38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($2)) + 16|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($4|0)==(0|0);\n if ($5) {\n  $7 = (___towrite($2)|0);\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $$pre = HEAP32[$3>>2]|0;\n   $12 = $$pre;\n   label = 5;\n  } else {\n   $$032 = 0;\n  }\n } else {\n  $6 = $4;\n  $12 = $6;\n  label = 5;\n }\n L5: do {\n  if ((label|0) == 5) {\n   $9 = ((($2)) + 20|0);\n   $10 = HEAP32[$9>>2]|0;\n   $11 = (($12) - ($10))|0;\n   $13 = ($11>>>0)<($1>>>0);\n   $14 = $10;\n   if ($13) {\n    $15 = ((($2)) + 36|0);\n    $16 = HEAP32[$15>>2]|0;\n    $17 = (FUNCTION_TABLE_iiii[$16 & 127]($2,$0,$1)|0);\n    $$032 = $17;\n    break;\n   }\n   $18 = ((($2)) + 75|0);\n   $19 = HEAP8[$18>>0]|0;\n   $20 = ($19<<24>>24)>(-1);\n   L10: do {\n    if ($20) {\n     $$0 = $1;\n     while(1) {\n      $21 = ($$0|0)==(0);\n      if ($21) {\n       $$033 = $1;$$034 = $0;$$1 = 0;$32 = $14;\n       break L10;\n      }\n      $22 = (($$0) + -1)|0;\n      $23 = (($0) + ($22)|0);\n      $24 = HEAP8[$23>>0]|0;\n      $25 = ($24<<24>>24)==(10);\n      if ($25) {\n       break;\n      } else {\n       $$0 = $22;\n      }\n     }\n     $26 = ((($2)) + 36|0);\n     $27 = HEAP32[$26>>2]|0;\n     $28 = (FUNCTION_TABLE_iiii[$27 & 127]($2,$0,$$0)|0);\n     $29 = ($28>>>0)<($$0>>>0);\n     if ($29) {\n      $$032 = $$0;\n      break L5;\n     }\n     $30 = (($0) + ($$0)|0);\n     $31 = (($1) - ($$0))|0;\n     $$pre38 = HEAP32[$9>>2]|0;\n     $$033 = $31;$$034 = $30;$$1 = $$0;$32 = $$pre38;\n    } else {\n     $$033 = $1;$$034 = $0;$$1 = 0;$32 = $14;\n    }\n   } while(0);\n   _memcpy(($32|0),($$034|0),($$033|0))|0;\n   $33 = HEAP32[$9>>2]|0;\n   $34 = (($33) + ($$033)|0);\n   HEAP32[$9>>2] = $34;\n   $35 = (($$1) + ($$033))|0;\n   $$032 = $35;\n  }\n } while(0);\n return ($$032|0);\n}\nfunction _pop_arg($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;\n var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;\n var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;\n var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;\n var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;\n var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;\n var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;\n var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;\n var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1>>>0)>(20);\n L1: do {\n  if (!($3)) {\n   do {\n    switch ($1|0) {\n    case 9:  {\n     $arglist_current = HEAP32[$2>>2]|0;\n     $4 = $arglist_current;\n     $5 = ((0) + 4|0);\n     $expanded28 = $5;\n     $expanded = (($expanded28) - 1)|0;\n     $6 = (($4) + ($expanded))|0;\n     $7 = ((0) + 4|0);\n     $expanded32 = $7;\n     $expanded31 = (($expanded32) - 1)|0;\n     $expanded30 = $expanded31 ^ -1;\n     $8 = $6 & $expanded30;\n     $9 = $8;\n     $10 = HEAP32[$9>>2]|0;\n     $arglist_next = ((($9)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next;\n     HEAP32[$0>>2] = $10;\n     break L1;\n     break;\n    }\n    case 10:  {\n     $arglist_current2 = HEAP32[$2>>2]|0;\n     $11 = $arglist_current2;\n     $12 = ((0) + 4|0);\n     $expanded35 = $12;\n     $expanded34 = (($expanded35) - 1)|0;\n     $13 = (($11) + ($expanded34))|0;\n     $14 = ((0) + 4|0);\n     $expanded39 = $14;\n     $expanded38 = (($expanded39) - 1)|0;\n     $expanded37 = $expanded38 ^ -1;\n     $15 = $13 & $expanded37;\n     $16 = $15;\n     $17 = HEAP32[$16>>2]|0;\n     $arglist_next3 = ((($16)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next3;\n     $18 = ($17|0)<(0);\n     $19 = $18 << 31 >> 31;\n     $20 = $0;\n     $21 = $20;\n     HEAP32[$21>>2] = $17;\n     $22 = (($20) + 4)|0;\n     $23 = $22;\n     HEAP32[$23>>2] = $19;\n     break L1;\n     break;\n    }\n    case 11:  {\n     $arglist_current5 = HEAP32[$2>>2]|0;\n     $24 = $arglist_current5;\n     $25 = ((0) + 4|0);\n     $expanded42 = $25;\n     $expanded41 = (($expanded42) - 1)|0;\n     $26 = (($24) + ($expanded41))|0;\n     $27 = ((0) + 4|0);\n     $expanded46 = $27;\n     $expanded45 = (($expanded46) - 1)|0;\n     $expanded44 = $expanded45 ^ -1;\n     $28 = $26 & $expanded44;\n     $29 = $28;\n     $30 = HEAP32[$29>>2]|0;\n     $arglist_next6 = ((($29)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next6;\n     $31 = $0;\n     $32 = $31;\n     HEAP32[$32>>2] = $30;\n     $33 = (($31) + 4)|0;\n     $34 = $33;\n     HEAP32[$34>>2] = 0;\n     break L1;\n     break;\n    }\n    case 12:  {\n     $arglist_current8 = HEAP32[$2>>2]|0;\n     $35 = $arglist_current8;\n     $36 = ((0) + 8|0);\n     $expanded49 = $36;\n     $expanded48 = (($expanded49) - 1)|0;\n     $37 = (($35) + ($expanded48))|0;\n     $38 = ((0) + 8|0);\n     $expanded53 = $38;\n     $expanded52 = (($expanded53) - 1)|0;\n     $expanded51 = $expanded52 ^ -1;\n     $39 = $37 & $expanded51;\n     $40 = $39;\n     $41 = $40;\n     $42 = $41;\n     $43 = HEAP32[$42>>2]|0;\n     $44 = (($41) + 4)|0;\n     $45 = $44;\n     $46 = HEAP32[$45>>2]|0;\n     $arglist_next9 = ((($40)) + 8|0);\n     HEAP32[$2>>2] = $arglist_next9;\n     $47 = $0;\n     $48 = $47;\n     HEAP32[$48>>2] = $43;\n     $49 = (($47) + 4)|0;\n     $50 = $49;\n     HEAP32[$50>>2] = $46;\n     break L1;\n     break;\n    }\n    case 13:  {\n     $arglist_current11 = HEAP32[$2>>2]|0;\n     $51 = $arglist_current11;\n     $52 = ((0) + 4|0);\n     $expanded56 = $52;\n     $expanded55 = (($expanded56) - 1)|0;\n     $53 = (($51) + ($expanded55))|0;\n     $54 = ((0) + 4|0);\n     $expanded60 = $54;\n     $expanded59 = (($expanded60) - 1)|0;\n     $expanded58 = $expanded59 ^ -1;\n     $55 = $53 & $expanded58;\n     $56 = $55;\n     $57 = HEAP32[$56>>2]|0;\n     $arglist_next12 = ((($56)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next12;\n     $58 = $57&65535;\n     $59 = $58 << 16 >> 16;\n     $60 = ($59|0)<(0);\n     $61 = $60 << 31 >> 31;\n     $62 = $0;\n     $63 = $62;\n     HEAP32[$63>>2] = $59;\n     $64 = (($62) + 4)|0;\n     $65 = $64;\n     HEAP32[$65>>2] = $61;\n     break L1;\n     break;\n    }\n    case 14:  {\n     $arglist_current14 = HEAP32[$2>>2]|0;\n     $66 = $arglist_current14;\n     $67 = ((0) + 4|0);\n     $expanded63 = $67;\n     $expanded62 = (($expanded63) - 1)|0;\n     $68 = (($66) + ($expanded62))|0;\n     $69 = ((0) + 4|0);\n     $expanded67 = $69;\n     $expanded66 = (($expanded67) - 1)|0;\n     $expanded65 = $expanded66 ^ -1;\n     $70 = $68 & $expanded65;\n     $71 = $70;\n     $72 = HEAP32[$71>>2]|0;\n     $arglist_next15 = ((($71)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next15;\n     $$mask31 = $72 & 65535;\n     $73 = $0;\n     $74 = $73;\n     HEAP32[$74>>2] = $$mask31;\n     $75 = (($73) + 4)|0;\n     $76 = $75;\n     HEAP32[$76>>2] = 0;\n     break L1;\n     break;\n    }\n    case 15:  {\n     $arglist_current17 = HEAP32[$2>>2]|0;\n     $77 = $arglist_current17;\n     $78 = ((0) + 4|0);\n     $expanded70 = $78;\n     $expanded69 = (($expanded70) - 1)|0;\n     $79 = (($77) + ($expanded69))|0;\n     $80 = ((0) + 4|0);\n     $expanded74 = $80;\n     $expanded73 = (($expanded74) - 1)|0;\n     $expanded72 = $expanded73 ^ -1;\n     $81 = $79 & $expanded72;\n     $82 = $81;\n     $83 = HEAP32[$82>>2]|0;\n     $arglist_next18 = ((($82)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next18;\n     $84 = $83&255;\n     $85 = $84 << 24 >> 24;\n     $86 = ($85|0)<(0);\n     $87 = $86 << 31 >> 31;\n     $88 = $0;\n     $89 = $88;\n     HEAP32[$89>>2] = $85;\n     $90 = (($88) + 4)|0;\n     $91 = $90;\n     HEAP32[$91>>2] = $87;\n     break L1;\n     break;\n    }\n    case 16:  {\n     $arglist_current20 = HEAP32[$2>>2]|0;\n     $92 = $arglist_current20;\n     $93 = ((0) + 4|0);\n     $expanded77 = $93;\n     $expanded76 = (($expanded77) - 1)|0;\n     $94 = (($92) + ($expanded76))|0;\n     $95 = ((0) + 4|0);\n     $expanded81 = $95;\n     $expanded80 = (($expanded81) - 1)|0;\n     $expanded79 = $expanded80 ^ -1;\n     $96 = $94 & $expanded79;\n     $97 = $96;\n     $98 = HEAP32[$97>>2]|0;\n     $arglist_next21 = ((($97)) + 4|0);\n     HEAP32[$2>>2] = $arglist_next21;\n     $$mask = $98 & 255;\n     $99 = $0;\n     $100 = $99;\n     HEAP32[$100>>2] = $$mask;\n     $101 = (($99) + 4)|0;\n     $102 = $101;\n     HEAP32[$102>>2] = 0;\n     break L1;\n     break;\n    }\n    case 17:  {\n     $arglist_current23 = HEAP32[$2>>2]|0;\n     $103 = $arglist_current23;\n     $104 = ((0) + 8|0);\n     $expanded84 = $104;\n     $expanded83 = (($expanded84) - 1)|0;\n     $105 = (($103) + ($expanded83))|0;\n     $106 = ((0) + 8|0);\n     $expanded88 = $106;\n     $expanded87 = (($expanded88) - 1)|0;\n     $expanded86 = $expanded87 ^ -1;\n     $107 = $105 & $expanded86;\n     $108 = $107;\n     $109 = +HEAPF64[$108>>3];\n     $arglist_next24 = ((($108)) + 8|0);\n     HEAP32[$2>>2] = $arglist_next24;\n     HEAPF64[$0>>3] = $109;\n     break L1;\n     break;\n    }\n    case 18:  {\n     $arglist_current26 = HEAP32[$2>>2]|0;\n     $110 = $arglist_current26;\n     $111 = ((0) + 8|0);\n     $expanded91 = $111;\n     $expanded90 = (($expanded91) - 1)|0;\n     $112 = (($110) + ($expanded90))|0;\n     $113 = ((0) + 8|0);\n     $expanded95 = $113;\n     $expanded94 = (($expanded95) - 1)|0;\n     $expanded93 = $expanded94 ^ -1;\n     $114 = $112 & $expanded93;\n     $115 = $114;\n     $116 = +HEAPF64[$115>>3];\n     $arglist_next27 = ((($115)) + 8|0);\n     HEAP32[$2>>2] = $arglist_next27;\n     HEAPF64[$0>>3] = $116;\n     break L1;\n     break;\n    }\n    default: {\n     break L1;\n    }\n    }\n   } while(0);\n  }\n } while(0);\n return;\n}\nfunction _fmt_u($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($1>>>0)>(0);\n $4 = ($0>>>0)>(4294967295);\n $5 = ($1|0)==(0);\n $6 = $5 & $4;\n $7 = $3 | $6;\n if ($7) {\n  $$0914 = $2;$8 = $0;$9 = $1;\n  while(1) {\n   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);\n   $11 = tempRet0;\n   $12 = $10 | 48;\n   $13 = $12&255;\n   $14 = ((($$0914)) + -1|0);\n   HEAP8[$14>>0] = $13;\n   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);\n   $16 = tempRet0;\n   $17 = ($9>>>0)>(9);\n   $18 = ($8>>>0)>(4294967295);\n   $19 = ($9|0)==(9);\n   $20 = $19 & $18;\n   $21 = $17 | $20;\n   if ($21) {\n    $$0914 = $14;$8 = $15;$9 = $16;\n   } else {\n    break;\n   }\n  }\n  $$010$lcssa$off0 = $15;$$09$lcssa = $14;\n } else {\n  $$010$lcssa$off0 = $0;$$09$lcssa = $2;\n }\n $22 = ($$010$lcssa$off0|0)==(0);\n if ($22) {\n  $$1$lcssa = $$09$lcssa;\n } else {\n  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;\n  while(1) {\n   $23 = (($$012>>>0) % 10)&-1;\n   $24 = $23 | 48;\n   $25 = $24&255;\n   $26 = ((($$111)) + -1|0);\n   HEAP8[$26>>0] = $25;\n   $27 = (($$012>>>0) / 10)&-1;\n   $28 = ($$012>>>0)<(10);\n   if ($28) {\n    $$1$lcssa = $26;\n    break;\n   } else {\n    $$012 = $27;$$111 = $26;\n   }\n  }\n }\n return ($$1$lcssa|0);\n}\nfunction _strerror($0) {\n $0 = $0|0;\n var $$011$lcssa = 0, $$01113 = 0, $$015 = 0, $$112 = 0, $$114 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$015 = 0;\n while(1) {\n  $2 = (29346 + ($$015)|0);\n  $3 = HEAP8[$2>>0]|0;\n  $4 = $3&255;\n  $5 = ($4|0)==($0|0);\n  if ($5) {\n   label = 2;\n   break;\n  }\n  $6 = (($$015) + 1)|0;\n  $7 = ($6|0)==(87);\n  if ($7) {\n   $$01113 = 29434;$$114 = 87;\n   label = 5;\n   break;\n  } else {\n   $$015 = $6;\n  }\n }\n if ((label|0) == 2) {\n  $1 = ($$015|0)==(0);\n  if ($1) {\n   $$011$lcssa = 29434;\n  } else {\n   $$01113 = 29434;$$114 = $$015;\n   label = 5;\n  }\n }\n if ((label|0) == 5) {\n  while(1) {\n   label = 0;\n   $$112 = $$01113;\n   while(1) {\n    $8 = HEAP8[$$112>>0]|0;\n    $9 = ($8<<24>>24)==(0);\n    $10 = ((($$112)) + 1|0);\n    if ($9) {\n     break;\n    } else {\n     $$112 = $10;\n    }\n   }\n   $11 = (($$114) + -1)|0;\n   $12 = ($11|0)==(0);\n   if ($12) {\n    $$011$lcssa = $10;\n    break;\n   } else {\n    $$01113 = $10;$$114 = $11;\n    label = 5;\n   }\n  }\n }\n return ($$011$lcssa|0);\n}\nfunction _memchr($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;\n var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;\n var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $1 & 255;\n $4 = $0;\n $5 = $4 & 3;\n $6 = ($5|0)!=(0);\n $7 = ($2|0)!=(0);\n $or$cond53 = $7 & $6;\n L1: do {\n  if ($or$cond53) {\n   $8 = $1&255;\n   $$03555 = $0;$$03654 = $2;\n   while(1) {\n    $9 = HEAP8[$$03555>>0]|0;\n    $10 = ($9<<24>>24)==($8<<24>>24);\n    if ($10) {\n     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;\n     label = 6;\n     break L1;\n    }\n    $11 = ((($$03555)) + 1|0);\n    $12 = (($$03654) + -1)|0;\n    $13 = $11;\n    $14 = $13 & 3;\n    $15 = ($14|0)!=(0);\n    $16 = ($12|0)!=(0);\n    $or$cond = $16 & $15;\n    if ($or$cond) {\n     $$03555 = $11;$$03654 = $12;\n    } else {\n     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;\n     label = 5;\n     break;\n    }\n   }\n  } else {\n   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;\n   label = 5;\n  }\n } while(0);\n if ((label|0) == 5) {\n  if ($$lcssa) {\n   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;\n   label = 6;\n  } else {\n   $$2 = $$035$lcssa;$$3 = 0;\n  }\n }\n L8: do {\n  if ((label|0) == 6) {\n   $17 = HEAP8[$$035$lcssa65>>0]|0;\n   $18 = $1&255;\n   $19 = ($17<<24>>24)==($18<<24>>24);\n   if ($19) {\n    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;\n   } else {\n    $20 = Math_imul($3, 16843009)|0;\n    $21 = ($$036$lcssa64>>>0)>(3);\n    L11: do {\n     if ($21) {\n      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;\n      while(1) {\n       $22 = HEAP32[$$046>>2]|0;\n       $23 = $22 ^ $20;\n       $24 = (($23) + -16843009)|0;\n       $25 = $23 & -2139062144;\n       $26 = $25 ^ -2139062144;\n       $27 = $26 & $24;\n       $28 = ($27|0)==(0);\n       if (!($28)) {\n        break;\n       }\n       $29 = ((($$046)) + 4|0);\n       $30 = (($$13745) + -4)|0;\n       $31 = ($30>>>0)>(3);\n       if ($31) {\n        $$046 = $29;$$13745 = $30;\n       } else {\n        $$0$lcssa = $29;$$137$lcssa = $30;\n        label = 11;\n        break L11;\n       }\n      }\n      $$140 = $$046;$$23839 = $$13745;\n     } else {\n      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;\n      label = 11;\n     }\n    } while(0);\n    if ((label|0) == 11) {\n     $32 = ($$137$lcssa|0)==(0);\n     if ($32) {\n      $$2 = $$0$lcssa;$$3 = 0;\n      break;\n     } else {\n      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;\n     }\n    }\n    while(1) {\n     $33 = HEAP8[$$140>>0]|0;\n     $34 = ($33<<24>>24)==($18<<24>>24);\n     if ($34) {\n      $$2 = $$140;$$3 = $$23839;\n      break L8;\n     }\n     $35 = ((($$140)) + 1|0);\n     $36 = (($$23839) + -1)|0;\n     $37 = ($36|0)==(0);\n     if ($37) {\n      $$2 = $35;$$3 = 0;\n      break;\n     } else {\n      $$140 = $35;$$23839 = $36;\n     }\n    }\n   }\n  }\n } while(0);\n $38 = ($$3|0)!=(0);\n $39 = $38 ? $$2 : 0;\n return ($39|0);\n}\nfunction _pad($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0$lcssa16 = 0, $$012 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);\n $5 = sp;\n $6 = $4 & 73728;\n $7 = ($6|0)==(0);\n $8 = ($2|0)>($3|0);\n $or$cond = $8 & $7;\n do {\n  if ($or$cond) {\n   $9 = (($2) - ($3))|0;\n   $10 = ($9>>>0)>(256);\n   $11 = $10 ? 256 : $9;\n   _memset(($5|0),($1|0),($11|0))|0;\n   $12 = ($9>>>0)>(255);\n   $13 = HEAP32[$0>>2]|0;\n   $14 = $13 & 32;\n   $15 = ($14|0)==(0);\n   if ($12) {\n    $16 = (($2) - ($3))|0;\n    $$012 = $9;$23 = $13;$24 = $15;\n    while(1) {\n     if ($24) {\n      (___fwritex($5,256,$0)|0);\n      $$pre = HEAP32[$0>>2]|0;\n      $20 = $$pre;\n     } else {\n      $20 = $23;\n     }\n     $17 = (($$012) + -256)|0;\n     $18 = ($17>>>0)>(255);\n     $19 = $20 & 32;\n     $21 = ($19|0)==(0);\n     if ($18) {\n      $$012 = $17;$23 = $20;$24 = $21;\n     } else {\n      break;\n     }\n    }\n    $22 = $16 & 255;\n    if ($21) {\n     $$0$lcssa16 = $22;\n    } else {\n     break;\n    }\n   } else {\n    if ($15) {\n     $$0$lcssa16 = $9;\n    } else {\n     break;\n    }\n   }\n   (___fwritex($5,$$0$lcssa16,$0)|0);\n  }\n } while(0);\n STACKTOP = sp;return;\n}\nfunction _wctomb($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $$0 = 0;\n } else {\n  $3 = (_wcrtomb($0,$1,0)|0);\n  $$0 = $3;\n }\n return ($$0|0);\n}\nfunction _frexpl($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_frexp($0,$1));\n return (+$2);\n}\nfunction _frexp($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;\n $3 = HEAP32[tempDoublePtr+4>>2]|0;\n $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);\n $5 = tempRet0;\n $6 = $4&65535;\n $trunc$clear = $6 & 2047;\n switch ($trunc$clear<<16>>16) {\n case 0:  {\n  $7 = $0 != 0.0;\n  if ($7) {\n   $8 = $0 * 1.8446744073709552E+19;\n   $9 = (+_frexp($8,$1));\n   $10 = HEAP32[$1>>2]|0;\n   $11 = (($10) + -64)|0;\n   $$016 = $9;$storemerge = $11;\n  } else {\n   $$016 = $0;$storemerge = 0;\n  }\n  HEAP32[$1>>2] = $storemerge;\n  $$0 = $$016;\n  break;\n }\n case 2047:  {\n  $$0 = $0;\n  break;\n }\n default: {\n  $12 = $4 & 2047;\n  $13 = (($12) + -1022)|0;\n  HEAP32[$1>>2] = $13;\n  $14 = $3 & -2146435073;\n  $15 = $14 | 1071644672;\n  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];\n  $$0 = $16;\n }\n }\n return (+$$0);\n}\nfunction _wcrtomb($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;\n var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($0|0)==(0|0);\n do {\n  if ($3) {\n   $$0 = 1;\n  } else {\n   $4 = ($1>>>0)<(128);\n   if ($4) {\n    $5 = $1&255;\n    HEAP8[$0>>0] = $5;\n    $$0 = 1;\n    break;\n   }\n   $6 = ($1>>>0)<(2048);\n   if ($6) {\n    $7 = $1 >>> 6;\n    $8 = $7 | 192;\n    $9 = $8&255;\n    $10 = ((($0)) + 1|0);\n    HEAP8[$0>>0] = $9;\n    $11 = $1 & 63;\n    $12 = $11 | 128;\n    $13 = $12&255;\n    HEAP8[$10>>0] = $13;\n    $$0 = 2;\n    break;\n   }\n   $14 = ($1>>>0)<(55296);\n   $15 = $1 & -8192;\n   $16 = ($15|0)==(57344);\n   $or$cond = $14 | $16;\n   if ($or$cond) {\n    $17 = $1 >>> 12;\n    $18 = $17 | 224;\n    $19 = $18&255;\n    $20 = ((($0)) + 1|0);\n    HEAP8[$0>>0] = $19;\n    $21 = $1 >>> 6;\n    $22 = $21 & 63;\n    $23 = $22 | 128;\n    $24 = $23&255;\n    $25 = ((($0)) + 2|0);\n    HEAP8[$20>>0] = $24;\n    $26 = $1 & 63;\n    $27 = $26 | 128;\n    $28 = $27&255;\n    HEAP8[$25>>0] = $28;\n    $$0 = 3;\n    break;\n   }\n   $29 = (($1) + -65536)|0;\n   $30 = ($29>>>0)<(1048576);\n   if ($30) {\n    $31 = $1 >>> 18;\n    $32 = $31 | 240;\n    $33 = $32&255;\n    $34 = ((($0)) + 1|0);\n    HEAP8[$0>>0] = $33;\n    $35 = $1 >>> 12;\n    $36 = $35 & 63;\n    $37 = $36 | 128;\n    $38 = $37&255;\n    $39 = ((($0)) + 2|0);\n    HEAP8[$34>>0] = $38;\n    $40 = $1 >>> 6;\n    $41 = $40 & 63;\n    $42 = $41 | 128;\n    $43 = $42&255;\n    $44 = ((($0)) + 3|0);\n    HEAP8[$39>>0] = $43;\n    $45 = $1 & 63;\n    $46 = $45 | 128;\n    $47 = $46&255;\n    HEAP8[$44>>0] = $47;\n    $$0 = 4;\n    break;\n   } else {\n    $48 = (___errno_location()|0);\n    HEAP32[$48>>2] = 84;\n    $$0 = -1;\n    break;\n   }\n  }\n } while(0);\n return ($$0|0);\n}\nfunction ___towrite($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 74|0);\n $2 = HEAP8[$1>>0]|0;\n $3 = $2 << 24 >> 24;\n $4 = (($3) + 255)|0;\n $5 = $4 | $3;\n $6 = $5&255;\n HEAP8[$1>>0] = $6;\n $7 = HEAP32[$0>>2]|0;\n $8 = $7 & 8;\n $9 = ($8|0)==(0);\n if ($9) {\n  $11 = ((($0)) + 8|0);\n  HEAP32[$11>>2] = 0;\n  $12 = ((($0)) + 4|0);\n  HEAP32[$12>>2] = 0;\n  $13 = ((($0)) + 44|0);\n  $14 = HEAP32[$13>>2]|0;\n  $15 = ((($0)) + 28|0);\n  HEAP32[$15>>2] = $14;\n  $16 = ((($0)) + 20|0);\n  HEAP32[$16>>2] = $14;\n  $17 = $14;\n  $18 = ((($0)) + 48|0);\n  $19 = HEAP32[$18>>2]|0;\n  $20 = (($17) + ($19)|0);\n  $21 = ((($0)) + 16|0);\n  HEAP32[$21>>2] = $20;\n  $$0 = 0;\n } else {\n  $10 = $7 | 32;\n  HEAP32[$0>>2] = $10;\n  $$0 = -1;\n }\n return ($$0|0);\n}\nfunction _sn_write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ((($0)) + 16|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ((($0)) + 20|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = (($4) - ($6))|0;\n $8 = ($7>>>0)>($2>>>0);\n $$ = $8 ? $2 : $7;\n $$cast = $6;\n _memcpy(($$cast|0),($1|0),($$|0))|0;\n $9 = HEAP32[$5>>2]|0;\n $10 = (($9) + ($$)|0);\n HEAP32[$5>>2] = $10;\n return ($2|0);\n}\nfunction _strncpy($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n (___stpncpy($0,$1,$2)|0);\n return ($0|0);\n}\nfunction ___stpncpy($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa = 0, $$037$lcssa = 0, $$03753 = 0, $$038$lcssa = 0, $$038$lcssa79 = 0, $$03866 = 0, $$039$lcssa = 0, $$039$lcssa78 = 0, $$03965 = 0, $$041$lcssa = 0, $$041$lcssa77 = 0, $$04164 = 0, $$054 = 0, $$1$lcssa = 0, $$140$ph = 0, $$14046 = 0, $$142$ph = 0, $$14245 = 0, $$152 = 0, $$2$ph = 0;\n var $$243 = 0, $$247 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;\n var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $or$cond = 0, $or$cond63 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $1;\n $4 = $0;\n $5 = $3 ^ $4;\n $6 = $5 & 3;\n $7 = ($6|0)==(0);\n do {\n  if ($7) {\n   $8 = $3 & 3;\n   $9 = ($8|0)!=(0);\n   $10 = ($2|0)!=(0);\n   $or$cond63 = $10 & $9;\n   L3: do {\n    if ($or$cond63) {\n     $$03866 = $2;$$03965 = $1;$$04164 = $0;\n     while(1) {\n      $11 = HEAP8[$$03965>>0]|0;\n      HEAP8[$$04164>>0] = $11;\n      $12 = ($11<<24>>24)==(0);\n      if ($12) {\n       $$038$lcssa79 = $$03866;$$039$lcssa78 = $$03965;$$041$lcssa77 = $$04164;\n       break L3;\n      }\n      $13 = (($$03866) + -1)|0;\n      $14 = ((($$03965)) + 1|0);\n      $15 = ((($$04164)) + 1|0);\n      $16 = $14;\n      $17 = $16 & 3;\n      $18 = ($17|0)!=(0);\n      $19 = ($13|0)!=(0);\n      $or$cond = $19 & $18;\n      if ($or$cond) {\n       $$03866 = $13;$$03965 = $14;$$04164 = $15;\n      } else {\n       $$038$lcssa = $13;$$039$lcssa = $14;$$041$lcssa = $15;$$lcssa = $19;\n       label = 5;\n       break;\n      }\n     }\n    } else {\n     $$038$lcssa = $2;$$039$lcssa = $1;$$041$lcssa = $0;$$lcssa = $10;\n     label = 5;\n    }\n   } while(0);\n   if ((label|0) == 5) {\n    if ($$lcssa) {\n     $$038$lcssa79 = $$038$lcssa;$$039$lcssa78 = $$039$lcssa;$$041$lcssa77 = $$041$lcssa;\n    } else {\n     $$243 = $$041$lcssa;$$3 = 0;\n     break;\n    }\n   }\n   $20 = HEAP8[$$039$lcssa78>>0]|0;\n   $21 = ($20<<24>>24)==(0);\n   if ($21) {\n    $$243 = $$041$lcssa77;$$3 = $$038$lcssa79;\n   } else {\n    $22 = ($$038$lcssa79>>>0)>(3);\n    L11: do {\n     if ($22) {\n      $$03753 = $$041$lcssa77;$$054 = $$039$lcssa78;$$152 = $$038$lcssa79;\n      while(1) {\n       $23 = HEAP32[$$054>>2]|0;\n       $24 = (($23) + -16843009)|0;\n       $25 = $23 & -2139062144;\n       $26 = $25 ^ -2139062144;\n       $27 = $26 & $24;\n       $28 = ($27|0)==(0);\n       if (!($28)) {\n        $$0$lcssa = $$054;$$037$lcssa = $$03753;$$1$lcssa = $$152;\n        break L11;\n       }\n       HEAP32[$$03753>>2] = $23;\n       $29 = (($$152) + -4)|0;\n       $30 = ((($$054)) + 4|0);\n       $31 = ((($$03753)) + 4|0);\n       $32 = ($29>>>0)>(3);\n       if ($32) {\n        $$03753 = $31;$$054 = $30;$$152 = $29;\n       } else {\n        $$0$lcssa = $30;$$037$lcssa = $31;$$1$lcssa = $29;\n        break;\n       }\n      }\n     } else {\n      $$0$lcssa = $$039$lcssa78;$$037$lcssa = $$041$lcssa77;$$1$lcssa = $$038$lcssa79;\n     }\n    } while(0);\n    $$140$ph = $$0$lcssa;$$142$ph = $$037$lcssa;$$2$ph = $$1$lcssa;\n    label = 11;\n   }\n  } else {\n   $$140$ph = $1;$$142$ph = $0;$$2$ph = $2;\n   label = 11;\n  }\n } while(0);\n L16: do {\n  if ((label|0) == 11) {\n   $33 = ($$2$ph|0)==(0);\n   if ($33) {\n    $$243 = $$142$ph;$$3 = 0;\n   } else {\n    $$14046 = $$140$ph;$$14245 = $$142$ph;$$247 = $$2$ph;\n    while(1) {\n     $34 = HEAP8[$$14046>>0]|0;\n     HEAP8[$$14245>>0] = $34;\n     $35 = ($34<<24>>24)==(0);\n     if ($35) {\n      $$243 = $$14245;$$3 = $$247;\n      break L16;\n     }\n     $36 = (($$247) + -1)|0;\n     $37 = ((($$14046)) + 1|0);\n     $38 = ((($$14245)) + 1|0);\n     $39 = ($36|0)==(0);\n     if ($39) {\n      $$243 = $38;$$3 = 0;\n      break;\n     } else {\n      $$14046 = $37;$$14245 = $38;$$247 = $36;\n     }\n    }\n   }\n  }\n } while(0);\n _memset(($$243|0),0,($$3|0))|0;\n return ($$243|0);\n}\nfunction _strcmp($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;\n var sp = 0;\n sp = STACKTOP;\n $2 = HEAP8[$0>>0]|0;\n $3 = HEAP8[$1>>0]|0;\n $4 = ($2<<24>>24)!=($3<<24>>24);\n $5 = ($2<<24>>24)==(0);\n $or$cond9 = $5 | $4;\n if ($or$cond9) {\n  $$lcssa = $3;$$lcssa8 = $2;\n } else {\n  $$011 = $1;$$0710 = $0;\n  while(1) {\n   $6 = ((($$0710)) + 1|0);\n   $7 = ((($$011)) + 1|0);\n   $8 = HEAP8[$6>>0]|0;\n   $9 = HEAP8[$7>>0]|0;\n   $10 = ($8<<24>>24)!=($9<<24>>24);\n   $11 = ($8<<24>>24)==(0);\n   $or$cond = $11 | $10;\n   if ($or$cond) {\n    $$lcssa = $9;$$lcssa8 = $8;\n    break;\n   } else {\n    $$011 = $7;$$0710 = $6;\n   }\n  }\n }\n $12 = $$lcssa8&255;\n $13 = $$lcssa&255;\n $14 = (($12) - ($13))|0;\n return ($14|0);\n}\nfunction _fprintf($0,$1,$varargs) {\n $0 = $0|0;\n $1 = $1|0;\n $varargs = $varargs|0;\n var $2 = 0, $3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n HEAP32[$2>>2] = $varargs;\n $3 = (_vfprintf($0,$1,$2)|0);\n STACKTOP = sp;return ($3|0);\n}\nfunction _strcpy($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var label = 0, sp = 0;\n sp = STACKTOP;\n (___stpcpy($0,$1)|0);\n return ($0|0);\n}\nfunction ___stpcpy($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;\n var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;\n var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $1;\n $3 = $0;\n $4 = $2 ^ $3;\n $5 = $4 & 3;\n $6 = ($5|0)==(0);\n L1: do {\n  if ($6) {\n   $7 = $2 & 3;\n   $8 = ($7|0)==(0);\n   if ($8) {\n    $$026$lcssa = $1;$$027$lcssa = $0;\n   } else {\n    $$02642 = $1;$$02741 = $0;\n    while(1) {\n     $9 = HEAP8[$$02642>>0]|0;\n     HEAP8[$$02741>>0] = $9;\n     $10 = ($9<<24>>24)==(0);\n     if ($10) {\n      $$029 = $$02741;\n      break L1;\n     }\n     $11 = ((($$02642)) + 1|0);\n     $12 = ((($$02741)) + 1|0);\n     $13 = $11;\n     $14 = $13 & 3;\n     $15 = ($14|0)==(0);\n     if ($15) {\n      $$026$lcssa = $11;$$027$lcssa = $12;\n      break;\n     } else {\n      $$02642 = $11;$$02741 = $12;\n     }\n    }\n   }\n   $16 = HEAP32[$$026$lcssa>>2]|0;\n   $17 = (($16) + -16843009)|0;\n   $18 = $16 & -2139062144;\n   $19 = $18 ^ -2139062144;\n   $20 = $19 & $17;\n   $21 = ($20|0)==(0);\n   if ($21) {\n    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;\n    while(1) {\n     $22 = ((($$037)) + 4|0);\n     $23 = ((($$02536)) + 4|0);\n     HEAP32[$$02536>>2] = $24;\n     $25 = HEAP32[$22>>2]|0;\n     $26 = (($25) + -16843009)|0;\n     $27 = $25 & -2139062144;\n     $28 = $27 ^ -2139062144;\n     $29 = $28 & $26;\n     $30 = ($29|0)==(0);\n     if ($30) {\n      $$02536 = $23;$$037 = $22;$24 = $25;\n     } else {\n      $$0$lcssa = $22;$$025$lcssa = $23;\n      break;\n     }\n    }\n   } else {\n    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;\n   }\n   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;\n   label = 8;\n  } else {\n   $$1$ph = $1;$$128$ph = $0;\n   label = 8;\n  }\n } while(0);\n if ((label|0) == 8) {\n  $31 = HEAP8[$$1$ph>>0]|0;\n  HEAP8[$$128$ph>>0] = $31;\n  $32 = ($31<<24>>24)==(0);\n  if ($32) {\n   $$029 = $$128$ph;\n  } else {\n   $$12834 = $$128$ph;$$135 = $$1$ph;\n   while(1) {\n    $33 = ((($$135)) + 1|0);\n    $34 = ((($$12834)) + 1|0);\n    $35 = HEAP8[$33>>0]|0;\n    HEAP8[$34>>0] = $35;\n    $36 = ($35<<24>>24)==(0);\n    if ($36) {\n     $$029 = $34;\n     break;\n    } else {\n     $$12834 = $34;$$135 = $33;\n    }\n   }\n  }\n }\n return ($$029|0);\n}\nfunction _fopen($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer = sp;\n $2 = HEAP8[$1>>0]|0;\n $3 = $2 << 24 >> 24;\n $memchr = (_memchr(31251,$3,4)|0);\n $4 = ($memchr|0)==(0|0);\n if ($4) {\n  $5 = (___errno_location()|0);\n  HEAP32[$5>>2] = 22;\n  $$0 = 0;\n } else {\n  $6 = (___fmodeflags($1)|0);\n  $7 = $6 | 32768;\n  HEAP32[$vararg_buffer>>2] = $0;\n  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n  HEAP32[$vararg_ptr1>>2] = $7;\n  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n  HEAP32[$vararg_ptr2>>2] = 438;\n  $8 = (___syscall5(5,($vararg_buffer|0))|0);\n  $9 = (___syscall_ret($8)|0);\n  $10 = ($9|0)<(0);\n  if ($10) {\n   $$0 = 0;\n  } else {\n   $11 = (___fdopen($9,$1)|0);\n   $12 = ($11|0)==(0|0);\n   if ($12) {\n    HEAP32[$vararg_buffer3>>2] = $9;\n    (___syscall6(6,($vararg_buffer3|0))|0);\n    $$0 = 0;\n   } else {\n    $$0 = $11;\n   }\n  }\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction _fclose($0) {\n $0 = $0|0;\n var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;\n var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 76|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ($2|0)>(-1);\n if ($3) {\n }\n $4 = HEAP32[$0>>2]|0;\n $5 = $4 & 1;\n $6 = ($5|0)!=(0);\n if (!($6)) {\n  ___lock(((31352)|0));\n  $7 = ((($0)) + 52|0);\n  $8 = HEAP32[$7>>2]|0;\n  $9 = ($8|0)==(0|0);\n  $10 = $8;\n  $$pre = ((($0)) + 56|0);\n  if (!($9)) {\n   $11 = HEAP32[$$pre>>2]|0;\n   $12 = ((($8)) + 56|0);\n   HEAP32[$12>>2] = $11;\n  }\n  $13 = HEAP32[$$pre>>2]|0;\n  $14 = ($13|0)==(0|0);\n  $15 = $13;\n  if (!($14)) {\n   $16 = ((($13)) + 52|0);\n   HEAP32[$16>>2] = $10;\n  }\n  $17 = HEAP32[(31348)>>2]|0;\n  $18 = ($17|0)==($0|0);\n  if ($18) {\n   HEAP32[(31348)>>2] = $15;\n  }\n  ___unlock(((31352)|0));\n }\n $19 = (_fflush($0)|0);\n $20 = ((($0)) + 12|0);\n $21 = HEAP32[$20>>2]|0;\n $22 = (FUNCTION_TABLE_ii[$21 & 63]($0)|0);\n $23 = $22 | $19;\n $24 = ((($0)) + 92|0);\n $25 = HEAP32[$24>>2]|0;\n $26 = ($25|0)==(0|0);\n if (!($26)) {\n  _free($25);\n }\n if (!($6)) {\n  _free($0);\n }\n return ($23|0);\n}\nfunction _fflush($0) {\n $0 = $0|0;\n var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n do {\n  if ($1) {\n   $8 = HEAP32[2605]|0;\n   $9 = ($8|0)==(0|0);\n   if ($9) {\n    $28 = 0;\n   } else {\n    $10 = HEAP32[2605]|0;\n    $11 = (_fflush($10)|0);\n    $28 = $11;\n   }\n   ___lock(((31352)|0));\n   $$02325 = HEAP32[(31348)>>2]|0;\n   $12 = ($$02325|0)==(0|0);\n   if ($12) {\n    $$024$lcssa = $28;\n   } else {\n    $$02327 = $$02325;$$02426 = $28;\n    while(1) {\n     $13 = ((($$02327)) + 76|0);\n     $14 = HEAP32[$13>>2]|0;\n     $15 = ($14|0)>(-1);\n     if ($15) {\n      $16 = (___lockfile($$02327)|0);\n      $24 = $16;\n     } else {\n      $24 = 0;\n     }\n     $17 = ((($$02327)) + 20|0);\n     $18 = HEAP32[$17>>2]|0;\n     $19 = ((($$02327)) + 28|0);\n     $20 = HEAP32[$19>>2]|0;\n     $21 = ($18>>>0)>($20>>>0);\n     if ($21) {\n      $22 = (___fflush_unlocked($$02327)|0);\n      $23 = $22 | $$02426;\n      $$1 = $23;\n     } else {\n      $$1 = $$02426;\n     }\n     $25 = ($24|0)==(0);\n     if (!($25)) {\n      ___unlockfile($$02327);\n     }\n     $26 = ((($$02327)) + 56|0);\n     $$023 = HEAP32[$26>>2]|0;\n     $27 = ($$023|0)==(0|0);\n     if ($27) {\n      $$024$lcssa = $$1;\n      break;\n     } else {\n      $$02327 = $$023;$$02426 = $$1;\n     }\n    }\n   }\n   ___unlock(((31352)|0));\n   $$0 = $$024$lcssa;\n  } else {\n   $2 = ((($0)) + 76|0);\n   $3 = HEAP32[$2>>2]|0;\n   $4 = ($3|0)>(-1);\n   if (!($4)) {\n    $5 = (___fflush_unlocked($0)|0);\n    $$0 = $5;\n    break;\n   }\n   $6 = (___lockfile($0)|0);\n   $phitmp = ($6|0)==(0);\n   $7 = (___fflush_unlocked($0)|0);\n   if ($phitmp) {\n    $$0 = $7;\n   } else {\n    ___unlockfile($0);\n    $$0 = $7;\n   }\n  }\n } while(0);\n return ($$0|0);\n}\nfunction ___fflush_unlocked($0) {\n $0 = $0|0;\n var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ((($0)) + 20|0);\n $2 = HEAP32[$1>>2]|0;\n $3 = ((($0)) + 28|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = ($2>>>0)>($4>>>0);\n if ($5) {\n  $6 = ((($0)) + 36|0);\n  $7 = HEAP32[$6>>2]|0;\n  (FUNCTION_TABLE_iiii[$7 & 127]($0,0,0)|0);\n  $8 = HEAP32[$1>>2]|0;\n  $9 = ($8|0)==(0|0);\n  if ($9) {\n   $$0 = -1;\n  } else {\n   label = 3;\n  }\n } else {\n  label = 3;\n }\n if ((label|0) == 3) {\n  $10 = ((($0)) + 4|0);\n  $11 = HEAP32[$10>>2]|0;\n  $12 = ((($0)) + 8|0);\n  $13 = HEAP32[$12>>2]|0;\n  $14 = ($11>>>0)<($13>>>0);\n  if ($14) {\n   $15 = ((($0)) + 40|0);\n   $16 = HEAP32[$15>>2]|0;\n   $17 = $11;\n   $18 = $13;\n   $19 = (($17) - ($18))|0;\n   (FUNCTION_TABLE_iiii[$16 & 127]($0,$19,1)|0);\n  }\n  $20 = ((($0)) + 16|0);\n  HEAP32[$20>>2] = 0;\n  HEAP32[$3>>2] = 0;\n  HEAP32[$1>>2] = 0;\n  HEAP32[$12>>2] = 0;\n  HEAP32[$10>>2] = 0;\n  $$0 = 0;\n }\n return ($$0|0);\n}\nfunction ___floatscan($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$$0340$i = 0, $$$0345$i = 0, $$$0380$i = 0, $$$0396$i = 0, $$$5350$i = 0, $$$5385$i = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0105$ph = 0, $$0106$ph = 0, $$0107$lcssa = 0, $$0107163 = 0, $$0113 = 0, $$0114 = 0.0, $$0133$i = 0, $$0142$i = 0, $$0146$i = 0, $$0148$i = 0, $$0151$i = 0.0;\n var $$0152$i = 0.0, $$0155$i = 0.0, $$0159$i = 0, $$0166$i = 0, $$0166169$i = 0, $$0166170$i = 0, $$0324$i = 0, $$0327480$i = 0, $$0328$i = 0, $$0329$i = 0, $$0331476$i = 0, $$0335486$i = 0, $$0336$lcssa$i = 0, $$0336453$i = 0, $$0336454$i = 0, $$0336455$i = 0, $$0336503$i = 0, $$0340$lcssa$i = 0, $$0340457$i = 0, $$0340458$i = 0;\n var $$0340459$i = 0, $$0340502$i = 0, $$0345$lcssa545$i = 0, $$0345484$i = 0, $$0355$i = 0.0, $$0356$i = 0.0, $$0360474$i = 0.0, $$0364$i = 0, $$0367$i = 0, $$0375$i = 0, $$0375$ph$i = 0, $$0380$lcssa544$i = 0, $$0380483$i = 0, $$0388$i = 0, $$0391$i = 0, $$0396$lcssa$i = 0, $$0396463$i = 0, $$0396464$i = 0, $$0396465$i = 0, $$0396499$i = 0;\n var $$1$i = 0.0, $$1$lcssa = 0, $$1$ph$i = 0, $$10$i = 0, $$1108 = 0, $$1147$i = 0, $$1149$i = 0, $$1153$i = 0.0, $$1156$i = 0.0, $$1160$i = 0, $$1164 = 0, $$1325$be$i = 0, $$1325$ph$i = 0, $$1330$i = 0, $$1332$i = 0, $$1357$i = 0.0, $$1361$i = 0.0, $$1365$i = 0, $$1368$i = 0, $$1368$ph438$i = 0;\n var $$1376$i = 0, $$1376$ph$i = 0, $$1376$ph549$i = 0, $$1389$lcssa$i = 0, $$1389501$i = 0, $$2 = 0, $$2$i = 0, $$2$i117 = 0, $$2$lcssa$i = 0, $$2109161 = 0, $$2144$i = 0, $$2150$i = 0, $$2154$i = 0.0, $$2157$i = 0.0, $$2161$i = 0, $$2338$i = 0, $$2342$i = 0, $$2347$ph439$i = 0, $$2362$i = 0.0, $$2366$i = 0;\n var $$2369$i = 0, $$2382$ph437$i = 0, $$2390$i = 0, $$2393$i = 0, $$2398$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3110 = 0, $$3145$i = 0, $$3158$lcssa$i = 0.0, $$3158179$i = 0.0, $$3162 = 0, $$3162$lcssa$i = 0, $$3162183$i = 0, $$3339493$i = 0, $$3343$i = 0, $$3359$i = 0.0, $$3363$i = 0.0, $$3370$i = 0, $$3378$i = 0;\n var $$3394$lcssa$i = 0, $$3394500$i = 0, $$3504$i = 0, $$4 = 0, $$4$i = 0.0, $$408$i = 0, $$4111 = 0, $$416$i = 0, $$4163$lcssa$i = 0, $$4163178$i = 0, $$4344485$i = 0, $$4349$i = 0, $$4349$ph$i = 0, $$4349$ph550$i = 0, $$4371$i = 0, $$4379$i = 0, $$4384$ph$i = 0, $$4384$ph435$i = 0, $$4395$i = 0, $$4475$i = 0;\n var $$5 = 0, $$5$$2369$i = 0, $$5$i = 0.0, $$5$i121 = 0, $$5$in$i = 0, $$5164$i = 0, $$5350478$i = 0, $$5385477$i = 0, $$6 = 0, $$6$i = 0, $$6373$ph$i = 0, $$6479$i = 0, $$9473$i = 0, $$in = 0, $$neg432$i = 0, $$neg433$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i119 = 0;\n var $$pre$phi202$iZ2D = 0.0, $$pre201$i = 0.0, $$promoted$i = 0, $$sink$off0$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;\n var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;\n var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;\n var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;\n var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0.0;\n var $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;\n var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;\n var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;\n var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;\n var $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;\n var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0, $286 = 0, $287 = 0.0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;\n var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0.0;\n var $313 = 0.0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0.0, $329 = 0, $33 = 0, $330 = 0;\n var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;\n var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;\n var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;\n var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;\n var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;\n var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0.0, $428 = 0.0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;\n var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0.0, $445 = 0.0, $446 = 0.0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0.0, $457 = 0.0;\n var $458 = 0.0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0.0, $469 = 0.0, $47 = 0, $470 = 0.0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;\n var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0.0, $483 = 0, $484 = 0.0, $485 = 0.0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0.0, $49 = 0, $490 = 0.0, $491 = 0, $492 = 0, $493 = 0;\n var $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0.0, $501 = 0.0, $502 = 0.0, $503 = 0, $504 = 0, $505 = 0, $506 = 0.0, $507 = 0.0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;\n var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;\n var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0.0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;\n var $548 = 0, $549 = 0, $55 = 0.0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;\n var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;\n var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;\n var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;\n var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0.0, $633 = 0.0, $634 = 0, $635 = 0.0, $636 = 0.0, $637 = 0;\n var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;\n var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0.0, $664 = 0.0, $665 = 0, $666 = 0, $667 = 0, $668 = 0.0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0, $673 = 0;\n var $674 = 0.0, $675 = 0, $676 = 0.0, $677 = 0.0, $678 = 0.0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0.0, $683 = 0, $684 = 0, $685 = 0, $686 = 0.0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;\n var $692 = 0.0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;\n var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;\n var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i = 0, $exitcond$i = 0;\n var $exitcond541$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i118 = 0, $or$cond168$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond410$i = 0, $or$cond412$i = 0, $or$cond413$i = 0, $or$cond414$i = 0, $or$cond417$i = 0, $or$cond418$i = 0, $or$cond5 = 0, $or$cond571$i = 0, $or$cond6$i = 0, $or$cond6$i122 = 0, $or$cond7 = 0, $or$cond9 = 0, $or$cond9$i = 0;\n var $storemerge$i = 0, $sum$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);\n $3 = sp;\n switch ($1|0) {\n case 0:  {\n  $$0105$ph = -149;$$0106$ph = 24;\n  label = 4;\n  break;\n }\n case 1:  {\n  $$0105$ph = -1074;$$0106$ph = 53;\n  label = 4;\n  break;\n }\n case 2:  {\n  $$0105$ph = -1074;$$0106$ph = 53;\n  label = 4;\n  break;\n }\n default: {\n  $$0114 = 0.0;\n }\n }\n L4: do {\n  if ((label|0) == 4) {\n   $4 = ((($0)) + 4|0);\n   $5 = ((($0)) + 100|0);\n   while(1) {\n    $6 = HEAP32[$4>>2]|0;\n    $7 = HEAP32[$5>>2]|0;\n    $8 = ($6>>>0)<($7>>>0);\n    if ($8) {\n     $9 = ((($6)) + 1|0);\n     HEAP32[$4>>2] = $9;\n     $10 = HEAP8[$6>>0]|0;\n     $11 = $10&255;\n     $13 = $11;\n    } else {\n     $12 = (___shgetc($0)|0);\n     $13 = $12;\n    }\n    $14 = (_isspace($13)|0);\n    $15 = ($14|0)==(0);\n    if ($15) {\n     break;\n    }\n   }\n   $16 = ($13|0)==(45);\n   L13: do {\n    switch ($13|0) {\n    case 43: case 45:  {\n     $17 = $16&1;\n     $18 = $17 << 1;\n     $19 = (1 - ($18))|0;\n     $20 = HEAP32[$4>>2]|0;\n     $21 = HEAP32[$5>>2]|0;\n     $22 = ($20>>>0)<($21>>>0);\n     if ($22) {\n      $23 = ((($20)) + 1|0);\n      HEAP32[$4>>2] = $23;\n      $24 = HEAP8[$20>>0]|0;\n      $25 = $24&255;\n      $$0 = $25;$$0113 = $19;\n      break L13;\n     } else {\n      $26 = (___shgetc($0)|0);\n      $$0 = $26;$$0113 = $19;\n      break L13;\n     }\n     break;\n    }\n    default: {\n     $$0 = $13;$$0113 = 1;\n    }\n    }\n   } while(0);\n   $$0107163 = 0;$$1164 = $$0;\n   while(1) {\n    $27 = $$1164 | 32;\n    $28 = (31238 + ($$0107163)|0);\n    $29 = HEAP8[$28>>0]|0;\n    $30 = $29 << 24 >> 24;\n    $31 = ($27|0)==($30|0);\n    if (!($31)) {\n     $$0107$lcssa = $$0107163;$$1$lcssa = $$1164;\n     break;\n    }\n    $32 = ($$0107163>>>0)<(7);\n    do {\n     if ($32) {\n      $33 = HEAP32[$4>>2]|0;\n      $34 = HEAP32[$5>>2]|0;\n      $35 = ($33>>>0)<($34>>>0);\n      if ($35) {\n       $36 = ((($33)) + 1|0);\n       HEAP32[$4>>2] = $36;\n       $37 = HEAP8[$33>>0]|0;\n       $38 = $37&255;\n       $$2 = $38;\n       break;\n      } else {\n       $39 = (___shgetc($0)|0);\n       $$2 = $39;\n       break;\n      }\n     } else {\n      $$2 = $$1164;\n     }\n    } while(0);\n    $40 = (($$0107163) + 1)|0;\n    $41 = ($40>>>0)<(8);\n    if ($41) {\n     $$0107163 = $40;$$1164 = $$2;\n    } else {\n     $$0107$lcssa = $40;$$1$lcssa = $$2;\n     break;\n    }\n   }\n   L29: do {\n    switch ($$0107$lcssa|0) {\n    case 8:  {\n     break;\n    }\n    case 3:  {\n     label = 23;\n     break;\n    }\n    default: {\n     $42 = ($$0107$lcssa>>>0)>(3);\n     $43 = ($2|0)!=(0);\n     $or$cond5 = $43 & $42;\n     if ($or$cond5) {\n      $44 = ($$0107$lcssa|0)==(8);\n      if ($44) {\n       break L29;\n      } else {\n       label = 23;\n       break L29;\n      }\n     }\n     $57 = ($$0107$lcssa|0)==(0);\n     L34: do {\n      if ($57) {\n       $$2109161 = 0;$$3162 = $$1$lcssa;\n       while(1) {\n        $58 = $$3162 | 32;\n        $59 = (31247 + ($$2109161)|0);\n        $60 = HEAP8[$59>>0]|0;\n        $61 = $60 << 24 >> 24;\n        $62 = ($58|0)==($61|0);\n        if (!($62)) {\n         $$3110 = $$2109161;$$5 = $$3162;\n         break L34;\n        }\n        $63 = ($$2109161>>>0)<(2);\n        do {\n         if ($63) {\n          $64 = HEAP32[$4>>2]|0;\n          $65 = HEAP32[$5>>2]|0;\n          $66 = ($64>>>0)<($65>>>0);\n          if ($66) {\n           $67 = ((($64)) + 1|0);\n           HEAP32[$4>>2] = $67;\n           $68 = HEAP8[$64>>0]|0;\n           $69 = $68&255;\n           $$4 = $69;\n           break;\n          } else {\n           $70 = (___shgetc($0)|0);\n           $$4 = $70;\n           break;\n          }\n         } else {\n          $$4 = $$3162;\n         }\n        } while(0);\n        $71 = (($$2109161) + 1)|0;\n        $72 = ($71>>>0)<(3);\n        if ($72) {\n         $$2109161 = $71;$$3162 = $$4;\n        } else {\n         $$3110 = $71;$$5 = $$4;\n         break;\n        }\n       }\n      } else {\n       $$3110 = $$0107$lcssa;$$5 = $$1$lcssa;\n      }\n     } while(0);\n     switch ($$3110|0) {\n     case 3:  {\n      $73 = HEAP32[$4>>2]|0;\n      $74 = HEAP32[$5>>2]|0;\n      $75 = ($73>>>0)<($74>>>0);\n      if ($75) {\n       $76 = ((($73)) + 1|0);\n       HEAP32[$4>>2] = $76;\n       $77 = HEAP8[$73>>0]|0;\n       $78 = $77&255;\n       $80 = $78;\n      } else {\n       $79 = (___shgetc($0)|0);\n       $80 = $79;\n      }\n      $81 = ($80|0)==(40);\n      if ($81) {\n       $$4111 = 1;\n      } else {\n       $82 = HEAP32[$5>>2]|0;\n       $83 = ($82|0)==(0|0);\n       if ($83) {\n        $$0114 = nan;\n        break L4;\n       }\n       $84 = HEAP32[$4>>2]|0;\n       $85 = ((($84)) + -1|0);\n       HEAP32[$4>>2] = $85;\n       $$0114 = nan;\n       break L4;\n      }\n      while(1) {\n       $86 = HEAP32[$4>>2]|0;\n       $87 = HEAP32[$5>>2]|0;\n       $88 = ($86>>>0)<($87>>>0);\n       if ($88) {\n        $89 = ((($86)) + 1|0);\n        HEAP32[$4>>2] = $89;\n        $90 = HEAP8[$86>>0]|0;\n        $91 = $90&255;\n        $94 = $91;\n       } else {\n        $92 = (___shgetc($0)|0);\n        $94 = $92;\n       }\n       $93 = (($94) + -48)|0;\n       $95 = ($93>>>0)<(10);\n       $96 = (($94) + -65)|0;\n       $97 = ($96>>>0)<(26);\n       $or$cond = $95 | $97;\n       if (!($or$cond)) {\n        $98 = (($94) + -97)|0;\n        $99 = ($98>>>0)<(26);\n        $100 = ($94|0)==(95);\n        $or$cond7 = $100 | $99;\n        if (!($or$cond7)) {\n         break;\n        }\n       }\n       $112 = (($$4111) + 1)|0;\n       $$4111 = $112;\n      }\n      $101 = ($94|0)==(41);\n      if ($101) {\n       $$0114 = nan;\n       break L4;\n      }\n      $102 = HEAP32[$5>>2]|0;\n      $103 = ($102|0)==(0|0);\n      if (!($103)) {\n       $104 = HEAP32[$4>>2]|0;\n       $105 = ((($104)) + -1|0);\n       HEAP32[$4>>2] = $105;\n      }\n      if (!($43)) {\n       $107 = (___errno_location()|0);\n       HEAP32[$107>>2] = 22;\n       ___shlim($0,0);\n       $$0114 = 0.0;\n       break L4;\n      }\n      $106 = ($$4111|0)==(0);\n      if ($106) {\n       $$0114 = nan;\n       break L4;\n      } else {\n       $$in = $$4111;\n      }\n      while(1) {\n       $108 = (($$in) + -1)|0;\n       if (!($103)) {\n        $109 = HEAP32[$4>>2]|0;\n        $110 = ((($109)) + -1|0);\n        HEAP32[$4>>2] = $110;\n       }\n       $111 = ($108|0)==(0);\n       if ($111) {\n        $$0114 = nan;\n        break L4;\n       } else {\n        $$in = $108;\n       }\n      }\n      break;\n     }\n     case 0:  {\n      $118 = ($$5|0)==(48);\n      do {\n       if ($118) {\n        $119 = HEAP32[$4>>2]|0;\n        $120 = HEAP32[$5>>2]|0;\n        $121 = ($119>>>0)<($120>>>0);\n        if ($121) {\n         $122 = ((($119)) + 1|0);\n         HEAP32[$4>>2] = $122;\n         $123 = HEAP8[$119>>0]|0;\n         $124 = $123&255;\n         $127 = $124;\n        } else {\n         $125 = (___shgetc($0)|0);\n         $127 = $125;\n        }\n        $126 = $127 | 32;\n        $128 = ($126|0)==(120);\n        if (!($128)) {\n         $329 = HEAP32[$5>>2]|0;\n         $330 = ($329|0)==(0|0);\n         if ($330) {\n          $$6 = 48;\n          break;\n         }\n         $331 = HEAP32[$4>>2]|0;\n         $332 = ((($331)) + -1|0);\n         HEAP32[$4>>2] = $332;\n         $$6 = 48;\n         break;\n        }\n        $129 = HEAP32[$4>>2]|0;\n        $130 = HEAP32[$5>>2]|0;\n        $131 = ($129>>>0)<($130>>>0);\n        if ($131) {\n         $132 = ((($129)) + 1|0);\n         HEAP32[$4>>2] = $132;\n         $133 = HEAP8[$129>>0]|0;\n         $134 = $133&255;\n         $$0$i = $134;$$0142$i = 0;\n        } else {\n         $135 = (___shgetc($0)|0);\n         $$0$i = $135;$$0142$i = 0;\n        }\n        L94: while(1) {\n         switch ($$0$i|0) {\n         case 46:  {\n          label = 74;\n          break L94;\n          break;\n         }\n         case 48:  {\n          break;\n         }\n         default: {\n          $$0146$i = 0;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $$0$i;$$2144$i = $$0142$i;$172 = 0;$174 = 0;$216 = 0;$218 = 0;\n          break L94;\n         }\n         }\n         $136 = HEAP32[$4>>2]|0;\n         $137 = HEAP32[$5>>2]|0;\n         $138 = ($136>>>0)<($137>>>0);\n         if ($138) {\n          $139 = ((($136)) + 1|0);\n          HEAP32[$4>>2] = $139;\n          $140 = HEAP8[$136>>0]|0;\n          $141 = $140&255;\n          $$0$i = $141;$$0142$i = 1;\n          continue;\n         } else {\n          $142 = (___shgetc($0)|0);\n          $$0$i = $142;$$0142$i = 1;\n          continue;\n         }\n        }\n        if ((label|0) == 74) {\n         $143 = HEAP32[$4>>2]|0;\n         $144 = HEAP32[$5>>2]|0;\n         $145 = ($143>>>0)<($144>>>0);\n         if ($145) {\n          $146 = ((($143)) + 1|0);\n          HEAP32[$4>>2] = $146;\n          $147 = HEAP8[$143>>0]|0;\n          $148 = $147&255;\n          $$1$ph$i = $148;\n         } else {\n          $149 = (___shgetc($0)|0);\n          $$1$ph$i = $149;\n         }\n         $150 = ($$1$ph$i|0)==(48);\n         if ($150) {\n          $158 = 0;$159 = 0;\n          while(1) {\n           $151 = HEAP32[$4>>2]|0;\n           $152 = HEAP32[$5>>2]|0;\n           $153 = ($151>>>0)<($152>>>0);\n           if ($153) {\n            $154 = ((($151)) + 1|0);\n            HEAP32[$4>>2] = $154;\n            $155 = HEAP8[$151>>0]|0;\n            $156 = $155&255;\n            $162 = $156;\n           } else {\n            $157 = (___shgetc($0)|0);\n            $162 = $157;\n           }\n           $160 = (_i64Add(($158|0),($159|0),-1,-1)|0);\n           $161 = tempRet0;\n           $163 = ($162|0)==(48);\n           if ($163) {\n            $158 = $160;$159 = $161;\n           } else {\n            $$0146$i = 1;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $162;$$2144$i = 1;$172 = 0;$174 = 0;$216 = $160;$218 = $161;\n            break;\n           }\n          }\n         } else {\n          $$0146$i = 1;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $$1$ph$i;$$2144$i = $$0142$i;$172 = 0;$174 = 0;$216 = 0;$218 = 0;\n         }\n        }\n        while(1) {\n         $164 = (($$2$i) + -48)|0;\n         $165 = ($164>>>0)<(10);\n         $$pre$i = $$2$i | 32;\n         if ($165) {\n          label = 86;\n         } else {\n          $166 = (($$pre$i) + -97)|0;\n          $167 = ($166>>>0)<(6);\n          $168 = ($$2$i|0)==(46);\n          $or$cond6$i = $168 | $167;\n          if (!($or$cond6$i)) {\n           $$2$lcssa$i = $$2$i;\n           break;\n          }\n          if ($168) {\n           $169 = ($$0146$i|0)==(0);\n           if ($169) {\n            $$1147$i = 1;$$2150$i = $$0148$i;$$2154$i = $$0152$i;$$2157$i = $$0155$i;$$2161$i = $$0159$i;$$3145$i = $$2144$i;$693 = $174;$694 = $172;$695 = $174;$696 = $172;\n           } else {\n            $$2$lcssa$i = 46;\n            break;\n           }\n          } else {\n           label = 86;\n          }\n         }\n         if ((label|0) == 86) {\n          label = 0;\n          $170 = ($$2$i|0)>(57);\n          $171 = (($$pre$i) + -87)|0;\n          $$0133$i = $170 ? $171 : $164;\n          $173 = ($172|0)<(0);\n          $175 = ($174>>>0)<(8);\n          $176 = ($172|0)==(0);\n          $177 = $176 & $175;\n          $178 = $173 | $177;\n          do {\n           if ($178) {\n            $179 = $$0159$i << 4;\n            $180 = (($$0133$i) + ($179))|0;\n            $$1149$i = $$0148$i;$$1153$i = $$0152$i;$$1156$i = $$0155$i;$$1160$i = $180;\n           } else {\n            $181 = ($172|0)<(0);\n            $182 = ($174>>>0)<(14);\n            $183 = ($172|0)==(0);\n            $184 = $183 & $182;\n            $185 = $181 | $184;\n            if ($185) {\n             $186 = (+($$0133$i|0));\n             $187 = $$0152$i * 0.0625;\n             $188 = $187 * $186;\n             $189 = $$0155$i + $188;\n             $$1149$i = $$0148$i;$$1153$i = $187;$$1156$i = $189;$$1160$i = $$0159$i;\n             break;\n            }\n            $190 = ($$0133$i|0)==(0);\n            $191 = ($$0148$i|0)!=(0);\n            $or$cond$i = $191 | $190;\n            if ($or$cond$i) {\n             $$1149$i = $$0148$i;$$1153$i = $$0152$i;$$1156$i = $$0155$i;$$1160$i = $$0159$i;\n            } else {\n             $192 = $$0152$i * 0.5;\n             $193 = $$0155$i + $192;\n             $$1149$i = 1;$$1153$i = $$0152$i;$$1156$i = $193;$$1160$i = $$0159$i;\n            }\n           }\n          } while(0);\n          $194 = (_i64Add(($174|0),($172|0),1,0)|0);\n          $195 = tempRet0;\n          $$1147$i = $$0146$i;$$2150$i = $$1149$i;$$2154$i = $$1153$i;$$2157$i = $$1156$i;$$2161$i = $$1160$i;$$3145$i = 1;$693 = $216;$694 = $218;$695 = $194;$696 = $195;\n         }\n         $196 = HEAP32[$4>>2]|0;\n         $197 = HEAP32[$5>>2]|0;\n         $198 = ($196>>>0)<($197>>>0);\n         if ($198) {\n          $199 = ((($196)) + 1|0);\n          HEAP32[$4>>2] = $199;\n          $200 = HEAP8[$196>>0]|0;\n          $201 = $200&255;\n          $$0146$i = $$1147$i;$$0148$i = $$2150$i;$$0152$i = $$2154$i;$$0155$i = $$2157$i;$$0159$i = $$2161$i;$$2$i = $201;$$2144$i = $$3145$i;$172 = $696;$174 = $695;$216 = $693;$218 = $694;\n          continue;\n         } else {\n          $202 = (___shgetc($0)|0);\n          $$0146$i = $$1147$i;$$0148$i = $$2150$i;$$0152$i = $$2154$i;$$0155$i = $$2157$i;$$0159$i = $$2161$i;$$2$i = $202;$$2144$i = $$3145$i;$172 = $696;$174 = $695;$216 = $693;$218 = $694;\n          continue;\n         }\n        }\n        $203 = ($$2144$i|0)==(0);\n        if ($203) {\n         $204 = HEAP32[$5>>2]|0;\n         $205 = ($204|0)==(0|0);\n         if (!($205)) {\n          $206 = HEAP32[$4>>2]|0;\n          $207 = ((($206)) + -1|0);\n          HEAP32[$4>>2] = $207;\n         }\n         $208 = ($2|0)==(0);\n         if ($208) {\n          ___shlim($0,0);\n         } else {\n          if (!($205)) {\n           $209 = HEAP32[$4>>2]|0;\n           $210 = ((($209)) + -1|0);\n           HEAP32[$4>>2] = $210;\n           $211 = ($$0146$i|0)==(0);\n           if (!($211)) {\n            $212 = ((($209)) + -2|0);\n            HEAP32[$4>>2] = $212;\n           }\n          }\n         }\n         $213 = (+($$0113|0));\n         $214 = $213 * 0.0;\n         $$0114 = $214;\n         break L4;\n        }\n        $215 = ($$0146$i|0)==(0);\n        $217 = $215 ? $174 : $216;\n        $219 = $215 ? $172 : $218;\n        $220 = ($172|0)<(0);\n        $221 = ($174>>>0)<(8);\n        $222 = ($172|0)==(0);\n        $223 = $222 & $221;\n        $224 = $220 | $223;\n        if ($224) {\n         $$3162183$i = $$0159$i;$226 = $174;$227 = $172;\n         while(1) {\n          $225 = $$3162183$i << 4;\n          $228 = (_i64Add(($226|0),($227|0),1,0)|0);\n          $229 = tempRet0;\n          $230 = ($229|0)<(0);\n          $231 = ($228>>>0)<(8);\n          $232 = ($229|0)==(0);\n          $233 = $232 & $231;\n          $234 = $230 | $233;\n          if ($234) {\n           $$3162183$i = $225;$226 = $228;$227 = $229;\n          } else {\n           $$3162$lcssa$i = $225;\n           break;\n          }\n         }\n        } else {\n         $$3162$lcssa$i = $$0159$i;\n        }\n        $235 = $$2$lcssa$i | 32;\n        $236 = ($235|0)==(112);\n        if ($236) {\n         $237 = (_scanexp($0,$2)|0);\n         $238 = tempRet0;\n         $239 = ($237|0)==(0);\n         $240 = ($238|0)==(-2147483648);\n         $241 = $239 & $240;\n         if ($241) {\n          $242 = ($2|0)==(0);\n          if ($242) {\n           ___shlim($0,0);\n           $$0114 = 0.0;\n           break L4;\n          }\n          $243 = HEAP32[$5>>2]|0;\n          $244 = ($243|0)==(0|0);\n          if ($244) {\n           $255 = 0;$256 = 0;\n          } else {\n           $245 = HEAP32[$4>>2]|0;\n           $246 = ((($245)) + -1|0);\n           HEAP32[$4>>2] = $246;\n           $255 = 0;$256 = 0;\n          }\n         } else {\n          $255 = $237;$256 = $238;\n         }\n        } else {\n         $247 = HEAP32[$5>>2]|0;\n         $248 = ($247|0)==(0|0);\n         if ($248) {\n          $255 = 0;$256 = 0;\n         } else {\n          $249 = HEAP32[$4>>2]|0;\n          $250 = ((($249)) + -1|0);\n          HEAP32[$4>>2] = $250;\n          $255 = 0;$256 = 0;\n         }\n        }\n        $251 = (_bitshift64Shl(($217|0),($219|0),2)|0);\n        $252 = tempRet0;\n        $253 = (_i64Add(($251|0),($252|0),-32,-1)|0);\n        $254 = tempRet0;\n        $257 = (_i64Add(($253|0),($254|0),($255|0),($256|0))|0);\n        $258 = tempRet0;\n        $259 = ($$3162$lcssa$i|0)==(0);\n        if ($259) {\n         $260 = (+($$0113|0));\n         $261 = $260 * 0.0;\n         $$0114 = $261;\n         break L4;\n        }\n        $262 = (0 - ($$0105$ph))|0;\n        $263 = ($258|0)>(0);\n        $264 = ($257>>>0)>($262>>>0);\n        $265 = ($258|0)==(0);\n        $266 = $265 & $264;\n        $267 = $263 | $266;\n        if ($267) {\n         $268 = (___errno_location()|0);\n         HEAP32[$268>>2] = 34;\n         $269 = (+($$0113|0));\n         $270 = $269 * 1.7976931348623157E+308;\n         $271 = $270 * 1.7976931348623157E+308;\n         $$0114 = $271;\n         break L4;\n        }\n        $272 = (($$0105$ph) + -106)|0;\n        $273 = ($272|0)<(0);\n        $274 = $273 << 31 >> 31;\n        $275 = ($258|0)<($274|0);\n        $276 = ($257>>>0)<($272>>>0);\n        $277 = ($258|0)==($274|0);\n        $278 = $277 & $276;\n        $279 = $275 | $278;\n        if ($279) {\n         $281 = (___errno_location()|0);\n         HEAP32[$281>>2] = 34;\n         $282 = (+($$0113|0));\n         $283 = $282 * 2.2250738585072014E-308;\n         $284 = $283 * 2.2250738585072014E-308;\n         $$0114 = $284;\n         break L4;\n        }\n        $280 = ($$3162$lcssa$i|0)>(-1);\n        if ($280) {\n         $$3158179$i = $$0155$i;$$4163178$i = $$3162$lcssa$i;$290 = $257;$291 = $258;\n         while(1) {\n          $285 = !($$3158179$i >= 0.5);\n          $286 = $$4163178$i << 1;\n          $287 = $$3158179$i + -1.0;\n          $288 = $285&1;\n          $289 = $288 | $286;\n          $$5164$i = $289 ^ 1;\n          $$pn$i = $285 ? $$3158179$i : $287;\n          $$4$i = $$3158179$i + $$pn$i;\n          $292 = (_i64Add(($290|0),($291|0),-1,-1)|0);\n          $293 = tempRet0;\n          $294 = ($289|0)>(-1);\n          if ($294) {\n           $$3158179$i = $$4$i;$$4163178$i = $$5164$i;$290 = $292;$291 = $293;\n          } else {\n           $$3158$lcssa$i = $$4$i;$$4163$lcssa$i = $$5164$i;$299 = $292;$300 = $293;\n           break;\n          }\n         }\n        } else {\n         $$3158$lcssa$i = $$0155$i;$$4163$lcssa$i = $$3162$lcssa$i;$299 = $257;$300 = $258;\n        }\n        $295 = ($$0105$ph|0)<(0);\n        $296 = $295 << 31 >> 31;\n        $297 = (_i64Subtract(32,0,($$0105$ph|0),($296|0))|0);\n        $298 = tempRet0;\n        $301 = (_i64Add(($299|0),($300|0),($297|0),($298|0))|0);\n        $302 = tempRet0;\n        $303 = (0)>($302|0);\n        $304 = ($$0106$ph>>>0)>($301>>>0);\n        $305 = (0)==($302|0);\n        $306 = $305 & $304;\n        $307 = $303 | $306;\n        if ($307) {\n         $308 = ($301|0)<(0);\n         if ($308) {\n          $$0166170$i = 0;$311 = 84;\n          label = 127;\n         } else {\n          $$0166$i = $301;\n          label = 125;\n         }\n        } else {\n         $$0166$i = $$0106$ph;\n         label = 125;\n        }\n        if ((label|0) == 125) {\n         $309 = ($$0166$i|0)<(53);\n         $310 = (84 - ($$0166$i))|0;\n         if ($309) {\n          $$0166170$i = $$0166$i;$311 = $310;\n          label = 127;\n         } else {\n          $$pre201$i = (+($$0113|0));\n          $$0151$i = 0.0;$$0166169$i = $$0166$i;$$pre$phi202$iZ2D = $$pre201$i;\n         }\n        }\n        if ((label|0) == 127) {\n         $312 = (+_scalbn(1.0,$311));\n         $313 = (+($$0113|0));\n         $314 = (+_copysignl($312,$313));\n         $$0151$i = $314;$$0166169$i = $$0166170$i;$$pre$phi202$iZ2D = $313;\n        }\n        $315 = ($$0166169$i|0)<(32);\n        $316 = $$3158$lcssa$i != 0.0;\n        $or$cond4$i = $316 & $315;\n        $317 = $$4163$lcssa$i & 1;\n        $318 = ($317|0)==(0);\n        $or$cond168$i = $318 & $or$cond4$i;\n        $319 = $or$cond168$i&1;\n        $$6$i = (($319) + ($$4163$lcssa$i))|0;\n        $$5$i = $or$cond168$i ? 0.0 : $$3158$lcssa$i;\n        $320 = (+($$6$i>>>0));\n        $321 = $$pre$phi202$iZ2D * $320;\n        $322 = $$0151$i + $321;\n        $323 = $$pre$phi202$iZ2D * $$5$i;\n        $324 = $323 + $322;\n        $325 = $324 - $$0151$i;\n        $326 = $325 != 0.0;\n        if (!($326)) {\n         $327 = (___errno_location()|0);\n         HEAP32[$327>>2] = 34;\n        }\n        $328 = (+_scalbnl($325,$299));\n        $$0114 = $328;\n        break L4;\n       } else {\n        $$6 = $$5;\n       }\n      } while(0);\n      $sum$i = (($$0105$ph) + ($$0106$ph))|0;\n      $333 = (0 - ($sum$i))|0;\n      $$0324$i = $$6;$$0391$i = 0;\n      L184: while(1) {\n       switch ($$0324$i|0) {\n       case 46:  {\n        label = 138;\n        break L184;\n        break;\n       }\n       case 48:  {\n        break;\n       }\n       default: {\n        $$0388$i = 0;$$2$i117 = $$0324$i;$$2393$i = $$0391$i;$697 = 0;$698 = 0;\n        break L184;\n       }\n       }\n       $334 = HEAP32[$4>>2]|0;\n       $335 = HEAP32[$5>>2]|0;\n       $336 = ($334>>>0)<($335>>>0);\n       if ($336) {\n        $337 = ((($334)) + 1|0);\n        HEAP32[$4>>2] = $337;\n        $338 = HEAP8[$334>>0]|0;\n        $339 = $338&255;\n        $$0324$i = $339;$$0391$i = 1;\n        continue;\n       } else {\n        $340 = (___shgetc($0)|0);\n        $$0324$i = $340;$$0391$i = 1;\n        continue;\n       }\n      }\n      if ((label|0) == 138) {\n       $341 = HEAP32[$4>>2]|0;\n       $342 = HEAP32[$5>>2]|0;\n       $343 = ($341>>>0)<($342>>>0);\n       if ($343) {\n        $344 = ((($341)) + 1|0);\n        HEAP32[$4>>2] = $344;\n        $345 = HEAP8[$341>>0]|0;\n        $346 = $345&255;\n        $$1325$ph$i = $346;\n       } else {\n        $347 = (___shgetc($0)|0);\n        $$1325$ph$i = $347;\n       }\n       $348 = ($$1325$ph$i|0)==(48);\n       if ($348) {\n        $349 = 0;$350 = 0;\n        while(1) {\n         $351 = (_i64Add(($349|0),($350|0),-1,-1)|0);\n         $352 = tempRet0;\n         $353 = HEAP32[$4>>2]|0;\n         $354 = HEAP32[$5>>2]|0;\n         $355 = ($353>>>0)<($354>>>0);\n         if ($355) {\n          $356 = ((($353)) + 1|0);\n          HEAP32[$4>>2] = $356;\n          $357 = HEAP8[$353>>0]|0;\n          $358 = $357&255;\n          $$1325$be$i = $358;\n         } else {\n          $359 = (___shgetc($0)|0);\n          $$1325$be$i = $359;\n         }\n         $360 = ($$1325$be$i|0)==(48);\n         if ($360) {\n          $349 = $351;$350 = $352;\n         } else {\n          $$0388$i = 1;$$2$i117 = $$1325$be$i;$$2393$i = 1;$697 = $351;$698 = $352;\n          break;\n         }\n        }\n       } else {\n        $$0388$i = 1;$$2$i117 = $$1325$ph$i;$$2393$i = $$0391$i;$697 = 0;$698 = 0;\n       }\n      }\n      HEAP32[$3>>2] = 0;\n      $361 = (($$2$i117) + -48)|0;\n      $362 = ($361>>>0)<(10);\n      $363 = ($$2$i117|0)==(46);\n      $364 = $363 | $362;\n      L203: do {\n       if ($364) {\n        $365 = ((($3)) + 496|0);\n        $$0336503$i = 0;$$0340502$i = 0;$$0396499$i = 0;$$1389501$i = $$0388$i;$$3394500$i = $$2393$i;$$3504$i = $$2$i117;$368 = 0;$369 = 0;$699 = $363;$700 = $361;$701 = $697;$702 = $698;\n        L205: while(1) {\n         do {\n          if ($699) {\n           $cond$i = ($$1389501$i|0)==(0);\n           if ($cond$i) {\n            $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = 1;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $368;$704 = $369;$705 = $368;$706 = $369;\n           } else {\n            break L205;\n           }\n          } else {\n           $367 = ($$0340502$i|0)<(125);\n           $370 = (_i64Add(($368|0),($369|0),1,0)|0);\n           $371 = tempRet0;\n           $372 = ($$3504$i|0)!=(48);\n           if (!($367)) {\n            if (!($372)) {\n             $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = $$1389501$i;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $701;$704 = $702;$705 = $370;$706 = $371;\n             break;\n            }\n            $382 = HEAP32[$365>>2]|0;\n            $383 = $382 | 1;\n            HEAP32[$365>>2] = $383;\n            $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = $$1389501$i;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $701;$704 = $702;$705 = $370;$706 = $371;\n            break;\n           }\n           $$$0396$i = $372 ? $370 : $$0396499$i;\n           $373 = ($$0336503$i|0)==(0);\n           $374 = (($3) + ($$0340502$i<<2)|0);\n           if ($373) {\n            $storemerge$i = $700;\n           } else {\n            $375 = (($$3504$i) + -48)|0;\n            $376 = HEAP32[$374>>2]|0;\n            $377 = ($376*10)|0;\n            $378 = (($375) + ($377))|0;\n            $storemerge$i = $378;\n           }\n           HEAP32[$374>>2] = $storemerge$i;\n           $379 = (($$0336503$i) + 1)|0;\n           $380 = ($379|0)==(9);\n           $381 = $380&1;\n           $$$0340$i = (($381) + ($$0340502$i))|0;\n           $$408$i = $380 ? 0 : $379;\n           $$2338$i = $$408$i;$$2342$i = $$$0340$i;$$2390$i = $$1389501$i;$$2398$i = $$$0396$i;$$4395$i = 1;$703 = $701;$704 = $702;$705 = $370;$706 = $371;\n          }\n         } while(0);\n         $384 = HEAP32[$4>>2]|0;\n         $385 = HEAP32[$5>>2]|0;\n         $386 = ($384>>>0)<($385>>>0);\n         if ($386) {\n          $387 = ((($384)) + 1|0);\n          HEAP32[$4>>2] = $387;\n          $388 = HEAP8[$384>>0]|0;\n          $389 = $388&255;\n          $$3$be$i = $389;\n         } else {\n          $390 = (___shgetc($0)|0);\n          $$3$be$i = $390;\n         }\n         $391 = (($$3$be$i) + -48)|0;\n         $392 = ($391>>>0)<(10);\n         $393 = ($$3$be$i|0)==(46);\n         $394 = $393 | $392;\n         if ($394) {\n          $$0336503$i = $$2338$i;$$0340502$i = $$2342$i;$$0396499$i = $$2398$i;$$1389501$i = $$2390$i;$$3394500$i = $$4395$i;$$3504$i = $$3$be$i;$368 = $705;$369 = $706;$699 = $393;$700 = $391;$701 = $703;$702 = $704;\n         } else {\n          $$0336$lcssa$i = $$2338$i;$$0340$lcssa$i = $$2342$i;$$0396$lcssa$i = $$2398$i;$$1389$lcssa$i = $$2390$i;$$3$lcssa$i = $$3$be$i;$$3394$lcssa$i = $$4395$i;$396 = $703;$397 = $705;$399 = $704;$400 = $706;\n          label = 161;\n          break L203;\n         }\n        }\n        $366 = ($$3394500$i|0)!=(0);\n        $$0336455$i = $$0336503$i;$$0340459$i = $$0340502$i;$$0396465$i = $$0396499$i;$707 = $368;$708 = $369;$709 = $701;$710 = $702;$711 = $366;\n        label = 169;\n       } else {\n        $$0336$lcssa$i = 0;$$0340$lcssa$i = 0;$$0396$lcssa$i = 0;$$1389$lcssa$i = $$0388$i;$$3$lcssa$i = $$2$i117;$$3394$lcssa$i = $$2393$i;$396 = $697;$397 = 0;$399 = $698;$400 = 0;\n        label = 161;\n       }\n      } while(0);\n      do {\n       if ((label|0) == 161) {\n        $395 = ($$1389$lcssa$i|0)==(0);\n        $398 = $395 ? $397 : $396;\n        $401 = $395 ? $400 : $399;\n        $402 = ($$3394$lcssa$i|0)!=(0);\n        $403 = $$3$lcssa$i | 32;\n        $404 = ($403|0)==(101);\n        $or$cond410$i = $402 & $404;\n        if (!($or$cond410$i)) {\n         $419 = ($$3$lcssa$i|0)>(-1);\n         if ($419) {\n          $$0336455$i = $$0336$lcssa$i;$$0340459$i = $$0340$lcssa$i;$$0396465$i = $$0396$lcssa$i;$707 = $397;$708 = $400;$709 = $398;$710 = $401;$711 = $402;\n          label = 169;\n          break;\n         } else {\n          $$0336454$i = $$0336$lcssa$i;$$0340458$i = $$0340$lcssa$i;$$0396464$i = $$0396$lcssa$i;$712 = $397;$713 = $400;$714 = $402;$715 = $398;$716 = $401;\n          label = 171;\n          break;\n         }\n        }\n        $405 = (_scanexp($0,$2)|0);\n        $406 = tempRet0;\n        $407 = ($405|0)==(0);\n        $408 = ($406|0)==(-2147483648);\n        $409 = $407 & $408;\n        if ($409) {\n         $410 = ($2|0)==(0);\n         if ($410) {\n          ___shlim($0,0);\n          $$1$i = 0.0;\n          break;\n         }\n         $411 = HEAP32[$5>>2]|0;\n         $412 = ($411|0)==(0|0);\n         if ($412) {\n          $415 = 0;$416 = 0;\n         } else {\n          $413 = HEAP32[$4>>2]|0;\n          $414 = ((($413)) + -1|0);\n          HEAP32[$4>>2] = $414;\n          $415 = 0;$416 = 0;\n         }\n        } else {\n         $415 = $405;$416 = $406;\n        }\n        $417 = (_i64Add(($415|0),($416|0),($398|0),($401|0))|0);\n        $418 = tempRet0;\n        $$0336453$i = $$0336$lcssa$i;$$0340457$i = $$0340$lcssa$i;$$0396463$i = $$0396$lcssa$i;$429 = $417;$431 = $397;$432 = $418;$434 = $400;\n        label = 173;\n       }\n      } while(0);\n      if ((label|0) == 169) {\n       $420 = HEAP32[$5>>2]|0;\n       $421 = ($420|0)==(0|0);\n       if ($421) {\n        $$0336454$i = $$0336455$i;$$0340458$i = $$0340459$i;$$0396464$i = $$0396465$i;$712 = $707;$713 = $708;$714 = $711;$715 = $709;$716 = $710;\n        label = 171;\n       } else {\n        $422 = HEAP32[$4>>2]|0;\n        $423 = ((($422)) + -1|0);\n        HEAP32[$4>>2] = $423;\n        if ($711) {\n         $$0336453$i = $$0336455$i;$$0340457$i = $$0340459$i;$$0396463$i = $$0396465$i;$429 = $709;$431 = $707;$432 = $710;$434 = $708;\n         label = 173;\n        } else {\n         label = 172;\n        }\n       }\n      }\n      if ((label|0) == 171) {\n       if ($714) {\n        $$0336453$i = $$0336454$i;$$0340457$i = $$0340458$i;$$0396463$i = $$0396464$i;$429 = $715;$431 = $712;$432 = $716;$434 = $713;\n        label = 173;\n       } else {\n        label = 172;\n       }\n      }\n      do {\n       if ((label|0) == 172) {\n        $424 = (___errno_location()|0);\n        HEAP32[$424>>2] = 22;\n        ___shlim($0,0);\n        $$1$i = 0.0;\n       }\n       else if ((label|0) == 173) {\n        $425 = HEAP32[$3>>2]|0;\n        $426 = ($425|0)==(0);\n        if ($426) {\n         $427 = (+($$0113|0));\n         $428 = $427 * 0.0;\n         $$1$i = $428;\n         break;\n        }\n        $430 = ($429|0)==($431|0);\n        $433 = ($432|0)==($434|0);\n        $435 = $430 & $433;\n        $436 = ($434|0)<(0);\n        $437 = ($431>>>0)<(10);\n        $438 = ($434|0)==(0);\n        $439 = $438 & $437;\n        $440 = $436 | $439;\n        $or$cond$i118 = $440 & $435;\n        if ($or$cond$i118) {\n         $441 = ($$0106$ph>>>0)>(30);\n         $442 = $425 >>> $$0106$ph;\n         $443 = ($442|0)==(0);\n         $or$cond412$i = $441 | $443;\n         if ($or$cond412$i) {\n          $444 = (+($$0113|0));\n          $445 = (+($425>>>0));\n          $446 = $444 * $445;\n          $$1$i = $446;\n          break;\n         }\n        }\n        $447 = (($$0105$ph|0) / -2)&-1;\n        $448 = ($447|0)<(0);\n        $449 = $448 << 31 >> 31;\n        $450 = ($432|0)>($449|0);\n        $451 = ($429>>>0)>($447>>>0);\n        $452 = ($432|0)==($449|0);\n        $453 = $452 & $451;\n        $454 = $450 | $453;\n        if ($454) {\n         $455 = (___errno_location()|0);\n         HEAP32[$455>>2] = 34;\n         $456 = (+($$0113|0));\n         $457 = $456 * 1.7976931348623157E+308;\n         $458 = $457 * 1.7976931348623157E+308;\n         $$1$i = $458;\n         break;\n        }\n        $459 = (($$0105$ph) + -106)|0;\n        $460 = ($459|0)<(0);\n        $461 = $460 << 31 >> 31;\n        $462 = ($432|0)<($461|0);\n        $463 = ($429>>>0)<($459>>>0);\n        $464 = ($432|0)==($461|0);\n        $465 = $464 & $463;\n        $466 = $462 | $465;\n        if ($466) {\n         $467 = (___errno_location()|0);\n         HEAP32[$467>>2] = 34;\n         $468 = (+($$0113|0));\n         $469 = $468 * 2.2250738585072014E-308;\n         $470 = $469 * 2.2250738585072014E-308;\n         $$1$i = $470;\n         break;\n        }\n        $471 = ($$0336453$i|0)==(0);\n        if ($471) {\n         $$3343$i = $$0340457$i;\n        } else {\n         $472 = ($$0336453$i|0)<(9);\n         if ($472) {\n          $473 = (($3) + ($$0340457$i<<2)|0);\n          $$promoted$i = HEAP32[$473>>2]|0;\n          $$3339493$i = $$0336453$i;$475 = $$promoted$i;\n          while(1) {\n           $474 = ($475*10)|0;\n           $476 = (($$3339493$i) + 1)|0;\n           $exitcond541$i = ($476|0)==(9);\n           if ($exitcond541$i) {\n            break;\n           } else {\n            $$3339493$i = $476;$475 = $474;\n           }\n          }\n          HEAP32[$473>>2] = $474;\n         }\n         $477 = (($$0340457$i) + 1)|0;\n         $$3343$i = $477;\n        }\n        $478 = ($$0396463$i|0)<(9);\n        if ($478) {\n         $479 = ($$0396463$i|0)<=($429|0);\n         $480 = ($429|0)<(18);\n         $or$cond3$i = $479 & $480;\n         if ($or$cond3$i) {\n          $481 = ($429|0)==(9);\n          if ($481) {\n           $482 = (+($$0113|0));\n           $483 = HEAP32[$3>>2]|0;\n           $484 = (+($483>>>0));\n           $485 = $482 * $484;\n           $$1$i = $485;\n           break;\n          }\n          $486 = ($429|0)<(9);\n          if ($486) {\n           $487 = (+($$0113|0));\n           $488 = HEAP32[$3>>2]|0;\n           $489 = (+($488>>>0));\n           $490 = $487 * $489;\n           $491 = (8 - ($429))|0;\n           $492 = (10652 + ($491<<2)|0);\n           $493 = HEAP32[$492>>2]|0;\n           $494 = (+($493|0));\n           $495 = $490 / $494;\n           $$1$i = $495;\n           break;\n          }\n          $$neg432$i = Math_imul($429, -3)|0;\n          $$neg433$i = (($$0106$ph) + 27)|0;\n          $496 = (($$neg433$i) + ($$neg432$i))|0;\n          $497 = ($496|0)>(30);\n          $$pre$i119 = HEAP32[$3>>2]|0;\n          $498 = $$pre$i119 >>> $496;\n          $499 = ($498|0)==(0);\n          $or$cond571$i = $497 | $499;\n          if ($or$cond571$i) {\n           $500 = (+($$0113|0));\n           $501 = (+($$pre$i119>>>0));\n           $502 = $500 * $501;\n           $503 = (($429) + -10)|0;\n           $504 = (10652 + ($503<<2)|0);\n           $505 = HEAP32[$504>>2]|0;\n           $506 = (+($505|0));\n           $507 = $502 * $506;\n           $$1$i = $507;\n           break;\n          }\n         }\n        }\n        $508 = (($429|0) % 9)&-1;\n        $509 = ($508|0)==(0);\n        if ($509) {\n         $$0375$ph$i = 0;$$1368$ph438$i = $$3343$i;$$2347$ph439$i = 0;$$2382$ph437$i = $429;\n        } else {\n         $510 = ($429|0)>(-1);\n         $511 = (($508) + 9)|0;\n         $512 = $510 ? $508 : $511;\n         $513 = (8 - ($512))|0;\n         $514 = (10652 + ($513<<2)|0);\n         $515 = HEAP32[$514>>2]|0;\n         $516 = ($$3343$i|0)==(0);\n         if ($516) {\n          $$0345$lcssa545$i = 0;$$0367$i = 0;$$0380$lcssa544$i = $429;\n         } else {\n          $517 = (1000000000 / ($515|0))&-1;\n          $$0335486$i = 0;$$0345484$i = 0;$$0380483$i = $429;$$4344485$i = 0;\n          while(1) {\n           $518 = (($3) + ($$4344485$i<<2)|0);\n           $519 = HEAP32[$518>>2]|0;\n           $520 = (($519>>>0) % ($515>>>0))&-1;\n           $521 = (($519>>>0) / ($515>>>0))&-1;\n           $522 = (($521) + ($$0335486$i))|0;\n           HEAP32[$518>>2] = $522;\n           $523 = Math_imul($520, $517)|0;\n           $524 = ($$4344485$i|0)==($$0345484$i|0);\n           $525 = ($522|0)==(0);\n           $or$cond413$i = $524 & $525;\n           $526 = (($$0345484$i) + 1)|0;\n           $527 = $526 & 127;\n           $528 = (($$0380483$i) + -9)|0;\n           $$$0380$i = $or$cond413$i ? $528 : $$0380483$i;\n           $$$0345$i = $or$cond413$i ? $527 : $$0345484$i;\n           $529 = (($$4344485$i) + 1)|0;\n           $530 = ($529|0)==($$3343$i|0);\n           if ($530) {\n            break;\n           } else {\n            $$0335486$i = $523;$$0345484$i = $$$0345$i;$$0380483$i = $$$0380$i;$$4344485$i = $529;\n           }\n          }\n          $531 = ($523|0)==(0);\n          if ($531) {\n           $$0345$lcssa545$i = $$$0345$i;$$0367$i = $$3343$i;$$0380$lcssa544$i = $$$0380$i;\n          } else {\n           $532 = (($$3343$i) + 1)|0;\n           $533 = (($3) + ($$3343$i<<2)|0);\n           HEAP32[$533>>2] = $523;\n           $$0345$lcssa545$i = $$$0345$i;$$0367$i = $532;$$0380$lcssa544$i = $$$0380$i;\n          }\n         }\n         $534 = (9 - ($512))|0;\n         $535 = (($534) + ($$0380$lcssa544$i))|0;\n         $$0375$ph$i = 0;$$1368$ph438$i = $$0367$i;$$2347$ph439$i = $$0345$lcssa545$i;$$2382$ph437$i = $535;\n        }\n        L284: while(1) {\n         $536 = ($$2382$ph437$i|0)<(18);\n         $537 = ($$2382$ph437$i|0)==(18);\n         $538 = (($3) + ($$2347$ph439$i<<2)|0);\n         $$0375$i = $$0375$ph$i;$$1368$i = $$1368$ph438$i;\n         while(1) {\n          if (!($536)) {\n           if (!($537)) {\n            $$1376$ph$i = $$0375$i;$$4349$ph$i = $$2347$ph439$i;$$4384$ph435$i = $$2382$ph437$i;$$6373$ph$i = $$1368$i;\n            break L284;\n           }\n           $539 = HEAP32[$538>>2]|0;\n           $540 = ($539>>>0)<(9007199);\n           if (!($540)) {\n            $$1376$ph$i = $$0375$i;$$4349$ph$i = $$2347$ph439$i;$$4384$ph435$i = 18;$$6373$ph$i = $$1368$i;\n            break L284;\n           }\n          }\n          $541 = (($$1368$i) + 127)|0;\n          $$0329$i = 0;$$2369$i = $$1368$i;$$5$in$i = $541;\n          while(1) {\n           $$5$i121 = $$5$in$i & 127;\n           $542 = (($3) + ($$5$i121<<2)|0);\n           $543 = HEAP32[$542>>2]|0;\n           $544 = (_bitshift64Shl(($543|0),0,29)|0);\n           $545 = tempRet0;\n           $546 = (_i64Add(($544|0),($545|0),($$0329$i|0),0)|0);\n           $547 = tempRet0;\n           $548 = ($547>>>0)>(0);\n           $549 = ($546>>>0)>(1000000000);\n           $550 = ($547|0)==(0);\n           $551 = $550 & $549;\n           $552 = $548 | $551;\n           if ($552) {\n            $553 = (___udivdi3(($546|0),($547|0),1000000000,0)|0);\n            $554 = tempRet0;\n            $555 = (___uremdi3(($546|0),($547|0),1000000000,0)|0);\n            $556 = tempRet0;\n            $$1330$i = $553;$$sink$off0$i = $555;\n           } else {\n            $$1330$i = 0;$$sink$off0$i = $546;\n           }\n           HEAP32[$542>>2] = $$sink$off0$i;\n           $557 = (($$2369$i) + 127)|0;\n           $558 = $557 & 127;\n           $559 = ($$5$i121|0)!=($558|0);\n           $560 = ($$5$i121|0)==($$2347$ph439$i|0);\n           $or$cond414$i = $559 | $560;\n           $561 = ($$sink$off0$i|0)==(0);\n           $$5$$2369$i = $561 ? $$5$i121 : $$2369$i;\n           $$3370$i = $or$cond414$i ? $$2369$i : $$5$$2369$i;\n           $562 = (($$5$i121) + -1)|0;\n           if ($560) {\n            break;\n           } else {\n            $$0329$i = $$1330$i;$$2369$i = $$3370$i;$$5$in$i = $562;\n           }\n          }\n          $563 = (($$0375$i) + -29)|0;\n          $564 = ($$1330$i|0)==(0);\n          if ($564) {\n           $$0375$i = $563;$$1368$i = $$3370$i;\n          } else {\n           break;\n          }\n         }\n         $565 = (($$2382$ph437$i) + 9)|0;\n         $566 = (($$2347$ph439$i) + 127)|0;\n         $567 = $566 & 127;\n         $568 = ($567|0)==($$3370$i|0);\n         $569 = (($$3370$i) + 127)|0;\n         $570 = $569 & 127;\n         $571 = (($$3370$i) + 126)|0;\n         $572 = $571 & 127;\n         $573 = (($3) + ($572<<2)|0);\n         if ($568) {\n          $574 = (($3) + ($570<<2)|0);\n          $575 = HEAP32[$574>>2]|0;\n          $576 = HEAP32[$573>>2]|0;\n          $577 = $576 | $575;\n          HEAP32[$573>>2] = $577;\n          $$4371$i = $570;\n         } else {\n          $$4371$i = $$3370$i;\n         }\n         $578 = (($3) + ($567<<2)|0);\n         HEAP32[$578>>2] = $$1330$i;\n         $$0375$ph$i = $563;$$1368$ph438$i = $$4371$i;$$2347$ph439$i = $567;$$2382$ph437$i = $565;\n        }\n        L302: while(1) {\n         $615 = (($$6373$ph$i) + 1)|0;\n         $612 = $615 & 127;\n         $616 = (($$6373$ph$i) + 127)|0;\n         $617 = $616 & 127;\n         $618 = (($3) + ($617<<2)|0);\n         $$1376$ph549$i = $$1376$ph$i;$$4349$ph550$i = $$4349$ph$i;$$4384$ph$i = $$4384$ph435$i;\n         while(1) {\n          $591 = ($$4384$ph$i|0)==(18);\n          $619 = ($$4384$ph$i|0)>(27);\n          $$416$i = $619 ? 9 : 1;\n          $$1376$i = $$1376$ph549$i;$$4349$i = $$4349$ph550$i;\n          while(1) {\n           $$0331476$i = 0;\n           while(1) {\n            $579 = (($$0331476$i) + ($$4349$i))|0;\n            $580 = $579 & 127;\n            $581 = ($580|0)==($$6373$ph$i|0);\n            if ($581) {\n             $$1332$i = 2;\n             label = 220;\n             break;\n            }\n            $582 = (($3) + ($580<<2)|0);\n            $583 = HEAP32[$582>>2]|0;\n            $584 = (10684 + ($$0331476$i<<2)|0);\n            $585 = HEAP32[$584>>2]|0;\n            $586 = ($583>>>0)<($585>>>0);\n            if ($586) {\n             $$1332$i = 2;\n             label = 220;\n             break;\n            }\n            $587 = ($583>>>0)>($585>>>0);\n            if ($587) {\n             break;\n            }\n            $588 = (($$0331476$i) + 1)|0;\n            $589 = ($588|0)<(2);\n            if ($589) {\n             $$0331476$i = $588;\n            } else {\n             $$1332$i = $588;\n             label = 220;\n             break;\n            }\n           }\n           if ((label|0) == 220) {\n            label = 0;\n            $590 = ($$1332$i|0)==(2);\n            $or$cond6$i122 = $591 & $590;\n            if ($or$cond6$i122) {\n             $$0360474$i = 0.0;$$4475$i = 0;$$9473$i = $$6373$ph$i;\n             break L302;\n            }\n           }\n           $592 = (($$1376$i) + ($$416$i))|0;\n           $593 = ($$4349$i|0)==($$6373$ph$i|0);\n           if ($593) {\n            $$1376$i = $592;$$4349$i = $$6373$ph$i;\n           } else {\n            break;\n           }\n          }\n          $594 = 1 << $$416$i;\n          $595 = (($594) + -1)|0;\n          $596 = 1000000000 >>> $$416$i;\n          $$0327480$i = 0;$$5350478$i = $$4349$i;$$5385477$i = $$4384$ph$i;$$6479$i = $$4349$i;\n          while(1) {\n           $597 = (($3) + ($$6479$i<<2)|0);\n           $598 = HEAP32[$597>>2]|0;\n           $599 = $598 & $595;\n           $600 = $598 >>> $$416$i;\n           $601 = (($600) + ($$0327480$i))|0;\n           HEAP32[$597>>2] = $601;\n           $602 = Math_imul($599, $596)|0;\n           $603 = ($$6479$i|0)==($$5350478$i|0);\n           $604 = ($601|0)==(0);\n           $or$cond417$i = $603 & $604;\n           $605 = (($$5350478$i) + 1)|0;\n           $606 = $605 & 127;\n           $607 = (($$5385477$i) + -9)|0;\n           $$$5385$i = $or$cond417$i ? $607 : $$5385477$i;\n           $$$5350$i = $or$cond417$i ? $606 : $$5350478$i;\n           $608 = (($$6479$i) + 1)|0;\n           $609 = $608 & 127;\n           $610 = ($609|0)==($$6373$ph$i|0);\n           if ($610) {\n            break;\n           } else {\n            $$0327480$i = $602;$$5350478$i = $$$5350$i;$$5385477$i = $$$5385$i;$$6479$i = $609;\n           }\n          }\n          $611 = ($602|0)==(0);\n          if ($611) {\n           $$1376$ph549$i = $592;$$4349$ph550$i = $$$5350$i;$$4384$ph$i = $$$5385$i;\n           continue;\n          }\n          $613 = ($612|0)==($$$5350$i|0);\n          if (!($613)) {\n           break;\n          }\n          $620 = HEAP32[$618>>2]|0;\n          $621 = $620 | 1;\n          HEAP32[$618>>2] = $621;\n          $$1376$ph549$i = $592;$$4349$ph550$i = $$$5350$i;$$4384$ph$i = $$$5385$i;\n         }\n         $614 = (($3) + ($$6373$ph$i<<2)|0);\n         HEAP32[$614>>2] = $602;\n         $$1376$ph$i = $592;$$4349$ph$i = $$$5350$i;$$4384$ph435$i = $$$5385$i;$$6373$ph$i = $612;\n        }\n        while(1) {\n         $622 = (($$4475$i) + ($$4349$i))|0;\n         $623 = $622 & 127;\n         $624 = ($623|0)==($$9473$i|0);\n         $625 = (($$9473$i) + 1)|0;\n         $626 = $625 & 127;\n         if ($624) {\n          $627 = (($626) + -1)|0;\n          $628 = (($3) + ($627<<2)|0);\n          HEAP32[$628>>2] = 0;\n          $$10$i = $626;\n         } else {\n          $$10$i = $$9473$i;\n         }\n         $629 = $$0360474$i * 1.0E+9;\n         $630 = (($3) + ($623<<2)|0);\n         $631 = HEAP32[$630>>2]|0;\n         $632 = (+($631>>>0));\n         $633 = $629 + $632;\n         $634 = (($$4475$i) + 1)|0;\n         $exitcond$i = ($634|0)==(2);\n         if ($exitcond$i) {\n          break;\n         } else {\n          $$0360474$i = $633;$$4475$i = $634;$$9473$i = $$10$i;\n         }\n        }\n        $635 = (+($$0113|0));\n        $636 = $635 * $633;\n        $637 = (($$1376$i) + 53)|0;\n        $638 = (($637) - ($$0105$ph))|0;\n        $639 = ($638|0)<($$0106$ph|0);\n        $640 = ($638|0)<(0);\n        $$$i = $640 ? 0 : $638;\n        $$0364$i = $639&1;\n        $$0328$i = $639 ? $$$i : $$0106$ph;\n        $641 = ($$0328$i|0)<(53);\n        if ($641) {\n         $642 = (105 - ($$0328$i))|0;\n         $643 = (+_scalbn(1.0,$642));\n         $644 = (+_copysignl($643,$636));\n         $645 = (53 - ($$0328$i))|0;\n         $646 = (+_scalbn(1.0,$645));\n         $647 = (+_fmodl($636,$646));\n         $648 = $636 - $647;\n         $649 = $644 + $648;\n         $$0355$i = $644;$$0356$i = $647;$$1361$i = $649;\n        } else {\n         $$0355$i = 0.0;$$0356$i = 0.0;$$1361$i = $636;\n        }\n        $650 = (($$4349$i) + 2)|0;\n        $651 = $650 & 127;\n        $652 = ($651|0)==($$10$i|0);\n        do {\n         if ($652) {\n          $$3359$i = $$0356$i;\n         } else {\n          $653 = (($3) + ($651<<2)|0);\n          $654 = HEAP32[$653>>2]|0;\n          $655 = ($654>>>0)<(500000000);\n          do {\n           if ($655) {\n            $656 = ($654|0)==(0);\n            if ($656) {\n             $657 = (($$4349$i) + 3)|0;\n             $658 = $657 & 127;\n             $659 = ($658|0)==($$10$i|0);\n             if ($659) {\n              $$1357$i = $$0356$i;\n              break;\n             }\n            }\n            $660 = $635 * 0.25;\n            $661 = $660 + $$0356$i;\n            $$1357$i = $661;\n           } else {\n            $662 = ($654|0)==(500000000);\n            if (!($662)) {\n             $663 = $635 * 0.75;\n             $664 = $663 + $$0356$i;\n             $$1357$i = $664;\n             break;\n            }\n            $665 = (($$4349$i) + 3)|0;\n            $666 = $665 & 127;\n            $667 = ($666|0)==($$10$i|0);\n            if ($667) {\n             $668 = $635 * 0.5;\n             $669 = $668 + $$0356$i;\n             $$1357$i = $669;\n             break;\n            } else {\n             $670 = $635 * 0.75;\n             $671 = $670 + $$0356$i;\n             $$1357$i = $671;\n             break;\n            }\n           }\n          } while(0);\n          $672 = (53 - ($$0328$i))|0;\n          $673 = ($672|0)>(1);\n          if ($673) {\n           $674 = (+_fmodl($$1357$i,1.0));\n           $675 = $674 != 0.0;\n           if ($675) {\n            $$3359$i = $$1357$i;\n            break;\n           }\n           $676 = $$1357$i + 1.0;\n           $$3359$i = $676;\n          } else {\n           $$3359$i = $$1357$i;\n          }\n         }\n        } while(0);\n        $677 = $$1361$i + $$3359$i;\n        $678 = $677 - $$0355$i;\n        $679 = $637 & 2147483647;\n        $680 = (-2 - ($sum$i))|0;\n        $681 = ($679|0)>($680|0);\n        do {\n         if ($681) {\n          $682 = (+Math_abs((+$678)));\n          $683 = !($682 >= 9007199254740992.0);\n          if ($683) {\n           $$2362$i = $678;$$2366$i = $$0364$i;$$3378$i = $$1376$i;\n          } else {\n           $684 = (($$1376$i) + 1)|0;\n           $685 = ($$0328$i|0)==($638|0);\n           $or$cond418$i = $639 & $685;\n           $$1365$i = $or$cond418$i ? 0 : $$0364$i;\n           $686 = $678 * 0.5;\n           $$2362$i = $686;$$2366$i = $$1365$i;$$3378$i = $684;\n          }\n          $687 = (($$3378$i) + 50)|0;\n          $688 = ($687|0)>($333|0);\n          if (!($688)) {\n           $689 = ($$2366$i|0)!=(0);\n           $690 = $$3359$i != 0.0;\n           $or$cond9$i = $690 & $689;\n           if (!($or$cond9$i)) {\n            $$3363$i = $$2362$i;$$4379$i = $$3378$i;\n            break;\n           }\n          }\n          $691 = (___errno_location()|0);\n          HEAP32[$691>>2] = 34;\n          $$3363$i = $$2362$i;$$4379$i = $$3378$i;\n         } else {\n          $$3363$i = $678;$$4379$i = $$1376$i;\n         }\n        } while(0);\n        $692 = (+_scalbnl($$3363$i,$$4379$i));\n        $$1$i = $692;\n       }\n      } while(0);\n      $$0114 = $$1$i;\n      break L4;\n      break;\n     }\n     default: {\n      $113 = HEAP32[$5>>2]|0;\n      $114 = ($113|0)==(0|0);\n      if (!($114)) {\n       $115 = HEAP32[$4>>2]|0;\n       $116 = ((($115)) + -1|0);\n       HEAP32[$4>>2] = $116;\n      }\n      $117 = (___errno_location()|0);\n      HEAP32[$117>>2] = 22;\n      ___shlim($0,0);\n      $$0114 = 0.0;\n      break L4;\n     }\n     }\n    }\n    }\n   } while(0);\n   if ((label|0) == 23) {\n    $45 = HEAP32[$5>>2]|0;\n    $46 = ($45|0)==(0|0);\n    if (!($46)) {\n     $47 = HEAP32[$4>>2]|0;\n     $48 = ((($47)) + -1|0);\n     HEAP32[$4>>2] = $48;\n    }\n    $49 = ($2|0)!=(0);\n    $50 = ($$0107$lcssa>>>0)>(3);\n    $or$cond9 = $49 & $50;\n    if ($or$cond9) {\n     $$1108 = $$0107$lcssa;\n     while(1) {\n      if (!($46)) {\n       $51 = HEAP32[$4>>2]|0;\n       $52 = ((($51)) + -1|0);\n       HEAP32[$4>>2] = $52;\n      }\n      $53 = (($$1108) + -1)|0;\n      $$old8 = ($53>>>0)>(3);\n      if ($$old8) {\n       $$1108 = $53;\n      } else {\n       break;\n      }\n     }\n    }\n   }\n   $54 = (+($$0113|0));\n   $55 = $54 * inf;\n   $56 = $55;\n   $$0114 = $56;\n  }\n } while(0);\n STACKTOP = sp;return (+$$0114);\n}\nfunction _scanexp($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$04860 = 0, $$049 = 0, $$1$be = 0, $$159 = 0, $$2$be = 0, $$2$lcssa = 0, $$254 = 0, $$3$be = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;\n var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;\n var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;\n var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;\n var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ((($0)) + 100|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($3>>>0)<($5>>>0);\n if ($6) {\n  $7 = ((($3)) + 1|0);\n  HEAP32[$2>>2] = $7;\n  $8 = HEAP8[$3>>0]|0;\n  $9 = $8&255;\n  $11 = $9;\n } else {\n  $10 = (___shgetc($0)|0);\n  $11 = $10;\n }\n $12 = ($11|0)==(45);\n switch ($11|0) {\n case 43: case 45:  {\n  $13 = $12&1;\n  $14 = HEAP32[$2>>2]|0;\n  $15 = HEAP32[$4>>2]|0;\n  $16 = ($14>>>0)<($15>>>0);\n  if ($16) {\n   $17 = ((($14)) + 1|0);\n   HEAP32[$2>>2] = $17;\n   $18 = HEAP8[$14>>0]|0;\n   $19 = $18&255;\n   $22 = $19;\n  } else {\n   $20 = (___shgetc($0)|0);\n   $22 = $20;\n  }\n  $21 = (($22) + -48)|0;\n  $23 = ($21>>>0)>(9);\n  $24 = ($1|0)!=(0);\n  $or$cond3 = $24 & $23;\n  if ($or$cond3) {\n   $25 = HEAP32[$4>>2]|0;\n   $26 = ($25|0)==(0|0);\n   if ($26) {\n    $$0 = $13;$$049 = $22;\n   } else {\n    $27 = HEAP32[$2>>2]|0;\n    $28 = ((($27)) + -1|0);\n    HEAP32[$2>>2] = $28;\n    $$0 = $13;$$049 = $22;\n   }\n  } else {\n   $$0 = $13;$$049 = $22;\n  }\n  break;\n }\n default: {\n  $$0 = 0;$$049 = $11;\n }\n }\n $29 = (($$049) + -48)|0;\n $30 = ($29>>>0)>(9);\n if ($30) {\n  $31 = HEAP32[$4>>2]|0;\n  $32 = ($31|0)==(0|0);\n  if ($32) {\n   $100 = -2147483648;$101 = 0;\n  } else {\n   $33 = HEAP32[$2>>2]|0;\n   $34 = ((($33)) + -1|0);\n   HEAP32[$2>>2] = $34;\n   $100 = -2147483648;$101 = 0;\n  }\n } else {\n  $$04860 = 0;$$159 = $$049;\n  while(1) {\n   $35 = ($$04860*10)|0;\n   $36 = (($$159) + -48)|0;\n   $37 = (($36) + ($35))|0;\n   $38 = HEAP32[$2>>2]|0;\n   $39 = HEAP32[$4>>2]|0;\n   $40 = ($38>>>0)<($39>>>0);\n   if ($40) {\n    $41 = ((($38)) + 1|0);\n    HEAP32[$2>>2] = $41;\n    $42 = HEAP8[$38>>0]|0;\n    $43 = $42&255;\n    $$1$be = $43;\n   } else {\n    $44 = (___shgetc($0)|0);\n    $$1$be = $44;\n   }\n   $45 = (($$1$be) + -48)|0;\n   $46 = ($45>>>0)<(10);\n   $47 = ($37|0)<(214748364);\n   $48 = $46 & $47;\n   if ($48) {\n    $$04860 = $37;$$159 = $$1$be;\n   } else {\n    break;\n   }\n  }\n  $49 = ($37|0)<(0);\n  $50 = $49 << 31 >> 31;\n  $51 = (($$1$be) + -48)|0;\n  $52 = ($51>>>0)<(10);\n  if ($52) {\n   $$254 = $$1$be;$55 = $37;$56 = $50;\n   while(1) {\n    $57 = (___muldi3(($55|0),($56|0),10,0)|0);\n    $58 = tempRet0;\n    $59 = ($$254|0)<(0);\n    $60 = $59 << 31 >> 31;\n    $61 = (_i64Add(($$254|0),($60|0),-48,-1)|0);\n    $62 = tempRet0;\n    $63 = (_i64Add(($61|0),($62|0),($57|0),($58|0))|0);\n    $64 = tempRet0;\n    $65 = HEAP32[$2>>2]|0;\n    $66 = HEAP32[$4>>2]|0;\n    $67 = ($65>>>0)<($66>>>0);\n    if ($67) {\n     $68 = ((($65)) + 1|0);\n     HEAP32[$2>>2] = $68;\n     $69 = HEAP8[$65>>0]|0;\n     $70 = $69&255;\n     $$2$be = $70;\n    } else {\n     $71 = (___shgetc($0)|0);\n     $$2$be = $71;\n    }\n    $72 = (($$2$be) + -48)|0;\n    $73 = ($72>>>0)<(10);\n    $74 = ($64|0)<(21474836);\n    $75 = ($63>>>0)<(2061584302);\n    $76 = ($64|0)==(21474836);\n    $77 = $76 & $75;\n    $78 = $74 | $77;\n    $79 = $73 & $78;\n    if ($79) {\n     $$254 = $$2$be;$55 = $63;$56 = $64;\n    } else {\n     $$2$lcssa = $$2$be;$94 = $63;$95 = $64;\n     break;\n    }\n   }\n  } else {\n   $$2$lcssa = $$1$be;$94 = $37;$95 = $50;\n  }\n  $53 = (($$2$lcssa) + -48)|0;\n  $54 = ($53>>>0)<(10);\n  if ($54) {\n   while(1) {\n    $80 = HEAP32[$2>>2]|0;\n    $81 = HEAP32[$4>>2]|0;\n    $82 = ($80>>>0)<($81>>>0);\n    if ($82) {\n     $83 = ((($80)) + 1|0);\n     HEAP32[$2>>2] = $83;\n     $84 = HEAP8[$80>>0]|0;\n     $85 = $84&255;\n     $$3$be = $85;\n    } else {\n     $86 = (___shgetc($0)|0);\n     $$3$be = $86;\n    }\n    $87 = (($$3$be) + -48)|0;\n    $88 = ($87>>>0)<(10);\n    if (!($88)) {\n     break;\n    }\n   }\n  }\n  $89 = HEAP32[$4>>2]|0;\n  $90 = ($89|0)==(0|0);\n  if (!($90)) {\n   $91 = HEAP32[$2>>2]|0;\n   $92 = ((($91)) + -1|0);\n   HEAP32[$2>>2] = $92;\n  }\n  $93 = ($$0|0)!=(0);\n  $96 = (_i64Subtract(0,0,($94|0),($95|0))|0);\n  $97 = tempRet0;\n  $98 = $93 ? $96 : $94;\n  $99 = $93 ? $97 : $95;\n  $100 = $99;$101 = $98;\n }\n tempRet0 = ($100);\n return ($101|0);\n}\nfunction _scalbn($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $$ = 0, $$0 = 0.0, $$020 = 0, $$1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0;\n var $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($1|0)>(1023);\n if ($2) {\n  $3 = $0 * 8.9884656743115795E+307;\n  $4 = (($1) + -1023)|0;\n  $5 = ($4|0)>(1023);\n  $6 = (($1) + -2046)|0;\n  if ($5) {\n   $7 = $3 * 8.9884656743115795E+307;\n   $8 = ($6|0)>(1023);\n   $$ = $8 ? 1023 : $6;\n   $$0 = $7;$$020 = $$;\n  } else {\n   $$0 = $3;$$020 = $4;\n  }\n } else {\n  $9 = ($1|0)<(-1022);\n  if ($9) {\n   $10 = $0 * 2.2250738585072014E-308;\n   $11 = (($1) + 1022)|0;\n   $12 = ($11|0)<(-1022);\n   $13 = (($1) + 2044)|0;\n   if ($12) {\n    $14 = $10 * 2.2250738585072014E-308;\n    $15 = ($13|0)<(-1022);\n    $$1 = $15 ? -1022 : $13;\n    $$0 = $14;$$020 = $$1;\n   } else {\n    $$0 = $10;$$020 = $11;\n   }\n  } else {\n   $$0 = $0;$$020 = $1;\n  }\n }\n $16 = (($$020) + 1023)|0;\n $17 = (_bitshift64Shl(($16|0),0,52)|0);\n $18 = tempRet0;\n HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];\n $20 = $$0 * $19;\n return (+$20);\n}\nfunction _copysignl($0,$1) {\n $0 = +$0;\n $1 = +$1;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_copysign($0,$1));\n return (+$2);\n}\nfunction _scalbnl($0,$1) {\n $0 = +$0;\n $1 = $1|0;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_scalbn($0,$1));\n return (+$2);\n}\nfunction _fmodl($0,$1) {\n $0 = +$0;\n $1 = +$1;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_fmod($0,$1));\n return (+$2);\n}\nfunction _fmod($0,$1) {\n $0 = +$0;\n $1 = +$1;\n var $$ = 0.0, $$070 = 0.0, $$071$lcssa = 0, $$07195 = 0, $$073$lcssa = 0, $$073101 = 0, $$172$ph = 0, $$174 = 0, $$275$lcssa = 0, $$27587 = 0, $$376$lcssa = 0, $$37684 = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;\n var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;\n var $124 = 0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;\n var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0;\n var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;\n var $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;\n var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;\n var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;\n var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;\n $3 = HEAP32[tempDoublePtr+4>>2]|0;\n HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;\n $5 = HEAP32[tempDoublePtr+4>>2]|0;\n $6 = (_bitshift64Lshr(($2|0),($3|0),52)|0);\n $7 = tempRet0;\n $8 = $6 & 2047;\n $9 = (_bitshift64Lshr(($4|0),($5|0),52)|0);\n $10 = tempRet0;\n $11 = $9 & 2047;\n $12 = $3 & -2147483648;\n $13 = (_bitshift64Shl(($4|0),($5|0),1)|0);\n $14 = tempRet0;\n $15 = ($13|0)==(0);\n $16 = ($14|0)==(0);\n $17 = $15 & $16;\n L1: do {\n  if ($17) {\n   label = 3;\n  } else {\n   $18 = $5 & 2147483647;\n   $19 = ($18>>>0)>(2146435072);\n   $20 = ($4>>>0)>(0);\n   $21 = ($18|0)==(2146435072);\n   $22 = $21 & $20;\n   $23 = $19 | $22;\n   $24 = ($8|0)==(2047);\n   $or$cond = $23 | $24;\n   if ($or$cond) {\n    label = 3;\n   } else {\n    $27 = (_bitshift64Shl(($2|0),($3|0),1)|0);\n    $28 = tempRet0;\n    $29 = ($28>>>0)>($14>>>0);\n    $30 = ($27>>>0)>($13>>>0);\n    $31 = ($28|0)==($14|0);\n    $32 = $31 & $30;\n    $33 = $29 | $32;\n    if (!($33)) {\n     $34 = ($27|0)==($13|0);\n     $35 = ($28|0)==($14|0);\n     $36 = $34 & $35;\n     $37 = $0 * 0.0;\n     $$ = $36 ? $37 : $0;\n     return (+$$);\n    }\n    $38 = ($8|0)==(0);\n    if ($38) {\n     $39 = (_bitshift64Shl(($2|0),($3|0),12)|0);\n     $40 = tempRet0;\n     $41 = ($40|0)>(-1);\n     $42 = ($39>>>0)>(4294967295);\n     $43 = ($40|0)==(-1);\n     $44 = $43 & $42;\n     $45 = $41 | $44;\n     if ($45) {\n      $$073101 = 0;$47 = $39;$48 = $40;\n      while(1) {\n       $46 = (($$073101) + -1)|0;\n       $49 = (_bitshift64Shl(($47|0),($48|0),1)|0);\n       $50 = tempRet0;\n       $51 = ($50|0)>(-1);\n       $52 = ($49>>>0)>(4294967295);\n       $53 = ($50|0)==(-1);\n       $54 = $53 & $52;\n       $55 = $51 | $54;\n       if ($55) {\n        $$073101 = $46;$47 = $49;$48 = $50;\n       } else {\n        $$073$lcssa = $46;\n        break;\n       }\n      }\n     } else {\n      $$073$lcssa = 0;\n     }\n     $56 = (1 - ($$073$lcssa))|0;\n     $57 = (_bitshift64Shl(($2|0),($3|0),($56|0))|0);\n     $58 = tempRet0;\n     $$174 = $$073$lcssa;$85 = $57;$86 = $58;\n    } else {\n     $59 = $3 & 1048575;\n     $60 = $59 | 1048576;\n     $$174 = $8;$85 = $2;$86 = $60;\n    }\n    $61 = ($11|0)==(0);\n    if ($61) {\n     $62 = (_bitshift64Shl(($4|0),($5|0),12)|0);\n     $63 = tempRet0;\n     $64 = ($63|0)>(-1);\n     $65 = ($62>>>0)>(4294967295);\n     $66 = ($63|0)==(-1);\n     $67 = $66 & $65;\n     $68 = $64 | $67;\n     if ($68) {\n      $$07195 = 0;$70 = $62;$71 = $63;\n      while(1) {\n       $69 = (($$07195) + -1)|0;\n       $72 = (_bitshift64Shl(($70|0),($71|0),1)|0);\n       $73 = tempRet0;\n       $74 = ($73|0)>(-1);\n       $75 = ($72>>>0)>(4294967295);\n       $76 = ($73|0)==(-1);\n       $77 = $76 & $75;\n       $78 = $74 | $77;\n       if ($78) {\n        $$07195 = $69;$70 = $72;$71 = $73;\n       } else {\n        $$071$lcssa = $69;\n        break;\n       }\n      }\n     } else {\n      $$071$lcssa = 0;\n     }\n     $79 = (1 - ($$071$lcssa))|0;\n     $80 = (_bitshift64Shl(($4|0),($5|0),($79|0))|0);\n     $81 = tempRet0;\n     $$172$ph = $$071$lcssa;$87 = $80;$88 = $81;\n    } else {\n     $82 = $5 & 1048575;\n     $83 = $82 | 1048576;\n     $$172$ph = $11;$87 = $4;$88 = $83;\n    }\n    $84 = ($$174|0)>($$172$ph|0);\n    $89 = (_i64Subtract(($85|0),($86|0),($87|0),($88|0))|0);\n    $90 = tempRet0;\n    $91 = ($90|0)>(-1);\n    $92 = ($89>>>0)>(4294967295);\n    $93 = ($90|0)==(-1);\n    $94 = $93 & $92;\n    $95 = $91 | $94;\n    L23: do {\n     if ($84) {\n      $$27587 = $$174;$154 = $95;$155 = $85;$156 = $86;$96 = $89;$98 = $90;\n      while(1) {\n       if ($154) {\n        $97 = ($96|0)==(0);\n        $99 = ($98|0)==(0);\n        $100 = $97 & $99;\n        if ($100) {\n         break;\n        } else {\n         $102 = $96;$103 = $98;\n        }\n       } else {\n        $102 = $155;$103 = $156;\n       }\n       $104 = (_bitshift64Shl(($102|0),($103|0),1)|0);\n       $105 = tempRet0;\n       $106 = (($$27587) + -1)|0;\n       $107 = ($106|0)>($$172$ph|0);\n       $108 = (_i64Subtract(($104|0),($105|0),($87|0),($88|0))|0);\n       $109 = tempRet0;\n       $110 = ($109|0)>(-1);\n       $111 = ($108>>>0)>(4294967295);\n       $112 = ($109|0)==(-1);\n       $113 = $112 & $111;\n       $114 = $110 | $113;\n       if ($107) {\n        $$27587 = $106;$154 = $114;$155 = $104;$156 = $105;$96 = $108;$98 = $109;\n       } else {\n        $$275$lcssa = $106;$$lcssa = $114;$115 = $108;$117 = $109;$157 = $104;$158 = $105;\n        break L23;\n       }\n      }\n      $101 = $0 * 0.0;\n      $$070 = $101;\n      break L1;\n     } else {\n      $$275$lcssa = $$174;$$lcssa = $95;$115 = $89;$117 = $90;$157 = $85;$158 = $86;\n     }\n    } while(0);\n    if ($$lcssa) {\n     $116 = ($115|0)==(0);\n     $118 = ($117|0)==(0);\n     $119 = $116 & $118;\n     if ($119) {\n      $127 = $0 * 0.0;\n      $$070 = $127;\n      break;\n     } else {\n      $120 = $117;$122 = $115;\n     }\n    } else {\n     $120 = $158;$122 = $157;\n    }\n    $121 = ($120>>>0)<(1048576);\n    $123 = ($122>>>0)<(0);\n    $124 = ($120|0)==(1048576);\n    $125 = $124 & $123;\n    $126 = $121 | $125;\n    if ($126) {\n     $$37684 = $$275$lcssa;$128 = $122;$129 = $120;\n     while(1) {\n      $130 = (_bitshift64Shl(($128|0),($129|0),1)|0);\n      $131 = tempRet0;\n      $132 = (($$37684) + -1)|0;\n      $133 = ($131>>>0)<(1048576);\n      $134 = ($130>>>0)<(0);\n      $135 = ($131|0)==(1048576);\n      $136 = $135 & $134;\n      $137 = $133 | $136;\n      if ($137) {\n       $$37684 = $132;$128 = $130;$129 = $131;\n      } else {\n       $$376$lcssa = $132;$139 = $130;$140 = $131;\n       break;\n      }\n     }\n    } else {\n     $$376$lcssa = $$275$lcssa;$139 = $122;$140 = $120;\n    }\n    $138 = ($$376$lcssa|0)>(0);\n    if ($138) {\n     $141 = (_i64Add(($139|0),($140|0),0,-1048576)|0);\n     $142 = tempRet0;\n     $143 = (_bitshift64Shl(($$376$lcssa|0),0,52)|0);\n     $144 = tempRet0;\n     $145 = $141 | $143;\n     $146 = $142 | $144;\n     $151 = $146;$153 = $145;\n    } else {\n     $147 = (1 - ($$376$lcssa))|0;\n     $148 = (_bitshift64Lshr(($139|0),($140|0),($147|0))|0);\n     $149 = tempRet0;\n     $151 = $149;$153 = $148;\n    }\n    $150 = $151 | $12;\n    HEAP32[tempDoublePtr>>2] = $153;HEAP32[tempDoublePtr+4>>2] = $150;$152 = +HEAPF64[tempDoublePtr>>3];\n    $$070 = $152;\n   }\n  }\n } while(0);\n if ((label|0) == 3) {\n  $25 = $0 * $1;\n  $26 = $25 / $25;\n  $$070 = $26;\n }\n return (+$$070);\n}\nfunction _copysign($0,$1) {\n $0 = +$0;\n $1 = +$1;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;\n $3 = HEAP32[tempDoublePtr+4>>2]|0;\n HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;\n $5 = HEAP32[tempDoublePtr+4>>2]|0;\n $6 = $3 & 2147483647;\n $7 = $5 & -2147483648;\n $8 = $7 | $6;\n HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $8;$9 = +HEAPF64[tempDoublePtr>>3];\n return (+$9);\n}\nfunction ___fmodeflags($0) {\n $0 = $0|0;\n var $$ = 0, $$$4 = 0, $$0 = 0, $$0$ = 0, $$2 = 0, $$2$ = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;\n var $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (_strchr($0,43)|0);\n $2 = ($1|0)==(0|0);\n $3 = HEAP8[$0>>0]|0;\n $not$ = ($3<<24>>24)!=(114);\n $$ = $not$&1;\n $$0 = $2 ? $$ : 2;\n $4 = (_strchr($0,120)|0);\n $5 = ($4|0)==(0|0);\n $6 = $$0 | 128;\n $$0$ = $5 ? $$0 : $6;\n $7 = (_strchr($0,101)|0);\n $8 = ($7|0)==(0|0);\n $9 = $$0$ | 524288;\n $$2 = $8 ? $$0$ : $9;\n $10 = ($3<<24>>24)==(114);\n $11 = $$2 | 64;\n $$2$ = $10 ? $$2 : $11;\n $12 = ($3<<24>>24)==(119);\n $13 = $$2$ | 512;\n $$4 = $12 ? $13 : $$2$;\n $14 = ($3<<24>>24)==(97);\n $15 = $$4 | 1024;\n $$$4 = $14 ? $15 : $$4;\n return ($$$4|0);\n}\nfunction ___fdopen($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$cast = 0, $$pre = 0, $$pre34 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, dest = 0, label = 0;\n var sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);\n $vararg_buffer12 = sp + 40|0;\n $vararg_buffer7 = sp + 24|0;\n $vararg_buffer3 = sp + 16|0;\n $vararg_buffer = sp;\n $2 = sp + 52|0;\n $3 = HEAP8[$1>>0]|0;\n $4 = $3 << 24 >> 24;\n $memchr = (_memchr(31251,$4,4)|0);\n $5 = ($memchr|0)==(0|0);\n if ($5) {\n  $6 = (___errno_location()|0);\n  HEAP32[$6>>2] = 22;\n  $$0 = 0;\n } else {\n  $7 = (_malloc(1144)|0);\n  $8 = ($7|0)==(0|0);\n  if ($8) {\n   $$0 = 0;\n  } else {\n   dest=$7; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n   $9 = (_strchr($1,43)|0);\n   $10 = ($9|0)==(0|0);\n   if ($10) {\n    $11 = ($3<<24>>24)==(114);\n    $12 = $11 ? 8 : 4;\n    HEAP32[$7>>2] = $12;\n   }\n   $13 = (_strchr($1,101)|0);\n   $14 = ($13|0)==(0|0);\n   if ($14) {\n    $15 = $3;\n   } else {\n    HEAP32[$vararg_buffer>>2] = $0;\n    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n    HEAP32[$vararg_ptr1>>2] = 2;\n    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n    HEAP32[$vararg_ptr2>>2] = 1;\n    (___syscall221(221,($vararg_buffer|0))|0);\n    $$pre = HEAP8[$1>>0]|0;\n    $15 = $$pre;\n   }\n   $16 = ($15<<24>>24)==(97);\n   if ($16) {\n    HEAP32[$vararg_buffer3>>2] = $0;\n    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);\n    HEAP32[$vararg_ptr6>>2] = 3;\n    $17 = (___syscall221(221,($vararg_buffer3|0))|0);\n    $18 = $17 & 1024;\n    $19 = ($18|0)==(0);\n    if ($19) {\n     $20 = $17 | 1024;\n     HEAP32[$vararg_buffer7>>2] = $0;\n     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);\n     HEAP32[$vararg_ptr10>>2] = 4;\n     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);\n     HEAP32[$vararg_ptr11>>2] = $20;\n     (___syscall221(221,($vararg_buffer7|0))|0);\n    }\n    $21 = HEAP32[$7>>2]|0;\n    $22 = $21 | 128;\n    HEAP32[$7>>2] = $22;\n    $29 = $22;\n   } else {\n    $$pre34 = HEAP32[$7>>2]|0;\n    $29 = $$pre34;\n   }\n   $23 = ((($7)) + 60|0);\n   HEAP32[$23>>2] = $0;\n   $24 = ((($7)) + 120|0);\n   $25 = ((($7)) + 44|0);\n   HEAP32[$25>>2] = $24;\n   $26 = ((($7)) + 48|0);\n   HEAP32[$26>>2] = 1024;\n   $27 = ((($7)) + 75|0);\n   HEAP8[$27>>0] = -1;\n   $28 = $29 & 8;\n   $30 = ($28|0)==(0);\n   if ($30) {\n    HEAP32[$vararg_buffer12>>2] = $0;\n    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);\n    HEAP32[$vararg_ptr15>>2] = 21505;\n    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);\n    HEAP32[$vararg_ptr16>>2] = $2;\n    $31 = (___syscall54(54,($vararg_buffer12|0))|0);\n    $32 = ($31|0)==(0);\n    if ($32) {\n     HEAP8[$27>>0] = 10;\n    }\n   }\n   $33 = ((($7)) + 32|0);\n   HEAP32[$33>>2] = 5;\n   $34 = ((($7)) + 36|0);\n   HEAP32[$34>>2] = 8;\n   $35 = ((($7)) + 40|0);\n   HEAP32[$35>>2] = 6;\n   $36 = ((($7)) + 12|0);\n   HEAP32[$36>>2] = 4;\n   $37 = HEAP32[(31328)>>2]|0;\n   $38 = ($37|0)==(0);\n   if ($38) {\n    $39 = ((($7)) + 76|0);\n    HEAP32[$39>>2] = -1;\n   }\n   ___lock(((31352)|0));\n   $40 = HEAP32[(31348)>>2]|0;\n   $41 = ((($7)) + 56|0);\n   HEAP32[$41>>2] = $40;\n   $42 = ($40|0)==(0);\n   if (!($42)) {\n    $$cast = $40;\n    $43 = ((($$cast)) + 52|0);\n    HEAP32[$43>>2] = $7;\n   }\n   HEAP32[(31348)>>2] = $7;\n   ___unlock(((31352)|0));\n   $$0 = $7;\n  }\n }\n STACKTOP = sp;return ($$0|0);\n}\nfunction _strchr($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (___strchrnul($0,$1)|0);\n $3 = HEAP8[$2>>0]|0;\n $4 = $1&255;\n $5 = ($3<<24>>24)==($4<<24>>24);\n $6 = $5 ? $2 : 0;\n return ($6|0);\n}\nfunction ___strchrnul($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = $1 & 255;\n $3 = ($2|0)==(0);\n L1: do {\n  if ($3) {\n   $8 = (_strlen($0)|0);\n   $9 = (($0) + ($8)|0);\n   $$0 = $9;\n  } else {\n   $4 = $0;\n   $5 = $4 & 3;\n   $6 = ($5|0)==(0);\n   if ($6) {\n    $$030$lcssa = $0;\n   } else {\n    $7 = $1&255;\n    $$03039 = $0;\n    while(1) {\n     $10 = HEAP8[$$03039>>0]|0;\n     $11 = ($10<<24>>24)==(0);\n     $12 = ($10<<24>>24)==($7<<24>>24);\n     $or$cond = $11 | $12;\n     if ($or$cond) {\n      $$0 = $$03039;\n      break L1;\n     }\n     $13 = ((($$03039)) + 1|0);\n     $14 = $13;\n     $15 = $14 & 3;\n     $16 = ($15|0)==(0);\n     if ($16) {\n      $$030$lcssa = $13;\n      break;\n     } else {\n      $$03039 = $13;\n     }\n    }\n   }\n   $17 = Math_imul($2, 16843009)|0;\n   $18 = HEAP32[$$030$lcssa>>2]|0;\n   $19 = (($18) + -16843009)|0;\n   $20 = $18 & -2139062144;\n   $21 = $20 ^ -2139062144;\n   $22 = $21 & $19;\n   $23 = ($22|0)==(0);\n   L10: do {\n    if ($23) {\n     $$02936 = $$030$lcssa;$25 = $18;\n     while(1) {\n      $24 = $25 ^ $17;\n      $26 = (($24) + -16843009)|0;\n      $27 = $24 & -2139062144;\n      $28 = $27 ^ -2139062144;\n      $29 = $28 & $26;\n      $30 = ($29|0)==(0);\n      if (!($30)) {\n       $$029$lcssa = $$02936;\n       break L10;\n      }\n      $31 = ((($$02936)) + 4|0);\n      $32 = HEAP32[$31>>2]|0;\n      $33 = (($32) + -16843009)|0;\n      $34 = $32 & -2139062144;\n      $35 = $34 ^ -2139062144;\n      $36 = $35 & $33;\n      $37 = ($36|0)==(0);\n      if ($37) {\n       $$02936 = $31;$25 = $32;\n      } else {\n       $$029$lcssa = $31;\n       break;\n      }\n     }\n    } else {\n     $$029$lcssa = $$030$lcssa;\n    }\n   } while(0);\n   $38 = $1&255;\n   $$1 = $$029$lcssa;\n   while(1) {\n    $39 = HEAP8[$$1>>0]|0;\n    $40 = ($39<<24>>24)==(0);\n    $41 = ($39<<24>>24)==($38<<24>>24);\n    $or$cond33 = $40 | $41;\n    $42 = ((($$1)) + 1|0);\n    if ($or$cond33) {\n     $$0 = $$1;\n     break;\n    } else {\n     $$1 = $42;\n    }\n   }\n  }\n } while(0);\n return ($$0|0);\n}\nfunction _strncmp($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = ($2|0)==(0);\n if ($3) {\n  $$020 = 0;\n } else {\n  $4 = HEAP8[$0>>0]|0;\n  $5 = ($4<<24>>24)==(0);\n  L3: do {\n   if ($5) {\n    $$0$lcssa = $1;$16 = 0;\n   } else {\n    $$01823 = $0;$$01925$in = $2;$$024 = $1;$9 = $4;\n    while(1) {\n     $$01925 = (($$01925$in) + -1)|0;\n     $6 = HEAP8[$$024>>0]|0;\n     $7 = ($6<<24>>24)!=(0);\n     $8 = ($$01925|0)!=(0);\n     $or$cond = $8 & $7;\n     $10 = ($9<<24>>24)==($6<<24>>24);\n     $or$cond21 = $10 & $or$cond;\n     if (!($or$cond21)) {\n      $$0$lcssa = $$024;$16 = $9;\n      break L3;\n     }\n     $11 = ((($$01823)) + 1|0);\n     $12 = ((($$024)) + 1|0);\n     $13 = HEAP8[$11>>0]|0;\n     $14 = ($13<<24>>24)==(0);\n     if ($14) {\n      $$0$lcssa = $12;$16 = 0;\n      break;\n     } else {\n      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$9 = $13;\n     }\n    }\n   }\n  } while(0);\n  $15 = $16&255;\n  $17 = HEAP8[$$0$lcssa>>0]|0;\n  $18 = $17&255;\n  $19 = (($15) - ($18))|0;\n  $$020 = $19;\n }\n return ($$020|0);\n}\nfunction _strrchr($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_strlen($0)|0);\n $3 = (($2) + 1)|0;\n $4 = (___memrchr($0,$1,$3)|0);\n return ($4|0);\n}\nfunction ___memrchr($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$09 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = $1&255;\n $$09 = $2;\n while(1) {\n  $4 = (($$09) + -1)|0;\n  $5 = ($$09|0)==(0);\n  if ($5) {\n   $$0 = 0;\n   break;\n  }\n  $6 = (($0) + ($4)|0);\n  $7 = HEAP8[$6>>0]|0;\n  $8 = ($7<<24>>24)==($3<<24>>24);\n  if ($8) {\n   $$0 = $6;\n   break;\n  } else {\n   $$09 = $4;\n  }\n }\n return ($$0|0);\n}\nfunction _getopt($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$0 = 0, $$039$lcssa = 0, $$03941 = 0, $$040 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0;\n var $or$cond3 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp + 4|0;\n $4 = sp;\n $5 = HEAP32[2494]|0;\n $6 = ($5|0)==(0);\n $7 = HEAP32[7827]|0;\n $8 = ($7|0)!=(0);\n $or$cond = $6 | $8;\n if ($or$cond) {\n  HEAP32[7827] = 0;\n  HEAP32[7828] = 0;\n  HEAP32[2494] = 1;\n  $9 = 1;\n } else {\n  $9 = $5;\n }\n $10 = ($9|0)<($0|0);\n L4: do {\n  if ($10) {\n   $11 = (($1) + ($9<<2)|0);\n   $12 = HEAP32[$11>>2]|0;\n   $13 = ($12|0)==(0|0);\n   if ($13) {\n    $$0 = -1;\n   } else {\n    $14 = HEAP8[$12>>0]|0;\n    $15 = ($14<<24>>24)==(45);\n    if ($15) {\n     $16 = ((($12)) + 1|0);\n     $17 = HEAP8[$16>>0]|0;\n     switch ($17<<24>>24) {\n     case 0:  {\n      $$0 = -1;\n      break L4;\n      break;\n     }\n     case 45:  {\n      $18 = ((($12)) + 2|0);\n      $19 = HEAP8[$18>>0]|0;\n      $20 = ($19<<24>>24)==(0);\n      if ($20) {\n       $21 = (($9) + 1)|0;\n       HEAP32[2494] = $21;\n       $$0 = -1;\n       break L4;\n      }\n      break;\n     }\n     default: {\n     }\n     }\n     $22 = HEAP32[7828]|0;\n     $23 = ($22|0)==(0);\n     if ($23) {\n      HEAP32[7828] = 1;\n      $25 = 1;\n     } else {\n      $25 = $22;\n     }\n     $24 = (($12) + ($25)|0);\n     $26 = (_mbtowc($3,$24,4)|0);\n     $27 = ($26|0)<(0);\n     if ($27) {\n      HEAP32[$3>>2] = 65533;\n      $$040 = 1;$33 = 65533;\n     } else {\n      $$pre = HEAP32[$3>>2]|0;\n      $$040 = $26;$33 = $$pre;\n     }\n     $28 = HEAP32[2494]|0;\n     $29 = (($1) + ($28<<2)|0);\n     $30 = HEAP32[$29>>2]|0;\n     $31 = HEAP32[7828]|0;\n     $32 = (($30) + ($31)|0);\n     HEAP32[7829] = $33;\n     $34 = (($31) + ($$040))|0;\n     HEAP32[7828] = $34;\n     $35 = (($30) + ($34)|0);\n     $36 = HEAP8[$35>>0]|0;\n     $37 = ($36<<24>>24)==(0);\n     if ($37) {\n      $38 = (($28) + 1)|0;\n      HEAP32[2494] = $38;\n      HEAP32[7828] = 0;\n     }\n     $39 = (_mbtowc($4,$2,4)|0);\n     $40 = ($39|0)==(0);\n     L22: do {\n      if ($40) {\n       $$039$lcssa = 0;\n      } else {\n       $$03941 = 0;$44 = $39;\n       while(1) {\n        $41 = HEAP32[$4>>2]|0;\n        $42 = HEAP32[$3>>2]|0;\n        $43 = ($41|0)==($42|0);\n        if ($43) {\n         $$039$lcssa = $$03941;\n         break L22;\n        }\n        $45 = ($44|0)<(1);\n        $46 = $45 ? 1 : $44;\n        $47 = (($46) + ($$03941))|0;\n        $48 = (($2) + ($47)|0);\n        $49 = (_mbtowc($4,$48,4)|0);\n        $50 = ($49|0)==(0);\n        if ($50) {\n         $$039$lcssa = $47;\n         break;\n        } else {\n         $$03941 = $47;$44 = $49;\n        }\n       }\n      }\n     } while(0);\n     $51 = HEAP32[$4>>2]|0;\n     $52 = HEAP32[$3>>2]|0;\n     $53 = ($51|0)==($52|0);\n     if (!($53)) {\n      $54 = HEAP8[$2>>0]|0;\n      $55 = ($54<<24>>24)!=(58);\n      $56 = HEAP32[2495]|0;\n      $57 = ($56|0)!=(0);\n      $or$cond3 = $55 & $57;\n      if (!($or$cond3)) {\n       $$0 = 63;\n       break;\n      }\n      $58 = HEAP32[$1>>2]|0;\n      $59 = (_strlen($58)|0);\n      (_write(2,$58,$59)|0);\n      (_write(2,31255,18)|0);\n      (_write(2,$32,$$040)|0);\n      (_write(2,31274,1)|0);\n      $$0 = 63;\n      break;\n     }\n     $60 = (($$039$lcssa) + 1)|0;\n     $61 = (($2) + ($60)|0);\n     $62 = HEAP8[$61>>0]|0;\n     $63 = ($62<<24>>24)==(58);\n     if ($63) {\n      $64 = HEAP32[2494]|0;\n      $65 = ($64|0)<($0|0);\n      if ($65) {\n       $72 = (($64) + 1)|0;\n       HEAP32[2494] = $72;\n       $73 = (($1) + ($64<<2)|0);\n       $74 = HEAP32[$73>>2]|0;\n       $75 = HEAP32[7828]|0;\n       $76 = (($74) + ($75)|0);\n       HEAP32[7830] = $76;\n       HEAP32[7828] = 0;\n       $$0 = $51;\n       break;\n      }\n      $66 = HEAP8[$2>>0]|0;\n      $67 = ($66<<24>>24)==(58);\n      if ($67) {\n       $$0 = 58;\n      } else {\n       $68 = HEAP32[2495]|0;\n       $69 = ($68|0)==(0);\n       if ($69) {\n        $$0 = 63;\n       } else {\n        $70 = HEAP32[$1>>2]|0;\n        $71 = (_strlen($70)|0);\n        (_write(2,$70,$71)|0);\n        (_write(2,31276,31)|0);\n        (_write(2,$32,$$040)|0);\n        (_write(2,31274,1)|0);\n        $$0 = 63;\n       }\n      }\n     } else {\n      $$0 = $51;\n     }\n    } else {\n     $$0 = -1;\n    }\n   }\n  } else {\n   $$0 = -1;\n  }\n } while(0);\n STACKTOP = sp;return ($$0|0);\n}\nfunction _mbtowc($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;\n var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $3 = sp;\n $4 = ($1|0)==(0|0);\n L1: do {\n  if ($4) {\n   $$0 = 0;\n  } else {\n   $5 = ($2|0)==(0);\n   do {\n    if (!($5)) {\n     $6 = ($0|0)==(0|0);\n     $$ = $6 ? $3 : $0;\n     $7 = HEAP8[$1>>0]|0;\n     $8 = $7&255;\n     $9 = ($7<<24>>24)>(-1);\n     if ($9) {\n      HEAP32[$$>>2] = $8;\n      $10 = ($7<<24>>24)!=(0);\n      $11 = $10&1;\n      $$0 = $11;\n      break L1;\n     }\n     $12 = (($8) + -194)|0;\n     $13 = ($12>>>0)>(50);\n     if (!($13)) {\n      $14 = ((($1)) + 1|0);\n      $15 = (9984 + ($12<<2)|0);\n      $16 = HEAP32[$15>>2]|0;\n      $17 = ($2>>>0)<(4);\n      if ($17) {\n       $18 = ($2*6)|0;\n       $19 = (($18) + -6)|0;\n       $20 = -2147483648 >>> $19;\n       $21 = $16 & $20;\n       $22 = ($21|0)==(0);\n       if (!($22)) {\n        break;\n       }\n      }\n      $23 = HEAP8[$14>>0]|0;\n      $24 = $23&255;\n      $25 = $24 >>> 3;\n      $26 = (($25) + -16)|0;\n      $27 = $16 >> 26;\n      $28 = (($25) + ($27))|0;\n      $29 = $26 | $28;\n      $30 = ($29>>>0)>(7);\n      if (!($30)) {\n       $31 = $16 << 6;\n       $32 = (($24) + -128)|0;\n       $33 = $32 | $31;\n       $34 = ($33|0)<(0);\n       if (!($34)) {\n        HEAP32[$$>>2] = $33;\n        $$0 = 2;\n        break L1;\n       }\n       $35 = ((($1)) + 2|0);\n       $36 = HEAP8[$35>>0]|0;\n       $37 = $36&255;\n       $38 = (($37) + -128)|0;\n       $39 = ($38>>>0)>(63);\n       if (!($39)) {\n        $40 = $33 << 6;\n        $41 = $38 | $40;\n        $42 = ($41|0)<(0);\n        if (!($42)) {\n         HEAP32[$$>>2] = $41;\n         $$0 = 3;\n         break L1;\n        }\n        $43 = ((($1)) + 3|0);\n        $44 = HEAP8[$43>>0]|0;\n        $45 = $44&255;\n        $46 = (($45) + -128)|0;\n        $47 = ($46>>>0)>(63);\n        if (!($47)) {\n         $48 = $41 << 6;\n         $49 = $46 | $48;\n         HEAP32[$$>>2] = $49;\n         $$0 = 4;\n         break L1;\n        }\n       }\n      }\n     }\n    }\n   } while(0);\n   $50 = (___errno_location()|0);\n   HEAP32[$50>>2] = 84;\n   $$0 = -1;\n  }\n } while(0);\n STACKTOP = sp;return ($$0|0);\n}\nfunction _write($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n HEAP32[$vararg_buffer>>2] = $0;\n $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n HEAP32[$vararg_ptr1>>2] = $1;\n $vararg_ptr2 = ((($vararg_buffer)) + 8|0);\n HEAP32[$vararg_ptr2>>2] = $2;\n $3 = (___syscall4(4,($vararg_buffer|0))|0);\n $4 = (___syscall_ret($3)|0);\n STACKTOP = sp;return ($4|0);\n}\nfunction _getopt_long($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $5 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $5 = (___getopt_long($0,$1,$2,$3,$4,0)|0);\n return ($5|0);\n}\nfunction ___getopt_long($0,$1,$2,$3,$4,$5) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n var $$ = 0, $$04956 = 0, $$04970 = 0, $$05069 = 0, $$05171 = 0, $$3 = 0, $$phi$trans$insert = 0, $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;\n var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;\n var $60 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $6 = HEAP32[2494]|0;\n $7 = ($6|0)==(0);\n $8 = HEAP32[7827]|0;\n $9 = ($8|0)!=(0);\n $or$cond = $7 | $9;\n if ($or$cond) {\n  HEAP32[7827] = 0;\n  HEAP32[7828] = 0;\n  HEAP32[2494] = 1;\n  $10 = 1;\n } else {\n  $10 = $6;\n }\n $11 = ($10|0)<($0|0);\n L4: do {\n  if ($11) {\n   $12 = (($1) + ($10<<2)|0);\n   $13 = HEAP32[$12>>2]|0;\n   $14 = ($13|0)==(0|0);\n   if ($14) {\n    $$3 = -1;\n   } else {\n    $15 = HEAP8[$13>>0]|0;\n    $16 = ($15<<24>>24)==(45);\n    if ($16) {\n     $17 = ($5|0)==(0);\n     $$phi$trans$insert = ((($13)) + 1|0);\n     $$pre = HEAP8[$$phi$trans$insert>>0]|0;\n     if ($17) {\n      $phitmp = ($$pre<<24>>24)==(45);\n      if ($phitmp) {\n       $19 = ((($13)) + 2|0);\n       $20 = HEAP8[$19>>0]|0;\n       $21 = ($20<<24>>24)==(0);\n       if (!($21)) {\n        $24 = 45;\n        label = 10;\n       }\n      }\n     } else {\n      $18 = ($$pre<<24>>24)==(0);\n      if (!($18)) {\n       $24 = $$pre;\n       label = 10;\n      }\n     }\n     if ((label|0) == 10) {\n      $22 = HEAP32[$3>>2]|0;\n      $23 = ($22|0)==(0|0);\n      $25 = ($24<<24>>24)==(45);\n      L14: do {\n       if (!($23)) {\n        $26 = ((($13)) + 2|0);\n        $$ = $25 ? $26 : $$phi$trans$insert;\n        $$05171 = 0;$28 = $22;\n        L16: while(1) {\n         $27 = HEAP8[$28>>0]|0;\n         $29 = ($27<<24>>24)==(0);\n         L18: do {\n          if ($29) {\n           $$04956 = $$;\n           label = 15;\n          } else {\n           $$04970 = $$;$$05069 = $28;$$pr = $27;\n           while(1) {\n            $30 = HEAP8[$$04970>>0]|0;\n            $31 = ($$pr<<24>>24)==($30<<24>>24);\n            if (!($31)) {\n             break L18;\n            }\n            $32 = ((($$05069)) + 1|0);\n            $33 = ((($$04970)) + 1|0);\n            $34 = HEAP8[$32>>0]|0;\n            $35 = ($34<<24>>24)==(0);\n            if ($35) {\n             $$04956 = $33;\n             label = 15;\n             break;\n            } else {\n             $$04970 = $33;$$05069 = $32;$$pr = $34;\n            }\n           }\n          }\n         } while(0);\n         L22: do {\n          if ((label|0) == 15) {\n           label = 0;\n           $36 = HEAP8[$$04956>>0]|0;\n           switch ($36<<24>>24) {\n           case 61: case 0:  {\n            break;\n           }\n           default: {\n            break L22;\n           }\n           }\n           $37 = ($36<<24>>24)==(61);\n           $38 = (((($3) + ($$05171<<4)|0)) + 4|0);\n           $39 = HEAP32[$38>>2]|0;\n           if (!($37)) {\n            label = 19;\n            break L16;\n           }\n           $40 = ($39|0)==(0);\n           if (!($40)) {\n            label = 18;\n            break L16;\n           }\n          }\n         } while(0);\n         $55 = (($$05171) + 1)|0;\n         $56 = (($3) + ($55<<4)|0);\n         $57 = HEAP32[$56>>2]|0;\n         $58 = ($57|0)==(0|0);\n         if ($58) {\n          break L14;\n         } else {\n          $$05171 = $55;$28 = $57;\n         }\n        }\n        do {\n         if ((label|0) == 18) {\n          $41 = ((($$04956)) + 1|0);\n          HEAP32[7830] = $41;\n          $48 = $10;\n         }\n         else if ((label|0) == 19) {\n          $42 = ($39|0)==(1);\n          if ($42) {\n           $43 = (($10) + 1)|0;\n           HEAP32[2494] = $43;\n           $44 = (($1) + ($43<<2)|0);\n           $45 = HEAP32[$44>>2]|0;\n           HEAP32[7830] = $45;\n           $46 = ($45|0)==(0|0);\n           if ($46) {\n            $$3 = 58;\n            break L4;\n           } else {\n            $48 = $43;\n            break;\n           }\n          } else {\n           HEAP32[7830] = 0;\n           $48 = $10;\n           break;\n          }\n         }\n        } while(0);\n        $47 = (($48) + 1)|0;\n        HEAP32[2494] = $47;\n        $49 = ($4|0)==(0|0);\n        if (!($49)) {\n         HEAP32[$4>>2] = $$05171;\n        }\n        $50 = (((($3) + ($$05171<<4)|0)) + 8|0);\n        $51 = HEAP32[$50>>2]|0;\n        $52 = ($51|0)==(0|0);\n        $53 = (((($3) + ($$05171<<4)|0)) + 12|0);\n        $54 = HEAP32[$53>>2]|0;\n        if ($52) {\n         $$3 = $54;\n         break L4;\n        }\n        HEAP32[$51>>2] = $54;\n        $$3 = 0;\n        break L4;\n       }\n      } while(0);\n      if ($25) {\n       $59 = (($10) + 1)|0;\n       HEAP32[2494] = $59;\n       $$3 = 63;\n       break;\n      }\n     }\n     $60 = (_getopt($0,$1,$2)|0);\n     $$3 = $60;\n    } else {\n     $$3 = -1;\n    }\n   }\n  } else {\n   $$3 = -1;\n  }\n } while(0);\n return ($$3|0);\n}\nfunction _rename($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n HEAP32[$vararg_buffer>>2] = $0;\n $vararg_ptr1 = ((($vararg_buffer)) + 4|0);\n HEAP32[$vararg_ptr1>>2] = $1;\n $2 = (___syscall38(38,($vararg_buffer|0))|0);\n $3 = (___syscall_ret($2)|0);\n STACKTOP = sp;return ($3|0);\n}\nfunction ___overflow($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;\n var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $2 = sp;\n $3 = $1&255;\n HEAP8[$2>>0] = $3;\n $4 = ((($0)) + 16|0);\n $5 = HEAP32[$4>>2]|0;\n $6 = ($5|0)==(0|0);\n if ($6) {\n  $7 = (___towrite($0)|0);\n  $8 = ($7|0)==(0);\n  if ($8) {\n   $$pre = HEAP32[$4>>2]|0;\n   $12 = $$pre;\n   label = 4;\n  } else {\n   $$0 = -1;\n  }\n } else {\n  $12 = $5;\n  label = 4;\n }\n do {\n  if ((label|0) == 4) {\n   $9 = ((($0)) + 20|0);\n   $10 = HEAP32[$9>>2]|0;\n   $11 = ($10>>>0)<($12>>>0);\n   if ($11) {\n    $13 = $1 & 255;\n    $14 = ((($0)) + 75|0);\n    $15 = HEAP8[$14>>0]|0;\n    $16 = $15 << 24 >> 24;\n    $17 = ($13|0)==($16|0);\n    if (!($17)) {\n     $18 = ((($10)) + 1|0);\n     HEAP32[$9>>2] = $18;\n     HEAP8[$10>>0] = $3;\n     $$0 = $13;\n     break;\n    }\n   }\n   $19 = ((($0)) + 36|0);\n   $20 = HEAP32[$19>>2]|0;\n   $21 = (FUNCTION_TABLE_iiii[$20 & 127]($0,$2,1)|0);\n   $22 = ($21|0)==(1);\n   if ($22) {\n    $23 = HEAP8[$2>>0]|0;\n    $24 = $23&255;\n    $$0 = $24;\n   } else {\n    $$0 = -1;\n   }\n  }\n } while(0);\n STACKTOP = sp;return ($$0|0);\n}\nfunction _fputs($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (_strlen($0)|0);\n $3 = (_fwrite($0,$2,1,$1)|0);\n $4 = (($3) + -1)|0;\n return ($4|0);\n}\nfunction _fwrite($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = Math_imul($2, $1)|0;\n $5 = ((($3)) + 76|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)>(-1);\n if ($7) {\n  $9 = (___lockfile($3)|0);\n  $phitmp = ($9|0)==(0);\n  $10 = (___fwritex($0,$4,$3)|0);\n  if ($phitmp) {\n   $11 = $10;\n  } else {\n   ___unlockfile($3);\n   $11 = $10;\n  }\n } else {\n  $8 = (___fwritex($0,$4,$3)|0);\n  $11 = $8;\n }\n $12 = ($11|0)==($4|0);\n if ($12) {\n  $14 = $2;\n } else {\n  $13 = (($11>>>0) / ($1>>>0))&-1;\n  $14 = $13;\n }\n return ($14|0);\n}\nfunction _fputc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;\n var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($1)) + 76|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)<(0);\n if ($4) {\n  label = 3;\n } else {\n  $5 = (___lockfile($1)|0);\n  $6 = ($5|0)==(0);\n  if ($6) {\n   label = 3;\n  } else {\n   $20 = ((($1)) + 75|0);\n   $21 = HEAP8[$20>>0]|0;\n   $22 = $21 << 24 >> 24;\n   $23 = ($22|0)==($0|0);\n   if ($23) {\n    label = 10;\n   } else {\n    $24 = ((($1)) + 20|0);\n    $25 = HEAP32[$24>>2]|0;\n    $26 = ((($1)) + 16|0);\n    $27 = HEAP32[$26>>2]|0;\n    $28 = ($25>>>0)<($27>>>0);\n    if ($28) {\n     $29 = $0&255;\n     $30 = ((($25)) + 1|0);\n     HEAP32[$24>>2] = $30;\n     HEAP8[$25>>0] = $29;\n     $31 = $0 & 255;\n     $33 = $31;\n    } else {\n     label = 10;\n    }\n   }\n   if ((label|0) == 10) {\n    $32 = (___overflow($1,$0)|0);\n    $33 = $32;\n   }\n   ___unlockfile($1);\n   $$0 = $33;\n  }\n }\n do {\n  if ((label|0) == 3) {\n   $7 = ((($1)) + 75|0);\n   $8 = HEAP8[$7>>0]|0;\n   $9 = $8 << 24 >> 24;\n   $10 = ($9|0)==($0|0);\n   if (!($10)) {\n    $11 = ((($1)) + 20|0);\n    $12 = HEAP32[$11>>2]|0;\n    $13 = ((($1)) + 16|0);\n    $14 = HEAP32[$13>>2]|0;\n    $15 = ($12>>>0)<($14>>>0);\n    if ($15) {\n     $16 = $0&255;\n     $17 = ((($12)) + 1|0);\n     HEAP32[$11>>2] = $17;\n     HEAP8[$12>>0] = $16;\n     $18 = $0 & 255;\n     $$0 = $18;\n     break;\n    }\n   }\n   $19 = (___overflow($1,$0)|0);\n   $$0 = $19;\n  }\n } while(0);\n return ($$0|0);\n}\nfunction _fread($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$ = 0, $$0 = 0, $$053$ph = 0, $$05357 = 0, $$054$ph = 0, $$05456 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;\n var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $4 = Math_imul($2, $1)|0;\n $5 = ((($3)) + 76|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = ($6|0)>(-1);\n if ($7) {\n  $8 = (___lockfile($3)|0);\n  $34 = $8;\n } else {\n  $34 = 0;\n }\n $9 = ((($3)) + 74|0);\n $10 = HEAP8[$9>>0]|0;\n $11 = $10 << 24 >> 24;\n $12 = (($11) + 255)|0;\n $13 = $12 | $11;\n $14 = $13&255;\n HEAP8[$9>>0] = $14;\n $15 = ((($3)) + 8|0);\n $16 = HEAP32[$15>>2]|0;\n $17 = ((($3)) + 4|0);\n $18 = HEAP32[$17>>2]|0;\n $19 = (($16) - ($18))|0;\n $20 = ($19|0)>(0);\n $21 = $18;\n if ($20) {\n  $22 = ($19>>>0)<($4>>>0);\n  $$ = $22 ? $19 : $4;\n  _memcpy(($0|0),($21|0),($$|0))|0;\n  $23 = (($21) + ($$)|0);\n  HEAP32[$17>>2] = $23;\n  $24 = (($0) + ($$)|0);\n  $25 = (($4) - ($$))|0;\n  $$053$ph = $25;$$054$ph = $24;\n } else {\n  $$053$ph = $4;$$054$ph = $0;\n }\n $26 = ($$053$ph|0)==(0);\n L7: do {\n  if ($26) {\n   label = 13;\n  } else {\n   $27 = ((($3)) + 32|0);\n   $$05357 = $$053$ph;$$05456 = $$054$ph;\n   while(1) {\n    $28 = (___toread($3)|0);\n    $29 = ($28|0)==(0);\n    if (!($29)) {\n     break;\n    }\n    $30 = HEAP32[$27>>2]|0;\n    $31 = (FUNCTION_TABLE_iiii[$30 & 127]($3,$$05456,$$05357)|0);\n    $32 = (($31) + 1)|0;\n    $33 = ($32>>>0)<(2);\n    if ($33) {\n     break;\n    }\n    $38 = (($$05357) - ($31))|0;\n    $39 = (($$05456) + ($31)|0);\n    $40 = ($38|0)==(0);\n    if ($40) {\n     label = 13;\n     break L7;\n    } else {\n     $$05357 = $38;$$05456 = $39;\n    }\n   }\n   $35 = ($34|0)==(0);\n   if (!($35)) {\n    ___unlockfile($3);\n   }\n   $36 = (($4) - ($$05357))|0;\n   $37 = (($36>>>0) / ($1>>>0))&-1;\n   $$0 = $37;\n  }\n } while(0);\n if ((label|0) == 13) {\n  $41 = ($34|0)==(0);\n  if ($41) {\n   $$0 = $2;\n  } else {\n   ___unlockfile($3);\n   $$0 = $2;\n  }\n }\n return ($$0|0);\n}\nfunction _puts($0) {\n $0 = $0|0;\n var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;\n var $9 = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = HEAP32[2576]|0;\n $2 = ((($1)) + 76|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = ($3|0)>(-1);\n if ($4) {\n  $5 = (___lockfile($1)|0);\n  $20 = $5;\n } else {\n  $20 = 0;\n }\n $6 = (_fputs($0,$1)|0);\n $7 = ($6|0)<(0);\n do {\n  if ($7) {\n   $19 = 1;\n  } else {\n   $8 = ((($1)) + 75|0);\n   $9 = HEAP8[$8>>0]|0;\n   $10 = ($9<<24>>24)==(10);\n   if (!($10)) {\n    $11 = ((($1)) + 20|0);\n    $12 = HEAP32[$11>>2]|0;\n    $13 = ((($1)) + 16|0);\n    $14 = HEAP32[$13>>2]|0;\n    $15 = ($12>>>0)<($14>>>0);\n    if ($15) {\n     $16 = ((($12)) + 1|0);\n     HEAP32[$11>>2] = $16;\n     HEAP8[$12>>0] = 10;\n     $19 = 0;\n     break;\n    }\n   }\n   $17 = (___overflow($1,10)|0);\n   $phitmp = ($17|0)<(0);\n   $19 = $phitmp;\n  }\n } while(0);\n $18 = $19 << 31 >> 31;\n $21 = ($20|0)==(0);\n if (!($21)) {\n  ___unlockfile($1);\n }\n return ($18|0);\n}\nfunction _unlink($0) {\n $0 = $0|0;\n var $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $vararg_buffer = sp;\n HEAP32[$vararg_buffer>>2] = $0;\n $1 = (___syscall10(10,($vararg_buffer|0))|0);\n $2 = (___syscall_ret($1)|0);\n STACKTOP = sp;return ($2|0);\n}\nfunction _atoi($0) {\n $0 = $0|0;\n var $$0 = 0, $$010$lcssa = 0, $$01016 = 0, $$011 = 0, $$1$ph = 0, $$112$ph = 0, $$11215 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;\n var $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit14 = 0, $isdigittmp = 0, $isdigittmp13 = 0, $isdigittmp17 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $$011 = $0;\n while(1) {\n  $1 = HEAP8[$$011>>0]|0;\n  $2 = $1 << 24 >> 24;\n  $3 = (_isspace($2)|0);\n  $4 = ($3|0)==(0);\n  $5 = ((($$011)) + 1|0);\n  if ($4) {\n   break;\n  } else {\n   $$011 = $5;\n  }\n }\n switch ($2|0) {\n case 45:  {\n  $$0 = 1;\n  label = 5;\n  break;\n }\n case 43:  {\n  $$0 = 0;\n  label = 5;\n  break;\n }\n default: {\n  $$1$ph = 0;$$112$ph = $$011;$7 = $1;\n }\n }\n if ((label|0) == 5) {\n  $$pre = HEAP8[$5>>0]|0;\n  $$1$ph = $$0;$$112$ph = $5;$7 = $$pre;\n }\n $6 = $7 << 24 >> 24;\n $isdigittmp13 = (($6) + -48)|0;\n $isdigit14 = ($isdigittmp13>>>0)<(10);\n if ($isdigit14) {\n  $$01016 = 0;$$11215 = $$112$ph;$isdigittmp17 = $isdigittmp13;\n  while(1) {\n   $8 = ($$01016*10)|0;\n   $9 = ((($$11215)) + 1|0);\n   $10 = (($8) - ($isdigittmp17))|0;\n   $11 = HEAP8[$9>>0]|0;\n   $12 = $11 << 24 >> 24;\n   $isdigittmp = (($12) + -48)|0;\n   $isdigit = ($isdigittmp>>>0)<(10);\n   if ($isdigit) {\n    $$01016 = $10;$$11215 = $9;$isdigittmp17 = $isdigittmp;\n   } else {\n    $$010$lcssa = $10;\n    break;\n   }\n  }\n } else {\n  $$010$lcssa = 0;\n }\n $13 = ($$1$ph|0)!=(0);\n $14 = (0 - ($$010$lcssa))|0;\n $15 = $13 ? $$010$lcssa : $14;\n return ($15|0);\n}\nfunction _qsort($0,$1,$2,$3) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n var $$0 = 0, $$0$i = 0, $$0$i88 = 0, $$067$lcssa = 0, $$06793 = 0, $$068$i$i = 0, $$068$i8$i = 0, $$068$lcssa = 0, $$06892 = 0, $$07$i10$i$ph = 0, $$09$i$i = 0, $$09$i7$i = 0, $$1 = 0, $$169$be = 0, $$169108 = 0, $$2$be = 0, $$2109 = 0, $$pre = 0, $$pre$i = 0, $$pre$i71 = 0;\n var $$pre$i73 = 0, $$pre$i75 = 0, $$pre11$i = 0, $$pre11$i72 = 0, $$pre11$i74 = 0, $$pre11$i76 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;\n var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $15$phi = 0, $16 = 0, $17 = 0, $18 = 0;\n var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;\n var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;\n var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;\n var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;\n var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond106 = 0, $or$cond97 = 0, $or$cond97107 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);\n $4 = sp + 8|0;\n $5 = sp;\n $6 = Math_imul($2, $1)|0;\n $7 = $5;\n $8 = $7;\n HEAP32[$8>>2] = 1;\n $9 = (($7) + 4)|0;\n $10 = $9;\n HEAP32[$10>>2] = 0;\n $11 = ($6|0)==(0);\n if (!($11)) {\n  $12 = (0 - ($2))|0;\n  $13 = ((($4)) + 4|0);\n  HEAP32[$13>>2] = $2;\n  HEAP32[$4>>2] = $2;\n  $$0 = 2;$15 = $2;$17 = $2;\n  while(1) {\n   $14 = (($15) + ($2))|0;\n   $16 = (($14) + ($17))|0;\n   $18 = (($4) + ($$0<<2)|0);\n   HEAP32[$18>>2] = $16;\n   $19 = ($16>>>0)<($6>>>0);\n   $20 = (($$0) + 1)|0;\n   if ($19) {\n    $15$phi = $17;$$0 = $20;$17 = $16;$15 = $15$phi;\n   } else {\n    break;\n   }\n  }\n  $21 = (($0) + ($6)|0);\n  $22 = (($21) + ($12)|0);\n  $23 = ($22>>>0)>($0>>>0);\n  $24 = ((($5)) + 4|0);\n  if ($23) {\n   $25 = $22;\n   $$06793 = 1;$$06892 = $0;$27 = 1;\n   while(1) {\n    $26 = $27 & 3;\n    $28 = ($26|0)==(3);\n    do {\n     if ($28) {\n      _sift($$06892,$2,$3,$$06793,$4);\n      $$pre$i = HEAP32[$5>>2]|0;\n      $$pre11$i = HEAP32[$24>>2]|0;\n      $29 = $$pre$i >>> 2;\n      $30 = $$pre11$i << 30;\n      $31 = $30 | $29;\n      HEAP32[$5>>2] = $31;\n      $32 = $$pre11$i >>> 2;\n      HEAP32[$24>>2] = $32;\n      $33 = (($$06793) + 2)|0;\n      $$1 = $33;$56 = $31;\n     } else {\n      $34 = (($$06793) + -1)|0;\n      $35 = (($4) + ($34<<2)|0);\n      $36 = HEAP32[$35>>2]|0;\n      $37 = $$06892;\n      $38 = (($25) - ($37))|0;\n      $39 = ($36>>>0)<($38>>>0);\n      if ($39) {\n       _sift($$06892,$2,$3,$$06793,$4);\n      } else {\n       _trinkle($$06892,$2,$3,$5,$$06793,0,$4);\n      }\n      $40 = ($$06793|0)==(1);\n      if ($40) {\n       $$pre$i71 = HEAP32[$24>>2]|0;\n       $$pre11$i72 = HEAP32[$5>>2]|0;\n       $41 = $$pre$i71 << 1;\n       $42 = $$pre11$i72 >>> 31;\n       $43 = $42 | $41;\n       HEAP32[$24>>2] = $43;\n       $44 = $$pre11$i72 << 1;\n       HEAP32[$5>>2] = $44;\n       $$1 = 0;$56 = $44;\n       break;\n      }\n      $45 = ($34>>>0)>(31);\n      if ($45) {\n       $46 = (($$06793) + -33)|0;\n       $47 = HEAP32[$5>>2]|0;\n       HEAP32[$24>>2] = $47;\n       HEAP32[$5>>2] = 0;\n       $$0$i = $46;$49 = $47;$52 = 0;\n      } else {\n       $$pre$i75 = HEAP32[$24>>2]|0;\n       $$pre11$i76 = HEAP32[$5>>2]|0;\n       $$0$i = $34;$49 = $$pre$i75;$52 = $$pre11$i76;\n      }\n      $48 = $49 << $$0$i;\n      $50 = (32 - ($$0$i))|0;\n      $51 = $52 >>> $50;\n      $53 = $51 | $48;\n      HEAP32[$24>>2] = $53;\n      $54 = $52 << $$0$i;\n      HEAP32[$5>>2] = $54;\n      $$1 = 1;$56 = $54;\n     }\n    } while(0);\n    $55 = $56 | 1;\n    HEAP32[$5>>2] = $55;\n    $57 = (($$06892) + ($2)|0);\n    $58 = ($57>>>0)<($22>>>0);\n    if ($58) {\n     $$06793 = $$1;$$06892 = $57;$27 = $55;\n    } else {\n     $$067$lcssa = $$1;$$068$lcssa = $57;\n     break;\n    }\n   }\n  } else {\n   $$067$lcssa = 1;$$068$lcssa = $0;\n  }\n  _trinkle($$068$lcssa,$2,$3,$5,$$067$lcssa,0,$4);\n  $59 = ((($5)) + 4|0);\n  $60 = ($$067$lcssa|0)==(1);\n  $61 = HEAP32[$5>>2]|0;\n  $62 = ($61|0)==(1);\n  $or$cond106 = $60 & $62;\n  $63 = HEAP32[$59>>2]|0;\n  $64 = ($63|0)==(0);\n  $or$cond97107 = $or$cond106 & $64;\n  if (!($or$cond97107)) {\n   $$169108 = $$068$lcssa;$$2109 = $$067$lcssa;$123 = $64;$67 = $61;$76 = $63;\n   while(1) {\n    $65 = ($$2109|0)<(2);\n    if ($65) {\n     $66 = (($67) + -1)|0;\n     $68 = ($66|0)==(0);\n     do {\n      if ($68) {\n       $86 = 32;\n       label = 28;\n      } else {\n       $69 = $66 & 1;\n       $70 = ($69|0)==(0);\n       if ($70) {\n        $$068$i$i = $66;$$09$i$i = 0;\n        while(1) {\n         $71 = (($$09$i$i) + 1)|0;\n         $72 = $$068$i$i >>> 1;\n         $73 = $72 & 1;\n         $74 = ($73|0)==(0);\n         if ($74) {\n          $$068$i$i = $72;$$09$i$i = $71;\n         } else {\n          $83 = $71;\n          break;\n         }\n        }\n       } else {\n        if ($123) {\n         $$07$i10$i$ph = 32;\n        } else {\n         $75 = $76 & 1;\n         $77 = ($75|0)==(0);\n         if ($77) {\n          $$068$i8$i = $76;$$09$i7$i = 0;\n         } else {\n          $$0$i88 = 0;$88 = $67;$91 = $76;$95 = 0;\n          break;\n         }\n         while(1) {\n          $78 = (($$09$i7$i) + 1)|0;\n          $79 = $$068$i8$i >>> 1;\n          $80 = $79 & 1;\n          $81 = ($80|0)==(0);\n          if ($81) {\n           $$068$i8$i = $79;$$09$i7$i = $78;\n          } else {\n           $$07$i10$i$ph = $78;\n           break;\n          }\n         }\n        }\n        $82 = (($$07$i10$i$ph) + 32)|0;\n        $83 = $82;\n       }\n       $84 = ($83>>>0)>(31);\n       if ($84) {\n        $86 = $83;\n        label = 28;\n       } else {\n        $$0$i88 = $83;$88 = $67;$91 = $76;$95 = $83;\n       }\n      }\n     } while(0);\n     if ((label|0) == 28) {\n      label = 0;\n      $85 = (($86) + -32)|0;\n      HEAP32[$5>>2] = $76;\n      HEAP32[$24>>2] = 0;\n      $$0$i88 = $85;$88 = $76;$91 = 0;$95 = $86;\n     }\n     $87 = $88 >>> $$0$i88;\n     $89 = (32 - ($$0$i88))|0;\n     $90 = $91 << $89;\n     $92 = $90 | $87;\n     HEAP32[$5>>2] = $92;\n     $93 = $91 >>> $$0$i88;\n     HEAP32[$24>>2] = $93;\n     $94 = (($95) + ($$2109))|0;\n     $$pre = (($$169108) + ($12)|0);\n     $$169$be = $$pre;$$2$be = $94;\n    } else {\n     $96 = $76 << 2;\n     $97 = $67 >>> 30;\n     $98 = $97 | $96;\n     $99 = (($$2109) + -2)|0;\n     $100 = $67 << 1;\n     $101 = $100 & 2147483646;\n     $102 = $97 << 31;\n     $103 = $101 | $102;\n     $104 = $103 ^ 3;\n     HEAP32[$5>>2] = $104;\n     $105 = $98 >>> 1;\n     HEAP32[$24>>2] = $105;\n     $106 = (($4) + ($99<<2)|0);\n     $107 = HEAP32[$106>>2]|0;\n     $108 = (0 - ($107))|0;\n     $109 = (($$169108) + ($108)|0);\n     $110 = (($109) + ($12)|0);\n     $111 = (($$2109) + -1)|0;\n     _trinkle($110,$2,$3,$5,$111,1,$4);\n     $$pre$i73 = HEAP32[$24>>2]|0;\n     $$pre11$i74 = HEAP32[$5>>2]|0;\n     $112 = $$pre$i73 << 1;\n     $113 = $$pre11$i74 >>> 31;\n     $114 = $113 | $112;\n     HEAP32[$24>>2] = $114;\n     $115 = $$pre11$i74 << 1;\n     $116 = $115 | 1;\n     HEAP32[$5>>2] = $116;\n     $117 = (($$169108) + ($12)|0);\n     _trinkle($117,$2,$3,$5,$99,1,$4);\n     $$169$be = $117;$$2$be = $99;\n    }\n    $118 = ($$2$be|0)==(1);\n    $119 = HEAP32[$5>>2]|0;\n    $120 = ($119|0)==(1);\n    $or$cond = $118 & $120;\n    $121 = HEAP32[$59>>2]|0;\n    $122 = ($121|0)==(0);\n    $or$cond97 = $or$cond & $122;\n    if ($or$cond97) {\n     break;\n    } else {\n     $$169108 = $$169$be;$$2109 = $$2$be;$123 = $122;$67 = $119;$76 = $121;\n    }\n   }\n  }\n }\n STACKTOP = sp;return;\n}\nfunction _sift($0,$1,$2,$3,$4) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n var $$0$lcssa = 0, $$029$be = 0, $$02932 = 0, $$030$be = 0, $$03031 = 0, $$033 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;\n var $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);\n $5 = sp;\n HEAP32[$5>>2] = $0;\n $6 = ($3|0)>(1);\n L1: do {\n  if ($6) {\n   $7 = (0 - ($1))|0;\n   $$02932 = $0;$$03031 = $3;$$033 = 1;$14 = $0;\n   while(1) {\n    $8 = (($$02932) + ($7)|0);\n    $9 = (($$03031) + -2)|0;\n    $10 = (($4) + ($9<<2)|0);\n    $11 = HEAP32[$10>>2]|0;\n    $12 = (0 - ($11))|0;\n    $13 = (($8) + ($12)|0);\n    $15 = (FUNCTION_TABLE_iii[$2 & 63]($14,$13)|0);\n    $16 = ($15|0)>(-1);\n    if ($16) {\n     $17 = (FUNCTION_TABLE_iii[$2 & 63]($14,$8)|0);\n     $18 = ($17|0)>(-1);\n     if ($18) {\n      $$0$lcssa = $$033;\n      break L1;\n     }\n    }\n    $19 = (FUNCTION_TABLE_iii[$2 & 63]($13,$8)|0);\n    $20 = ($19|0)>(-1);\n    $21 = (($$033) + 1)|0;\n    $22 = (($5) + ($$033<<2)|0);\n    if ($20) {\n     HEAP32[$22>>2] = $13;\n     $23 = (($$03031) + -1)|0;\n     $$029$be = $13;$$030$be = $23;\n    } else {\n     HEAP32[$22>>2] = $8;\n     $$029$be = $8;$$030$be = $9;\n    }\n    $24 = ($$030$be|0)>(1);\n    if (!($24)) {\n     $$0$lcssa = $21;\n     break L1;\n    }\n    $$pre = HEAP32[$5>>2]|0;\n    $$02932 = $$029$be;$$03031 = $$030$be;$$033 = $21;$14 = $$pre;\n   }\n  } else {\n   $$0$lcssa = 1;\n  }\n } while(0);\n _cycle($1,$5,$$0$lcssa);\n STACKTOP = sp;return;\n}\nfunction _trinkle($0,$1,$2,$3,$4,$5,$6) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n $3 = $3|0;\n $4 = $4|0;\n $5 = $5|0;\n $6 = $6|0;\n var $$0$i = 0, $$0$lcssa = 0, $$0$lcssa84 = 0, $$045$lcssa = 0, $$045$lcssa83 = 0, $$0456196 = 0, $$046$lcssa = 0, $$046$lcssa82 = 0, $$0466097 = 0, $$047$lcssa = 0, $$0475998 = 0, $$06295 = 0, $$06295$phi = 0, $$068$i$i = 0, $$068$i8$i = 0, $$07$i10$i$ph = 0, $$09$i$i = 0, $$09$i7$i = 0, $$pre = 0, $$sroa$0$05899 = 0;\n var $$sroa$8$056100 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;\n var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;\n var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;\n var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);\n $7 = sp;\n $8 = HEAP32[$3>>2]|0;\n $9 = ((($3)) + 4|0);\n $10 = HEAP32[$9>>2]|0;\n HEAP32[$7>>2] = $0;\n $11 = (0 - ($1))|0;\n $12 = ($8|0)!=(1);\n $13 = ($10|0)!=(0);\n $14 = $13 | $12;\n L1: do {\n  if ($14) {\n   $15 = (($6) + ($4<<2)|0);\n   $16 = HEAP32[$15>>2]|0;\n   $17 = (0 - ($16))|0;\n   $18 = (($0) + ($17)|0);\n   $19 = (FUNCTION_TABLE_iii[$2 & 63]($18,$0)|0);\n   $20 = ($19|0)<(1);\n   if ($20) {\n    $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;\n    label = 18;\n   } else {\n    $phitmp = ($5|0)==(0);\n    $$0456196 = 1;$$0466097 = $4;$$0475998 = $phitmp;$$06295 = $0;$$sroa$0$05899 = $8;$$sroa$8$056100 = $10;$26 = $18;\n    while(1) {\n     $21 = ($$0466097|0)>(1);\n     $or$cond = $$0475998 & $21;\n     if ($or$cond) {\n      $22 = (($$06295) + ($11)|0);\n      $23 = (($$0466097) + -2)|0;\n      $24 = (($6) + ($23<<2)|0);\n      $25 = HEAP32[$24>>2]|0;\n      $27 = (FUNCTION_TABLE_iii[$2 & 63]($22,$26)|0);\n      $28 = ($27|0)>(-1);\n      if ($28) {\n       $$0$lcssa84 = $$06295;$$045$lcssa83 = $$0456196;$$046$lcssa82 = $$0466097;\n       label = 19;\n       break L1;\n      }\n      $29 = (0 - ($25))|0;\n      $30 = (($22) + ($29)|0);\n      $31 = (FUNCTION_TABLE_iii[$2 & 63]($30,$26)|0);\n      $32 = ($31|0)>(-1);\n      if ($32) {\n       $$0$lcssa84 = $$06295;$$045$lcssa83 = $$0456196;$$046$lcssa82 = $$0466097;\n       label = 19;\n       break L1;\n      }\n     }\n     $33 = (($$0456196) + 1)|0;\n     $34 = (($7) + ($$0456196<<2)|0);\n     HEAP32[$34>>2] = $26;\n     $35 = (($$sroa$0$05899) + -1)|0;\n     $36 = ($35|0)==(0);\n     do {\n      if ($36) {\n       $73 = 0;$74 = 32;\n       label = 15;\n      } else {\n       $37 = $35 & 1;\n       $38 = ($37|0)==(0);\n       if ($38) {\n        $$068$i$i = $35;$$09$i$i = 0;\n        while(1) {\n         $39 = (($$09$i$i) + 1)|0;\n         $40 = $$068$i$i >>> 1;\n         $41 = $40 & 1;\n         $42 = ($41|0)==(0);\n         if ($42) {\n          $$068$i$i = $40;$$09$i$i = $39;\n         } else {\n          $51 = $39;\n          break;\n         }\n        }\n       } else {\n        $43 = ($$sroa$8$056100|0)==(0);\n        if ($43) {\n         $$07$i10$i$ph = 32;\n        } else {\n         $44 = $$sroa$8$056100 & 1;\n         $45 = ($44|0)==(0);\n         if ($45) {\n          $$068$i8$i = $$sroa$8$056100;$$09$i7$i = 0;\n         } else {\n          $$0$i = 0;$55 = $$sroa$0$05899;$58 = $$sroa$8$056100;$62 = 0;\n          break;\n         }\n         while(1) {\n          $46 = (($$09$i7$i) + 1)|0;\n          $47 = $$068$i8$i >>> 1;\n          $48 = $47 & 1;\n          $49 = ($48|0)==(0);\n          if ($49) {\n           $$068$i8$i = $47;$$09$i7$i = $46;\n          } else {\n           $$07$i10$i$ph = $46;\n           break;\n          }\n         }\n        }\n        $50 = (($$07$i10$i$ph) + 32)|0;\n        $51 = $50;\n       }\n       $52 = ($51>>>0)>(31);\n       $53 = (($51) + -32)|0;\n       if ($52) {\n        $73 = $53;$74 = $51;\n        label = 15;\n       } else {\n        $$0$i = $51;$55 = $$sroa$0$05899;$58 = $$sroa$8$056100;$62 = $51;\n       }\n      }\n     } while(0);\n     if ((label|0) == 15) {\n      label = 0;\n      $$0$i = $73;$55 = $$sroa$8$056100;$58 = 0;$62 = $74;\n     }\n     $54 = $55 >>> $$0$i;\n     $56 = (32 - ($$0$i))|0;\n     $57 = $58 << $56;\n     $59 = $57 | $54;\n     $60 = $58 >>> $$0$i;\n     $61 = (($62) + ($$0466097))|0;\n     $63 = ($59|0)!=(1);\n     $64 = ($60|0)!=(0);\n     $65 = $64 | $63;\n     if (!($65)) {\n      $$0$lcssa84 = $26;$$045$lcssa83 = $33;$$046$lcssa82 = $61;\n      label = 19;\n      break L1;\n     }\n     $$pre = HEAP32[$7>>2]|0;\n     $66 = (($6) + ($61<<2)|0);\n     $67 = HEAP32[$66>>2]|0;\n     $68 = (0 - ($67))|0;\n     $69 = (($26) + ($68)|0);\n     $70 = (FUNCTION_TABLE_iii[$2 & 63]($69,$$pre)|0);\n     $71 = ($70|0)<(1);\n     if ($71) {\n      $$0$lcssa = $26;$$045$lcssa = $33;$$046$lcssa = $61;$$047$lcssa = 0;\n      label = 18;\n      break;\n     } else {\n      $$06295$phi = $26;$$0456196 = $33;$$0466097 = $61;$$0475998 = 1;$$sroa$0$05899 = $59;$$sroa$8$056100 = $60;$26 = $69;$$06295 = $$06295$phi;\n     }\n    }\n   }\n  } else {\n   $$0$lcssa = $0;$$045$lcssa = 1;$$046$lcssa = $4;$$047$lcssa = $5;\n   label = 18;\n  }\n } while(0);\n if ((label|0) == 18) {\n  $72 = ($$047$lcssa|0)==(0);\n  if ($72) {\n   $$0$lcssa84 = $$0$lcssa;$$045$lcssa83 = $$045$lcssa;$$046$lcssa82 = $$046$lcssa;\n   label = 19;\n  }\n }\n if ((label|0) == 19) {\n  _cycle($1,$7,$$045$lcssa83);\n  _sift($$0$lcssa84,$1,$2,$$046$lcssa82,$6);\n }\n STACKTOP = sp;return;\n}\nfunction _cycle($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $$02527 = 0, $$026 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;\n var $exitcond = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);\n $3 = sp;\n $4 = ($2|0)<(2);\n L1: do {\n  if (!($4)) {\n   $5 = (($1) + ($2<<2)|0);\n   HEAP32[$5>>2] = $3;\n   $6 = ($0|0)==(0);\n   if (!($6)) {\n    $$02527 = $0;$10 = $3;\n    while(1) {\n     $7 = ($$02527>>>0)>(256);\n     $8 = $7 ? 256 : $$02527;\n     $9 = HEAP32[$1>>2]|0;\n     _memcpy(($10|0),($9|0),($8|0))|0;\n     $$026 = 0;\n     while(1) {\n      $11 = (($1) + ($$026<<2)|0);\n      $12 = HEAP32[$11>>2]|0;\n      $13 = (($$026) + 1)|0;\n      $14 = (($1) + ($13<<2)|0);\n      $15 = HEAP32[$14>>2]|0;\n      _memcpy(($12|0),($15|0),($8|0))|0;\n      $16 = HEAP32[$11>>2]|0;\n      $17 = (($16) + ($8)|0);\n      HEAP32[$11>>2] = $17;\n      $exitcond = ($13|0)==($2|0);\n      if ($exitcond) {\n       break;\n      } else {\n       $$026 = $13;\n      }\n     }\n     $18 = (($$02527) - ($8))|0;\n     $19 = ($18|0)==(0);\n     if ($19) {\n      break L1;\n     }\n     $$pre = HEAP32[$5>>2]|0;\n     $$02527 = $18;$10 = $$pre;\n    }\n   }\n  }\n } while(0);\n STACKTOP = sp;return;\n}\nfunction _strtox($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);\n $3 = sp;\n dest=$3; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));\n $4 = ((($3)) + 4|0);\n HEAP32[$4>>2] = $0;\n $5 = ((($3)) + 8|0);\n HEAP32[$5>>2] = (-1);\n $6 = ((($3)) + 44|0);\n HEAP32[$6>>2] = $0;\n $7 = ((($3)) + 76|0);\n HEAP32[$7>>2] = -1;\n ___shlim($3,0);\n $8 = (+___floatscan($3,$2,1));\n $9 = ((($3)) + 108|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = HEAP32[$4>>2]|0;\n $12 = HEAP32[$5>>2]|0;\n $13 = (($11) - ($12))|0;\n $14 = (($13) + ($10))|0;\n $15 = ($1|0)==(0|0);\n if (!($15)) {\n  $16 = ($14|0)!=(0);\n  $17 = (($0) + ($14)|0);\n  $18 = $16 ? $17 : $0;\n  HEAP32[$1>>2] = $18;\n }\n STACKTOP = sp;return (+$8);\n}\nfunction _strtod($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $2 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (+_strtox($0,$1,1));\n return (+$2);\n}\nfunction _strtol($0,$1,$2) {\n $0 = $0|0;\n $1 = $1|0;\n $2 = $2|0;\n var $3 = 0, $4 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $3 = (_strtox_339($0,$1,$2,-2147483648,0)|0);\n $4 = tempRet0;\n return ($3|0);\n}\nfunction _atof($0) {\n $0 = $0|0;\n var $1 = 0.0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = (+_strtod($0,0));\n return (+$1);\n}\nfunction _malloc($0) {\n $0 = $0|0;\n var $$$0190$i = 0, $$$0191$i = 0, $$$4349$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0;\n var $$024370$i = 0, $$0286$i$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$0342$i = 0, $$0343$i = 0, $$0345$i = 0, $$0351$i = 0, $$0356$i = 0, $$0357$$i = 0, $$0357$i = 0, $$0359$i = 0, $$0360$i = 0, $$0366$i = 0, $$1194$i = 0, $$1196$i = 0, $$124469$i = 0;\n var $$1290$i$i = 0, $$1292$i$i = 0, $$1341$i = 0, $$1346$i = 0, $$1361$i = 0, $$1368$i = 0, $$1372$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3348$i = 0, $$3370$i = 0, $$4$lcssa$i = 0, $$413$i = 0, $$4349$lcssa$i = 0, $$434912$i = 0, $$4355$$4$i = 0;\n var $$4355$ph$i = 0, $$435511$i = 0, $$5256$i = 0, $$723947$i = 0, $$748$i = 0, $$not$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i205 = 0, $$pre$i208 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i206Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre9$i$i = 0, $1 = 0;\n var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;\n var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;\n var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;\n var $1053 = 0, $1054 = 0, $1055 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;\n var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;\n var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;\n var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;\n var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;\n var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;\n var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;\n var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;\n var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;\n var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;\n var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;\n var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;\n var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;\n var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;\n var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;\n var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;\n var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;\n var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;\n var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;\n var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;\n var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;\n var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;\n var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;\n var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;\n var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;\n var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;\n var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;\n var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;\n var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;\n var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;\n var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;\n var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;\n var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;\n var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;\n var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;\n var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;\n var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;\n var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;\n var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;\n var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;\n var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;\n var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;\n var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0;\n var $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0;\n var $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0;\n var $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0;\n var $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0;\n var $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0;\n var $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0;\n var $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i204 = 0, $exitcond$i$i = 0, $not$$i$i = 0, $not$$i22$i = 0;\n var $not$7$i = 0, $or$cond$i = 0, $or$cond$i211 = 0, $or$cond1$i = 0, $or$cond1$i210 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;\n sp = STACKTOP;\n STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);\n $1 = sp;\n $2 = ($0>>>0)<(245);\n do {\n  if ($2) {\n   $3 = ($0>>>0)<(11);\n   $4 = (($0) + 11)|0;\n   $5 = $4 & -8;\n   $6 = $3 ? 16 : $5;\n   $7 = $6 >>> 3;\n   $8 = HEAP32[7843]|0;\n   $9 = $8 >>> $7;\n   $10 = $9 & 3;\n   $11 = ($10|0)==(0);\n   if (!($11)) {\n    $12 = $9 & 1;\n    $13 = $12 ^ 1;\n    $14 = (($13) + ($7))|0;\n    $15 = $14 << 1;\n    $16 = (31412 + ($15<<2)|0);\n    $17 = ((($16)) + 8|0);\n    $18 = HEAP32[$17>>2]|0;\n    $19 = ((($18)) + 8|0);\n    $20 = HEAP32[$19>>2]|0;\n    $21 = ($16|0)==($20|0);\n    do {\n     if ($21) {\n      $22 = 1 << $14;\n      $23 = $22 ^ -1;\n      $24 = $8 & $23;\n      HEAP32[7843] = $24;\n     } else {\n      $25 = HEAP32[(31388)>>2]|0;\n      $26 = ($20>>>0)<($25>>>0);\n      if ($26) {\n       _abort();\n       // unreachable;\n      }\n      $27 = ((($20)) + 12|0);\n      $28 = HEAP32[$27>>2]|0;\n      $29 = ($28|0)==($18|0);\n      if ($29) {\n       HEAP32[$27>>2] = $16;\n       HEAP32[$17>>2] = $20;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $30 = $14 << 3;\n    $31 = $30 | 3;\n    $32 = ((($18)) + 4|0);\n    HEAP32[$32>>2] = $31;\n    $33 = (($18) + ($30)|0);\n    $34 = ((($33)) + 4|0);\n    $35 = HEAP32[$34>>2]|0;\n    $36 = $35 | 1;\n    HEAP32[$34>>2] = $36;\n    $$0 = $19;\n    STACKTOP = sp;return ($$0|0);\n   }\n   $37 = HEAP32[(31380)>>2]|0;\n   $38 = ($6>>>0)>($37>>>0);\n   if ($38) {\n    $39 = ($9|0)==(0);\n    if (!($39)) {\n     $40 = $9 << $7;\n     $41 = 2 << $7;\n     $42 = (0 - ($41))|0;\n     $43 = $41 | $42;\n     $44 = $40 & $43;\n     $45 = (0 - ($44))|0;\n     $46 = $44 & $45;\n     $47 = (($46) + -1)|0;\n     $48 = $47 >>> 12;\n     $49 = $48 & 16;\n     $50 = $47 >>> $49;\n     $51 = $50 >>> 5;\n     $52 = $51 & 8;\n     $53 = $52 | $49;\n     $54 = $50 >>> $52;\n     $55 = $54 >>> 2;\n     $56 = $55 & 4;\n     $57 = $53 | $56;\n     $58 = $54 >>> $56;\n     $59 = $58 >>> 1;\n     $60 = $59 & 2;\n     $61 = $57 | $60;\n     $62 = $58 >>> $60;\n     $63 = $62 >>> 1;\n     $64 = $63 & 1;\n     $65 = $61 | $64;\n     $66 = $62 >>> $64;\n     $67 = (($65) + ($66))|0;\n     $68 = $67 << 1;\n     $69 = (31412 + ($68<<2)|0);\n     $70 = ((($69)) + 8|0);\n     $71 = HEAP32[$70>>2]|0;\n     $72 = ((($71)) + 8|0);\n     $73 = HEAP32[$72>>2]|0;\n     $74 = ($69|0)==($73|0);\n     do {\n      if ($74) {\n       $75 = 1 << $67;\n       $76 = $75 ^ -1;\n       $77 = $8 & $76;\n       HEAP32[7843] = $77;\n       $98 = $77;\n      } else {\n       $78 = HEAP32[(31388)>>2]|0;\n       $79 = ($73>>>0)<($78>>>0);\n       if ($79) {\n        _abort();\n        // unreachable;\n       }\n       $80 = ((($73)) + 12|0);\n       $81 = HEAP32[$80>>2]|0;\n       $82 = ($81|0)==($71|0);\n       if ($82) {\n        HEAP32[$80>>2] = $69;\n        HEAP32[$70>>2] = $73;\n        $98 = $8;\n        break;\n       } else {\n        _abort();\n        // unreachable;\n       }\n      }\n     } while(0);\n     $83 = $67 << 3;\n     $84 = (($83) - ($6))|0;\n     $85 = $6 | 3;\n     $86 = ((($71)) + 4|0);\n     HEAP32[$86>>2] = $85;\n     $87 = (($71) + ($6)|0);\n     $88 = $84 | 1;\n     $89 = ((($87)) + 4|0);\n     HEAP32[$89>>2] = $88;\n     $90 = (($87) + ($84)|0);\n     HEAP32[$90>>2] = $84;\n     $91 = ($37|0)==(0);\n     if (!($91)) {\n      $92 = HEAP32[(31392)>>2]|0;\n      $93 = $37 >>> 3;\n      $94 = $93 << 1;\n      $95 = (31412 + ($94<<2)|0);\n      $96 = 1 << $93;\n      $97 = $98 & $96;\n      $99 = ($97|0)==(0);\n      if ($99) {\n       $100 = $98 | $96;\n       HEAP32[7843] = $100;\n       $$pre = ((($95)) + 8|0);\n       $$0199 = $95;$$pre$phiZ2D = $$pre;\n      } else {\n       $101 = ((($95)) + 8|0);\n       $102 = HEAP32[$101>>2]|0;\n       $103 = HEAP32[(31388)>>2]|0;\n       $104 = ($102>>>0)<($103>>>0);\n       if ($104) {\n        _abort();\n        // unreachable;\n       } else {\n        $$0199 = $102;$$pre$phiZ2D = $101;\n       }\n      }\n      HEAP32[$$pre$phiZ2D>>2] = $92;\n      $105 = ((($$0199)) + 12|0);\n      HEAP32[$105>>2] = $92;\n      $106 = ((($92)) + 8|0);\n      HEAP32[$106>>2] = $$0199;\n      $107 = ((($92)) + 12|0);\n      HEAP32[$107>>2] = $95;\n     }\n     HEAP32[(31380)>>2] = $84;\n     HEAP32[(31392)>>2] = $87;\n     $$0 = $72;\n     STACKTOP = sp;return ($$0|0);\n    }\n    $108 = HEAP32[(31376)>>2]|0;\n    $109 = ($108|0)==(0);\n    if ($109) {\n     $$0197 = $6;\n    } else {\n     $110 = (0 - ($108))|0;\n     $111 = $108 & $110;\n     $112 = (($111) + -1)|0;\n     $113 = $112 >>> 12;\n     $114 = $113 & 16;\n     $115 = $112 >>> $114;\n     $116 = $115 >>> 5;\n     $117 = $116 & 8;\n     $118 = $117 | $114;\n     $119 = $115 >>> $117;\n     $120 = $119 >>> 2;\n     $121 = $120 & 4;\n     $122 = $118 | $121;\n     $123 = $119 >>> $121;\n     $124 = $123 >>> 1;\n     $125 = $124 & 2;\n     $126 = $122 | $125;\n     $127 = $123 >>> $125;\n     $128 = $127 >>> 1;\n     $129 = $128 & 1;\n     $130 = $126 | $129;\n     $131 = $127 >>> $129;\n     $132 = (($130) + ($131))|0;\n     $133 = (31676 + ($132<<2)|0);\n     $134 = HEAP32[$133>>2]|0;\n     $135 = ((($134)) + 4|0);\n     $136 = HEAP32[$135>>2]|0;\n     $137 = $136 & -8;\n     $138 = (($137) - ($6))|0;\n     $$0189$i = $134;$$0190$i = $134;$$0191$i = $138;\n     while(1) {\n      $139 = ((($$0189$i)) + 16|0);\n      $140 = HEAP32[$139>>2]|0;\n      $141 = ($140|0)==(0|0);\n      if ($141) {\n       $142 = ((($$0189$i)) + 20|0);\n       $143 = HEAP32[$142>>2]|0;\n       $144 = ($143|0)==(0|0);\n       if ($144) {\n        break;\n       } else {\n        $146 = $143;\n       }\n      } else {\n       $146 = $140;\n      }\n      $145 = ((($146)) + 4|0);\n      $147 = HEAP32[$145>>2]|0;\n      $148 = $147 & -8;\n      $149 = (($148) - ($6))|0;\n      $150 = ($149>>>0)<($$0191$i>>>0);\n      $$$0191$i = $150 ? $149 : $$0191$i;\n      $$$0190$i = $150 ? $146 : $$0190$i;\n      $$0189$i = $146;$$0190$i = $$$0190$i;$$0191$i = $$$0191$i;\n     }\n     $151 = HEAP32[(31388)>>2]|0;\n     $152 = ($$0190$i>>>0)<($151>>>0);\n     if ($152) {\n      _abort();\n      // unreachable;\n     }\n     $153 = (($$0190$i) + ($6)|0);\n     $154 = ($$0190$i>>>0)<($153>>>0);\n     if (!($154)) {\n      _abort();\n      // unreachable;\n     }\n     $155 = ((($$0190$i)) + 24|0);\n     $156 = HEAP32[$155>>2]|0;\n     $157 = ((($$0190$i)) + 12|0);\n     $158 = HEAP32[$157>>2]|0;\n     $159 = ($158|0)==($$0190$i|0);\n     do {\n      if ($159) {\n       $169 = ((($$0190$i)) + 20|0);\n       $170 = HEAP32[$169>>2]|0;\n       $171 = ($170|0)==(0|0);\n       if ($171) {\n        $172 = ((($$0190$i)) + 16|0);\n        $173 = HEAP32[$172>>2]|0;\n        $174 = ($173|0)==(0|0);\n        if ($174) {\n         $$3$i = 0;\n         break;\n        } else {\n         $$1194$i = $173;$$1196$i = $172;\n        }\n       } else {\n        $$1194$i = $170;$$1196$i = $169;\n       }\n       while(1) {\n        $175 = ((($$1194$i)) + 20|0);\n        $176 = HEAP32[$175>>2]|0;\n        $177 = ($176|0)==(0|0);\n        if (!($177)) {\n         $$1194$i = $176;$$1196$i = $175;\n         continue;\n        }\n        $178 = ((($$1194$i)) + 16|0);\n        $179 = HEAP32[$178>>2]|0;\n        $180 = ($179|0)==(0|0);\n        if ($180) {\n         break;\n        } else {\n         $$1194$i = $179;$$1196$i = $178;\n        }\n       }\n       $181 = ($$1196$i>>>0)<($151>>>0);\n       if ($181) {\n        _abort();\n        // unreachable;\n       } else {\n        HEAP32[$$1196$i>>2] = 0;\n        $$3$i = $$1194$i;\n        break;\n       }\n      } else {\n       $160 = ((($$0190$i)) + 8|0);\n       $161 = HEAP32[$160>>2]|0;\n       $162 = ($161>>>0)<($151>>>0);\n       if ($162) {\n        _abort();\n        // unreachable;\n       }\n       $163 = ((($161)) + 12|0);\n       $164 = HEAP32[$163>>2]|0;\n       $165 = ($164|0)==($$0190$i|0);\n       if (!($165)) {\n        _abort();\n        // unreachable;\n       }\n       $166 = ((($158)) + 8|0);\n       $167 = HEAP32[$166>>2]|0;\n       $168 = ($167|0)==($$0190$i|0);\n       if ($168) {\n        HEAP32[$163>>2] = $158;\n        HEAP32[$166>>2] = $161;\n        $$3$i = $158;\n        break;\n       } else {\n        _abort();\n        // unreachable;\n       }\n      }\n     } while(0);\n     $182 = ($156|0)==(0|0);\n     do {\n      if (!($182)) {\n       $183 = ((($$0190$i)) + 28|0);\n       $184 = HEAP32[$183>>2]|0;\n       $185 = (31676 + ($184<<2)|0);\n       $186 = HEAP32[$185>>2]|0;\n       $187 = ($$0190$i|0)==($186|0);\n       if ($187) {\n        HEAP32[$185>>2] = $$3$i;\n        $cond$i = ($$3$i|0)==(0|0);\n        if ($cond$i) {\n         $188 = 1 << $184;\n         $189 = $188 ^ -1;\n         $190 = $108 & $189;\n         HEAP32[(31376)>>2] = $190;\n         break;\n        }\n       } else {\n        $191 = HEAP32[(31388)>>2]|0;\n        $192 = ($156>>>0)<($191>>>0);\n        if ($192) {\n         _abort();\n         // unreachable;\n        }\n        $193 = ((($156)) + 16|0);\n        $194 = HEAP32[$193>>2]|0;\n        $195 = ($194|0)==($$0190$i|0);\n        if ($195) {\n         HEAP32[$193>>2] = $$3$i;\n        } else {\n         $196 = ((($156)) + 20|0);\n         HEAP32[$196>>2] = $$3$i;\n        }\n        $197 = ($$3$i|0)==(0|0);\n        if ($197) {\n         break;\n        }\n       }\n       $198 = HEAP32[(31388)>>2]|0;\n       $199 = ($$3$i>>>0)<($198>>>0);\n       if ($199) {\n        _abort();\n        // unreachable;\n       }\n       $200 = ((($$3$i)) + 24|0);\n       HEAP32[$200>>2] = $156;\n       $201 = ((($$0190$i)) + 16|0);\n       $202 = HEAP32[$201>>2]|0;\n       $203 = ($202|0)==(0|0);\n       do {\n        if (!($203)) {\n         $204 = ($202>>>0)<($198>>>0);\n         if ($204) {\n          _abort();\n          // unreachable;\n         } else {\n          $205 = ((($$3$i)) + 16|0);\n          HEAP32[$205>>2] = $202;\n          $206 = ((($202)) + 24|0);\n          HEAP32[$206>>2] = $$3$i;\n          break;\n         }\n        }\n       } while(0);\n       $207 = ((($$0190$i)) + 20|0);\n       $208 = HEAP32[$207>>2]|0;\n       $209 = ($208|0)==(0|0);\n       if (!($209)) {\n        $210 = HEAP32[(31388)>>2]|0;\n        $211 = ($208>>>0)<($210>>>0);\n        if ($211) {\n         _abort();\n         // unreachable;\n        } else {\n         $212 = ((($$3$i)) + 20|0);\n         HEAP32[$212>>2] = $208;\n         $213 = ((($208)) + 24|0);\n         HEAP32[$213>>2] = $$3$i;\n         break;\n        }\n       }\n      }\n     } while(0);\n     $214 = ($$0191$i>>>0)<(16);\n     if ($214) {\n      $215 = (($$0191$i) + ($6))|0;\n      $216 = $215 | 3;\n      $217 = ((($$0190$i)) + 4|0);\n      HEAP32[$217>>2] = $216;\n      $218 = (($$0190$i) + ($215)|0);\n      $219 = ((($218)) + 4|0);\n      $220 = HEAP32[$219>>2]|0;\n      $221 = $220 | 1;\n      HEAP32[$219>>2] = $221;\n     } else {\n      $222 = $6 | 3;\n      $223 = ((($$0190$i)) + 4|0);\n      HEAP32[$223>>2] = $222;\n      $224 = $$0191$i | 1;\n      $225 = ((($153)) + 4|0);\n      HEAP32[$225>>2] = $224;\n      $226 = (($153) + ($$0191$i)|0);\n      HEAP32[$226>>2] = $$0191$i;\n      $227 = ($37|0)==(0);\n      if (!($227)) {\n       $228 = HEAP32[(31392)>>2]|0;\n       $229 = $37 >>> 3;\n       $230 = $229 << 1;\n       $231 = (31412 + ($230<<2)|0);\n       $232 = 1 << $229;\n       $233 = $8 & $232;\n       $234 = ($233|0)==(0);\n       if ($234) {\n        $235 = $8 | $232;\n        HEAP32[7843] = $235;\n        $$pre$i = ((($231)) + 8|0);\n        $$0187$i = $231;$$pre$phi$iZ2D = $$pre$i;\n       } else {\n        $236 = ((($231)) + 8|0);\n        $237 = HEAP32[$236>>2]|0;\n        $238 = HEAP32[(31388)>>2]|0;\n        $239 = ($237>>>0)<($238>>>0);\n        if ($239) {\n         _abort();\n         // unreachable;\n        } else {\n         $$0187$i = $237;$$pre$phi$iZ2D = $236;\n        }\n       }\n       HEAP32[$$pre$phi$iZ2D>>2] = $228;\n       $240 = ((($$0187$i)) + 12|0);\n       HEAP32[$240>>2] = $228;\n       $241 = ((($228)) + 8|0);\n       HEAP32[$241>>2] = $$0187$i;\n       $242 = ((($228)) + 12|0);\n       HEAP32[$242>>2] = $231;\n      }\n      HEAP32[(31380)>>2] = $$0191$i;\n      HEAP32[(31392)>>2] = $153;\n     }\n     $243 = ((($$0190$i)) + 8|0);\n     $$0 = $243;\n     STACKTOP = sp;return ($$0|0);\n    }\n   } else {\n    $$0197 = $6;\n   }\n  } else {\n   $244 = ($0>>>0)>(4294967231);\n   if ($244) {\n    $$0197 = -1;\n   } else {\n    $245 = (($0) + 11)|0;\n    $246 = $245 & -8;\n    $247 = HEAP32[(31376)>>2]|0;\n    $248 = ($247|0)==(0);\n    if ($248) {\n     $$0197 = $246;\n    } else {\n     $249 = (0 - ($246))|0;\n     $250 = $245 >>> 8;\n     $251 = ($250|0)==(0);\n     if ($251) {\n      $$0356$i = 0;\n     } else {\n      $252 = ($246>>>0)>(16777215);\n      if ($252) {\n       $$0356$i = 31;\n      } else {\n       $253 = (($250) + 1048320)|0;\n       $254 = $253 >>> 16;\n       $255 = $254 & 8;\n       $256 = $250 << $255;\n       $257 = (($256) + 520192)|0;\n       $258 = $257 >>> 16;\n       $259 = $258 & 4;\n       $260 = $259 | $255;\n       $261 = $256 << $259;\n       $262 = (($261) + 245760)|0;\n       $263 = $262 >>> 16;\n       $264 = $263 & 2;\n       $265 = $260 | $264;\n       $266 = (14 - ($265))|0;\n       $267 = $261 << $264;\n       $268 = $267 >>> 15;\n       $269 = (($266) + ($268))|0;\n       $270 = $269 << 1;\n       $271 = (($269) + 7)|0;\n       $272 = $246 >>> $271;\n       $273 = $272 & 1;\n       $274 = $273 | $270;\n       $$0356$i = $274;\n      }\n     }\n     $275 = (31676 + ($$0356$i<<2)|0);\n     $276 = HEAP32[$275>>2]|0;\n     $277 = ($276|0)==(0|0);\n     L123: do {\n      if ($277) {\n       $$2353$i = 0;$$3$i201 = 0;$$3348$i = $249;\n       label = 86;\n      } else {\n       $278 = ($$0356$i|0)==(31);\n       $279 = $$0356$i >>> 1;\n       $280 = (25 - ($279))|0;\n       $281 = $278 ? 0 : $280;\n       $282 = $246 << $281;\n       $$0340$i = 0;$$0345$i = $249;$$0351$i = $276;$$0357$i = $282;$$0360$i = 0;\n       while(1) {\n        $283 = ((($$0351$i)) + 4|0);\n        $284 = HEAP32[$283>>2]|0;\n        $285 = $284 & -8;\n        $286 = (($285) - ($246))|0;\n        $287 = ($286>>>0)<($$0345$i>>>0);\n        if ($287) {\n         $288 = ($286|0)==(0);\n         if ($288) {\n          $$413$i = $$0351$i;$$434912$i = 0;$$435511$i = $$0351$i;\n          label = 90;\n          break L123;\n         } else {\n          $$1341$i = $$0351$i;$$1346$i = $286;\n         }\n        } else {\n         $$1341$i = $$0340$i;$$1346$i = $$0345$i;\n        }\n        $289 = ((($$0351$i)) + 20|0);\n        $290 = HEAP32[$289>>2]|0;\n        $291 = $$0357$i >>> 31;\n        $292 = (((($$0351$i)) + 16|0) + ($291<<2)|0);\n        $293 = HEAP32[$292>>2]|0;\n        $294 = ($290|0)==(0|0);\n        $295 = ($290|0)==($293|0);\n        $or$cond1$i = $294 | $295;\n        $$1361$i = $or$cond1$i ? $$0360$i : $290;\n        $296 = ($293|0)==(0|0);\n        $297 = $296&1;\n        $298 = $297 ^ 1;\n        $$0357$$i = $$0357$i << $298;\n        if ($296) {\n         $$2353$i = $$1361$i;$$3$i201 = $$1341$i;$$3348$i = $$1346$i;\n         label = 86;\n         break;\n        } else {\n         $$0340$i = $$1341$i;$$0345$i = $$1346$i;$$0351$i = $293;$$0357$i = $$0357$$i;$$0360$i = $$1361$i;\n        }\n       }\n      }\n     } while(0);\n     if ((label|0) == 86) {\n      $299 = ($$2353$i|0)==(0|0);\n      $300 = ($$3$i201|0)==(0|0);\n      $or$cond$i = $299 & $300;\n      if ($or$cond$i) {\n       $301 = 2 << $$0356$i;\n       $302 = (0 - ($301))|0;\n       $303 = $301 | $302;\n       $304 = $247 & $303;\n       $305 = ($304|0)==(0);\n       if ($305) {\n        $$0197 = $246;\n        break;\n       }\n       $306 = (0 - ($304))|0;\n       $307 = $304 & $306;\n       $308 = (($307) + -1)|0;\n       $309 = $308 >>> 12;\n       $310 = $309 & 16;\n       $311 = $308 >>> $310;\n       $312 = $311 >>> 5;\n       $313 = $312 & 8;\n       $314 = $313 | $310;\n       $315 = $311 >>> $313;\n       $316 = $315 >>> 2;\n       $317 = $316 & 4;\n       $318 = $314 | $317;\n       $319 = $315 >>> $317;\n       $320 = $319 >>> 1;\n       $321 = $320 & 2;\n       $322 = $318 | $321;\n       $323 = $319 >>> $321;\n       $324 = $323 >>> 1;\n       $325 = $324 & 1;\n       $326 = $322 | $325;\n       $327 = $323 >>> $325;\n       $328 = (($326) + ($327))|0;\n       $329 = (31676 + ($328<<2)|0);\n       $330 = HEAP32[$329>>2]|0;\n       $$4355$ph$i = $330;\n      } else {\n       $$4355$ph$i = $$2353$i;\n      }\n      $331 = ($$4355$ph$i|0)==(0|0);\n      if ($331) {\n       $$4$lcssa$i = $$3$i201;$$4349$lcssa$i = $$3348$i;\n      } else {\n       $$413$i = $$3$i201;$$434912$i = $$3348$i;$$435511$i = $$4355$ph$i;\n       label = 90;\n      }\n     }\n     if ((label|0) == 90) {\n      while(1) {\n       label = 0;\n       $332 = ((($$435511$i)) + 4|0);\n       $333 = HEAP32[$332>>2]|0;\n       $334 = $333 & -8;\n       $335 = (($334) - ($246))|0;\n       $336 = ($335>>>0)<($$434912$i>>>0);\n       $$$4349$i = $336 ? $335 : $$434912$i;\n       $$4355$$4$i = $336 ? $$435511$i : $$413$i;\n       $337 = ((($$435511$i)) + 16|0);\n       $338 = HEAP32[$337>>2]|0;\n       $339 = ($338|0)==(0|0);\n       if (!($339)) {\n        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $338;\n        label = 90;\n        continue;\n       }\n       $340 = ((($$435511$i)) + 20|0);\n       $341 = HEAP32[$340>>2]|0;\n       $342 = ($341|0)==(0|0);\n       if ($342) {\n        $$4$lcssa$i = $$4355$$4$i;$$4349$lcssa$i = $$$4349$i;\n        break;\n       } else {\n        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $341;\n        label = 90;\n       }\n      }\n     }\n     $343 = ($$4$lcssa$i|0)==(0|0);\n     if ($343) {\n      $$0197 = $246;\n     } else {\n      $344 = HEAP32[(31380)>>2]|0;\n      $345 = (($344) - ($246))|0;\n      $346 = ($$4349$lcssa$i>>>0)<($345>>>0);\n      if ($346) {\n       $347 = HEAP32[(31388)>>2]|0;\n       $348 = ($$4$lcssa$i>>>0)<($347>>>0);\n       if ($348) {\n        _abort();\n        // unreachable;\n       }\n       $349 = (($$4$lcssa$i) + ($246)|0);\n       $350 = ($$4$lcssa$i>>>0)<($349>>>0);\n       if (!($350)) {\n        _abort();\n        // unreachable;\n       }\n       $351 = ((($$4$lcssa$i)) + 24|0);\n       $352 = HEAP32[$351>>2]|0;\n       $353 = ((($$4$lcssa$i)) + 12|0);\n       $354 = HEAP32[$353>>2]|0;\n       $355 = ($354|0)==($$4$lcssa$i|0);\n       do {\n        if ($355) {\n         $365 = ((($$4$lcssa$i)) + 20|0);\n         $366 = HEAP32[$365>>2]|0;\n         $367 = ($366|0)==(0|0);\n         if ($367) {\n          $368 = ((($$4$lcssa$i)) + 16|0);\n          $369 = HEAP32[$368>>2]|0;\n          $370 = ($369|0)==(0|0);\n          if ($370) {\n           $$3370$i = 0;\n           break;\n          } else {\n           $$1368$i = $369;$$1372$i = $368;\n          }\n         } else {\n          $$1368$i = $366;$$1372$i = $365;\n         }\n         while(1) {\n          $371 = ((($$1368$i)) + 20|0);\n          $372 = HEAP32[$371>>2]|0;\n          $373 = ($372|0)==(0|0);\n          if (!($373)) {\n           $$1368$i = $372;$$1372$i = $371;\n           continue;\n          }\n          $374 = ((($$1368$i)) + 16|0);\n          $375 = HEAP32[$374>>2]|0;\n          $376 = ($375|0)==(0|0);\n          if ($376) {\n           break;\n          } else {\n           $$1368$i = $375;$$1372$i = $374;\n          }\n         }\n         $377 = ($$1372$i>>>0)<($347>>>0);\n         if ($377) {\n          _abort();\n          // unreachable;\n         } else {\n          HEAP32[$$1372$i>>2] = 0;\n          $$3370$i = $$1368$i;\n          break;\n         }\n        } else {\n         $356 = ((($$4$lcssa$i)) + 8|0);\n         $357 = HEAP32[$356>>2]|0;\n         $358 = ($357>>>0)<($347>>>0);\n         if ($358) {\n          _abort();\n          // unreachable;\n         }\n         $359 = ((($357)) + 12|0);\n         $360 = HEAP32[$359>>2]|0;\n         $361 = ($360|0)==($$4$lcssa$i|0);\n         if (!($361)) {\n          _abort();\n          // unreachable;\n         }\n         $362 = ((($354)) + 8|0);\n         $363 = HEAP32[$362>>2]|0;\n         $364 = ($363|0)==($$4$lcssa$i|0);\n         if ($364) {\n          HEAP32[$359>>2] = $354;\n          HEAP32[$362>>2] = $357;\n          $$3370$i = $354;\n          break;\n         } else {\n          _abort();\n          // unreachable;\n         }\n        }\n       } while(0);\n       $378 = ($352|0)==(0|0);\n       do {\n        if ($378) {\n         $470 = $247;\n        } else {\n         $379 = ((($$4$lcssa$i)) + 28|0);\n         $380 = HEAP32[$379>>2]|0;\n         $381 = (31676 + ($380<<2)|0);\n         $382 = HEAP32[$381>>2]|0;\n         $383 = ($$4$lcssa$i|0)==($382|0);\n         if ($383) {\n          HEAP32[$381>>2] = $$3370$i;\n          $cond$i204 = ($$3370$i|0)==(0|0);\n          if ($cond$i204) {\n           $384 = 1 << $380;\n           $385 = $384 ^ -1;\n           $386 = $247 & $385;\n           HEAP32[(31376)>>2] = $386;\n           $470 = $386;\n           break;\n          }\n         } else {\n          $387 = HEAP32[(31388)>>2]|0;\n          $388 = ($352>>>0)<($387>>>0);\n          if ($388) {\n           _abort();\n           // unreachable;\n          }\n          $389 = ((($352)) + 16|0);\n          $390 = HEAP32[$389>>2]|0;\n          $391 = ($390|0)==($$4$lcssa$i|0);\n          if ($391) {\n           HEAP32[$389>>2] = $$3370$i;\n          } else {\n           $392 = ((($352)) + 20|0);\n           HEAP32[$392>>2] = $$3370$i;\n          }\n          $393 = ($$3370$i|0)==(0|0);\n          if ($393) {\n           $470 = $247;\n           break;\n          }\n         }\n         $394 = HEAP32[(31388)>>2]|0;\n         $395 = ($$3370$i>>>0)<($394>>>0);\n         if ($395) {\n          _abort();\n          // unreachable;\n         }\n         $396 = ((($$3370$i)) + 24|0);\n         HEAP32[$396>>2] = $352;\n         $397 = ((($$4$lcssa$i)) + 16|0);\n         $398 = HEAP32[$397>>2]|0;\n         $399 = ($398|0)==(0|0);\n         do {\n          if (!($399)) {\n           $400 = ($398>>>0)<($394>>>0);\n           if ($400) {\n            _abort();\n            // unreachable;\n           } else {\n            $401 = ((($$3370$i)) + 16|0);\n            HEAP32[$401>>2] = $398;\n            $402 = ((($398)) + 24|0);\n            HEAP32[$402>>2] = $$3370$i;\n            break;\n           }\n          }\n         } while(0);\n         $403 = ((($$4$lcssa$i)) + 20|0);\n         $404 = HEAP32[$403>>2]|0;\n         $405 = ($404|0)==(0|0);\n         if ($405) {\n          $470 = $247;\n         } else {\n          $406 = HEAP32[(31388)>>2]|0;\n          $407 = ($404>>>0)<($406>>>0);\n          if ($407) {\n           _abort();\n           // unreachable;\n          } else {\n           $408 = ((($$3370$i)) + 20|0);\n           HEAP32[$408>>2] = $404;\n           $409 = ((($404)) + 24|0);\n           HEAP32[$409>>2] = $$3370$i;\n           $470 = $247;\n           break;\n          }\n         }\n        }\n       } while(0);\n       $410 = ($$4349$lcssa$i>>>0)<(16);\n       do {\n        if ($410) {\n         $411 = (($$4349$lcssa$i) + ($246))|0;\n         $412 = $411 | 3;\n         $413 = ((($$4$lcssa$i)) + 4|0);\n         HEAP32[$413>>2] = $412;\n         $414 = (($$4$lcssa$i) + ($411)|0);\n         $415 = ((($414)) + 4|0);\n         $416 = HEAP32[$415>>2]|0;\n         $417 = $416 | 1;\n         HEAP32[$415>>2] = $417;\n        } else {\n         $418 = $246 | 3;\n         $419 = ((($$4$lcssa$i)) + 4|0);\n         HEAP32[$419>>2] = $418;\n         $420 = $$4349$lcssa$i | 1;\n         $421 = ((($349)) + 4|0);\n         HEAP32[$421>>2] = $420;\n         $422 = (($349) + ($$4349$lcssa$i)|0);\n         HEAP32[$422>>2] = $$4349$lcssa$i;\n         $423 = $$4349$lcssa$i >>> 3;\n         $424 = ($$4349$lcssa$i>>>0)<(256);\n         if ($424) {\n          $425 = $423 << 1;\n          $426 = (31412 + ($425<<2)|0);\n          $427 = HEAP32[7843]|0;\n          $428 = 1 << $423;\n          $429 = $427 & $428;\n          $430 = ($429|0)==(0);\n          if ($430) {\n           $431 = $427 | $428;\n           HEAP32[7843] = $431;\n           $$pre$i205 = ((($426)) + 8|0);\n           $$0366$i = $426;$$pre$phi$i206Z2D = $$pre$i205;\n          } else {\n           $432 = ((($426)) + 8|0);\n           $433 = HEAP32[$432>>2]|0;\n           $434 = HEAP32[(31388)>>2]|0;\n           $435 = ($433>>>0)<($434>>>0);\n           if ($435) {\n            _abort();\n            // unreachable;\n           } else {\n            $$0366$i = $433;$$pre$phi$i206Z2D = $432;\n           }\n          }\n          HEAP32[$$pre$phi$i206Z2D>>2] = $349;\n          $436 = ((($$0366$i)) + 12|0);\n          HEAP32[$436>>2] = $349;\n          $437 = ((($349)) + 8|0);\n          HEAP32[$437>>2] = $$0366$i;\n          $438 = ((($349)) + 12|0);\n          HEAP32[$438>>2] = $426;\n          break;\n         }\n         $439 = $$4349$lcssa$i >>> 8;\n         $440 = ($439|0)==(0);\n         if ($440) {\n          $$0359$i = 0;\n         } else {\n          $441 = ($$4349$lcssa$i>>>0)>(16777215);\n          if ($441) {\n           $$0359$i = 31;\n          } else {\n           $442 = (($439) + 1048320)|0;\n           $443 = $442 >>> 16;\n           $444 = $443 & 8;\n           $445 = $439 << $444;\n           $446 = (($445) + 520192)|0;\n           $447 = $446 >>> 16;\n           $448 = $447 & 4;\n           $449 = $448 | $444;\n           $450 = $445 << $448;\n           $451 = (($450) + 245760)|0;\n           $452 = $451 >>> 16;\n           $453 = $452 & 2;\n           $454 = $449 | $453;\n           $455 = (14 - ($454))|0;\n           $456 = $450 << $453;\n           $457 = $456 >>> 15;\n           $458 = (($455) + ($457))|0;\n           $459 = $458 << 1;\n           $460 = (($458) + 7)|0;\n           $461 = $$4349$lcssa$i >>> $460;\n           $462 = $461 & 1;\n           $463 = $462 | $459;\n           $$0359$i = $463;\n          }\n         }\n         $464 = (31676 + ($$0359$i<<2)|0);\n         $465 = ((($349)) + 28|0);\n         HEAP32[$465>>2] = $$0359$i;\n         $466 = ((($349)) + 16|0);\n         $467 = ((($466)) + 4|0);\n         HEAP32[$467>>2] = 0;\n         HEAP32[$466>>2] = 0;\n         $468 = 1 << $$0359$i;\n         $469 = $470 & $468;\n         $471 = ($469|0)==(0);\n         if ($471) {\n          $472 = $470 | $468;\n          HEAP32[(31376)>>2] = $472;\n          HEAP32[$464>>2] = $349;\n          $473 = ((($349)) + 24|0);\n          HEAP32[$473>>2] = $464;\n          $474 = ((($349)) + 12|0);\n          HEAP32[$474>>2] = $349;\n          $475 = ((($349)) + 8|0);\n          HEAP32[$475>>2] = $349;\n          break;\n         }\n         $476 = HEAP32[$464>>2]|0;\n         $477 = ($$0359$i|0)==(31);\n         $478 = $$0359$i >>> 1;\n         $479 = (25 - ($478))|0;\n         $480 = $477 ? 0 : $479;\n         $481 = $$4349$lcssa$i << $480;\n         $$0342$i = $481;$$0343$i = $476;\n         while(1) {\n          $482 = ((($$0343$i)) + 4|0);\n          $483 = HEAP32[$482>>2]|0;\n          $484 = $483 & -8;\n          $485 = ($484|0)==($$4349$lcssa$i|0);\n          if ($485) {\n           label = 148;\n           break;\n          }\n          $486 = $$0342$i >>> 31;\n          $487 = (((($$0343$i)) + 16|0) + ($486<<2)|0);\n          $488 = $$0342$i << 1;\n          $489 = HEAP32[$487>>2]|0;\n          $490 = ($489|0)==(0|0);\n          if ($490) {\n           label = 145;\n           break;\n          } else {\n           $$0342$i = $488;$$0343$i = $489;\n          }\n         }\n         if ((label|0) == 145) {\n          $491 = HEAP32[(31388)>>2]|0;\n          $492 = ($487>>>0)<($491>>>0);\n          if ($492) {\n           _abort();\n           // unreachable;\n          } else {\n           HEAP32[$487>>2] = $349;\n           $493 = ((($349)) + 24|0);\n           HEAP32[$493>>2] = $$0343$i;\n           $494 = ((($349)) + 12|0);\n           HEAP32[$494>>2] = $349;\n           $495 = ((($349)) + 8|0);\n           HEAP32[$495>>2] = $349;\n           break;\n          }\n         }\n         else if ((label|0) == 148) {\n          $496 = ((($$0343$i)) + 8|0);\n          $497 = HEAP32[$496>>2]|0;\n          $498 = HEAP32[(31388)>>2]|0;\n          $499 = ($497>>>0)>=($498>>>0);\n          $not$7$i = ($$0343$i>>>0)>=($498>>>0);\n          $500 = $499 & $not$7$i;\n          if ($500) {\n           $501 = ((($497)) + 12|0);\n           HEAP32[$501>>2] = $349;\n           HEAP32[$496>>2] = $349;\n           $502 = ((($349)) + 8|0);\n           HEAP32[$502>>2] = $497;\n           $503 = ((($349)) + 12|0);\n           HEAP32[$503>>2] = $$0343$i;\n           $504 = ((($349)) + 24|0);\n           HEAP32[$504>>2] = 0;\n           break;\n          } else {\n           _abort();\n           // unreachable;\n          }\n         }\n        }\n       } while(0);\n       $505 = ((($$4$lcssa$i)) + 8|0);\n       $$0 = $505;\n       STACKTOP = sp;return ($$0|0);\n      } else {\n       $$0197 = $246;\n      }\n     }\n    }\n   }\n  }\n } while(0);\n $506 = HEAP32[(31380)>>2]|0;\n $507 = ($506>>>0)<($$0197>>>0);\n if (!($507)) {\n  $508 = (($506) - ($$0197))|0;\n  $509 = HEAP32[(31392)>>2]|0;\n  $510 = ($508>>>0)>(15);\n  if ($510) {\n   $511 = (($509) + ($$0197)|0);\n   HEAP32[(31392)>>2] = $511;\n   HEAP32[(31380)>>2] = $508;\n   $512 = $508 | 1;\n   $513 = ((($511)) + 4|0);\n   HEAP32[$513>>2] = $512;\n   $514 = (($511) + ($508)|0);\n   HEAP32[$514>>2] = $508;\n   $515 = $$0197 | 3;\n   $516 = ((($509)) + 4|0);\n   HEAP32[$516>>2] = $515;\n  } else {\n   HEAP32[(31380)>>2] = 0;\n   HEAP32[(31392)>>2] = 0;\n   $517 = $506 | 3;\n   $518 = ((($509)) + 4|0);\n   HEAP32[$518>>2] = $517;\n   $519 = (($509) + ($506)|0);\n   $520 = ((($519)) + 4|0);\n   $521 = HEAP32[$520>>2]|0;\n   $522 = $521 | 1;\n   HEAP32[$520>>2] = $522;\n  }\n  $523 = ((($509)) + 8|0);\n  $$0 = $523;\n  STACKTOP = sp;return ($$0|0);\n }\n $524 = HEAP32[(31384)>>2]|0;\n $525 = ($524>>>0)>($$0197>>>0);\n if ($525) {\n  $526 = (($524) - ($$0197))|0;\n  HEAP32[(31384)>>2] = $526;\n  $527 = HEAP32[(31396)>>2]|0;\n  $528 = (($527) + ($$0197)|0);\n  HEAP32[(31396)>>2] = $528;\n  $529 = $526 | 1;\n  $530 = ((($528)) + 4|0);\n  HEAP32[$530>>2] = $529;\n  $531 = $$0197 | 3;\n  $532 = ((($527)) + 4|0);\n  HEAP32[$532>>2] = $531;\n  $533 = ((($527)) + 8|0);\n  $$0 = $533;\n  STACKTOP = sp;return ($$0|0);\n }\n $534 = HEAP32[7961]|0;\n $535 = ($534|0)==(0);\n if ($535) {\n  HEAP32[(31852)>>2] = 4096;\n  HEAP32[(31848)>>2] = 4096;\n  HEAP32[(31856)>>2] = -1;\n  HEAP32[(31860)>>2] = -1;\n  HEAP32[(31864)>>2] = 0;\n  HEAP32[(31816)>>2] = 0;\n  $536 = $1;\n  $537 = $536 & -16;\n  $538 = $537 ^ 1431655768;\n  HEAP32[$1>>2] = $538;\n  HEAP32[7961] = $538;\n  $542 = 4096;\n } else {\n  $$pre$i208 = HEAP32[(31852)>>2]|0;\n  $542 = $$pre$i208;\n }\n $539 = (($$0197) + 48)|0;\n $540 = (($$0197) + 47)|0;\n $541 = (($542) + ($540))|0;\n $543 = (0 - ($542))|0;\n $544 = $541 & $543;\n $545 = ($544>>>0)>($$0197>>>0);\n if (!($545)) {\n  $$0 = 0;\n  STACKTOP = sp;return ($$0|0);\n }\n $546 = HEAP32[(31812)>>2]|0;\n $547 = ($546|0)==(0);\n if (!($547)) {\n  $548 = HEAP32[(31804)>>2]|0;\n  $549 = (($548) + ($544))|0;\n  $550 = ($549>>>0)<=($548>>>0);\n  $551 = ($549>>>0)>($546>>>0);\n  $or$cond1$i210 = $550 | $551;\n  if ($or$cond1$i210) {\n   $$0 = 0;\n   STACKTOP = sp;return ($$0|0);\n  }\n }\n $552 = HEAP32[(31816)>>2]|0;\n $553 = $552 & 4;\n $554 = ($553|0)==(0);\n L255: do {\n  if ($554) {\n   $555 = HEAP32[(31396)>>2]|0;\n   $556 = ($555|0)==(0|0);\n   L257: do {\n    if ($556) {\n     label = 172;\n    } else {\n     $$0$i17$i = (31820);\n     while(1) {\n      $557 = HEAP32[$$0$i17$i>>2]|0;\n      $558 = ($557>>>0)>($555>>>0);\n      if (!($558)) {\n       $559 = ((($$0$i17$i)) + 4|0);\n       $560 = HEAP32[$559>>2]|0;\n       $561 = (($557) + ($560)|0);\n       $562 = ($561>>>0)>($555>>>0);\n       if ($562) {\n        break;\n       }\n      }\n      $563 = ((($$0$i17$i)) + 8|0);\n      $564 = HEAP32[$563>>2]|0;\n      $565 = ($564|0)==(0|0);\n      if ($565) {\n       label = 172;\n       break L257;\n      } else {\n       $$0$i17$i = $564;\n      }\n     }\n     $588 = (($541) - ($524))|0;\n     $589 = $588 & $543;\n     $590 = ($589>>>0)<(2147483647);\n     if ($590) {\n      $591 = (_sbrk(($589|0))|0);\n      $592 = HEAP32[$$0$i17$i>>2]|0;\n      $593 = HEAP32[$559>>2]|0;\n      $594 = (($592) + ($593)|0);\n      $595 = ($591|0)==($594|0);\n      if ($595) {\n       $596 = ($591|0)==((-1)|0);\n       if (!($596)) {\n        $$723947$i = $589;$$748$i = $591;\n        label = 190;\n        break L255;\n       }\n      } else {\n       $$2247$ph$i = $591;$$2253$ph$i = $589;\n       label = 180;\n      }\n     }\n    }\n   } while(0);\n   do {\n    if ((label|0) == 172) {\n     $566 = (_sbrk(0)|0);\n     $567 = ($566|0)==((-1)|0);\n     if (!($567)) {\n      $568 = $566;\n      $569 = HEAP32[(31848)>>2]|0;\n      $570 = (($569) + -1)|0;\n      $571 = $570 & $568;\n      $572 = ($571|0)==(0);\n      $573 = (($570) + ($568))|0;\n      $574 = (0 - ($569))|0;\n      $575 = $573 & $574;\n      $576 = (($575) - ($568))|0;\n      $577 = $572 ? 0 : $576;\n      $$$i = (($577) + ($544))|0;\n      $578 = HEAP32[(31804)>>2]|0;\n      $579 = (($$$i) + ($578))|0;\n      $580 = ($$$i>>>0)>($$0197>>>0);\n      $581 = ($$$i>>>0)<(2147483647);\n      $or$cond$i211 = $580 & $581;\n      if ($or$cond$i211) {\n       $582 = HEAP32[(31812)>>2]|0;\n       $583 = ($582|0)==(0);\n       if (!($583)) {\n        $584 = ($579>>>0)<=($578>>>0);\n        $585 = ($579>>>0)>($582>>>0);\n        $or$cond2$i = $584 | $585;\n        if ($or$cond2$i) {\n         break;\n        }\n       }\n       $586 = (_sbrk(($$$i|0))|0);\n       $587 = ($586|0)==($566|0);\n       if ($587) {\n        $$723947$i = $$$i;$$748$i = $566;\n        label = 190;\n        break L255;\n       } else {\n        $$2247$ph$i = $586;$$2253$ph$i = $$$i;\n        label = 180;\n       }\n      }\n     }\n    }\n   } while(0);\n   L274: do {\n    if ((label|0) == 180) {\n     $597 = (0 - ($$2253$ph$i))|0;\n     $598 = ($$2247$ph$i|0)!=((-1)|0);\n     $599 = ($$2253$ph$i>>>0)<(2147483647);\n     $or$cond7$i = $599 & $598;\n     $600 = ($539>>>0)>($$2253$ph$i>>>0);\n     $or$cond10$i = $600 & $or$cond7$i;\n     do {\n      if ($or$cond10$i) {\n       $601 = HEAP32[(31852)>>2]|0;\n       $602 = (($540) - ($$2253$ph$i))|0;\n       $603 = (($602) + ($601))|0;\n       $604 = (0 - ($601))|0;\n       $605 = $603 & $604;\n       $606 = ($605>>>0)<(2147483647);\n       if ($606) {\n        $607 = (_sbrk(($605|0))|0);\n        $608 = ($607|0)==((-1)|0);\n        if ($608) {\n         (_sbrk(($597|0))|0);\n         break L274;\n        } else {\n         $609 = (($605) + ($$2253$ph$i))|0;\n         $$5256$i = $609;\n         break;\n        }\n       } else {\n        $$5256$i = $$2253$ph$i;\n       }\n      } else {\n       $$5256$i = $$2253$ph$i;\n      }\n     } while(0);\n     $610 = ($$2247$ph$i|0)==((-1)|0);\n     if (!($610)) {\n      $$723947$i = $$5256$i;$$748$i = $$2247$ph$i;\n      label = 190;\n      break L255;\n     }\n    }\n   } while(0);\n   $611 = HEAP32[(31816)>>2]|0;\n   $612 = $611 | 4;\n   HEAP32[(31816)>>2] = $612;\n   label = 187;\n  } else {\n   label = 187;\n  }\n } while(0);\n if ((label|0) == 187) {\n  $613 = ($544>>>0)<(2147483647);\n  if ($613) {\n   $614 = (_sbrk(($544|0))|0);\n   $615 = (_sbrk(0)|0);\n   $616 = ($614|0)!=((-1)|0);\n   $617 = ($615|0)!=((-1)|0);\n   $or$cond5$i = $616 & $617;\n   $618 = ($614>>>0)<($615>>>0);\n   $or$cond11$i = $618 & $or$cond5$i;\n   if ($or$cond11$i) {\n    $619 = $615;\n    $620 = $614;\n    $621 = (($619) - ($620))|0;\n    $622 = (($$0197) + 40)|0;\n    $$not$i = ($621>>>0)>($622>>>0);\n    if ($$not$i) {\n     $$723947$i = $621;$$748$i = $614;\n     label = 190;\n    }\n   }\n  }\n }\n if ((label|0) == 190) {\n  $623 = HEAP32[(31804)>>2]|0;\n  $624 = (($623) + ($$723947$i))|0;\n  HEAP32[(31804)>>2] = $624;\n  $625 = HEAP32[(31808)>>2]|0;\n  $626 = ($624>>>0)>($625>>>0);\n  if ($626) {\n   HEAP32[(31808)>>2] = $624;\n  }\n  $627 = HEAP32[(31396)>>2]|0;\n  $628 = ($627|0)==(0|0);\n  do {\n   if ($628) {\n    $629 = HEAP32[(31388)>>2]|0;\n    $630 = ($629|0)==(0|0);\n    $631 = ($$748$i>>>0)<($629>>>0);\n    $or$cond12$i = $630 | $631;\n    if ($or$cond12$i) {\n     HEAP32[(31388)>>2] = $$748$i;\n    }\n    HEAP32[(31820)>>2] = $$748$i;\n    HEAP32[(31824)>>2] = $$723947$i;\n    HEAP32[(31832)>>2] = 0;\n    $632 = HEAP32[7961]|0;\n    HEAP32[(31408)>>2] = $632;\n    HEAP32[(31404)>>2] = -1;\n    $$01$i$i = 0;\n    while(1) {\n     $633 = $$01$i$i << 1;\n     $634 = (31412 + ($633<<2)|0);\n     $635 = ((($634)) + 12|0);\n     HEAP32[$635>>2] = $634;\n     $636 = ((($634)) + 8|0);\n     HEAP32[$636>>2] = $634;\n     $637 = (($$01$i$i) + 1)|0;\n     $exitcond$i$i = ($637|0)==(32);\n     if ($exitcond$i$i) {\n      break;\n     } else {\n      $$01$i$i = $637;\n     }\n    }\n    $638 = (($$723947$i) + -40)|0;\n    $639 = ((($$748$i)) + 8|0);\n    $640 = $639;\n    $641 = $640 & 7;\n    $642 = ($641|0)==(0);\n    $643 = (0 - ($640))|0;\n    $644 = $643 & 7;\n    $645 = $642 ? 0 : $644;\n    $646 = (($$748$i) + ($645)|0);\n    $647 = (($638) - ($645))|0;\n    HEAP32[(31396)>>2] = $646;\n    HEAP32[(31384)>>2] = $647;\n    $648 = $647 | 1;\n    $649 = ((($646)) + 4|0);\n    HEAP32[$649>>2] = $648;\n    $650 = (($646) + ($647)|0);\n    $651 = ((($650)) + 4|0);\n    HEAP32[$651>>2] = 40;\n    $652 = HEAP32[(31860)>>2]|0;\n    HEAP32[(31400)>>2] = $652;\n   } else {\n    $$024370$i = (31820);\n    while(1) {\n     $653 = HEAP32[$$024370$i>>2]|0;\n     $654 = ((($$024370$i)) + 4|0);\n     $655 = HEAP32[$654>>2]|0;\n     $656 = (($653) + ($655)|0);\n     $657 = ($$748$i|0)==($656|0);\n     if ($657) {\n      label = 200;\n      break;\n     }\n     $658 = ((($$024370$i)) + 8|0);\n     $659 = HEAP32[$658>>2]|0;\n     $660 = ($659|0)==(0|0);\n     if ($660) {\n      break;\n     } else {\n      $$024370$i = $659;\n     }\n    }\n    if ((label|0) == 200) {\n     $661 = ((($$024370$i)) + 12|0);\n     $662 = HEAP32[$661>>2]|0;\n     $663 = $662 & 8;\n     $664 = ($663|0)==(0);\n     if ($664) {\n      $665 = ($627>>>0)>=($653>>>0);\n      $666 = ($627>>>0)<($$748$i>>>0);\n      $or$cond50$i = $666 & $665;\n      if ($or$cond50$i) {\n       $667 = (($655) + ($$723947$i))|0;\n       HEAP32[$654>>2] = $667;\n       $668 = HEAP32[(31384)>>2]|0;\n       $669 = ((($627)) + 8|0);\n       $670 = $669;\n       $671 = $670 & 7;\n       $672 = ($671|0)==(0);\n       $673 = (0 - ($670))|0;\n       $674 = $673 & 7;\n       $675 = $672 ? 0 : $674;\n       $676 = (($627) + ($675)|0);\n       $677 = (($$723947$i) - ($675))|0;\n       $678 = (($677) + ($668))|0;\n       HEAP32[(31396)>>2] = $676;\n       HEAP32[(31384)>>2] = $678;\n       $679 = $678 | 1;\n       $680 = ((($676)) + 4|0);\n       HEAP32[$680>>2] = $679;\n       $681 = (($676) + ($678)|0);\n       $682 = ((($681)) + 4|0);\n       HEAP32[$682>>2] = 40;\n       $683 = HEAP32[(31860)>>2]|0;\n       HEAP32[(31400)>>2] = $683;\n       break;\n      }\n     }\n    }\n    $684 = HEAP32[(31388)>>2]|0;\n    $685 = ($$748$i>>>0)<($684>>>0);\n    if ($685) {\n     HEAP32[(31388)>>2] = $$748$i;\n     $749 = $$748$i;\n    } else {\n     $749 = $684;\n    }\n    $686 = (($$748$i) + ($$723947$i)|0);\n    $$124469$i = (31820);\n    while(1) {\n     $687 = HEAP32[$$124469$i>>2]|0;\n     $688 = ($687|0)==($686|0);\n     if ($688) {\n      label = 208;\n      break;\n     }\n     $689 = ((($$124469$i)) + 8|0);\n     $690 = HEAP32[$689>>2]|0;\n     $691 = ($690|0)==(0|0);\n     if ($691) {\n      $$0$i$i$i = (31820);\n      break;\n     } else {\n      $$124469$i = $690;\n     }\n    }\n    if ((label|0) == 208) {\n     $692 = ((($$124469$i)) + 12|0);\n     $693 = HEAP32[$692>>2]|0;\n     $694 = $693 & 8;\n     $695 = ($694|0)==(0);\n     if ($695) {\n      HEAP32[$$124469$i>>2] = $$748$i;\n      $696 = ((($$124469$i)) + 4|0);\n      $697 = HEAP32[$696>>2]|0;\n      $698 = (($697) + ($$723947$i))|0;\n      HEAP32[$696>>2] = $698;\n      $699 = ((($$748$i)) + 8|0);\n      $700 = $699;\n      $701 = $700 & 7;\n      $702 = ($701|0)==(0);\n      $703 = (0 - ($700))|0;\n      $704 = $703 & 7;\n      $705 = $702 ? 0 : $704;\n      $706 = (($$748$i) + ($705)|0);\n      $707 = ((($686)) + 8|0);\n      $708 = $707;\n      $709 = $708 & 7;\n      $710 = ($709|0)==(0);\n      $711 = (0 - ($708))|0;\n      $712 = $711 & 7;\n      $713 = $710 ? 0 : $712;\n      $714 = (($686) + ($713)|0);\n      $715 = $714;\n      $716 = $706;\n      $717 = (($715) - ($716))|0;\n      $718 = (($706) + ($$0197)|0);\n      $719 = (($717) - ($$0197))|0;\n      $720 = $$0197 | 3;\n      $721 = ((($706)) + 4|0);\n      HEAP32[$721>>2] = $720;\n      $722 = ($714|0)==($627|0);\n      do {\n       if ($722) {\n        $723 = HEAP32[(31384)>>2]|0;\n        $724 = (($723) + ($719))|0;\n        HEAP32[(31384)>>2] = $724;\n        HEAP32[(31396)>>2] = $718;\n        $725 = $724 | 1;\n        $726 = ((($718)) + 4|0);\n        HEAP32[$726>>2] = $725;\n       } else {\n        $727 = HEAP32[(31392)>>2]|0;\n        $728 = ($714|0)==($727|0);\n        if ($728) {\n         $729 = HEAP32[(31380)>>2]|0;\n         $730 = (($729) + ($719))|0;\n         HEAP32[(31380)>>2] = $730;\n         HEAP32[(31392)>>2] = $718;\n         $731 = $730 | 1;\n         $732 = ((($718)) + 4|0);\n         HEAP32[$732>>2] = $731;\n         $733 = (($718) + ($730)|0);\n         HEAP32[$733>>2] = $730;\n         break;\n        }\n        $734 = ((($714)) + 4|0);\n        $735 = HEAP32[$734>>2]|0;\n        $736 = $735 & 3;\n        $737 = ($736|0)==(1);\n        if ($737) {\n         $738 = $735 & -8;\n         $739 = $735 >>> 3;\n         $740 = ($735>>>0)<(256);\n         L326: do {\n          if ($740) {\n           $741 = ((($714)) + 8|0);\n           $742 = HEAP32[$741>>2]|0;\n           $743 = ((($714)) + 12|0);\n           $744 = HEAP32[$743>>2]|0;\n           $745 = $739 << 1;\n           $746 = (31412 + ($745<<2)|0);\n           $747 = ($742|0)==($746|0);\n           do {\n            if (!($747)) {\n             $748 = ($742>>>0)<($749>>>0);\n             if ($748) {\n              _abort();\n              // unreachable;\n             }\n             $750 = ((($742)) + 12|0);\n             $751 = HEAP32[$750>>2]|0;\n             $752 = ($751|0)==($714|0);\n             if ($752) {\n              break;\n             }\n             _abort();\n             // unreachable;\n            }\n           } while(0);\n           $753 = ($744|0)==($742|0);\n           if ($753) {\n            $754 = 1 << $739;\n            $755 = $754 ^ -1;\n            $756 = HEAP32[7843]|0;\n            $757 = $756 & $755;\n            HEAP32[7843] = $757;\n            break;\n           }\n           $758 = ($744|0)==($746|0);\n           do {\n            if ($758) {\n             $$pre9$i$i = ((($744)) + 8|0);\n             $$pre$phi10$i$iZ2D = $$pre9$i$i;\n            } else {\n             $759 = ($744>>>0)<($749>>>0);\n             if ($759) {\n              _abort();\n              // unreachable;\n             }\n             $760 = ((($744)) + 8|0);\n             $761 = HEAP32[$760>>2]|0;\n             $762 = ($761|0)==($714|0);\n             if ($762) {\n              $$pre$phi10$i$iZ2D = $760;\n              break;\n             }\n             _abort();\n             // unreachable;\n            }\n           } while(0);\n           $763 = ((($742)) + 12|0);\n           HEAP32[$763>>2] = $744;\n           HEAP32[$$pre$phi10$i$iZ2D>>2] = $742;\n          } else {\n           $764 = ((($714)) + 24|0);\n           $765 = HEAP32[$764>>2]|0;\n           $766 = ((($714)) + 12|0);\n           $767 = HEAP32[$766>>2]|0;\n           $768 = ($767|0)==($714|0);\n           do {\n            if ($768) {\n             $778 = ((($714)) + 16|0);\n             $779 = ((($778)) + 4|0);\n             $780 = HEAP32[$779>>2]|0;\n             $781 = ($780|0)==(0|0);\n             if ($781) {\n              $782 = HEAP32[$778>>2]|0;\n              $783 = ($782|0)==(0|0);\n              if ($783) {\n               $$3$i$i = 0;\n               break;\n              } else {\n               $$1290$i$i = $782;$$1292$i$i = $778;\n              }\n             } else {\n              $$1290$i$i = $780;$$1292$i$i = $779;\n             }\n             while(1) {\n              $784 = ((($$1290$i$i)) + 20|0);\n              $785 = HEAP32[$784>>2]|0;\n              $786 = ($785|0)==(0|0);\n              if (!($786)) {\n               $$1290$i$i = $785;$$1292$i$i = $784;\n               continue;\n              }\n              $787 = ((($$1290$i$i)) + 16|0);\n              $788 = HEAP32[$787>>2]|0;\n              $789 = ($788|0)==(0|0);\n              if ($789) {\n               break;\n              } else {\n               $$1290$i$i = $788;$$1292$i$i = $787;\n              }\n             }\n             $790 = ($$1292$i$i>>>0)<($749>>>0);\n             if ($790) {\n              _abort();\n              // unreachable;\n             } else {\n              HEAP32[$$1292$i$i>>2] = 0;\n              $$3$i$i = $$1290$i$i;\n              break;\n             }\n            } else {\n             $769 = ((($714)) + 8|0);\n             $770 = HEAP32[$769>>2]|0;\n             $771 = ($770>>>0)<($749>>>0);\n             if ($771) {\n              _abort();\n              // unreachable;\n             }\n             $772 = ((($770)) + 12|0);\n             $773 = HEAP32[$772>>2]|0;\n             $774 = ($773|0)==($714|0);\n             if (!($774)) {\n              _abort();\n              // unreachable;\n             }\n             $775 = ((($767)) + 8|0);\n             $776 = HEAP32[$775>>2]|0;\n             $777 = ($776|0)==($714|0);\n             if ($777) {\n              HEAP32[$772>>2] = $767;\n              HEAP32[$775>>2] = $770;\n              $$3$i$i = $767;\n              break;\n             } else {\n              _abort();\n              // unreachable;\n             }\n            }\n           } while(0);\n           $791 = ($765|0)==(0|0);\n           if ($791) {\n            break;\n           }\n           $792 = ((($714)) + 28|0);\n           $793 = HEAP32[$792>>2]|0;\n           $794 = (31676 + ($793<<2)|0);\n           $795 = HEAP32[$794>>2]|0;\n           $796 = ($714|0)==($795|0);\n           do {\n            if ($796) {\n             HEAP32[$794>>2] = $$3$i$i;\n             $cond$i$i = ($$3$i$i|0)==(0|0);\n             if (!($cond$i$i)) {\n              break;\n             }\n             $797 = 1 << $793;\n             $798 = $797 ^ -1;\n             $799 = HEAP32[(31376)>>2]|0;\n             $800 = $799 & $798;\n             HEAP32[(31376)>>2] = $800;\n             break L326;\n            } else {\n             $801 = HEAP32[(31388)>>2]|0;\n             $802 = ($765>>>0)<($801>>>0);\n             if ($802) {\n              _abort();\n              // unreachable;\n             }\n             $803 = ((($765)) + 16|0);\n             $804 = HEAP32[$803>>2]|0;\n             $805 = ($804|0)==($714|0);\n             if ($805) {\n              HEAP32[$803>>2] = $$3$i$i;\n             } else {\n              $806 = ((($765)) + 20|0);\n              HEAP32[$806>>2] = $$3$i$i;\n             }\n             $807 = ($$3$i$i|0)==(0|0);\n             if ($807) {\n              break L326;\n             }\n            }\n           } while(0);\n           $808 = HEAP32[(31388)>>2]|0;\n           $809 = ($$3$i$i>>>0)<($808>>>0);\n           if ($809) {\n            _abort();\n            // unreachable;\n           }\n           $810 = ((($$3$i$i)) + 24|0);\n           HEAP32[$810>>2] = $765;\n           $811 = ((($714)) + 16|0);\n           $812 = HEAP32[$811>>2]|0;\n           $813 = ($812|0)==(0|0);\n           do {\n            if (!($813)) {\n             $814 = ($812>>>0)<($808>>>0);\n             if ($814) {\n              _abort();\n              // unreachable;\n             } else {\n              $815 = ((($$3$i$i)) + 16|0);\n              HEAP32[$815>>2] = $812;\n              $816 = ((($812)) + 24|0);\n              HEAP32[$816>>2] = $$3$i$i;\n              break;\n             }\n            }\n           } while(0);\n           $817 = ((($811)) + 4|0);\n           $818 = HEAP32[$817>>2]|0;\n           $819 = ($818|0)==(0|0);\n           if ($819) {\n            break;\n           }\n           $820 = HEAP32[(31388)>>2]|0;\n           $821 = ($818>>>0)<($820>>>0);\n           if ($821) {\n            _abort();\n            // unreachable;\n           } else {\n            $822 = ((($$3$i$i)) + 20|0);\n            HEAP32[$822>>2] = $818;\n            $823 = ((($818)) + 24|0);\n            HEAP32[$823>>2] = $$3$i$i;\n            break;\n           }\n          }\n         } while(0);\n         $824 = (($714) + ($738)|0);\n         $825 = (($738) + ($719))|0;\n         $$0$i18$i = $824;$$0286$i$i = $825;\n        } else {\n         $$0$i18$i = $714;$$0286$i$i = $719;\n        }\n        $826 = ((($$0$i18$i)) + 4|0);\n        $827 = HEAP32[$826>>2]|0;\n        $828 = $827 & -2;\n        HEAP32[$826>>2] = $828;\n        $829 = $$0286$i$i | 1;\n        $830 = ((($718)) + 4|0);\n        HEAP32[$830>>2] = $829;\n        $831 = (($718) + ($$0286$i$i)|0);\n        HEAP32[$831>>2] = $$0286$i$i;\n        $832 = $$0286$i$i >>> 3;\n        $833 = ($$0286$i$i>>>0)<(256);\n        if ($833) {\n         $834 = $832 << 1;\n         $835 = (31412 + ($834<<2)|0);\n         $836 = HEAP32[7843]|0;\n         $837 = 1 << $832;\n         $838 = $836 & $837;\n         $839 = ($838|0)==(0);\n         do {\n          if ($839) {\n           $840 = $836 | $837;\n           HEAP32[7843] = $840;\n           $$pre$i19$i = ((($835)) + 8|0);\n           $$0294$i$i = $835;$$pre$phi$i20$iZ2D = $$pre$i19$i;\n          } else {\n           $841 = ((($835)) + 8|0);\n           $842 = HEAP32[$841>>2]|0;\n           $843 = HEAP32[(31388)>>2]|0;\n           $844 = ($842>>>0)<($843>>>0);\n           if (!($844)) {\n            $$0294$i$i = $842;$$pre$phi$i20$iZ2D = $841;\n            break;\n           }\n           _abort();\n           // unreachable;\n          }\n         } while(0);\n         HEAP32[$$pre$phi$i20$iZ2D>>2] = $718;\n         $845 = ((($$0294$i$i)) + 12|0);\n         HEAP32[$845>>2] = $718;\n         $846 = ((($718)) + 8|0);\n         HEAP32[$846>>2] = $$0294$i$i;\n         $847 = ((($718)) + 12|0);\n         HEAP32[$847>>2] = $835;\n         break;\n        }\n        $848 = $$0286$i$i >>> 8;\n        $849 = ($848|0)==(0);\n        do {\n         if ($849) {\n          $$0295$i$i = 0;\n         } else {\n          $850 = ($$0286$i$i>>>0)>(16777215);\n          if ($850) {\n           $$0295$i$i = 31;\n           break;\n          }\n          $851 = (($848) + 1048320)|0;\n          $852 = $851 >>> 16;\n          $853 = $852 & 8;\n          $854 = $848 << $853;\n          $855 = (($854) + 520192)|0;\n          $856 = $855 >>> 16;\n          $857 = $856 & 4;\n          $858 = $857 | $853;\n          $859 = $854 << $857;\n          $860 = (($859) + 245760)|0;\n          $861 = $860 >>> 16;\n          $862 = $861 & 2;\n          $863 = $858 | $862;\n          $864 = (14 - ($863))|0;\n          $865 = $859 << $862;\n          $866 = $865 >>> 15;\n          $867 = (($864) + ($866))|0;\n          $868 = $867 << 1;\n          $869 = (($867) + 7)|0;\n          $870 = $$0286$i$i >>> $869;\n          $871 = $870 & 1;\n          $872 = $871 | $868;\n          $$0295$i$i = $872;\n         }\n        } while(0);\n        $873 = (31676 + ($$0295$i$i<<2)|0);\n        $874 = ((($718)) + 28|0);\n        HEAP32[$874>>2] = $$0295$i$i;\n        $875 = ((($718)) + 16|0);\n        $876 = ((($875)) + 4|0);\n        HEAP32[$876>>2] = 0;\n        HEAP32[$875>>2] = 0;\n        $877 = HEAP32[(31376)>>2]|0;\n        $878 = 1 << $$0295$i$i;\n        $879 = $877 & $878;\n        $880 = ($879|0)==(0);\n        if ($880) {\n         $881 = $877 | $878;\n         HEAP32[(31376)>>2] = $881;\n         HEAP32[$873>>2] = $718;\n         $882 = ((($718)) + 24|0);\n         HEAP32[$882>>2] = $873;\n         $883 = ((($718)) + 12|0);\n         HEAP32[$883>>2] = $718;\n         $884 = ((($718)) + 8|0);\n         HEAP32[$884>>2] = $718;\n         break;\n        }\n        $885 = HEAP32[$873>>2]|0;\n        $886 = ($$0295$i$i|0)==(31);\n        $887 = $$0295$i$i >>> 1;\n        $888 = (25 - ($887))|0;\n        $889 = $886 ? 0 : $888;\n        $890 = $$0286$i$i << $889;\n        $$0287$i$i = $890;$$0288$i$i = $885;\n        while(1) {\n         $891 = ((($$0288$i$i)) + 4|0);\n         $892 = HEAP32[$891>>2]|0;\n         $893 = $892 & -8;\n         $894 = ($893|0)==($$0286$i$i|0);\n         if ($894) {\n          label = 278;\n          break;\n         }\n         $895 = $$0287$i$i >>> 31;\n         $896 = (((($$0288$i$i)) + 16|0) + ($895<<2)|0);\n         $897 = $$0287$i$i << 1;\n         $898 = HEAP32[$896>>2]|0;\n         $899 = ($898|0)==(0|0);\n         if ($899) {\n          label = 275;\n          break;\n         } else {\n          $$0287$i$i = $897;$$0288$i$i = $898;\n         }\n        }\n        if ((label|0) == 275) {\n         $900 = HEAP32[(31388)>>2]|0;\n         $901 = ($896>>>0)<($900>>>0);\n         if ($901) {\n          _abort();\n          // unreachable;\n         } else {\n          HEAP32[$896>>2] = $718;\n          $902 = ((($718)) + 24|0);\n          HEAP32[$902>>2] = $$0288$i$i;\n          $903 = ((($718)) + 12|0);\n          HEAP32[$903>>2] = $718;\n          $904 = ((($718)) + 8|0);\n          HEAP32[$904>>2] = $718;\n          break;\n         }\n        }\n        else if ((label|0) == 278) {\n         $905 = ((($$0288$i$i)) + 8|0);\n         $906 = HEAP32[$905>>2]|0;\n         $907 = HEAP32[(31388)>>2]|0;\n         $908 = ($906>>>0)>=($907>>>0);\n         $not$$i22$i = ($$0288$i$i>>>0)>=($907>>>0);\n         $909 = $908 & $not$$i22$i;\n         if ($909) {\n          $910 = ((($906)) + 12|0);\n          HEAP32[$910>>2] = $718;\n          HEAP32[$905>>2] = $718;\n          $911 = ((($718)) + 8|0);\n          HEAP32[$911>>2] = $906;\n          $912 = ((($718)) + 12|0);\n          HEAP32[$912>>2] = $$0288$i$i;\n          $913 = ((($718)) + 24|0);\n          HEAP32[$913>>2] = 0;\n          break;\n         } else {\n          _abort();\n          // unreachable;\n         }\n        }\n       }\n      } while(0);\n      $1044 = ((($706)) + 8|0);\n      $$0 = $1044;\n      STACKTOP = sp;return ($$0|0);\n     } else {\n      $$0$i$i$i = (31820);\n     }\n    }\n    while(1) {\n     $914 = HEAP32[$$0$i$i$i>>2]|0;\n     $915 = ($914>>>0)>($627>>>0);\n     if (!($915)) {\n      $916 = ((($$0$i$i$i)) + 4|0);\n      $917 = HEAP32[$916>>2]|0;\n      $918 = (($914) + ($917)|0);\n      $919 = ($918>>>0)>($627>>>0);\n      if ($919) {\n       break;\n      }\n     }\n     $920 = ((($$0$i$i$i)) + 8|0);\n     $921 = HEAP32[$920>>2]|0;\n     $$0$i$i$i = $921;\n    }\n    $922 = ((($918)) + -47|0);\n    $923 = ((($922)) + 8|0);\n    $924 = $923;\n    $925 = $924 & 7;\n    $926 = ($925|0)==(0);\n    $927 = (0 - ($924))|0;\n    $928 = $927 & 7;\n    $929 = $926 ? 0 : $928;\n    $930 = (($922) + ($929)|0);\n    $931 = ((($627)) + 16|0);\n    $932 = ($930>>>0)<($931>>>0);\n    $933 = $932 ? $627 : $930;\n    $934 = ((($933)) + 8|0);\n    $935 = ((($933)) + 24|0);\n    $936 = (($$723947$i) + -40)|0;\n    $937 = ((($$748$i)) + 8|0);\n    $938 = $937;\n    $939 = $938 & 7;\n    $940 = ($939|0)==(0);\n    $941 = (0 - ($938))|0;\n    $942 = $941 & 7;\n    $943 = $940 ? 0 : $942;\n    $944 = (($$748$i) + ($943)|0);\n    $945 = (($936) - ($943))|0;\n    HEAP32[(31396)>>2] = $944;\n    HEAP32[(31384)>>2] = $945;\n    $946 = $945 | 1;\n    $947 = ((($944)) + 4|0);\n    HEAP32[$947>>2] = $946;\n    $948 = (($944) + ($945)|0);\n    $949 = ((($948)) + 4|0);\n    HEAP32[$949>>2] = 40;\n    $950 = HEAP32[(31860)>>2]|0;\n    HEAP32[(31400)>>2] = $950;\n    $951 = ((($933)) + 4|0);\n    HEAP32[$951>>2] = 27;\n    ;HEAP32[$934>>2]=HEAP32[(31820)>>2]|0;HEAP32[$934+4>>2]=HEAP32[(31820)+4>>2]|0;HEAP32[$934+8>>2]=HEAP32[(31820)+8>>2]|0;HEAP32[$934+12>>2]=HEAP32[(31820)+12>>2]|0;\n    HEAP32[(31820)>>2] = $$748$i;\n    HEAP32[(31824)>>2] = $$723947$i;\n    HEAP32[(31832)>>2] = 0;\n    HEAP32[(31828)>>2] = $934;\n    $$0$i$i = $935;\n    while(1) {\n     $952 = ((($$0$i$i)) + 4|0);\n     HEAP32[$952>>2] = 7;\n     $953 = ((($952)) + 4|0);\n     $954 = ($953>>>0)<($918>>>0);\n     if ($954) {\n      $$0$i$i = $952;\n     } else {\n      break;\n     }\n    }\n    $955 = ($933|0)==($627|0);\n    if (!($955)) {\n     $956 = $933;\n     $957 = $627;\n     $958 = (($956) - ($957))|0;\n     $959 = HEAP32[$951>>2]|0;\n     $960 = $959 & -2;\n     HEAP32[$951>>2] = $960;\n     $961 = $958 | 1;\n     $962 = ((($627)) + 4|0);\n     HEAP32[$962>>2] = $961;\n     HEAP32[$933>>2] = $958;\n     $963 = $958 >>> 3;\n     $964 = ($958>>>0)<(256);\n     if ($964) {\n      $965 = $963 << 1;\n      $966 = (31412 + ($965<<2)|0);\n      $967 = HEAP32[7843]|0;\n      $968 = 1 << $963;\n      $969 = $967 & $968;\n      $970 = ($969|0)==(0);\n      if ($970) {\n       $971 = $967 | $968;\n       HEAP32[7843] = $971;\n       $$pre$i$i = ((($966)) + 8|0);\n       $$0211$i$i = $966;$$pre$phi$i$iZ2D = $$pre$i$i;\n      } else {\n       $972 = ((($966)) + 8|0);\n       $973 = HEAP32[$972>>2]|0;\n       $974 = HEAP32[(31388)>>2]|0;\n       $975 = ($973>>>0)<($974>>>0);\n       if ($975) {\n        _abort();\n        // unreachable;\n       } else {\n        $$0211$i$i = $973;$$pre$phi$i$iZ2D = $972;\n       }\n      }\n      HEAP32[$$pre$phi$i$iZ2D>>2] = $627;\n      $976 = ((($$0211$i$i)) + 12|0);\n      HEAP32[$976>>2] = $627;\n      $977 = ((($627)) + 8|0);\n      HEAP32[$977>>2] = $$0211$i$i;\n      $978 = ((($627)) + 12|0);\n      HEAP32[$978>>2] = $966;\n      break;\n     }\n     $979 = $958 >>> 8;\n     $980 = ($979|0)==(0);\n     if ($980) {\n      $$0212$i$i = 0;\n     } else {\n      $981 = ($958>>>0)>(16777215);\n      if ($981) {\n       $$0212$i$i = 31;\n      } else {\n       $982 = (($979) + 1048320)|0;\n       $983 = $982 >>> 16;\n       $984 = $983 & 8;\n       $985 = $979 << $984;\n       $986 = (($985) + 520192)|0;\n       $987 = $986 >>> 16;\n       $988 = $987 & 4;\n       $989 = $988 | $984;\n       $990 = $985 << $988;\n       $991 = (($990) + 245760)|0;\n       $992 = $991 >>> 16;\n       $993 = $992 & 2;\n       $994 = $989 | $993;\n       $995 = (14 - ($994))|0;\n       $996 = $990 << $993;\n       $997 = $996 >>> 15;\n       $998 = (($995) + ($997))|0;\n       $999 = $998 << 1;\n       $1000 = (($998) + 7)|0;\n       $1001 = $958 >>> $1000;\n       $1002 = $1001 & 1;\n       $1003 = $1002 | $999;\n       $$0212$i$i = $1003;\n      }\n     }\n     $1004 = (31676 + ($$0212$i$i<<2)|0);\n     $1005 = ((($627)) + 28|0);\n     HEAP32[$1005>>2] = $$0212$i$i;\n     $1006 = ((($627)) + 20|0);\n     HEAP32[$1006>>2] = 0;\n     HEAP32[$931>>2] = 0;\n     $1007 = HEAP32[(31376)>>2]|0;\n     $1008 = 1 << $$0212$i$i;\n     $1009 = $1007 & $1008;\n     $1010 = ($1009|0)==(0);\n     if ($1010) {\n      $1011 = $1007 | $1008;\n      HEAP32[(31376)>>2] = $1011;\n      HEAP32[$1004>>2] = $627;\n      $1012 = ((($627)) + 24|0);\n      HEAP32[$1012>>2] = $1004;\n      $1013 = ((($627)) + 12|0);\n      HEAP32[$1013>>2] = $627;\n      $1014 = ((($627)) + 8|0);\n      HEAP32[$1014>>2] = $627;\n      break;\n     }\n     $1015 = HEAP32[$1004>>2]|0;\n     $1016 = ($$0212$i$i|0)==(31);\n     $1017 = $$0212$i$i >>> 1;\n     $1018 = (25 - ($1017))|0;\n     $1019 = $1016 ? 0 : $1018;\n     $1020 = $958 << $1019;\n     $$0206$i$i = $1020;$$0207$i$i = $1015;\n     while(1) {\n      $1021 = ((($$0207$i$i)) + 4|0);\n      $1022 = HEAP32[$1021>>2]|0;\n      $1023 = $1022 & -8;\n      $1024 = ($1023|0)==($958|0);\n      if ($1024) {\n       label = 304;\n       break;\n      }\n      $1025 = $$0206$i$i >>> 31;\n      $1026 = (((($$0207$i$i)) + 16|0) + ($1025<<2)|0);\n      $1027 = $$0206$i$i << 1;\n      $1028 = HEAP32[$1026>>2]|0;\n      $1029 = ($1028|0)==(0|0);\n      if ($1029) {\n       label = 301;\n       break;\n      } else {\n       $$0206$i$i = $1027;$$0207$i$i = $1028;\n      }\n     }\n     if ((label|0) == 301) {\n      $1030 = HEAP32[(31388)>>2]|0;\n      $1031 = ($1026>>>0)<($1030>>>0);\n      if ($1031) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$1026>>2] = $627;\n       $1032 = ((($627)) + 24|0);\n       HEAP32[$1032>>2] = $$0207$i$i;\n       $1033 = ((($627)) + 12|0);\n       HEAP32[$1033>>2] = $627;\n       $1034 = ((($627)) + 8|0);\n       HEAP32[$1034>>2] = $627;\n       break;\n      }\n     }\n     else if ((label|0) == 304) {\n      $1035 = ((($$0207$i$i)) + 8|0);\n      $1036 = HEAP32[$1035>>2]|0;\n      $1037 = HEAP32[(31388)>>2]|0;\n      $1038 = ($1036>>>0)>=($1037>>>0);\n      $not$$i$i = ($$0207$i$i>>>0)>=($1037>>>0);\n      $1039 = $1038 & $not$$i$i;\n      if ($1039) {\n       $1040 = ((($1036)) + 12|0);\n       HEAP32[$1040>>2] = $627;\n       HEAP32[$1035>>2] = $627;\n       $1041 = ((($627)) + 8|0);\n       HEAP32[$1041>>2] = $1036;\n       $1042 = ((($627)) + 12|0);\n       HEAP32[$1042>>2] = $$0207$i$i;\n       $1043 = ((($627)) + 24|0);\n       HEAP32[$1043>>2] = 0;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    }\n   }\n  } while(0);\n  $1045 = HEAP32[(31384)>>2]|0;\n  $1046 = ($1045>>>0)>($$0197>>>0);\n  if ($1046) {\n   $1047 = (($1045) - ($$0197))|0;\n   HEAP32[(31384)>>2] = $1047;\n   $1048 = HEAP32[(31396)>>2]|0;\n   $1049 = (($1048) + ($$0197)|0);\n   HEAP32[(31396)>>2] = $1049;\n   $1050 = $1047 | 1;\n   $1051 = ((($1049)) + 4|0);\n   HEAP32[$1051>>2] = $1050;\n   $1052 = $$0197 | 3;\n   $1053 = ((($1048)) + 4|0);\n   HEAP32[$1053>>2] = $1052;\n   $1054 = ((($1048)) + 8|0);\n   $$0 = $1054;\n   STACKTOP = sp;return ($$0|0);\n  }\n }\n $1055 = (___errno_location()|0);\n HEAP32[$1055>>2] = 12;\n $$0 = 0;\n STACKTOP = sp;return ($$0|0);\n}\nfunction _free($0) {\n $0 = $0|0;\n var $$0211$i = 0, $$0211$in$i = 0, $$0381 = 0, $$0382 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1388 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre = 0, $$pre$phi439Z2D = 0, $$pre$phi441Z2D = 0, $$pre$phiZ2D = 0, $$pre438 = 0;\n var $$pre440 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;\n var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;\n var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;\n var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;\n var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;\n var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;\n var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;\n var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;\n var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;\n var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;\n var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;\n var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;\n var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;\n var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;\n var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;\n var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;\n var $99 = 0, $cond418 = 0, $cond419 = 0, $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $1 = ($0|0)==(0|0);\n if ($1) {\n  return;\n }\n $2 = ((($0)) + -8|0);\n $3 = HEAP32[(31388)>>2]|0;\n $4 = ($2>>>0)<($3>>>0);\n if ($4) {\n  _abort();\n  // unreachable;\n }\n $5 = ((($0)) + -4|0);\n $6 = HEAP32[$5>>2]|0;\n $7 = $6 & 3;\n $8 = ($7|0)==(1);\n if ($8) {\n  _abort();\n  // unreachable;\n }\n $9 = $6 & -8;\n $10 = (($2) + ($9)|0);\n $11 = $6 & 1;\n $12 = ($11|0)==(0);\n do {\n  if ($12) {\n   $13 = HEAP32[$2>>2]|0;\n   $14 = ($7|0)==(0);\n   if ($14) {\n    return;\n   }\n   $15 = (0 - ($13))|0;\n   $16 = (($2) + ($15)|0);\n   $17 = (($13) + ($9))|0;\n   $18 = ($16>>>0)<($3>>>0);\n   if ($18) {\n    _abort();\n    // unreachable;\n   }\n   $19 = HEAP32[(31392)>>2]|0;\n   $20 = ($16|0)==($19|0);\n   if ($20) {\n    $105 = ((($10)) + 4|0);\n    $106 = HEAP32[$105>>2]|0;\n    $107 = $106 & 3;\n    $108 = ($107|0)==(3);\n    if (!($108)) {\n     $$1 = $16;$$1380 = $17;\n     break;\n    }\n    HEAP32[(31380)>>2] = $17;\n    $109 = $106 & -2;\n    HEAP32[$105>>2] = $109;\n    $110 = $17 | 1;\n    $111 = ((($16)) + 4|0);\n    HEAP32[$111>>2] = $110;\n    $112 = (($16) + ($17)|0);\n    HEAP32[$112>>2] = $17;\n    return;\n   }\n   $21 = $13 >>> 3;\n   $22 = ($13>>>0)<(256);\n   if ($22) {\n    $23 = ((($16)) + 8|0);\n    $24 = HEAP32[$23>>2]|0;\n    $25 = ((($16)) + 12|0);\n    $26 = HEAP32[$25>>2]|0;\n    $27 = $21 << 1;\n    $28 = (31412 + ($27<<2)|0);\n    $29 = ($24|0)==($28|0);\n    if (!($29)) {\n     $30 = ($24>>>0)<($3>>>0);\n     if ($30) {\n      _abort();\n      // unreachable;\n     }\n     $31 = ((($24)) + 12|0);\n     $32 = HEAP32[$31>>2]|0;\n     $33 = ($32|0)==($16|0);\n     if (!($33)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $34 = ($26|0)==($24|0);\n    if ($34) {\n     $35 = 1 << $21;\n     $36 = $35 ^ -1;\n     $37 = HEAP32[7843]|0;\n     $38 = $37 & $36;\n     HEAP32[7843] = $38;\n     $$1 = $16;$$1380 = $17;\n     break;\n    }\n    $39 = ($26|0)==($28|0);\n    if ($39) {\n     $$pre440 = ((($26)) + 8|0);\n     $$pre$phi441Z2D = $$pre440;\n    } else {\n     $40 = ($26>>>0)<($3>>>0);\n     if ($40) {\n      _abort();\n      // unreachable;\n     }\n     $41 = ((($26)) + 8|0);\n     $42 = HEAP32[$41>>2]|0;\n     $43 = ($42|0)==($16|0);\n     if ($43) {\n      $$pre$phi441Z2D = $41;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $44 = ((($24)) + 12|0);\n    HEAP32[$44>>2] = $26;\n    HEAP32[$$pre$phi441Z2D>>2] = $24;\n    $$1 = $16;$$1380 = $17;\n    break;\n   }\n   $45 = ((($16)) + 24|0);\n   $46 = HEAP32[$45>>2]|0;\n   $47 = ((($16)) + 12|0);\n   $48 = HEAP32[$47>>2]|0;\n   $49 = ($48|0)==($16|0);\n   do {\n    if ($49) {\n     $59 = ((($16)) + 16|0);\n     $60 = ((($59)) + 4|0);\n     $61 = HEAP32[$60>>2]|0;\n     $62 = ($61|0)==(0|0);\n     if ($62) {\n      $63 = HEAP32[$59>>2]|0;\n      $64 = ($63|0)==(0|0);\n      if ($64) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1385 = $63;$$1388 = $59;\n      }\n     } else {\n      $$1385 = $61;$$1388 = $60;\n     }\n     while(1) {\n      $65 = ((($$1385)) + 20|0);\n      $66 = HEAP32[$65>>2]|0;\n      $67 = ($66|0)==(0|0);\n      if (!($67)) {\n       $$1385 = $66;$$1388 = $65;\n       continue;\n      }\n      $68 = ((($$1385)) + 16|0);\n      $69 = HEAP32[$68>>2]|0;\n      $70 = ($69|0)==(0|0);\n      if ($70) {\n       break;\n      } else {\n       $$1385 = $69;$$1388 = $68;\n      }\n     }\n     $71 = ($$1388>>>0)<($3>>>0);\n     if ($71) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1388>>2] = 0;\n      $$3 = $$1385;\n      break;\n     }\n    } else {\n     $50 = ((($16)) + 8|0);\n     $51 = HEAP32[$50>>2]|0;\n     $52 = ($51>>>0)<($3>>>0);\n     if ($52) {\n      _abort();\n      // unreachable;\n     }\n     $53 = ((($51)) + 12|0);\n     $54 = HEAP32[$53>>2]|0;\n     $55 = ($54|0)==($16|0);\n     if (!($55)) {\n      _abort();\n      // unreachable;\n     }\n     $56 = ((($48)) + 8|0);\n     $57 = HEAP32[$56>>2]|0;\n     $58 = ($57|0)==($16|0);\n     if ($58) {\n      HEAP32[$53>>2] = $48;\n      HEAP32[$56>>2] = $51;\n      $$3 = $48;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $72 = ($46|0)==(0|0);\n   if ($72) {\n    $$1 = $16;$$1380 = $17;\n   } else {\n    $73 = ((($16)) + 28|0);\n    $74 = HEAP32[$73>>2]|0;\n    $75 = (31676 + ($74<<2)|0);\n    $76 = HEAP32[$75>>2]|0;\n    $77 = ($16|0)==($76|0);\n    if ($77) {\n     HEAP32[$75>>2] = $$3;\n     $cond418 = ($$3|0)==(0|0);\n     if ($cond418) {\n      $78 = 1 << $74;\n      $79 = $78 ^ -1;\n      $80 = HEAP32[(31376)>>2]|0;\n      $81 = $80 & $79;\n      HEAP32[(31376)>>2] = $81;\n      $$1 = $16;$$1380 = $17;\n      break;\n     }\n    } else {\n     $82 = HEAP32[(31388)>>2]|0;\n     $83 = ($46>>>0)<($82>>>0);\n     if ($83) {\n      _abort();\n      // unreachable;\n     }\n     $84 = ((($46)) + 16|0);\n     $85 = HEAP32[$84>>2]|0;\n     $86 = ($85|0)==($16|0);\n     if ($86) {\n      HEAP32[$84>>2] = $$3;\n     } else {\n      $87 = ((($46)) + 20|0);\n      HEAP32[$87>>2] = $$3;\n     }\n     $88 = ($$3|0)==(0|0);\n     if ($88) {\n      $$1 = $16;$$1380 = $17;\n      break;\n     }\n    }\n    $89 = HEAP32[(31388)>>2]|0;\n    $90 = ($$3>>>0)<($89>>>0);\n    if ($90) {\n     _abort();\n     // unreachable;\n    }\n    $91 = ((($$3)) + 24|0);\n    HEAP32[$91>>2] = $46;\n    $92 = ((($16)) + 16|0);\n    $93 = HEAP32[$92>>2]|0;\n    $94 = ($93|0)==(0|0);\n    do {\n     if (!($94)) {\n      $95 = ($93>>>0)<($89>>>0);\n      if ($95) {\n       _abort();\n       // unreachable;\n      } else {\n       $96 = ((($$3)) + 16|0);\n       HEAP32[$96>>2] = $93;\n       $97 = ((($93)) + 24|0);\n       HEAP32[$97>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $98 = ((($92)) + 4|0);\n    $99 = HEAP32[$98>>2]|0;\n    $100 = ($99|0)==(0|0);\n    if ($100) {\n     $$1 = $16;$$1380 = $17;\n    } else {\n     $101 = HEAP32[(31388)>>2]|0;\n     $102 = ($99>>>0)<($101>>>0);\n     if ($102) {\n      _abort();\n      // unreachable;\n     } else {\n      $103 = ((($$3)) + 20|0);\n      HEAP32[$103>>2] = $99;\n      $104 = ((($99)) + 24|0);\n      HEAP32[$104>>2] = $$3;\n      $$1 = $16;$$1380 = $17;\n      break;\n     }\n    }\n   }\n  } else {\n   $$1 = $2;$$1380 = $9;\n  }\n } while(0);\n $113 = ($$1>>>0)<($10>>>0);\n if (!($113)) {\n  _abort();\n  // unreachable;\n }\n $114 = ((($10)) + 4|0);\n $115 = HEAP32[$114>>2]|0;\n $116 = $115 & 1;\n $117 = ($116|0)==(0);\n if ($117) {\n  _abort();\n  // unreachable;\n }\n $118 = $115 & 2;\n $119 = ($118|0)==(0);\n if ($119) {\n  $120 = HEAP32[(31396)>>2]|0;\n  $121 = ($10|0)==($120|0);\n  if ($121) {\n   $122 = HEAP32[(31384)>>2]|0;\n   $123 = (($122) + ($$1380))|0;\n   HEAP32[(31384)>>2] = $123;\n   HEAP32[(31396)>>2] = $$1;\n   $124 = $123 | 1;\n   $125 = ((($$1)) + 4|0);\n   HEAP32[$125>>2] = $124;\n   $126 = HEAP32[(31392)>>2]|0;\n   $127 = ($$1|0)==($126|0);\n   if (!($127)) {\n    return;\n   }\n   HEAP32[(31392)>>2] = 0;\n   HEAP32[(31380)>>2] = 0;\n   return;\n  }\n  $128 = HEAP32[(31392)>>2]|0;\n  $129 = ($10|0)==($128|0);\n  if ($129) {\n   $130 = HEAP32[(31380)>>2]|0;\n   $131 = (($130) + ($$1380))|0;\n   HEAP32[(31380)>>2] = $131;\n   HEAP32[(31392)>>2] = $$1;\n   $132 = $131 | 1;\n   $133 = ((($$1)) + 4|0);\n   HEAP32[$133>>2] = $132;\n   $134 = (($$1) + ($131)|0);\n   HEAP32[$134>>2] = $131;\n   return;\n  }\n  $135 = $115 & -8;\n  $136 = (($135) + ($$1380))|0;\n  $137 = $115 >>> 3;\n  $138 = ($115>>>0)<(256);\n  do {\n   if ($138) {\n    $139 = ((($10)) + 8|0);\n    $140 = HEAP32[$139>>2]|0;\n    $141 = ((($10)) + 12|0);\n    $142 = HEAP32[$141>>2]|0;\n    $143 = $137 << 1;\n    $144 = (31412 + ($143<<2)|0);\n    $145 = ($140|0)==($144|0);\n    if (!($145)) {\n     $146 = HEAP32[(31388)>>2]|0;\n     $147 = ($140>>>0)<($146>>>0);\n     if ($147) {\n      _abort();\n      // unreachable;\n     }\n     $148 = ((($140)) + 12|0);\n     $149 = HEAP32[$148>>2]|0;\n     $150 = ($149|0)==($10|0);\n     if (!($150)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $151 = ($142|0)==($140|0);\n    if ($151) {\n     $152 = 1 << $137;\n     $153 = $152 ^ -1;\n     $154 = HEAP32[7843]|0;\n     $155 = $154 & $153;\n     HEAP32[7843] = $155;\n     break;\n    }\n    $156 = ($142|0)==($144|0);\n    if ($156) {\n     $$pre438 = ((($142)) + 8|0);\n     $$pre$phi439Z2D = $$pre438;\n    } else {\n     $157 = HEAP32[(31388)>>2]|0;\n     $158 = ($142>>>0)<($157>>>0);\n     if ($158) {\n      _abort();\n      // unreachable;\n     }\n     $159 = ((($142)) + 8|0);\n     $160 = HEAP32[$159>>2]|0;\n     $161 = ($160|0)==($10|0);\n     if ($161) {\n      $$pre$phi439Z2D = $159;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $162 = ((($140)) + 12|0);\n    HEAP32[$162>>2] = $142;\n    HEAP32[$$pre$phi439Z2D>>2] = $140;\n   } else {\n    $163 = ((($10)) + 24|0);\n    $164 = HEAP32[$163>>2]|0;\n    $165 = ((($10)) + 12|0);\n    $166 = HEAP32[$165>>2]|0;\n    $167 = ($166|0)==($10|0);\n    do {\n     if ($167) {\n      $178 = ((($10)) + 16|0);\n      $179 = ((($178)) + 4|0);\n      $180 = HEAP32[$179>>2]|0;\n      $181 = ($180|0)==(0|0);\n      if ($181) {\n       $182 = HEAP32[$178>>2]|0;\n       $183 = ($182|0)==(0|0);\n       if ($183) {\n        $$3398 = 0;\n        break;\n       } else {\n        $$1396 = $182;$$1400 = $178;\n       }\n      } else {\n       $$1396 = $180;$$1400 = $179;\n      }\n      while(1) {\n       $184 = ((($$1396)) + 20|0);\n       $185 = HEAP32[$184>>2]|0;\n       $186 = ($185|0)==(0|0);\n       if (!($186)) {\n        $$1396 = $185;$$1400 = $184;\n        continue;\n       }\n       $187 = ((($$1396)) + 16|0);\n       $188 = HEAP32[$187>>2]|0;\n       $189 = ($188|0)==(0|0);\n       if ($189) {\n        break;\n       } else {\n        $$1396 = $188;$$1400 = $187;\n       }\n      }\n      $190 = HEAP32[(31388)>>2]|0;\n      $191 = ($$1400>>>0)<($190>>>0);\n      if ($191) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$$1400>>2] = 0;\n       $$3398 = $$1396;\n       break;\n      }\n     } else {\n      $168 = ((($10)) + 8|0);\n      $169 = HEAP32[$168>>2]|0;\n      $170 = HEAP32[(31388)>>2]|0;\n      $171 = ($169>>>0)<($170>>>0);\n      if ($171) {\n       _abort();\n       // unreachable;\n      }\n      $172 = ((($169)) + 12|0);\n      $173 = HEAP32[$172>>2]|0;\n      $174 = ($173|0)==($10|0);\n      if (!($174)) {\n       _abort();\n       // unreachable;\n      }\n      $175 = ((($166)) + 8|0);\n      $176 = HEAP32[$175>>2]|0;\n      $177 = ($176|0)==($10|0);\n      if ($177) {\n       HEAP32[$172>>2] = $166;\n       HEAP32[$175>>2] = $169;\n       $$3398 = $166;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $192 = ($164|0)==(0|0);\n    if (!($192)) {\n     $193 = ((($10)) + 28|0);\n     $194 = HEAP32[$193>>2]|0;\n     $195 = (31676 + ($194<<2)|0);\n     $196 = HEAP32[$195>>2]|0;\n     $197 = ($10|0)==($196|0);\n     if ($197) {\n      HEAP32[$195>>2] = $$3398;\n      $cond419 = ($$3398|0)==(0|0);\n      if ($cond419) {\n       $198 = 1 << $194;\n       $199 = $198 ^ -1;\n       $200 = HEAP32[(31376)>>2]|0;\n       $201 = $200 & $199;\n       HEAP32[(31376)>>2] = $201;\n       break;\n      }\n     } else {\n      $202 = HEAP32[(31388)>>2]|0;\n      $203 = ($164>>>0)<($202>>>0);\n      if ($203) {\n       _abort();\n       // unreachable;\n      }\n      $204 = ((($164)) + 16|0);\n      $205 = HEAP32[$204>>2]|0;\n      $206 = ($205|0)==($10|0);\n      if ($206) {\n       HEAP32[$204>>2] = $$3398;\n      } else {\n       $207 = ((($164)) + 20|0);\n       HEAP32[$207>>2] = $$3398;\n      }\n      $208 = ($$3398|0)==(0|0);\n      if ($208) {\n       break;\n      }\n     }\n     $209 = HEAP32[(31388)>>2]|0;\n     $210 = ($$3398>>>0)<($209>>>0);\n     if ($210) {\n      _abort();\n      // unreachable;\n     }\n     $211 = ((($$3398)) + 24|0);\n     HEAP32[$211>>2] = $164;\n     $212 = ((($10)) + 16|0);\n     $213 = HEAP32[$212>>2]|0;\n     $214 = ($213|0)==(0|0);\n     do {\n      if (!($214)) {\n       $215 = ($213>>>0)<($209>>>0);\n       if ($215) {\n        _abort();\n        // unreachable;\n       } else {\n        $216 = ((($$3398)) + 16|0);\n        HEAP32[$216>>2] = $213;\n        $217 = ((($213)) + 24|0);\n        HEAP32[$217>>2] = $$3398;\n        break;\n       }\n      }\n     } while(0);\n     $218 = ((($212)) + 4|0);\n     $219 = HEAP32[$218>>2]|0;\n     $220 = ($219|0)==(0|0);\n     if (!($220)) {\n      $221 = HEAP32[(31388)>>2]|0;\n      $222 = ($219>>>0)<($221>>>0);\n      if ($222) {\n       _abort();\n       // unreachable;\n      } else {\n       $223 = ((($$3398)) + 20|0);\n       HEAP32[$223>>2] = $219;\n       $224 = ((($219)) + 24|0);\n       HEAP32[$224>>2] = $$3398;\n       break;\n      }\n     }\n    }\n   }\n  } while(0);\n  $225 = $136 | 1;\n  $226 = ((($$1)) + 4|0);\n  HEAP32[$226>>2] = $225;\n  $227 = (($$1) + ($136)|0);\n  HEAP32[$227>>2] = $136;\n  $228 = HEAP32[(31392)>>2]|0;\n  $229 = ($$1|0)==($228|0);\n  if ($229) {\n   HEAP32[(31380)>>2] = $136;\n   return;\n  } else {\n   $$2 = $136;\n  }\n } else {\n  $230 = $115 & -2;\n  HEAP32[$114>>2] = $230;\n  $231 = $$1380 | 1;\n  $232 = ((($$1)) + 4|0);\n  HEAP32[$232>>2] = $231;\n  $233 = (($$1) + ($$1380)|0);\n  HEAP32[$233>>2] = $$1380;\n  $$2 = $$1380;\n }\n $234 = $$2 >>> 3;\n $235 = ($$2>>>0)<(256);\n if ($235) {\n  $236 = $234 << 1;\n  $237 = (31412 + ($236<<2)|0);\n  $238 = HEAP32[7843]|0;\n  $239 = 1 << $234;\n  $240 = $238 & $239;\n  $241 = ($240|0)==(0);\n  if ($241) {\n   $242 = $238 | $239;\n   HEAP32[7843] = $242;\n   $$pre = ((($237)) + 8|0);\n   $$0401 = $237;$$pre$phiZ2D = $$pre;\n  } else {\n   $243 = ((($237)) + 8|0);\n   $244 = HEAP32[$243>>2]|0;\n   $245 = HEAP32[(31388)>>2]|0;\n   $246 = ($244>>>0)<($245>>>0);\n   if ($246) {\n    _abort();\n    // unreachable;\n   } else {\n    $$0401 = $244;$$pre$phiZ2D = $243;\n   }\n  }\n  HEAP32[$$pre$phiZ2D>>2] = $$1;\n  $247 = ((($$0401)) + 12|0);\n  HEAP32[$247>>2] = $$1;\n  $248 = ((($$1)) + 8|0);\n  HEAP32[$248>>2] = $$0401;\n  $249 = ((($$1)) + 12|0);\n  HEAP32[$249>>2] = $237;\n  return;\n }\n $250 = $$2 >>> 8;\n $251 = ($250|0)==(0);\n if ($251) {\n  $$0394 = 0;\n } else {\n  $252 = ($$2>>>0)>(16777215);\n  if ($252) {\n   $$0394 = 31;\n  } else {\n   $253 = (($250) + 1048320)|0;\n   $254 = $253 >>> 16;\n   $255 = $254 & 8;\n   $256 = $250 << $255;\n   $257 = (($256) + 520192)|0;\n   $258 = $257 >>> 16;\n   $259 = $258 & 4;\n   $260 = $259 | $255;\n   $261 = $256 << $259;\n   $262 = (($261) + 245760)|0;\n   $263 = $262 >>> 16;\n   $264 = $263 & 2;\n   $265 = $260 | $264;\n   $266 = (14 - ($265))|0;\n   $267 = $261 << $264;\n   $268 = $267 >>> 15;\n   $269 = (($266) + ($268))|0;\n   $270 = $269 << 1;\n   $271 = (($269) + 7)|0;\n   $272 = $$2 >>> $271;\n   $273 = $272 & 1;\n   $274 = $273 | $270;\n   $$0394 = $274;\n  }\n }\n $275 = (31676 + ($$0394<<2)|0);\n $276 = ((($$1)) + 28|0);\n HEAP32[$276>>2] = $$0394;\n $277 = ((($$1)) + 16|0);\n $278 = ((($$1)) + 20|0);\n HEAP32[$278>>2] = 0;\n HEAP32[$277>>2] = 0;\n $279 = HEAP32[(31376)>>2]|0;\n $280 = 1 << $$0394;\n $281 = $279 & $280;\n $282 = ($281|0)==(0);\n do {\n  if ($282) {\n   $283 = $279 | $280;\n   HEAP32[(31376)>>2] = $283;\n   HEAP32[$275>>2] = $$1;\n   $284 = ((($$1)) + 24|0);\n   HEAP32[$284>>2] = $275;\n   $285 = ((($$1)) + 12|0);\n   HEAP32[$285>>2] = $$1;\n   $286 = ((($$1)) + 8|0);\n   HEAP32[$286>>2] = $$1;\n  } else {\n   $287 = HEAP32[$275>>2]|0;\n   $288 = ($$0394|0)==(31);\n   $289 = $$0394 >>> 1;\n   $290 = (25 - ($289))|0;\n   $291 = $288 ? 0 : $290;\n   $292 = $$2 << $291;\n   $$0381 = $292;$$0382 = $287;\n   while(1) {\n    $293 = ((($$0382)) + 4|0);\n    $294 = HEAP32[$293>>2]|0;\n    $295 = $294 & -8;\n    $296 = ($295|0)==($$2|0);\n    if ($296) {\n     label = 130;\n     break;\n    }\n    $297 = $$0381 >>> 31;\n    $298 = (((($$0382)) + 16|0) + ($297<<2)|0);\n    $299 = $$0381 << 1;\n    $300 = HEAP32[$298>>2]|0;\n    $301 = ($300|0)==(0|0);\n    if ($301) {\n     label = 127;\n     break;\n    } else {\n     $$0381 = $299;$$0382 = $300;\n    }\n   }\n   if ((label|0) == 127) {\n    $302 = HEAP32[(31388)>>2]|0;\n    $303 = ($298>>>0)<($302>>>0);\n    if ($303) {\n     _abort();\n     // unreachable;\n    } else {\n     HEAP32[$298>>2] = $$1;\n     $304 = ((($$1)) + 24|0);\n     HEAP32[$304>>2] = $$0382;\n     $305 = ((($$1)) + 12|0);\n     HEAP32[$305>>2] = $$1;\n     $306 = ((($$1)) + 8|0);\n     HEAP32[$306>>2] = $$1;\n     break;\n    }\n   }\n   else if ((label|0) == 130) {\n    $307 = ((($$0382)) + 8|0);\n    $308 = HEAP32[$307>>2]|0;\n    $309 = HEAP32[(31388)>>2]|0;\n    $310 = ($308>>>0)>=($309>>>0);\n    $not$ = ($$0382>>>0)>=($309>>>0);\n    $311 = $310 & $not$;\n    if ($311) {\n     $312 = ((($308)) + 12|0);\n     HEAP32[$312>>2] = $$1;\n     HEAP32[$307>>2] = $$1;\n     $313 = ((($$1)) + 8|0);\n     HEAP32[$313>>2] = $308;\n     $314 = ((($$1)) + 12|0);\n     HEAP32[$314>>2] = $$0382;\n     $315 = ((($$1)) + 24|0);\n     HEAP32[$315>>2] = 0;\n     break;\n    } else {\n     _abort();\n     // unreachable;\n    }\n   }\n  }\n } while(0);\n $316 = HEAP32[(31404)>>2]|0;\n $317 = (($316) + -1)|0;\n HEAP32[(31404)>>2] = $317;\n $318 = ($317|0)==(0);\n if ($318) {\n  $$0211$in$i = (31828);\n } else {\n  return;\n }\n while(1) {\n  $$0211$i = HEAP32[$$0211$in$i>>2]|0;\n  $319 = ($$0211$i|0)==(0|0);\n  $320 = ((($$0211$i)) + 8|0);\n  if ($319) {\n   break;\n  } else {\n   $$0211$in$i = $320;\n  }\n }\n HEAP32[(31404)>>2] = -1;\n return;\n}\nfunction _realloc($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;\n var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ($0|0)==(0|0);\n if ($2) {\n  $3 = (_malloc($1)|0);\n  $$1 = $3;\n  return ($$1|0);\n }\n $4 = ($1>>>0)>(4294967231);\n if ($4) {\n  $5 = (___errno_location()|0);\n  HEAP32[$5>>2] = 12;\n  $$1 = 0;\n  return ($$1|0);\n }\n $6 = ($1>>>0)<(11);\n $7 = (($1) + 11)|0;\n $8 = $7 & -8;\n $9 = $6 ? 16 : $8;\n $10 = ((($0)) + -8|0);\n $11 = (_try_realloc_chunk($10,$9)|0);\n $12 = ($11|0)==(0|0);\n if (!($12)) {\n  $13 = ((($11)) + 8|0);\n  $$1 = $13;\n  return ($$1|0);\n }\n $14 = (_malloc($1)|0);\n $15 = ($14|0)==(0|0);\n if ($15) {\n  $$1 = 0;\n  return ($$1|0);\n }\n $16 = ((($0)) + -4|0);\n $17 = HEAP32[$16>>2]|0;\n $18 = $17 & -8;\n $19 = $17 & 3;\n $20 = ($19|0)==(0);\n $21 = $20 ? 8 : 4;\n $22 = (($18) - ($21))|0;\n $23 = ($22>>>0)<($1>>>0);\n $24 = $23 ? $22 : $1;\n _memcpy(($14|0),($0|0),($24|0))|0;\n _free($0);\n $$1 = $14;\n return ($$1|0);\n}\nfunction _try_realloc_chunk($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$1271 = 0, $$1274 = 0, $$2 = 0, $$3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;\n var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;\n var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;\n var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;\n var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;\n var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;\n var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;\n var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;\n var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;\n var $98 = 0, $99 = 0, $cond = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = ((($0)) + 4|0);\n $3 = HEAP32[$2>>2]|0;\n $4 = $3 & -8;\n $5 = (($0) + ($4)|0);\n $6 = HEAP32[(31388)>>2]|0;\n $7 = $3 & 3;\n $notlhs = ($0>>>0)>=($6>>>0);\n $notrhs = ($7|0)!=(1);\n $or$cond$not = $notrhs & $notlhs;\n $8 = ($0>>>0)<($5>>>0);\n $or$cond3 = $or$cond$not & $8;\n if (!($or$cond3)) {\n  _abort();\n  // unreachable;\n }\n $9 = ((($5)) + 4|0);\n $10 = HEAP32[$9>>2]|0;\n $11 = $10 & 1;\n $12 = ($11|0)==(0);\n if ($12) {\n  _abort();\n  // unreachable;\n }\n $13 = ($7|0)==(0);\n if ($13) {\n  $14 = ($1>>>0)<(256);\n  if ($14) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $15 = (($1) + 4)|0;\n  $16 = ($4>>>0)<($15>>>0);\n  if (!($16)) {\n   $17 = (($4) - ($1))|0;\n   $18 = HEAP32[(31852)>>2]|0;\n   $19 = $18 << 1;\n   $20 = ($17>>>0)>($19>>>0);\n   if (!($20)) {\n    $$2 = $0;\n    return ($$2|0);\n   }\n  }\n  $$2 = 0;\n  return ($$2|0);\n }\n $21 = ($4>>>0)<($1>>>0);\n if (!($21)) {\n  $22 = (($4) - ($1))|0;\n  $23 = ($22>>>0)>(15);\n  if (!($23)) {\n   $$2 = $0;\n   return ($$2|0);\n  }\n  $24 = (($0) + ($1)|0);\n  $25 = $3 & 1;\n  $26 = $25 | $1;\n  $27 = $26 | 2;\n  HEAP32[$2>>2] = $27;\n  $28 = ((($24)) + 4|0);\n  $29 = $22 | 3;\n  HEAP32[$28>>2] = $29;\n  $30 = (($24) + ($22)|0);\n  $31 = ((($30)) + 4|0);\n  $32 = HEAP32[$31>>2]|0;\n  $33 = $32 | 1;\n  HEAP32[$31>>2] = $33;\n  _dispose_chunk($24,$22);\n  $$2 = $0;\n  return ($$2|0);\n }\n $34 = HEAP32[(31396)>>2]|0;\n $35 = ($5|0)==($34|0);\n if ($35) {\n  $36 = HEAP32[(31384)>>2]|0;\n  $37 = (($36) + ($4))|0;\n  $38 = ($37>>>0)>($1>>>0);\n  if (!($38)) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $39 = (($37) - ($1))|0;\n  $40 = (($0) + ($1)|0);\n  $41 = $3 & 1;\n  $42 = $41 | $1;\n  $43 = $42 | 2;\n  HEAP32[$2>>2] = $43;\n  $44 = ((($40)) + 4|0);\n  $45 = $39 | 1;\n  HEAP32[$44>>2] = $45;\n  HEAP32[(31396)>>2] = $40;\n  HEAP32[(31384)>>2] = $39;\n  $$2 = $0;\n  return ($$2|0);\n }\n $46 = HEAP32[(31392)>>2]|0;\n $47 = ($5|0)==($46|0);\n if ($47) {\n  $48 = HEAP32[(31380)>>2]|0;\n  $49 = (($48) + ($4))|0;\n  $50 = ($49>>>0)<($1>>>0);\n  if ($50) {\n   $$2 = 0;\n   return ($$2|0);\n  }\n  $51 = (($49) - ($1))|0;\n  $52 = ($51>>>0)>(15);\n  if ($52) {\n   $53 = (($0) + ($1)|0);\n   $54 = (($53) + ($51)|0);\n   $55 = $3 & 1;\n   $56 = $55 | $1;\n   $57 = $56 | 2;\n   HEAP32[$2>>2] = $57;\n   $58 = ((($53)) + 4|0);\n   $59 = $51 | 1;\n   HEAP32[$58>>2] = $59;\n   HEAP32[$54>>2] = $51;\n   $60 = ((($54)) + 4|0);\n   $61 = HEAP32[$60>>2]|0;\n   $62 = $61 & -2;\n   HEAP32[$60>>2] = $62;\n   $storemerge = $53;$storemerge1 = $51;\n  } else {\n   $63 = $3 & 1;\n   $64 = $63 | $49;\n   $65 = $64 | 2;\n   HEAP32[$2>>2] = $65;\n   $66 = (($0) + ($49)|0);\n   $67 = ((($66)) + 4|0);\n   $68 = HEAP32[$67>>2]|0;\n   $69 = $68 | 1;\n   HEAP32[$67>>2] = $69;\n   $storemerge = 0;$storemerge1 = 0;\n  }\n  HEAP32[(31380)>>2] = $storemerge1;\n  HEAP32[(31392)>>2] = $storemerge;\n  $$2 = $0;\n  return ($$2|0);\n }\n $70 = $10 & 2;\n $71 = ($70|0)==(0);\n if (!($71)) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $72 = $10 & -8;\n $73 = (($72) + ($4))|0;\n $74 = ($73>>>0)<($1>>>0);\n if ($74) {\n  $$2 = 0;\n  return ($$2|0);\n }\n $75 = (($73) - ($1))|0;\n $76 = $10 >>> 3;\n $77 = ($10>>>0)<(256);\n do {\n  if ($77) {\n   $78 = ((($5)) + 8|0);\n   $79 = HEAP32[$78>>2]|0;\n   $80 = ((($5)) + 12|0);\n   $81 = HEAP32[$80>>2]|0;\n   $82 = $76 << 1;\n   $83 = (31412 + ($82<<2)|0);\n   $84 = ($79|0)==($83|0);\n   if (!($84)) {\n    $85 = ($79>>>0)<($6>>>0);\n    if ($85) {\n     _abort();\n     // unreachable;\n    }\n    $86 = ((($79)) + 12|0);\n    $87 = HEAP32[$86>>2]|0;\n    $88 = ($87|0)==($5|0);\n    if (!($88)) {\n     _abort();\n     // unreachable;\n    }\n   }\n   $89 = ($81|0)==($79|0);\n   if ($89) {\n    $90 = 1 << $76;\n    $91 = $90 ^ -1;\n    $92 = HEAP32[7843]|0;\n    $93 = $92 & $91;\n    HEAP32[7843] = $93;\n    break;\n   }\n   $94 = ($81|0)==($83|0);\n   if ($94) {\n    $$pre = ((($81)) + 8|0);\n    $$pre$phiZ2D = $$pre;\n   } else {\n    $95 = ($81>>>0)<($6>>>0);\n    if ($95) {\n     _abort();\n     // unreachable;\n    }\n    $96 = ((($81)) + 8|0);\n    $97 = HEAP32[$96>>2]|0;\n    $98 = ($97|0)==($5|0);\n    if ($98) {\n     $$pre$phiZ2D = $96;\n    } else {\n     _abort();\n     // unreachable;\n    }\n   }\n   $99 = ((($79)) + 12|0);\n   HEAP32[$99>>2] = $81;\n   HEAP32[$$pre$phiZ2D>>2] = $79;\n  } else {\n   $100 = ((($5)) + 24|0);\n   $101 = HEAP32[$100>>2]|0;\n   $102 = ((($5)) + 12|0);\n   $103 = HEAP32[$102>>2]|0;\n   $104 = ($103|0)==($5|0);\n   do {\n    if ($104) {\n     $114 = ((($5)) + 16|0);\n     $115 = ((($114)) + 4|0);\n     $116 = HEAP32[$115>>2]|0;\n     $117 = ($116|0)==(0|0);\n     if ($117) {\n      $118 = HEAP32[$114>>2]|0;\n      $119 = ($118|0)==(0|0);\n      if ($119) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1271 = $118;$$1274 = $114;\n      }\n     } else {\n      $$1271 = $116;$$1274 = $115;\n     }\n     while(1) {\n      $120 = ((($$1271)) + 20|0);\n      $121 = HEAP32[$120>>2]|0;\n      $122 = ($121|0)==(0|0);\n      if (!($122)) {\n       $$1271 = $121;$$1274 = $120;\n       continue;\n      }\n      $123 = ((($$1271)) + 16|0);\n      $124 = HEAP32[$123>>2]|0;\n      $125 = ($124|0)==(0|0);\n      if ($125) {\n       break;\n      } else {\n       $$1271 = $124;$$1274 = $123;\n      }\n     }\n     $126 = ($$1274>>>0)<($6>>>0);\n     if ($126) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1274>>2] = 0;\n      $$3 = $$1271;\n      break;\n     }\n    } else {\n     $105 = ((($5)) + 8|0);\n     $106 = HEAP32[$105>>2]|0;\n     $107 = ($106>>>0)<($6>>>0);\n     if ($107) {\n      _abort();\n      // unreachable;\n     }\n     $108 = ((($106)) + 12|0);\n     $109 = HEAP32[$108>>2]|0;\n     $110 = ($109|0)==($5|0);\n     if (!($110)) {\n      _abort();\n      // unreachable;\n     }\n     $111 = ((($103)) + 8|0);\n     $112 = HEAP32[$111>>2]|0;\n     $113 = ($112|0)==($5|0);\n     if ($113) {\n      HEAP32[$108>>2] = $103;\n      HEAP32[$111>>2] = $106;\n      $$3 = $103;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $127 = ($101|0)==(0|0);\n   if (!($127)) {\n    $128 = ((($5)) + 28|0);\n    $129 = HEAP32[$128>>2]|0;\n    $130 = (31676 + ($129<<2)|0);\n    $131 = HEAP32[$130>>2]|0;\n    $132 = ($5|0)==($131|0);\n    if ($132) {\n     HEAP32[$130>>2] = $$3;\n     $cond = ($$3|0)==(0|0);\n     if ($cond) {\n      $133 = 1 << $129;\n      $134 = $133 ^ -1;\n      $135 = HEAP32[(31376)>>2]|0;\n      $136 = $135 & $134;\n      HEAP32[(31376)>>2] = $136;\n      break;\n     }\n    } else {\n     $137 = HEAP32[(31388)>>2]|0;\n     $138 = ($101>>>0)<($137>>>0);\n     if ($138) {\n      _abort();\n      // unreachable;\n     }\n     $139 = ((($101)) + 16|0);\n     $140 = HEAP32[$139>>2]|0;\n     $141 = ($140|0)==($5|0);\n     if ($141) {\n      HEAP32[$139>>2] = $$3;\n     } else {\n      $142 = ((($101)) + 20|0);\n      HEAP32[$142>>2] = $$3;\n     }\n     $143 = ($$3|0)==(0|0);\n     if ($143) {\n      break;\n     }\n    }\n    $144 = HEAP32[(31388)>>2]|0;\n    $145 = ($$3>>>0)<($144>>>0);\n    if ($145) {\n     _abort();\n     // unreachable;\n    }\n    $146 = ((($$3)) + 24|0);\n    HEAP32[$146>>2] = $101;\n    $147 = ((($5)) + 16|0);\n    $148 = HEAP32[$147>>2]|0;\n    $149 = ($148|0)==(0|0);\n    do {\n     if (!($149)) {\n      $150 = ($148>>>0)<($144>>>0);\n      if ($150) {\n       _abort();\n       // unreachable;\n      } else {\n       $151 = ((($$3)) + 16|0);\n       HEAP32[$151>>2] = $148;\n       $152 = ((($148)) + 24|0);\n       HEAP32[$152>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $153 = ((($147)) + 4|0);\n    $154 = HEAP32[$153>>2]|0;\n    $155 = ($154|0)==(0|0);\n    if (!($155)) {\n     $156 = HEAP32[(31388)>>2]|0;\n     $157 = ($154>>>0)<($156>>>0);\n     if ($157) {\n      _abort();\n      // unreachable;\n     } else {\n      $158 = ((($$3)) + 20|0);\n      HEAP32[$158>>2] = $154;\n      $159 = ((($154)) + 24|0);\n      HEAP32[$159>>2] = $$3;\n      break;\n     }\n    }\n   }\n  }\n } while(0);\n $160 = ($75>>>0)<(16);\n if ($160) {\n  $161 = $3 & 1;\n  $162 = $73 | $161;\n  $163 = $162 | 2;\n  HEAP32[$2>>2] = $163;\n  $164 = (($0) + ($73)|0);\n  $165 = ((($164)) + 4|0);\n  $166 = HEAP32[$165>>2]|0;\n  $167 = $166 | 1;\n  HEAP32[$165>>2] = $167;\n  $$2 = $0;\n  return ($$2|0);\n } else {\n  $168 = (($0) + ($1)|0);\n  $169 = $3 & 1;\n  $170 = $169 | $1;\n  $171 = $170 | 2;\n  HEAP32[$2>>2] = $171;\n  $172 = ((($168)) + 4|0);\n  $173 = $75 | 3;\n  HEAP32[$172>>2] = $173;\n  $174 = (($168) + ($75)|0);\n  $175 = ((($174)) + 4|0);\n  $176 = HEAP32[$175>>2]|0;\n  $177 = $176 | 1;\n  HEAP32[$175>>2] = $177;\n  _dispose_chunk($168,$75);\n  $$2 = $0;\n  return ($$2|0);\n }\n return (0)|0;\n}\nfunction _dispose_chunk($0,$1) {\n $0 = $0|0;\n $1 = $1|0;\n var $$0417 = 0, $$0418 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1427 = 0, $$1431 = 0, $$1435 = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $$pre21 = 0, $$pre23 = 0, $10 = 0;\n var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;\n var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;\n var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;\n var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;\n var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;\n var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;\n var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;\n var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;\n var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;\n var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;\n var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;\n var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;\n var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;\n var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;\n var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;\n var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond16 = 0, $not$ = 0, label = 0, sp = 0;\n sp = STACKTOP;\n $2 = (($0) + ($1)|0);\n $3 = ((($0)) + 4|0);\n $4 = HEAP32[$3>>2]|0;\n $5 = $4 & 1;\n $6 = ($5|0)==(0);\n do {\n  if ($6) {\n   $7 = HEAP32[$0>>2]|0;\n   $8 = $4 & 3;\n   $9 = ($8|0)==(0);\n   if ($9) {\n    return;\n   }\n   $10 = (0 - ($7))|0;\n   $11 = (($0) + ($10)|0);\n   $12 = (($7) + ($1))|0;\n   $13 = HEAP32[(31388)>>2]|0;\n   $14 = ($11>>>0)<($13>>>0);\n   if ($14) {\n    _abort();\n    // unreachable;\n   }\n   $15 = HEAP32[(31392)>>2]|0;\n   $16 = ($11|0)==($15|0);\n   if ($16) {\n    $101 = ((($2)) + 4|0);\n    $102 = HEAP32[$101>>2]|0;\n    $103 = $102 & 3;\n    $104 = ($103|0)==(3);\n    if (!($104)) {\n     $$1 = $11;$$1416 = $12;\n     break;\n    }\n    HEAP32[(31380)>>2] = $12;\n    $105 = $102 & -2;\n    HEAP32[$101>>2] = $105;\n    $106 = $12 | 1;\n    $107 = ((($11)) + 4|0);\n    HEAP32[$107>>2] = $106;\n    $108 = (($11) + ($12)|0);\n    HEAP32[$108>>2] = $12;\n    return;\n   }\n   $17 = $7 >>> 3;\n   $18 = ($7>>>0)<(256);\n   if ($18) {\n    $19 = ((($11)) + 8|0);\n    $20 = HEAP32[$19>>2]|0;\n    $21 = ((($11)) + 12|0);\n    $22 = HEAP32[$21>>2]|0;\n    $23 = $17 << 1;\n    $24 = (31412 + ($23<<2)|0);\n    $25 = ($20|0)==($24|0);\n    if (!($25)) {\n     $26 = ($20>>>0)<($13>>>0);\n     if ($26) {\n      _abort();\n      // unreachable;\n     }\n     $27 = ((($20)) + 12|0);\n     $28 = HEAP32[$27>>2]|0;\n     $29 = ($28|0)==($11|0);\n     if (!($29)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $30 = ($22|0)==($20|0);\n    if ($30) {\n     $31 = 1 << $17;\n     $32 = $31 ^ -1;\n     $33 = HEAP32[7843]|0;\n     $34 = $33 & $32;\n     HEAP32[7843] = $34;\n     $$1 = $11;$$1416 = $12;\n     break;\n    }\n    $35 = ($22|0)==($24|0);\n    if ($35) {\n     $$pre23 = ((($22)) + 8|0);\n     $$pre$phi24Z2D = $$pre23;\n    } else {\n     $36 = ($22>>>0)<($13>>>0);\n     if ($36) {\n      _abort();\n      // unreachable;\n     }\n     $37 = ((($22)) + 8|0);\n     $38 = HEAP32[$37>>2]|0;\n     $39 = ($38|0)==($11|0);\n     if ($39) {\n      $$pre$phi24Z2D = $37;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $40 = ((($20)) + 12|0);\n    HEAP32[$40>>2] = $22;\n    HEAP32[$$pre$phi24Z2D>>2] = $20;\n    $$1 = $11;$$1416 = $12;\n    break;\n   }\n   $41 = ((($11)) + 24|0);\n   $42 = HEAP32[$41>>2]|0;\n   $43 = ((($11)) + 12|0);\n   $44 = HEAP32[$43>>2]|0;\n   $45 = ($44|0)==($11|0);\n   do {\n    if ($45) {\n     $55 = ((($11)) + 16|0);\n     $56 = ((($55)) + 4|0);\n     $57 = HEAP32[$56>>2]|0;\n     $58 = ($57|0)==(0|0);\n     if ($58) {\n      $59 = HEAP32[$55>>2]|0;\n      $60 = ($59|0)==(0|0);\n      if ($60) {\n       $$3 = 0;\n       break;\n      } else {\n       $$1424 = $59;$$1427 = $55;\n      }\n     } else {\n      $$1424 = $57;$$1427 = $56;\n     }\n     while(1) {\n      $61 = ((($$1424)) + 20|0);\n      $62 = HEAP32[$61>>2]|0;\n      $63 = ($62|0)==(0|0);\n      if (!($63)) {\n       $$1424 = $62;$$1427 = $61;\n       continue;\n      }\n      $64 = ((($$1424)) + 16|0);\n      $65 = HEAP32[$64>>2]|0;\n      $66 = ($65|0)==(0|0);\n      if ($66) {\n       break;\n      } else {\n       $$1424 = $65;$$1427 = $64;\n      }\n     }\n     $67 = ($$1427>>>0)<($13>>>0);\n     if ($67) {\n      _abort();\n      // unreachable;\n     } else {\n      HEAP32[$$1427>>2] = 0;\n      $$3 = $$1424;\n      break;\n     }\n    } else {\n     $46 = ((($11)) + 8|0);\n     $47 = HEAP32[$46>>2]|0;\n     $48 = ($47>>>0)<($13>>>0);\n     if ($48) {\n      _abort();\n      // unreachable;\n     }\n     $49 = ((($47)) + 12|0);\n     $50 = HEAP32[$49>>2]|0;\n     $51 = ($50|0)==($11|0);\n     if (!($51)) {\n      _abort();\n      // unreachable;\n     }\n     $52 = ((($44)) + 8|0);\n     $53 = HEAP32[$52>>2]|0;\n     $54 = ($53|0)==($11|0);\n     if ($54) {\n      HEAP32[$49>>2] = $44;\n      HEAP32[$52>>2] = $47;\n      $$3 = $44;\n      break;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n   } while(0);\n   $68 = ($42|0)==(0|0);\n   if ($68) {\n    $$1 = $11;$$1416 = $12;\n   } else {\n    $69 = ((($11)) + 28|0);\n    $70 = HEAP32[$69>>2]|0;\n    $71 = (31676 + ($70<<2)|0);\n    $72 = HEAP32[$71>>2]|0;\n    $73 = ($11|0)==($72|0);\n    if ($73) {\n     HEAP32[$71>>2] = $$3;\n     $cond = ($$3|0)==(0|0);\n     if ($cond) {\n      $74 = 1 << $70;\n      $75 = $74 ^ -1;\n      $76 = HEAP32[(31376)>>2]|0;\n      $77 = $76 & $75;\n      HEAP32[(31376)>>2] = $77;\n      $$1 = $11;$$1416 = $12;\n      break;\n     }\n    } else {\n     $78 = HEAP32[(31388)>>2]|0;\n     $79 = ($42>>>0)<($78>>>0);\n     if ($79) {\n      _abort();\n      // unreachable;\n     }\n     $80 = ((($42)) + 16|0);\n     $81 = HEAP32[$80>>2]|0;\n     $82 = ($81|0)==($11|0);\n     if ($82) {\n      HEAP32[$80>>2] = $$3;\n     } else {\n      $83 = ((($42)) + 20|0);\n      HEAP32[$83>>2] = $$3;\n     }\n     $84 = ($$3|0)==(0|0);\n     if ($84) {\n      $$1 = $11;$$1416 = $12;\n      break;\n     }\n    }\n    $85 = HEAP32[(31388)>>2]|0;\n    $86 = ($$3>>>0)<($85>>>0);\n    if ($86) {\n     _abort();\n     // unreachable;\n    }\n    $87 = ((($$3)) + 24|0);\n    HEAP32[$87>>2] = $42;\n    $88 = ((($11)) + 16|0);\n    $89 = HEAP32[$88>>2]|0;\n    $90 = ($89|0)==(0|0);\n    do {\n     if (!($90)) {\n      $91 = ($89>>>0)<($85>>>0);\n      if ($91) {\n       _abort();\n       // unreachable;\n      } else {\n       $92 = ((($$3)) + 16|0);\n       HEAP32[$92>>2] = $89;\n       $93 = ((($89)) + 24|0);\n       HEAP32[$93>>2] = $$3;\n       break;\n      }\n     }\n    } while(0);\n    $94 = ((($88)) + 4|0);\n    $95 = HEAP32[$94>>2]|0;\n    $96 = ($95|0)==(0|0);\n    if ($96) {\n     $$1 = $11;$$1416 = $12;\n    } else {\n     $97 = HEAP32[(31388)>>2]|0;\n     $98 = ($95>>>0)<($97>>>0);\n     if ($98) {\n      _abort();\n      // unreachable;\n     } else {\n      $99 = ((($$3)) + 20|0);\n      HEAP32[$99>>2] = $95;\n      $100 = ((($95)) + 24|0);\n      HEAP32[$100>>2] = $$3;\n      $$1 = $11;$$1416 = $12;\n      break;\n     }\n    }\n   }\n  } else {\n   $$1 = $0;$$1416 = $1;\n  }\n } while(0);\n $109 = HEAP32[(31388)>>2]|0;\n $110 = ($2>>>0)<($109>>>0);\n if ($110) {\n  _abort();\n  // unreachable;\n }\n $111 = ((($2)) + 4|0);\n $112 = HEAP32[$111>>2]|0;\n $113 = $112 & 2;\n $114 = ($113|0)==(0);\n if ($114) {\n  $115 = HEAP32[(31396)>>2]|0;\n  $116 = ($2|0)==($115|0);\n  if ($116) {\n   $117 = HEAP32[(31384)>>2]|0;\n   $118 = (($117) + ($$1416))|0;\n   HEAP32[(31384)>>2] = $118;\n   HEAP32[(31396)>>2] = $$1;\n   $119 = $118 | 1;\n   $120 = ((($$1)) + 4|0);\n   HEAP32[$120>>2] = $119;\n   $121 = HEAP32[(31392)>>2]|0;\n   $122 = ($$1|0)==($121|0);\n   if (!($122)) {\n    return;\n   }\n   HEAP32[(31392)>>2] = 0;\n   HEAP32[(31380)>>2] = 0;\n   return;\n  }\n  $123 = HEAP32[(31392)>>2]|0;\n  $124 = ($2|0)==($123|0);\n  if ($124) {\n   $125 = HEAP32[(31380)>>2]|0;\n   $126 = (($125) + ($$1416))|0;\n   HEAP32[(31380)>>2] = $126;\n   HEAP32[(31392)>>2] = $$1;\n   $127 = $126 | 1;\n   $128 = ((($$1)) + 4|0);\n   HEAP32[$128>>2] = $127;\n   $129 = (($$1) + ($126)|0);\n   HEAP32[$129>>2] = $126;\n   return;\n  }\n  $130 = $112 & -8;\n  $131 = (($130) + ($$1416))|0;\n  $132 = $112 >>> 3;\n  $133 = ($112>>>0)<(256);\n  do {\n   if ($133) {\n    $134 = ((($2)) + 8|0);\n    $135 = HEAP32[$134>>2]|0;\n    $136 = ((($2)) + 12|0);\n    $137 = HEAP32[$136>>2]|0;\n    $138 = $132 << 1;\n    $139 = (31412 + ($138<<2)|0);\n    $140 = ($135|0)==($139|0);\n    if (!($140)) {\n     $141 = ($135>>>0)<($109>>>0);\n     if ($141) {\n      _abort();\n      // unreachable;\n     }\n     $142 = ((($135)) + 12|0);\n     $143 = HEAP32[$142>>2]|0;\n     $144 = ($143|0)==($2|0);\n     if (!($144)) {\n      _abort();\n      // unreachable;\n     }\n    }\n    $145 = ($137|0)==($135|0);\n    if ($145) {\n     $146 = 1 << $132;\n     $147 = $146 ^ -1;\n     $148 = HEAP32[7843]|0;\n     $149 = $148 & $147;\n     HEAP32[7843] = $149;\n     break;\n    }\n    $150 = ($137|0)==($139|0);\n    if ($150) {\n     $$pre21 = ((($137)) + 8|0);\n     $$pre$phi22Z2D = $$pre21;\n    } else {\n     $151 = ($137>>>0)<($109>>>0);\n     if ($151) {\n      _abort();\n      // unreachable;\n     }\n     $152 = ((($137)) + 8|0);\n     $153 = HEAP32[$152>>2]|0;\n     $154 = ($153|0)==($2|0);\n     if ($154) {\n      $$pre$phi22Z2D = $152;\n     } else {\n      _abort();\n      // unreachable;\n     }\n    }\n    $155 = ((($135)) + 12|0);\n    HEAP32[$155>>2] = $137;\n    HEAP32[$$pre$phi22Z2D>>2] = $135;\n   } else {\n    $156 = ((($2)) + 24|0);\n    $157 = HEAP32[$156>>2]|0;\n    $158 = ((($2)) + 12|0);\n    $159 = HEAP32[$158>>2]|0;\n    $160 = ($159|0)==($2|0);\n    do {\n     if ($160) {\n      $170 = ((($2)) + 16|0);\n      $171 = ((($170)) + 4|0);\n      $172 = HEAP32[$171>>2]|0;\n      $173 = ($172|0)==(0|0);\n      if ($173) {\n       $174 = HEAP32[$170>>2]|0;\n       $175 = ($174|0)==(0|0);\n       if ($175) {\n        $$3433 = 0;\n        break;\n       } else {\n        $$1431 = $174;$$1435 = $170;\n       }\n      } else {\n       $$1431 = $172;$$1435 = $171;\n      }\n      while(1) {\n       $176 = ((($$1431)) + 20|0);\n       $177 = HEAP32[$176>>2]|0;\n       $178 = ($177|0)==(0|0);\n       if (!($178)) {\n        $$1431 = $177;$$1435 = $176;\n        continue;\n       }\n       $179 = ((($$1431)) + 16|0);\n       $180 = HEAP32[$179>>2]|0;\n       $181 = ($180|0)==(0|0);\n       if ($181) {\n        break;\n       } else {\n        $$1431 = $180;$$1435 = $179;\n       }\n      }\n      $182 = ($$1435>>>0)<($109>>>0);\n      if ($182) {\n       _abort();\n       // unreachable;\n      } else {\n       HEAP32[$$1435>>2] = 0;\n       $$3433 = $$1431;\n       break;\n      }\n     } else {\n      $161 = ((($2)) + 8|0);\n      $162 = HEAP32[$161>>2]|0;\n      $163 = ($162>>>0)<($109>>>0);\n      if ($163) {\n       _abort();\n       // unreachable;\n      }\n      $164 = ((($162)) + 12|0);\n      $165 = HEAP32[$164>>2]|0;\n      $166 = ($165|0)==($2|0);\n      if (!($166)) {\n       _abort();\n       // unreachable;\n      }\n      $167 = ((($159)) + 8|0);\n      $168 = HEAP32[$167>>2]|0;\n      $169 = ($168|0)==($2|0);\n      if ($169) {\n       HEAP32[$164>>2] = $159;\n       HEAP32[$167>>2] = $162;\n       $$3433 = $159;\n       break;\n      } else {\n       _abort();\n       // unreachable;\n      }\n     }\n    } while(0);\n    $183 = ($157|0)==(0|0);\n    if (!($183)) {\n     $184 = ((($2)) + 28|0);\n     $185 = HEAP32[$184>>2]|0;\n     $186 = (31676 + ($185<<2)|0);\n     $187 = HEAP32[$186>>2]|0;\n     $188 = ($2|0)==($187|0);\n     if ($188) {\n      HEAP32[$186>>2] = $$3433;\n      $cond16 = ($$3433|0)==(0|0);\n      if ($cond16) {\n       $189 = 1 << $185;\n       $190 = $189 ^ -1;\n       $191 = HEAP32[(31376)>>2]|0;\n       $192 = $191 & $190;\n       HEAP32[(31376)>>2] = $192;\n       break;\n      }\n     } else {\n      $193 = HEAP32[(31388)>>2]|0;\n      $194 = ($157>>>0)<($193>>>0);\n      if ($194) {\n       _abort();\n       // unreachable;\n      }\n      $195 = ((($157)) + 16|0);\n      $196 = HEAP32[$195>>2]|0;\n      $197 = ($196|0)==($2|0);\n      if ($197) {\n       HEAP32[$195>>2] = $$3433;\n      } else {\n       $198 = ((($157)) + 20|0);\n       HEAP32[$198>>2] = $$3433;\n      }\n      $199 = ($$3433|0)==(0|0);\n      if ($199) {\n       break;\n      }\n     }\n     $200 = HEAP32[(31388)>>2]|0;\n     $201 = ($$3433>>>0)<($200>>>0);\n     if ($201) {\n      _abort();\n      // unreachable;\n     }\n     $202 = ((($$3433)) + 24|0);\n     HEAP32[$202>>2] = $157;\n     $203 = ((($2)) + 16|0);\n     $204 = HEAP32[$203>>2]|0;\n     $205 = ($204|0)==(0|0);\n     do {\n      if (!($205)) {\n       $206 = ($204>>>0)<($200>>>0);\n       if ($206) {\n        _abort();\n        // unreachable;\n       } else {\n        $207 = ((($$3433)) + 16|0);\n        HEAP32[$207>>2] = $204;\n        $208 = ((($204)) + 24|0);\n        HEAP32[$208>>2] = $$3433;\n        break;\n       }\n      }\n     } while(0);\n     $209 = ((($203)) + 4|0);\n     $210 = HEAP32[$209>>2]|0;\n     $211 = ($210|0)==(0|0);\n     if (!($211)) {\n      $212 = HEAP32[(31388)>>2]|0;\n      $213 = ($210>>>0)<($212>>>0);\n      if ($213) {\n       _abort();\n       // unreachable;\n      } else {\n       $214 = ((($$3433)) + 20|0);\n       HEAP32[$214>>2] = $210;\n       $215 = ((($210)) + 24|0);\n       HEAP32[$215>>2] = $$3433;\n       break;\n      }\n     }\n    }\n   }\n  } while(0);\n  $216 = $131 | 1;\n  $217 = ((($$1)) + 4|0);\n  HEAP32[$217>>2] = $216;\n  $218 = (($$1) + ($131)|0);\n  HEAP32[$218>>2] = $131;\n  $219 = HEAP32[(31392)>>2]|0;\n  $220 = ($$1|0)==($219|0);\n  if ($220) {\n   HEAP32[(31380)>>2] = $131;\n   return;\n  } else {\n   $$2 = $131;\n  }\n } else {\n  $221 = $112 & -2;\n  HEAP32[$111>>2] = $221;\n  $222 = $$1416 | 1;\n  $223 = ((($$1)) + 4|0);\n  HEAP32[$223>>2] = $222;\n  $224 = (($$1) + ($$1416)|0);\n  HEAP32[$224>>2] = $$1416;\n  $$2 = $$1416;\n }\n $225 = $$2 >>> 3;\n $226 = ($$2>>>0)<(256);\n if ($226) {\n  $227 = $225 << 1;\n  $228 = (31412 + ($227<<2)|0);\n  $229 = HEAP32[7843]|0;\n  $230 = 1 << $225;\n  $231 = $229 & $230;\n  $232 = ($231|0)==(0);\n  if ($232) {\n   $233 = $229 | $230;\n   HEAP32[7843] = $233;\n   $$pre = ((($228)) + 8|0);\n   $$0436 = $228;$$pre$phiZ2D = $$pre;\n  } else {\n   $234 = ((($228)) + 8|0);\n   $235 = HEAP32[$234>>2]|0;\n   $236 = HEAP32[(31388)>>2]|0;\n   $237 = ($235>>>0)<($236>>>0);\n   if ($237) {\n    _abort();\n    // unreachable;\n   } else {\n    $$0436 = $235;$$pre$phiZ2D = $234;\n   }\n  }\n  HEAP32[$$pre$phiZ2D>>2] = $$1;\n  $238 = ((($$0436)) + 12|0);\n  HEAP32[$238>>2] = $$1;\n  $239 = ((($$1)) + 8|0);\n  HEAP32[$239>>2] = $$0436;\n  $240 = ((($$1)) + 12|0);\n  HEAP32[$240>>2] = $228;\n  return;\n }\n $241 = $$2 >>> 8;\n $242 = ($241|0)==(0);\n if ($242) {\n  $$0429 = 0;\n } else {\n  $243 = ($$2>>>0)>(16777215);\n  if ($243) {\n   $$0429 = 31;\n  } else {\n   $244 = (($241) + 1048320)|0;\n   $245 = $244 >>> 16;\n   $246 = $245 & 8;\n   $247 = $241 << $246;\n   $248 = (($247) + 520192)|0;\n   $249 = $248 >>> 16;\n   $250 = $249 & 4;\n   $251 = $250 | $246;\n   $252 = $247 << $250;\n   $253 = (($252) + 245760)|0;\n   $254 = $253 >>> 16;\n   $255 = $254 & 2;\n   $256 = $251 | $255;\n   $257 = (14 - ($256))|0;\n   $258 = $252 << $255;\n   $259 = $258 >>> 15;\n   $260 = (($257) + ($259))|0;\n   $261 = $260 << 1;\n   $262 = (($260) + 7)|0;\n   $263 = $$2 >>> $262;\n   $264 = $263 & 1;\n   $265 = $264 | $261;\n   $$0429 = $265;\n  }\n }\n $266 = (31676 + ($$0429<<2)|0);\n $267 = ((($$1)) + 28|0);\n HEAP32[$267>>2] = $$0429;\n $268 = ((($$1)) + 16|0);\n $269 = ((($$1)) + 20|0);\n HEAP32[$269>>2] = 0;\n HEAP32[$268>>2] = 0;\n $270 = HEAP32[(31376)>>2]|0;\n $271 = 1 << $$0429;\n $272 = $270 & $271;\n $273 = ($272|0)==(0);\n if ($273) {\n  $274 = $270 | $271;\n  HEAP32[(31376)>>2] = $274;\n  HEAP32[$266>>2] = $$1;\n  $275 = ((($$1)) + 24|0);\n  HEAP32[$275>>2] = $266;\n  $276 = ((($$1)) + 12|0);\n  HEAP32[$276>>2] = $$1;\n  $277 = ((($$1)) + 8|0);\n  HEAP32[$277>>2] = $$1;\n  return;\n }\n $278 = HEAP32[$266>>2]|0;\n $279 = ($$0429|0)==(31);\n $280 = $$0429 >>> 1;\n $281 = (25 - ($280))|0;\n $282 = $279 ? 0 : $281;\n $283 = $$2 << $282;\n $$0417 = $283;$$0418 = $278;\n while(1) {\n  $284 = ((($$0418)) + 4|0);\n  $285 = HEAP32[$284>>2]|0;\n  $286 = $285 & -8;\n  $287 = ($286|0)==($$2|0);\n  if ($287) {\n   label = 127;\n   break;\n  }\n  $288 = $$0417 >>> 31;\n  $289 = (((($$0418)) + 16|0) + ($288<<2)|0);\n  $290 = $$0417 << 1;\n  $291 = HEAP32[$289>>2]|0;\n  $292 = ($291|0)==(0|0);\n  if ($292) {\n   label = 124;\n   break;\n  } else {\n   $$0417 = $290;$$0418 = $291;\n  }\n }\n if ((label|0) == 124) {\n  $293 = HEAP32[(31388)>>2]|0;\n  $294 = ($289>>>0)<($293>>>0);\n  if ($294) {\n   _abort();\n   // unreachable;\n  }\n  HEAP32[$289>>2] = $$1;\n  $295 = ((($$1)) + 24|0);\n  HEAP32[$295>>2] = $$0418;\n  $296 = ((($$1)) + 12|0);\n  HEAP32[$296>>2] = $$1;\n  $297 = ((($$1)) + 8|0);\n  HEAP32[$297>>2] = $$1;\n  return;\n }\n else if ((label|0) == 127) {\n  $298 = ((($$0418)) + 8|0);\n  $299 = HEAP32[$298>>2]|0;\n  $300 = HEAP32[(31388)>>2]|0;\n  $301 = ($299>>>0)>=($300>>>0);\n  $not$ = ($$0418>>>0)>=($300>>>0);\n  $302 = $301 & $not$;\n  if (!($302)) {\n   _abort();\n   // unreachable;\n  }\n  $303 = ((($299)) + 12|0);\n  HEAP32[$303>>2] = $$1;\n  HEAP32[$298>>2] = $$1;\n  $304 = ((($$1)) + 8|0);\n  HEAP32[$304>>2] = $299;\n  $305 = ((($$1)) + 12|0);\n  HEAP32[$305>>2] = $$0418;\n  $306 = ((($$1)) + 24|0);\n  HEAP32[$306>>2] = 0;\n  return;\n }\n}\nfunction runPostSets() {\n}\nfunction _i64Subtract(a, b, c, d) {\n    a = a|0; b = b|0; c = c|0; d = d|0;\n    var l = 0, h = 0;\n    l = (a - c)>>>0;\n    h = (b - d)>>>0;\n    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.\n    return ((tempRet0 = h,l|0)|0);\n}\nfunction _i64Add(a, b, c, d) {\n    /*\n      x = a + b*2^32\n      y = c + d*2^32\n      result = l + h*2^32\n    */\n    a = a|0; b = b|0; c = c|0; d = d|0;\n    var l = 0, h = 0;\n    l = (a + c)>>>0;\n    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.\n    return ((tempRet0 = h,l|0)|0);\n}\nfunction _memset(ptr, value, num) {\n    ptr = ptr|0; value = value|0; num = num|0;\n    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;\n    stop = (ptr + num)|0;\n    if ((num|0) >= 20) {\n      // This is unaligned, but quite large, so work hard to get to aligned settings\n      value = value & 0xff;\n      unaligned = ptr & 3;\n      value4 = value | (value << 8) | (value << 16) | (value << 24);\n      stop4 = stop & ~3;\n      if (unaligned) {\n        unaligned = (ptr + 4 - unaligned)|0;\n        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num\n          HEAP8[((ptr)>>0)]=value;\n          ptr = (ptr+1)|0;\n        }\n      }\n      while ((ptr|0) < (stop4|0)) {\n        HEAP32[((ptr)>>2)]=value4;\n        ptr = (ptr+4)|0;\n      }\n    }\n    while ((ptr|0) < (stop|0)) {\n      HEAP8[((ptr)>>0)]=value;\n      ptr = (ptr+1)|0;\n    }\n    return (ptr-num)|0;\n}\nfunction _bitshift64Shl(low, high, bits) {\n    low = low|0; high = high|0; bits = bits|0;\n    var ander = 0;\n    if ((bits|0) < 32) {\n      ander = ((1 << bits) - 1)|0;\n      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));\n      return low << bits;\n    }\n    tempRet0 = low << (bits - 32);\n    return 0;\n}\nfunction _memcpy(dest, src, num) {\n    dest = dest|0; src = src|0; num = num|0;\n    var ret = 0;\n    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;\n    ret = dest|0;\n    if ((dest&3) == (src&3)) {\n      while (dest & 3) {\n        if ((num|0) == 0) return ret|0;\n        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n        dest = (dest+1)|0;\n        src = (src+1)|0;\n        num = (num-1)|0;\n      }\n      while ((num|0) >= 4) {\n        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);\n        dest = (dest+4)|0;\n        src = (src+4)|0;\n        num = (num-4)|0;\n      }\n    }\n    while ((num|0) > 0) {\n      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n      dest = (dest+1)|0;\n      src = (src+1)|0;\n      num = (num-1)|0;\n    }\n    return ret|0;\n}\nfunction _saveSetjmp(env, label, table, size) {\n    // Not particularly fast: slow table lookup of setjmpId to label. But setjmp\n    // prevents relooping anyhow, so slowness is to be expected. And typical case\n    // is 1 setjmp per invocation, or less.\n    env = env|0;\n    label = label|0;\n    table = table|0;\n    size = size|0;\n    var i = 0;\n    setjmpId = (setjmpId+1)|0;\n    HEAP32[((env)>>2)]=setjmpId;\n    while ((i|0) < (size|0)) {\n      if (((HEAP32[(((table)+((i<<3)))>>2)])|0) == 0) {\n        HEAP32[(((table)+((i<<3)))>>2)]=setjmpId;\n        HEAP32[(((table)+((i<<3)+4))>>2)]=label;\n        // prepare next slot\n        HEAP32[(((table)+((i<<3)+8))>>2)]=0;\n        tempRet0 = size;\n        return table | 0;\n      }\n      i = i+1|0;\n    }\n    // grow the table\n    size = (size*2)|0;\n    table = _realloc(table|0, 8*(size+1|0)|0) | 0;\n    table = _saveSetjmp(env|0, label|0, table|0, size|0) | 0;\n    tempRet0 = size;\n    return table | 0;\n}\nfunction _memmove(dest, src, num) {\n    dest = dest|0; src = src|0; num = num|0;\n    var ret = 0;\n    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {\n      // Unlikely case: Copy backwards in a safe manner\n      ret = dest;\n      src = (src + num)|0;\n      dest = (dest + num)|0;\n      while ((num|0) > 0) {\n        dest = (dest - 1)|0;\n        src = (src - 1)|0;\n        num = (num - 1)|0;\n        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);\n      }\n      dest = ret;\n    } else {\n      _memcpy(dest, src, num) | 0;\n    }\n    return dest | 0;\n}\nfunction _bitshift64Lshr(low, high, bits) {\n    low = low|0; high = high|0; bits = bits|0;\n    var ander = 0;\n    if ((bits|0) < 32) {\n      ander = ((1 << bits) - 1)|0;\n      tempRet0 = high >>> bits;\n      return (low >>> bits) | ((high&ander) << (32 - bits));\n    }\n    tempRet0 = 0;\n    return (high >>> (bits - 32))|0;\n}\nfunction _testSetjmp(id, table, size) {\n    id = id|0;\n    table = table|0;\n    size = size|0;\n    var i = 0, curr = 0;\n    while ((i|0) < (size|0)) {\n      curr = ((HEAP32[(((table)+((i<<3)))>>2)])|0);\n      if ((curr|0) == 0) break;\n      if ((curr|0) == (id|0)) {\n        return ((HEAP32[(((table)+((i<<3)+4))>>2)])|0);\n      }\n      i = i+1|0;\n    }\n    return 0;\n}\nfunction _llvm_cttz_i32(x) {\n    x = x|0;\n    var ret = 0;\n    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);\n    if ((ret|0) < 8) return ret|0;\n    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);\n    if ((ret|0) < 8) return (ret + 8)|0;\n    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);\n    if ((ret|0) < 8) return (ret + 16)|0;\n    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;\n}\nfunction ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {\n    $a$0 = $a$0 | 0;\n    $a$1 = $a$1 | 0;\n    $b$0 = $b$0 | 0;\n    $b$1 = $b$1 | 0;\n    $rem = $rem | 0;\n    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;\n    $n_sroa_0_0_extract_trunc = $a$0;\n    $n_sroa_1_4_extract_shift$0 = $a$1;\n    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;\n    $d_sroa_0_0_extract_trunc = $b$0;\n    $d_sroa_1_4_extract_shift$0 = $b$1;\n    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;\n    if (($n_sroa_1_4_extract_trunc | 0) == 0) {\n      $4 = ($rem | 0) != 0;\n      if (($d_sroa_1_4_extract_trunc | 0) == 0) {\n        if ($4) {\n          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);\n          HEAP32[$rem + 4 >> 2] = 0;\n        }\n        $_0$1 = 0;\n        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;\n        return (tempRet0 = $_0$1, $_0$0) | 0;\n      } else {\n        if (!$4) {\n          $_0$1 = 0;\n          $_0$0 = 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        HEAP32[$rem >> 2] = $a$0 & -1;\n        HEAP32[$rem + 4 >> 2] = $a$1 & 0;\n        $_0$1 = 0;\n        $_0$0 = 0;\n        return (tempRet0 = $_0$1, $_0$0) | 0;\n      }\n    }\n    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;\n    do {\n      if (($d_sroa_0_0_extract_trunc | 0) == 0) {\n        if ($17) {\n          if (($rem | 0) != 0) {\n            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);\n            HEAP32[$rem + 4 >> 2] = 0;\n          }\n          $_0$1 = 0;\n          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        if (($n_sroa_0_0_extract_trunc | 0) == 0) {\n          if (($rem | 0) != 0) {\n            HEAP32[$rem >> 2] = 0;\n            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);\n          }\n          $_0$1 = 0;\n          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;\n        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {\n          if (($rem | 0) != 0) {\n            HEAP32[$rem >> 2] = 0 | $a$0 & -1;\n            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;\n          }\n          $_0$1 = 0;\n          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;\n        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;\n        if ($51 >>> 0 <= 30) {\n          $57 = $51 + 1 | 0;\n          $58 = 31 - $51 | 0;\n          $sr_1_ph = $57;\n          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);\n          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);\n          $q_sroa_0_1_ph = 0;\n          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;\n          break;\n        }\n        if (($rem | 0) == 0) {\n          $_0$1 = 0;\n          $_0$0 = 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        HEAP32[$rem >> 2] = 0 | $a$0 & -1;\n        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;\n        $_0$1 = 0;\n        $_0$0 = 0;\n        return (tempRet0 = $_0$1, $_0$0) | 0;\n      } else {\n        if (!$17) {\n          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;\n          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;\n          if ($119 >>> 0 <= 31) {\n            $125 = $119 + 1 | 0;\n            $126 = 31 - $119 | 0;\n            $130 = $119 - 31 >> 31;\n            $sr_1_ph = $125;\n            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;\n            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;\n            $q_sroa_0_1_ph = 0;\n            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;\n            break;\n          }\n          if (($rem | 0) == 0) {\n            $_0$1 = 0;\n            $_0$0 = 0;\n            return (tempRet0 = $_0$1, $_0$0) | 0;\n          }\n          HEAP32[$rem >> 2] = 0 | $a$0 & -1;\n          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;\n          $_0$1 = 0;\n          $_0$0 = 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;\n        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {\n          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;\n          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;\n          $89 = 64 - $88 | 0;\n          $91 = 32 - $88 | 0;\n          $92 = $91 >> 31;\n          $95 = $88 - 32 | 0;\n          $105 = $95 >> 31;\n          $sr_1_ph = $88;\n          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;\n          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);\n          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;\n          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;\n          break;\n        }\n        if (($rem | 0) != 0) {\n          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;\n          HEAP32[$rem + 4 >> 2] = 0;\n        }\n        if (($d_sroa_0_0_extract_trunc | 0) == 1) {\n          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;\n          $_0$0 = 0 | $a$0 & -1;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        } else {\n          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;\n          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);\n          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;\n          return (tempRet0 = $_0$1, $_0$0) | 0;\n        }\n      }\n    } while (0);\n    if (($sr_1_ph | 0) == 0) {\n      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;\n      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;\n      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;\n      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;\n      $carry_0_lcssa$1 = 0;\n      $carry_0_lcssa$0 = 0;\n    } else {\n      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;\n      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;\n      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;\n      $137$1 = tempRet0;\n      $q_sroa_1_1198 = $q_sroa_1_1_ph;\n      $q_sroa_0_1199 = $q_sroa_0_1_ph;\n      $r_sroa_1_1200 = $r_sroa_1_1_ph;\n      $r_sroa_0_1201 = $r_sroa_0_1_ph;\n      $sr_1202 = $sr_1_ph;\n      $carry_0203 = 0;\n      while (1) {\n        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;\n        $149 = $carry_0203 | $q_sroa_0_1199 << 1;\n        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);\n        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;\n        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;\n        $150$1 = tempRet0;\n        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;\n        $152 = $151$0 & 1;\n        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;\n        $r_sroa_0_0_extract_trunc = $154$0;\n        $r_sroa_1_4_extract_trunc = tempRet0;\n        $155 = $sr_1202 - 1 | 0;\n        if (($155 | 0) == 0) {\n          break;\n        } else {\n          $q_sroa_1_1198 = $147;\n          $q_sroa_0_1199 = $149;\n          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;\n          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;\n          $sr_1202 = $155;\n          $carry_0203 = $152;\n        }\n      }\n      $q_sroa_1_1_lcssa = $147;\n      $q_sroa_0_1_lcssa = $149;\n      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;\n      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;\n      $carry_0_lcssa$1 = 0;\n      $carry_0_lcssa$0 = $152;\n    }\n    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;\n    $q_sroa_0_0_insert_ext75$1 = 0;\n    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;\n    if (($rem | 0) != 0) {\n      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;\n      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;\n    }\n    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;\n    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;\n    return (tempRet0 = $_0$1, $_0$0) | 0;\n}\nfunction ___udivdi3($a$0, $a$1, $b$0, $b$1) {\n    $a$0 = $a$0 | 0;\n    $a$1 = $a$1 | 0;\n    $b$0 = $b$0 | 0;\n    $b$1 = $b$1 | 0;\n    var $1$0 = 0;\n    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;\n    return $1$0 | 0;\n}\nfunction ___muldsi3($a, $b) {\n    $a = $a | 0;\n    $b = $b | 0;\n    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;\n    $1 = $a & 65535;\n    $2 = $b & 65535;\n    $3 = Math_imul($2, $1) | 0;\n    $6 = $a >>> 16;\n    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;\n    $11 = $b >>> 16;\n    $12 = Math_imul($11, $1) | 0;\n    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;\n}\nfunction ___muldi3($a$0, $a$1, $b$0, $b$1) {\n    $a$0 = $a$0 | 0;\n    $a$1 = $a$1 | 0;\n    $b$0 = $b$0 | 0;\n    $b$1 = $b$1 | 0;\n    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;\n    $x_sroa_0_0_extract_trunc = $a$0;\n    $y_sroa_0_0_extract_trunc = $b$0;\n    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;\n    $1$1 = tempRet0;\n    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;\n    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;\n}\nfunction _sbrk(increment) {\n    increment = increment|0;\n    var oldDynamicTop = 0;\n    var oldDynamicTopOnChange = 0;\n    var newDynamicTop = 0;\n    var totalMemory = 0;\n    increment = ((increment + 15) & -16)|0;\n    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;\n    newDynamicTop = oldDynamicTop + increment | 0;\n\n    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.\n      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.\n      abortOnCannotGrowMemory()|0;\n      ___setErrNo(12);\n      return -1;\n    }\n\n    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;\n    totalMemory = getTotalMemory()|0;\n    if ((newDynamicTop|0) > (totalMemory|0)) {\n      if ((enlargeMemory()|0) == 0) {\n        ___setErrNo(12);\n        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;\n        return -1;\n      }\n    }\n    return oldDynamicTop|0;\n}\nfunction ___uremdi3($a$0, $a$1, $b$0, $b$1) {\n    $a$0 = $a$0 | 0;\n    $a$1 = $a$1 | 0;\n    $b$0 = $b$0 | 0;\n    $b$1 = $b$1 | 0;\n    var $rem = 0, __stackBase__ = 0;\n    __stackBase__ = STACKTOP;\n    STACKTOP = STACKTOP + 16 | 0;\n    $rem = __stackBase__ | 0;\n    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;\n    STACKTOP = __stackBase__;\n    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;\n}\nfunction _llvm_bswap_i32(x) {\n    x = x|0;\n    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;\n}\nfunction _pthread_self() {\n    return 0;\n}\n\n  \nfunction dynCall_vi(index,a1) {\n  index = index|0;\n  a1=a1|0;\n  FUNCTION_TABLE_vi[index&127](a1|0);\n}\n\n\nfunction dynCall_iiii(index,a1,a2,a3) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0;\n  return FUNCTION_TABLE_iiii[index&127](a1|0,a2|0,a3|0)|0;\n}\n\n\nfunction dynCall_vid(index,a1,a2) {\n  index = index|0;\n  a1=a1|0; a2=+a2;\n  FUNCTION_TABLE_vid[index&63](a1|0,+a2);\n}\n\n\nfunction dynCall_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;\n  return FUNCTION_TABLE_iiiiiiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0)|0;\n}\n\n\nfunction dynCall_vii(index,a1,a2) {\n  index = index|0;\n  a1=a1|0; a2=a2|0;\n  FUNCTION_TABLE_vii[index&127](a1|0,a2|0);\n}\n\n\nfunction dynCall_ii(index,a1) {\n  index = index|0;\n  a1=a1|0;\n  return FUNCTION_TABLE_ii[index&63](a1|0)|0;\n}\n\n\nfunction dynCall_viii(index,a1,a2,a3) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0;\n  FUNCTION_TABLE_viii[index&127](a1|0,a2|0,a3|0);\n}\n\n\nfunction dynCall_idi(index,a1,a2) {\n  index = index|0;\n  a1=+a1; a2=a2|0;\n  return FUNCTION_TABLE_idi[index&0](+a1,a2|0)|0;\n}\n\n\nfunction dynCall_iiiii(index,a1,a2,a3,a4) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;\n  return FUNCTION_TABLE_iiiii[index&63](a1|0,a2|0,a3|0,a4|0)|0;\n}\n\n\nfunction dynCall_iii(index,a1,a2) {\n  index = index|0;\n  a1=a1|0; a2=a2|0;\n  return FUNCTION_TABLE_iii[index&63](a1|0,a2|0)|0;\n}\n\n\nfunction dynCall_viiii(index,a1,a2,a3,a4) {\n  index = index|0;\n  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;\n  FUNCTION_TABLE_viiii[index&63](a1|0,a2|0,a3|0,a4|0);\n}\n\nfunction b0(p0) {\n p0 = p0|0; nullFunc_vi(0);\n}\nfunction b1(p0,p1,p2) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(1);return 0;\n}\nfunction b2(p0,p1) {\n p0 = p0|0;p1 = +p1; nullFunc_vid(2);\n}\nfunction b3(p0,p1,p2,p3,p4,p5,p6,p7,p8) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; nullFunc_iiiiiiiiii(3);return 0;\n}\nfunction b4(p0,p1) {\n p0 = p0|0;p1 = p1|0; nullFunc_vii(4);\n}\nfunction _emscripten_longjmp__wrapper(p0,p1) {\n p0 = p0|0;p1 = p1|0; _emscripten_longjmp(p0|0,p1|0);\n}\nfunction b5(p0) {\n p0 = p0|0; nullFunc_ii(5);return 0;\n}\nfunction b6(p0,p1,p2) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(6);\n}\nfunction b7(p0,p1) {\n p0 = +p0;p1 = p1|0; nullFunc_idi(7);return 0;\n}\nfunction b8(p0,p1,p2,p3) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(8);return 0;\n}\nfunction b9(p0,p1) {\n p0 = p0|0;p1 = p1|0; nullFunc_iii(9);return 0;\n}\nfunction b10(p0,p1,p2,p3) {\n p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(10);\n}\n\n// EMSCRIPTEN_END_FUNCS\nvar FUNCTION_TABLE_vi = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,_png_set_expand,b0,_png_set_strip_16,_png_set_gray_to_rgb\n,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,_user_flush_data,b0,b0,b0,b0,b0,_liq_aligned_free,_free,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0\n,b0,b0,b0,b0,b0,b0,b0,b0,_png_default_flush,b0,b0,_cleanup_263,_cleanup_217,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0\n,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0\n,b0,b0,b0,b0,b0,b0,b0,b0,b0];\nvar FUNCTION_TABLE_iiii = [b1,b1,b1,b1,b1,___stdio_read,___stdio_seek,___stdout_write,___stdio_write,_sn_write,b1,b1,b1,b1,b1,b1,b1,_png_set_option,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1\n,_png_get_valid,_png_get_gAMA,_fprintf,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_png_zalloc\n,b1,b1,b1,b1,b1,b1,b1,b1,b1,_zcalloc,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1\n,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1\n,b1,b1,b1,b1,b1,b1,b1,b1,b1];\nvar FUNCTION_TABLE_vid = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2\n,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_adjust_histogram_callback,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2\n,b2,b2,b2,b2,b2];\nvar FUNCTION_TABLE_iiiiiiiiii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_png_get_IHDR,b3,b3,b3,b3\n,b3,b3,b3];\nvar FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_rwpng_warning_silent_handler,_rwpng_warning_stderr_handler,b4,_rwpng_error_handler,b4,b4,b4,b4,b4,b4,b4,b4,_png_read_info,b4,b4,b4,b4,b4\n,b4,b4,b4,b4,_png_read_update_info,b4,b4,b4,_png_read_image,_png_read_end,b4,b4,b4,_png_destroy_write_struct,_png_set_compression_level,_png_set_compression_mem_level,b4,b4,b4,b4,b4,b4,b4,_emscripten_longjmp__wrapper,_png_free,b4,b4,b4,b4,b4\n,_png_zfree,b4,b4,b4,b4,b4,b4,b4,b4,b4,_zcfree,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4\n,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4\n,b4,b4,b4,b4,b4,b4,b4,b4,b4];\nvar FUNCTION_TABLE_ii = [b5,b5,b5,b5,___stdio_close,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_png_create_info_struct,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5\n,b5,b5,b5,_png_set_interlace_handling,b5,b5,_malloc,b5,b5,b5,b5,b5,b5,b5,b5,b5,_liq_aligned_malloc,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5\n,b5,b5,b5,b5,b5];\nvar FUNCTION_TABLE_viii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_log_callback,b6,b6,b6,b6,b6,_png_destroy_read_struct,b6,b6,_png_set_read_user_chunk_fn,b6,_png_set_read_fn,_user_read_data,b6,b6,b6,_png_set_filler,b6,b6\n,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_user_write_data,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6\n,b6,_png_default_read_data,_png_read_filter_row_sub,_png_read_filter_row_up,_png_read_filter_row_avg,_png_read_filter_row_paeth_multibyte_pixel,_png_read_filter_row_paeth_1byte_pixel,_png_default_write_data,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6\n,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6\n,b6,b6,b6,b6,b6,b6,b6,b6,b6];\nvar FUNCTION_TABLE_idi = [b7];\nvar FUNCTION_TABLE_iiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_png_create_read_struct,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8\n,b8,b8,b8,b8,b8,b8,b8,_fwrite,b8,b8,b8,b8,_png_create_write_struct,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8\n,b8,b8,b8,b8,b8];\nvar FUNCTION_TABLE_iii = [b9,_deflate_stored,_deflate_fast,_deflate_slow,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_read_chunk_callback,b9,b9,b9,b9,b9,b9,b9,b9\n,b9,b9,b9,b9,b9,_png_get_rowbytes,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_compare_popularity,_comparevariance,_vp_compare_distance,b9,b9,b9,b9,_png_user_version_check,_png_malloc_warn,b9\n,b9,b9,b9,b9,b9];\nvar FUNCTION_TABLE_viiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,_png_set_keep_unknown_chunks,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10\n,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,_png_set_mem_fn,_png_set_error_fn,b10,b10,b10\n,b10,b10,b10,b10,b10];\n\n  return { _main: _main, _llvm_cttz_i32: _llvm_cttz_i32, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _memset: _memset, _sbrk: _sbrk, _memcpy: _memcpy, _llvm_bswap_i32: _llvm_bswap_i32, ___muldi3: ___muldi3, ___uremdi3: ___uremdi3, _i64Subtract: _i64Subtract, ___udivmoddi4: ___udivmoddi4, _realloc: _realloc, _i64Add: _i64Add, _pthread_self: _pthread_self, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, _testSetjmp: _testSetjmp, _saveSetjmp: _saveSetjmp, _free: _free, _memmove: _memmove, _malloc: _malloc, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_vi: dynCall_vi, dynCall_iiii: dynCall_iiii, dynCall_vid: dynCall_vid, dynCall_iiiiiiiiii: dynCall_iiiiiiiiii, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_idi: dynCall_idi, dynCall_iiiii: dynCall_iiiii, dynCall_iii: dynCall_iii, dynCall_viiii: dynCall_viiii };\n})\n// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg, Module.asmLibraryArg, buffer);\n\nvar real__main = asm[\"_main\"]; asm[\"_main\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__main.apply(null, arguments);\n};\n\nvar real__llvm_cttz_i32 = asm[\"_llvm_cttz_i32\"]; asm[\"_llvm_cttz_i32\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__llvm_cttz_i32.apply(null, arguments);\n};\n\nvar real__bitshift64Lshr = asm[\"_bitshift64Lshr\"]; asm[\"_bitshift64Lshr\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__bitshift64Lshr.apply(null, arguments);\n};\n\nvar real__bitshift64Shl = asm[\"_bitshift64Shl\"]; asm[\"_bitshift64Shl\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__bitshift64Shl.apply(null, arguments);\n};\n\nvar real__fflush = asm[\"_fflush\"]; asm[\"_fflush\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__fflush.apply(null, arguments);\n};\n\nvar real__sbrk = asm[\"_sbrk\"]; asm[\"_sbrk\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__sbrk.apply(null, arguments);\n};\n\nvar real__llvm_bswap_i32 = asm[\"_llvm_bswap_i32\"]; asm[\"_llvm_bswap_i32\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__llvm_bswap_i32.apply(null, arguments);\n};\n\nvar real____muldi3 = asm[\"___muldi3\"]; asm[\"___muldi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____muldi3.apply(null, arguments);\n};\n\nvar real____uremdi3 = asm[\"___uremdi3\"]; asm[\"___uremdi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____uremdi3.apply(null, arguments);\n};\n\nvar real__i64Subtract = asm[\"_i64Subtract\"]; asm[\"_i64Subtract\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__i64Subtract.apply(null, arguments);\n};\n\nvar real____udivmoddi4 = asm[\"___udivmoddi4\"]; asm[\"___udivmoddi4\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____udivmoddi4.apply(null, arguments);\n};\n\nvar real__realloc = asm[\"_realloc\"]; asm[\"_realloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__realloc.apply(null, arguments);\n};\n\nvar real__i64Add = asm[\"_i64Add\"]; asm[\"_i64Add\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__i64Add.apply(null, arguments);\n};\n\nvar real__pthread_self = asm[\"_pthread_self\"]; asm[\"_pthread_self\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__pthread_self.apply(null, arguments);\n};\n\nvar real____udivdi3 = asm[\"___udivdi3\"]; asm[\"___udivdi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____udivdi3.apply(null, arguments);\n};\n\nvar real____errno_location = asm[\"___errno_location\"]; asm[\"___errno_location\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____errno_location.apply(null, arguments);\n};\n\nvar real____muldsi3 = asm[\"___muldsi3\"]; asm[\"___muldsi3\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real____muldsi3.apply(null, arguments);\n};\n\nvar real__testSetjmp = asm[\"_testSetjmp\"]; asm[\"_testSetjmp\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__testSetjmp.apply(null, arguments);\n};\n\nvar real__saveSetjmp = asm[\"_saveSetjmp\"]; asm[\"_saveSetjmp\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__saveSetjmp.apply(null, arguments);\n};\n\nvar real__free = asm[\"_free\"]; asm[\"_free\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__free.apply(null, arguments);\n};\n\nvar real__memmove = asm[\"_memmove\"]; asm[\"_memmove\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__memmove.apply(null, arguments);\n};\n\nvar real__malloc = asm[\"_malloc\"]; asm[\"_malloc\"] = function() {\nassert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');\nassert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\nreturn real__malloc.apply(null, arguments);\n};\nvar _main = Module[\"_main\"] = asm[\"_main\"];\nvar _llvm_cttz_i32 = Module[\"_llvm_cttz_i32\"] = asm[\"_llvm_cttz_i32\"];\nvar _bitshift64Lshr = Module[\"_bitshift64Lshr\"] = asm[\"_bitshift64Lshr\"];\nvar _bitshift64Shl = Module[\"_bitshift64Shl\"] = asm[\"_bitshift64Shl\"];\nvar _fflush = Module[\"_fflush\"] = asm[\"_fflush\"];\nvar _memset = Module[\"_memset\"] = asm[\"_memset\"];\nvar _sbrk = Module[\"_sbrk\"] = asm[\"_sbrk\"];\nvar _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = asm[\"_llvm_bswap_i32\"];\nvar ___muldi3 = Module[\"___muldi3\"] = asm[\"___muldi3\"];\nvar ___uremdi3 = Module[\"___uremdi3\"] = asm[\"___uremdi3\"];\nvar _i64Subtract = Module[\"_i64Subtract\"] = asm[\"_i64Subtract\"];\nvar ___udivmoddi4 = Module[\"___udivmoddi4\"] = asm[\"___udivmoddi4\"];\nvar _realloc = Module[\"_realloc\"] = asm[\"_realloc\"];\nvar _i64Add = Module[\"_i64Add\"] = asm[\"_i64Add\"];\nvar _pthread_self = Module[\"_pthread_self\"] = asm[\"_pthread_self\"];\nvar ___udivdi3 = Module[\"___udivdi3\"] = asm[\"___udivdi3\"];\nvar ___errno_location = Module[\"___errno_location\"] = asm[\"___errno_location\"];\nvar ___muldsi3 = Module[\"___muldsi3\"] = asm[\"___muldsi3\"];\nvar _testSetjmp = Module[\"_testSetjmp\"] = asm[\"_testSetjmp\"];\nvar _saveSetjmp = Module[\"_saveSetjmp\"] = asm[\"_saveSetjmp\"];\nvar _free = Module[\"_free\"] = asm[\"_free\"];\nvar runPostSets = Module[\"runPostSets\"] = asm[\"runPostSets\"];\nvar _memmove = Module[\"_memmove\"] = asm[\"_memmove\"];\nvar _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\nvar dynCall_vi = Module[\"dynCall_vi\"] = asm[\"dynCall_vi\"];\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = asm[\"dynCall_iiii\"];\nvar dynCall_vid = Module[\"dynCall_vid\"] = asm[\"dynCall_vid\"];\nvar dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = asm[\"dynCall_iiiiiiiiii\"];\nvar dynCall_vii = Module[\"dynCall_vii\"] = asm[\"dynCall_vii\"];\nvar dynCall_ii = Module[\"dynCall_ii\"] = asm[\"dynCall_ii\"];\nvar dynCall_viii = Module[\"dynCall_viii\"] = asm[\"dynCall_viii\"];\nvar dynCall_idi = Module[\"dynCall_idi\"] = asm[\"dynCall_idi\"];\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = asm[\"dynCall_iiiii\"];\nvar dynCall_iii = Module[\"dynCall_iii\"] = asm[\"dynCall_iii\"];\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = asm[\"dynCall_viiii\"];\n;\n\nRuntime.stackAlloc = asm['stackAlloc'];\nRuntime.stackSave = asm['stackSave'];\nRuntime.stackRestore = asm['stackRestore'];\nRuntime.establishStackSpace = asm['establishStackSpace'];\n\nRuntime.setTempRet0 = asm['setTempRet0'];\nRuntime.getTempRet0 = asm['getTempRet0'];\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\n\n\n\n\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n};\nExitStatus.prototype = new Error();\nExitStatus.prototype.constructor = ExitStatus;\n\nvar initialStackTop;\nvar preloadStartTime = null;\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!Module['calledRun']) run();\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n}\n\nModule['callMain'] = Module.callMain = function callMain(args) {\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');\n  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');\n\n  args = args || [];\n\n  ensureInitRuntime();\n\n  var argc = args.length+1;\n  function pad() {\n    for (var i = 0; i < 4-1; i++) {\n      argv.push(0);\n    }\n  }\n  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];\n  pad();\n  for (var i = 0; i < argc-1; i = i + 1) {\n    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));\n    pad();\n  }\n  argv.push(0);\n  argv = allocate(argv, 'i32', ALLOC_NORMAL);\n\n\n  try {\n\n    var ret = Module['_main'](argc, argv, 0);\n\n\n    // if we're not running an evented main loop, it's time to exit\n    exit(ret, /* implicit = */ true);\n  }\n  catch(e) {\n    if (e instanceof ExitStatus) {\n      // exit() throws this once it's done to make sure execution\n      // has been stopped completely\n      return;\n    } else if (e == 'SimulateInfiniteLoop') {\n      // running an evented main loop, don't immediately exit\n      Module['noExitRuntime'] = true;\n      return;\n    } else {\n      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);\n      throw e;\n    }\n  } finally {\n    calledMain = true;\n  }\n}\n\n\n\n\nfunction run(args) {\n  args = args || Module['arguments'];\n\n  if (preloadStartTime === null) preloadStartTime = Date.now();\n\n  if (runDependencies > 0) {\n    Module.printErr('run() called, but dependencies remain, so not running');\n    return;\n  }\n\n  writeStackCookie();\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\n\n  function doRun() {\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    ensureInitRuntime();\n\n    preMain();\n\n    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {\n      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');\n    }\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (Module['_main'] && shouldRunNow) Module['callMain'](args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else {\n    doRun();\n  }\n  checkStackCookie();\n}\nModule['run'] = Module.run = run;\n\nfunction exit(status, implicit) {\n  if (implicit && Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');\n    return;\n  }\n\n  if (Module['noExitRuntime']) {\n    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n    STACKTOP = initialStackTop;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  if (ENVIRONMENT_IS_NODE) {\n    process['exit'](status);\n  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {\n    quit(status);\n  }\n  // if we reach here, we must throw an exception to halt the current execution\n  throw new ExitStatus(status);\n}\nModule['exit'] = Module.exit = exit;\n\nvar abortDecorators = [];\n\nfunction abort(what) {\n  if (what !== undefined) {\n    Module.print(what);\n    Module.printErr(what);\n    what = JSON.stringify(what)\n  } else {\n    what = '';\n  }\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  var extra = '';\n\n  var output = 'abort(' + what + ') at ' + stackTrace() + extra;\n  if (abortDecorators) {\n    abortDecorators.forEach(function(decorator) {\n      output = decorator(output, what);\n    });\n  }\n  throw output;\n}\nModule['abort'] = Module.abort = abort;\n\n// {{PRE_RUN_ADDITIONS}}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\nif (Module['noInitialRun']) {\n  shouldRunNow = false;\n}\n\n\nrun();\n\n// {{POST_RUN_ADDITIONS}}\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\n\tvar file = null;\n\n\t/* Test if processed image has been mounted at input-new.png */\n\ttry {\n\t\t/* read processed image data in file var */\n\t\tfile = FS.readFile(\"/input-new.png\");\n\t} catch (e) {\n\t\t/* Cleaning up input png from MEMFS */\n\t\tFS.unlink(\"/input.png\");\n\t\treturn new Error(\"No output: \" + stderr);\n\t}\n\n\t/* Cleanup files from */\n\tFS.unlink(\"/input-new.png\");\n\tFS.unlink(\"/input.png\");\n\n\treturn {\n\t\t\"data\": file\n\t};\n}\n\npngquant.call(this);\n\n              \n           /* Utility to convert data url to blob */\n            var dataURLtoUint8 = (dataurl) => {\n                var arr = dataurl.split(','),\n                    mime = arr[0].match(/:(.*?);/)[1],\n                    bstr = atob(arr[1]),\n                    n = bstr.length,\n                    u8arr = new Uint8Array(n);\n                while (n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                return u8arr;\n            };\n            \n           var file = dataURLtoUint8(dataurl);\n                    \n            var result = pngquant(file, options, function(){}).data;\n            var blob = new Blob([result], { type: \"image/png\" });\n            return window.URL.createObjectURL(blob);\n       }")(),t=new Object({speed:i.toString(),quality:$.toString()+"-"+e.toString(),nofs:!0});Boolean(a)?a.exec(s,[n,t]).catch(function($){return s(n,t)}).then(function($){r($)}).then(function(){}).timeout(36e3):s(n,t).then(function($){r($)}).then(function(){})}}}}]);